

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Dec 04 12:21:33 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18876
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	dabs	1,0xCA0,32
    38                           	dabs	1,0xC20,80
    39                           	dabs	1,0xBA0,80
    40                           	dabs	1,0xB30,64
    41                           	dabs	1,0xB20,16
    42                           	dabs	1,0xAA0,80
    43                           	dabs	1,0xA20,80
    44                           	dabs	1,0x9A0,80
    45                           	dabs	1,0x920,80
    46                           	dabs	1,0x8A0,80
    47                           	dabs	1,0x820,80
    48                           	dabs	1,0x7E0,16
    49                           	dabs	1,0x7A0,64
    50                           	dabs	1,0x720,80
    51                           	dabs	1,0x6A0,80
    52                           	dabs	1,0x650,32
    53                           	dabs	1,0x23F0,0,_lutRY
    54                           	dabs	1,0x24F0,0,_lutRX
    55                           	dabs	1,0x25F0,0,_lutLY
    56                           	dabs	1,0x26F0,0,_lutLX
    57                           	dabs	1,0x7E,2
    58  0000                     
    59                           ; Version 2.10
    60                           ; Generated 31/07/2019 GMT
    61                           ; 
    62                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC16F18876 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     	;# 
    94  0001                     	;# 
    95  0002                     	;# 
    96  0003                     	;# 
    97  0004                     	;# 
    98  0005                     	;# 
    99  0006                     	;# 
   100  0007                     	;# 
   101  0008                     	;# 
   102  0009                     	;# 
   103  000A                     	;# 
   104  000B                     	;# 
   105  000C                     	;# 
   106  000D                     	;# 
   107  000E                     	;# 
   108  000F                     	;# 
   109  0010                     	;# 
   110  0011                     	;# 
   111  0012                     	;# 
   112  0013                     	;# 
   113  0014                     	;# 
   114  0015                     	;# 
   115  0016                     	;# 
   116  0017                     	;# 
   117  0018                     	;# 
   118  0019                     	;# 
   119  001A                     	;# 
   120  001C                     	;# 
   121  001C                     	;# 
   122  001D                     	;# 
   123  001D                     	;# 
   124  001E                     	;# 
   125  001F                     	;# 
   126  008C                     	;# 
   127  008C                     	;# 
   128  008D                     	;# 
   129  008E                     	;# 
   130  008E                     	;# 
   131  008F                     	;# 
   132  0090                     	;# 
   133  0090                     	;# 
   134  0091                     	;# 
   135  0093                     	;# 
   136  0094                     	;# 
   137  0095                     	;# 
   138  0096                     	;# 
   139  0097                     	;# 
   140  0098                     	;# 
   141  0099                     	;# 
   142  009A                     	;# 
   143  009B                     	;# 
   144  009C                     	;# 
   145  009D                     	;# 
   146  009E                     	;# 
   147  010C                     	;# 
   148  010D                     	;# 
   149  010E                     	;# 
   150  010E                     	;# 
   151  010F                     	;# 
   152  0110                     	;# 
   153  0110                     	;# 
   154  0111                     	;# 
   155  0112                     	;# 
   156  0112                     	;# 
   157  0113                     	;# 
   158  0114                     	;# 
   159  0114                     	;# 
   160  0115                     	;# 
   161  0116                     	;# 
   162  0116                     	;# 
   163  0117                     	;# 
   164  0119                     	;# 
   165  0119                     	;# 
   166  0119                     	;# 
   167  011A                     	;# 
   168  011A                     	;# 
   169  011A                     	;# 
   170  011B                     	;# 
   171  011B                     	;# 
   172  011B                     	;# 
   173  011B                     	;# 
   174  011B                     	;# 
   175  011C                     	;# 
   176  011C                     	;# 
   177  011C                     	;# 
   178  011D                     	;# 
   179  011D                     	;# 
   180  011D                     	;# 
   181  011E                     	;# 
   182  011E                     	;# 
   183  011E                     	;# 
   184  011F                     	;# 
   185  011F                     	;# 
   186  011F                     	;# 
   187  011F                     	;# 
   188  011F                     	;# 
   189  018C                     	;# 
   190  018D                     	;# 
   191  018E                     	;# 
   192  018F                     	;# 
   193  0190                     	;# 
   194  0191                     	;# 
   195  0192                     	;# 
   196  0196                     	;# 
   197  0197                     	;# 
   198  0198                     	;# 
   199  0199                     	;# 
   200  019A                     	;# 
   201  019B                     	;# 
   202  019C                     	;# 
   203  020C                     	;# 
   204  020C                     	;# 
   205  020D                     	;# 
   206  020E                     	;# 
   207  020F                     	;# 
   208  020F                     	;# 
   209  0210                     	;# 
   210  0210                     	;# 
   211  0211                     	;# 
   212  0211                     	;# 
   213  0212                     	;# 
   214  0212                     	;# 
   215  0213                     	;# 
   216  0214                     	;# 
   217  0215                     	;# 
   218  0215                     	;# 
   219  0216                     	;# 
   220  0216                     	;# 
   221  0217                     	;# 
   222  0217                     	;# 
   223  0218                     	;# 
   224  0218                     	;# 
   225  0219                     	;# 
   226  021A                     	;# 
   227  021B                     	;# 
   228  021B                     	;# 
   229  021C                     	;# 
   230  021C                     	;# 
   231  021D                     	;# 
   232  021D                     	;# 
   233  021E                     	;# 
   234  021F                     	;# 
   235  028C                     	;# 
   236  028C                     	;# 
   237  028D                     	;# 
   238  028D                     	;# 
   239  028E                     	;# 
   240  028F                     	;# 
   241  0290                     	;# 
   242  0290                     	;# 
   243  0291                     	;# 
   244  0292                     	;# 
   245  0292                     	;# 
   246  0293                     	;# 
   247  0293                     	;# 
   248  0294                     	;# 
   249  0295                     	;# 
   250  0296                     	;# 
   251  0296                     	;# 
   252  0297                     	;# 
   253  0298                     	;# 
   254  0298                     	;# 
   255  0299                     	;# 
   256  0299                     	;# 
   257  029A                     	;# 
   258  029B                     	;# 
   259  029C                     	;# 
   260  029C                     	;# 
   261  029D                     	;# 
   262  030C                     	;# 
   263  030C                     	;# 
   264  030D                     	;# 
   265  030E                     	;# 
   266  030F                     	;# 
   267  0310                     	;# 
   268  0310                     	;# 
   269  0311                     	;# 
   270  0312                     	;# 
   271  0313                     	;# 
   272  0314                     	;# 
   273  0314                     	;# 
   274  0315                     	;# 
   275  0316                     	;# 
   276  0317                     	;# 
   277  0318                     	;# 
   278  0318                     	;# 
   279  0319                     	;# 
   280  031A                     	;# 
   281  031B                     	;# 
   282  031C                     	;# 
   283  031C                     	;# 
   284  031D                     	;# 
   285  031E                     	;# 
   286  031F                     	;# 
   287  038C                     	;# 
   288  038C                     	;# 
   289  038D                     	;# 
   290  038E                     	;# 
   291  0390                     	;# 
   292  0390                     	;# 
   293  0391                     	;# 
   294  0392                     	;# 
   295  040C                     	;# 
   296  040D                     	;# 
   297  040E                     	;# 
   298  040F                     	;# 
   299  0410                     	;# 
   300  0411                     	;# 
   301  0416                     	;# 
   302  0416                     	;# 
   303  0417                     	;# 
   304  0418                     	;# 
   305  0418                     	;# 
   306  0419                     	;# 
   307  041A                     	;# 
   308  041A                     	;# 
   309  041B                     	;# 
   310  041C                     	;# 
   311  041C                     	;# 
   312  041D                     	;# 
   313  041E                     	;# 
   314  041F                     	;# 
   315  048C                     	;# 
   316  048C                     	;# 
   317  048D                     	;# 
   318  048E                     	;# 
   319  048F                     	;# 
   320  048F                     	;# 
   321  0490                     	;# 
   322  0491                     	;# 
   323  0492                     	;# 
   324  0492                     	;# 
   325  0493                     	;# 
   326  0494                     	;# 
   327  0495                     	;# 
   328  0495                     	;# 
   329  0496                     	;# 
   330  0497                     	;# 
   331  0498                     	;# 
   332  0499                     	;# 
   333  049A                     	;# 
   334  049B                     	;# 
   335  049C                     	;# 
   336  049D                     	;# 
   337  050C                     	;# 
   338  050C                     	;# 
   339  050D                     	;# 
   340  050E                     	;# 
   341  050F                     	;# 
   342  050F                     	;# 
   343  0510                     	;# 
   344  0511                     	;# 
   345  0512                     	;# 
   346  0512                     	;# 
   347  0513                     	;# 
   348  0514                     	;# 
   349  0515                     	;# 
   350  0515                     	;# 
   351  0516                     	;# 
   352  0517                     	;# 
   353  0518                     	;# 
   354  0519                     	;# 
   355  051A                     	;# 
   356  051B                     	;# 
   357  051C                     	;# 
   358  051D                     	;# 
   359  058C                     	;# 
   360  058C                     	;# 
   361  058D                     	;# 
   362  058E                     	;# 
   363  058F                     	;# 
   364  058F                     	;# 
   365  0590                     	;# 
   366  0591                     	;# 
   367  0592                     	;# 
   368  0593                     	;# 
   369  060C                     	;# 
   370  060D                     	;# 
   371  060E                     	;# 
   372  060F                     	;# 
   373  0610                     	;# 
   374  0611                     	;# 
   375  0612                     	;# 
   376  0613                     	;# 
   377  0614                     	;# 
   378  0616                     	;# 
   379  0617                     	;# 
   380  0618                     	;# 
   381  0619                     	;# 
   382  061A                     	;# 
   383  061B                     	;# 
   384  061C                     	;# 
   385  061D                     	;# 
   386  061E                     	;# 
   387  068C                     	;# 
   388  068D                     	;# 
   389  068E                     	;# 
   390  068F                     	;# 
   391  0690                     	;# 
   392  0691                     	;# 
   393  0692                     	;# 
   394  0693                     	;# 
   395  0694                     	;# 
   396  070C                     	;# 
   397  070D                     	;# 
   398  070E                     	;# 
   399  070F                     	;# 
   400  0710                     	;# 
   401  0711                     	;# 
   402  0712                     	;# 
   403  0713                     	;# 
   404  0714                     	;# 
   405  0716                     	;# 
   406  0717                     	;# 
   407  0718                     	;# 
   408  0719                     	;# 
   409  071A                     	;# 
   410  071B                     	;# 
   411  071C                     	;# 
   412  071D                     	;# 
   413  071E                     	;# 
   414  0796                     	;# 
   415  0797                     	;# 
   416  0798                     	;# 
   417  0799                     	;# 
   418  079A                     	;# 
   419  079B                     	;# 
   420  080C                     	;# 
   421  080D                     	;# 
   422  080E                     	;# 
   423  080F                     	;# 
   424  0810                     	;# 
   425  0811                     	;# 
   426  0812                     	;# 
   427  0813                     	;# 
   428  0814                     	;# 
   429  081A                     	;# 
   430  081B                     	;# 
   431  081C                     	;# 
   432  081D                     	;# 
   433  081E                     	;# 
   434  081F                     	;# 
   435  088C                     	;# 
   436  088D                     	;# 
   437  088E                     	;# 
   438  088F                     	;# 
   439  0890                     	;# 
   440  0891                     	;# 
   441  0892                     	;# 
   442  0893                     	;# 
   443  0895                     	;# 
   444  0896                     	;# 
   445  0897                     	;# 
   446  0898                     	;# 
   447  0899                     	;# 
   448  089A                     	;# 
   449  089B                     	;# 
   450  090C                     	;# 
   451  090E                     	;# 
   452  090F                     	;# 
   453  091F                     	;# 
   454  098F                     	;# 
   455  098F                     	;# 
   456  0990                     	;# 
   457  0991                     	;# 
   458  0992                     	;# 
   459  0993                     	;# 
   460  0994                     	;# 
   461  0995                     	;# 
   462  0996                     	;# 
   463  0997                     	;# 
   464  0E0F                     	;# 
   465  0E10                     	;# 
   466  0E11                     	;# 
   467  0E12                     	;# 
   468  0E13                     	;# 
   469  0E14                     	;# 
   470  0E15                     	;# 
   471  0E16                     	;# 
   472  0E17                     	;# 
   473  0E18                     	;# 
   474  0E19                     	;# 
   475  0E1A                     	;# 
   476  0E1B                     	;# 
   477  0E1C                     	;# 
   478  0E1D                     	;# 
   479  0E1E                     	;# 
   480  0E1F                     	;# 
   481  0E20                     	;# 
   482  0E21                     	;# 
   483  0E22                     	;# 
   484  0E23                     	;# 
   485  0E24                     	;# 
   486  0E25                     	;# 
   487  0E26                     	;# 
   488  0E27                     	;# 
   489  0E28                     	;# 
   490  0E29                     	;# 
   491  0E2A                     	;# 
   492  0E2B                     	;# 
   493  0E2C                     	;# 
   494  0E2D                     	;# 
   495  0E2E                     	;# 
   496  0E2F                     	;# 
   497  0E30                     	;# 
   498  0E31                     	;# 
   499  0E32                     	;# 
   500  0E33                     	;# 
   501  0E34                     	;# 
   502  0E35                     	;# 
   503  0E36                     	;# 
   504  0E37                     	;# 
   505  0E8F                     	;# 
   506  0E90                     	;# 
   507  0E91                     	;# 
   508  0E92                     	;# 
   509  0E93                     	;# 
   510  0E94                     	;# 
   511  0E95                     	;# 
   512  0E96                     	;# 
   513  0E97                     	;# 
   514  0E9C                     	;# 
   515  0E9D                     	;# 
   516  0E9E                     	;# 
   517  0EA1                     	;# 
   518  0EA2                     	;# 
   519  0EA3                     	;# 
   520  0EA4                     	;# 
   521  0EA5                     	;# 
   522  0EA9                     	;# 
   523  0EAA                     	;# 
   524  0EAB                     	;# 
   525  0EAC                     	;# 
   526  0EB1                     	;# 
   527  0EB2                     	;# 
   528  0EB3                     	;# 
   529  0EB8                     	;# 
   530  0EB9                     	;# 
   531  0EBA                     	;# 
   532  0EBB                     	;# 
   533  0EBC                     	;# 
   534  0EBD                     	;# 
   535  0EBE                     	;# 
   536  0EC3                     	;# 
   537  0EC5                     	;# 
   538  0EC6                     	;# 
   539  0EC7                     	;# 
   540  0EC8                     	;# 
   541  0EC9                     	;# 
   542  0ECA                     	;# 
   543  0ECB                     	;# 
   544  0ECC                     	;# 
   545  0F10                     	;# 
   546  0F11                     	;# 
   547  0F12                     	;# 
   548  0F13                     	;# 
   549  0F14                     	;# 
   550  0F15                     	;# 
   551  0F16                     	;# 
   552  0F17                     	;# 
   553  0F18                     	;# 
   554  0F19                     	;# 
   555  0F1A                     	;# 
   556  0F1B                     	;# 
   557  0F1C                     	;# 
   558  0F1D                     	;# 
   559  0F1E                     	;# 
   560  0F1F                     	;# 
   561  0F20                     	;# 
   562  0F21                     	;# 
   563  0F22                     	;# 
   564  0F23                     	;# 
   565  0F24                     	;# 
   566  0F25                     	;# 
   567  0F26                     	;# 
   568  0F27                     	;# 
   569  0F28                     	;# 
   570  0F29                     	;# 
   571  0F2A                     	;# 
   572  0F2B                     	;# 
   573  0F2C                     	;# 
   574  0F2D                     	;# 
   575  0F2E                     	;# 
   576  0F2F                     	;# 
   577  0F30                     	;# 
   578  0F31                     	;# 
   579  0F32                     	;# 
   580  0F38                     	;# 
   581  0F39                     	;# 
   582  0F3A                     	;# 
   583  0F3B                     	;# 
   584  0F3C                     	;# 
   585  0F3D                     	;# 
   586  0F3E                     	;# 
   587  0F3F                     	;# 
   588  0F40                     	;# 
   589  0F41                     	;# 
   590  0F43                     	;# 
   591  0F44                     	;# 
   592  0F45                     	;# 
   593  0F46                     	;# 
   594  0F47                     	;# 
   595  0F48                     	;# 
   596  0F49                     	;# 
   597  0F4A                     	;# 
   598  0F4B                     	;# 
   599  0F4C                     	;# 
   600  0F4E                     	;# 
   601  0F4F                     	;# 
   602  0F50                     	;# 
   603  0F51                     	;# 
   604  0F52                     	;# 
   605  0F53                     	;# 
   606  0F54                     	;# 
   607  0F55                     	;# 
   608  0F56                     	;# 
   609  0F57                     	;# 
   610  0F59                     	;# 
   611  0F5A                     	;# 
   612  0F5B                     	;# 
   613  0F5C                     	;# 
   614  0F5D                     	;# 
   615  0F61                     	;# 
   616  0F62                     	;# 
   617  0F64                     	;# 
   618  0F65                     	;# 
   619  0F66                     	;# 
   620  0F67                     	;# 
   621  0F68                     	;# 
   622  0F69                     	;# 
   623  0F6A                     	;# 
   624  0F6B                     	;# 
   625  0F6C                     	;# 
   626  0F6D                     	;# 
   627  0FE4                     	;# 
   628  0FE5                     	;# 
   629  0FE6                     	;# 
   630  0FE7                     	;# 
   631  0FE8                     	;# 
   632  0FE9                     	;# 
   633  0FEA                     	;# 
   634  0FEB                     	;# 
   635  0FED                     	;# 
   636  0FEE                     	;# 
   637  0FEF                     	;# 
   638  0000                     	;# 
   639  0001                     	;# 
   640  0002                     	;# 
   641  0003                     	;# 
   642  0004                     	;# 
   643  0005                     	;# 
   644  0006                     	;# 
   645  0007                     	;# 
   646  0008                     	;# 
   647  0009                     	;# 
   648  000A                     	;# 
   649  000B                     	;# 
   650  000C                     	;# 
   651  000D                     	;# 
   652  000E                     	;# 
   653  000F                     	;# 
   654  0010                     	;# 
   655  0011                     	;# 
   656  0012                     	;# 
   657  0013                     	;# 
   658  0014                     	;# 
   659  0015                     	;# 
   660  0016                     	;# 
   661  0017                     	;# 
   662  0018                     	;# 
   663  0019                     	;# 
   664  001A                     	;# 
   665  001C                     	;# 
   666  001C                     	;# 
   667  001D                     	;# 
   668  001D                     	;# 
   669  001E                     	;# 
   670  001F                     	;# 
   671  008C                     	;# 
   672  008C                     	;# 
   673  008D                     	;# 
   674  008E                     	;# 
   675  008E                     	;# 
   676  008F                     	;# 
   677  0090                     	;# 
   678  0090                     	;# 
   679  0091                     	;# 
   680  0093                     	;# 
   681  0094                     	;# 
   682  0095                     	;# 
   683  0096                     	;# 
   684  0097                     	;# 
   685  0098                     	;# 
   686  0099                     	;# 
   687  009A                     	;# 
   688  009B                     	;# 
   689  009C                     	;# 
   690  009D                     	;# 
   691  009E                     	;# 
   692  010C                     	;# 
   693  010D                     	;# 
   694  010E                     	;# 
   695  010E                     	;# 
   696  010F                     	;# 
   697  0110                     	;# 
   698  0110                     	;# 
   699  0111                     	;# 
   700  0112                     	;# 
   701  0112                     	;# 
   702  0113                     	;# 
   703  0114                     	;# 
   704  0114                     	;# 
   705  0115                     	;# 
   706  0116                     	;# 
   707  0116                     	;# 
   708  0117                     	;# 
   709  0119                     	;# 
   710  0119                     	;# 
   711  0119                     	;# 
   712  011A                     	;# 
   713  011A                     	;# 
   714  011A                     	;# 
   715  011B                     	;# 
   716  011B                     	;# 
   717  011B                     	;# 
   718  011B                     	;# 
   719  011B                     	;# 
   720  011C                     	;# 
   721  011C                     	;# 
   722  011C                     	;# 
   723  011D                     	;# 
   724  011D                     	;# 
   725  011D                     	;# 
   726  011E                     	;# 
   727  011E                     	;# 
   728  011E                     	;# 
   729  011F                     	;# 
   730  011F                     	;# 
   731  011F                     	;# 
   732  011F                     	;# 
   733  011F                     	;# 
   734  018C                     	;# 
   735  018D                     	;# 
   736  018E                     	;# 
   737  018F                     	;# 
   738  0190                     	;# 
   739  0191                     	;# 
   740  0192                     	;# 
   741  0196                     	;# 
   742  0197                     	;# 
   743  0198                     	;# 
   744  0199                     	;# 
   745  019A                     	;# 
   746  019B                     	;# 
   747  019C                     	;# 
   748  020C                     	;# 
   749  020C                     	;# 
   750  020D                     	;# 
   751  020E                     	;# 
   752  020F                     	;# 
   753  020F                     	;# 
   754  0210                     	;# 
   755  0210                     	;# 
   756  0211                     	;# 
   757  0211                     	;# 
   758  0212                     	;# 
   759  0212                     	;# 
   760  0213                     	;# 
   761  0214                     	;# 
   762  0215                     	;# 
   763  0215                     	;# 
   764  0216                     	;# 
   765  0216                     	;# 
   766  0217                     	;# 
   767  0217                     	;# 
   768  0218                     	;# 
   769  0218                     	;# 
   770  0219                     	;# 
   771  021A                     	;# 
   772  021B                     	;# 
   773  021B                     	;# 
   774  021C                     	;# 
   775  021C                     	;# 
   776  021D                     	;# 
   777  021D                     	;# 
   778  021E                     	;# 
   779  021F                     	;# 
   780  028C                     	;# 
   781  028C                     	;# 
   782  028D                     	;# 
   783  028D                     	;# 
   784  028E                     	;# 
   785  028F                     	;# 
   786  0290                     	;# 
   787  0290                     	;# 
   788  0291                     	;# 
   789  0292                     	;# 
   790  0292                     	;# 
   791  0293                     	;# 
   792  0293                     	;# 
   793  0294                     	;# 
   794  0295                     	;# 
   795  0296                     	;# 
   796  0296                     	;# 
   797  0297                     	;# 
   798  0298                     	;# 
   799  0298                     	;# 
   800  0299                     	;# 
   801  0299                     	;# 
   802  029A                     	;# 
   803  029B                     	;# 
   804  029C                     	;# 
   805  029C                     	;# 
   806  029D                     	;# 
   807  030C                     	;# 
   808  030C                     	;# 
   809  030D                     	;# 
   810  030E                     	;# 
   811  030F                     	;# 
   812  0310                     	;# 
   813  0310                     	;# 
   814  0311                     	;# 
   815  0312                     	;# 
   816  0313                     	;# 
   817  0314                     	;# 
   818  0314                     	;# 
   819  0315                     	;# 
   820  0316                     	;# 
   821  0317                     	;# 
   822  0318                     	;# 
   823  0318                     	;# 
   824  0319                     	;# 
   825  031A                     	;# 
   826  031B                     	;# 
   827  031C                     	;# 
   828  031C                     	;# 
   829  031D                     	;# 
   830  031E                     	;# 
   831  031F                     	;# 
   832  038C                     	;# 
   833  038C                     	;# 
   834  038D                     	;# 
   835  038E                     	;# 
   836  0390                     	;# 
   837  0390                     	;# 
   838  0391                     	;# 
   839  0392                     	;# 
   840  040C                     	;# 
   841  040D                     	;# 
   842  040E                     	;# 
   843  040F                     	;# 
   844  0410                     	;# 
   845  0411                     	;# 
   846  0416                     	;# 
   847  0416                     	;# 
   848  0417                     	;# 
   849  0418                     	;# 
   850  0418                     	;# 
   851  0419                     	;# 
   852  041A                     	;# 
   853  041A                     	;# 
   854  041B                     	;# 
   855  041C                     	;# 
   856  041C                     	;# 
   857  041D                     	;# 
   858  041E                     	;# 
   859  041F                     	;# 
   860  048C                     	;# 
   861  048C                     	;# 
   862  048D                     	;# 
   863  048E                     	;# 
   864  048F                     	;# 
   865  048F                     	;# 
   866  0490                     	;# 
   867  0491                     	;# 
   868  0492                     	;# 
   869  0492                     	;# 
   870  0493                     	;# 
   871  0494                     	;# 
   872  0495                     	;# 
   873  0495                     	;# 
   874  0496                     	;# 
   875  0497                     	;# 
   876  0498                     	;# 
   877  0499                     	;# 
   878  049A                     	;# 
   879  049B                     	;# 
   880  049C                     	;# 
   881  049D                     	;# 
   882  050C                     	;# 
   883  050C                     	;# 
   884  050D                     	;# 
   885  050E                     	;# 
   886  050F                     	;# 
   887  050F                     	;# 
   888  0510                     	;# 
   889  0511                     	;# 
   890  0512                     	;# 
   891  0512                     	;# 
   892  0513                     	;# 
   893  0514                     	;# 
   894  0515                     	;# 
   895  0515                     	;# 
   896  0516                     	;# 
   897  0517                     	;# 
   898  0518                     	;# 
   899  0519                     	;# 
   900  051A                     	;# 
   901  051B                     	;# 
   902  051C                     	;# 
   903  051D                     	;# 
   904  058C                     	;# 
   905  058C                     	;# 
   906  058D                     	;# 
   907  058E                     	;# 
   908  058F                     	;# 
   909  058F                     	;# 
   910  0590                     	;# 
   911  0591                     	;# 
   912  0592                     	;# 
   913  0593                     	;# 
   914  060C                     	;# 
   915  060D                     	;# 
   916  060E                     	;# 
   917  060F                     	;# 
   918  0610                     	;# 
   919  0611                     	;# 
   920  0612                     	;# 
   921  0613                     	;# 
   922  0614                     	;# 
   923  0616                     	;# 
   924  0617                     	;# 
   925  0618                     	;# 
   926  0619                     	;# 
   927  061A                     	;# 
   928  061B                     	;# 
   929  061C                     	;# 
   930  061D                     	;# 
   931  061E                     	;# 
   932  068C                     	;# 
   933  068D                     	;# 
   934  068E                     	;# 
   935  068F                     	;# 
   936  0690                     	;# 
   937  0691                     	;# 
   938  0692                     	;# 
   939  0693                     	;# 
   940  0694                     	;# 
   941  070C                     	;# 
   942  070D                     	;# 
   943  070E                     	;# 
   944  070F                     	;# 
   945  0710                     	;# 
   946  0711                     	;# 
   947  0712                     	;# 
   948  0713                     	;# 
   949  0714                     	;# 
   950  0716                     	;# 
   951  0717                     	;# 
   952  0718                     	;# 
   953  0719                     	;# 
   954  071A                     	;# 
   955  071B                     	;# 
   956  071C                     	;# 
   957  071D                     	;# 
   958  071E                     	;# 
   959  0796                     	;# 
   960  0797                     	;# 
   961  0798                     	;# 
   962  0799                     	;# 
   963  079A                     	;# 
   964  079B                     	;# 
   965  080C                     	;# 
   966  080D                     	;# 
   967  080E                     	;# 
   968  080F                     	;# 
   969  0810                     	;# 
   970  0811                     	;# 
   971  0812                     	;# 
   972  0813                     	;# 
   973  0814                     	;# 
   974  081A                     	;# 
   975  081B                     	;# 
   976  081C                     	;# 
   977  081D                     	;# 
   978  081E                     	;# 
   979  081F                     	;# 
   980  088C                     	;# 
   981  088D                     	;# 
   982  088E                     	;# 
   983  088F                     	;# 
   984  0890                     	;# 
   985  0891                     	;# 
   986  0892                     	;# 
   987  0893                     	;# 
   988  0895                     	;# 
   989  0896                     	;# 
   990  0897                     	;# 
   991  0898                     	;# 
   992  0899                     	;# 
   993  089A                     	;# 
   994  089B                     	;# 
   995  090C                     	;# 
   996  090E                     	;# 
   997  090F                     	;# 
   998  091F                     	;# 
   999  098F                     	;# 
  1000  098F                     	;# 
  1001  0990                     	;# 
  1002  0991                     	;# 
  1003  0992                     	;# 
  1004  0993                     	;# 
  1005  0994                     	;# 
  1006  0995                     	;# 
  1007  0996                     	;# 
  1008  0997                     	;# 
  1009  0E0F                     	;# 
  1010  0E10                     	;# 
  1011  0E11                     	;# 
  1012  0E12                     	;# 
  1013  0E13                     	;# 
  1014  0E14                     	;# 
  1015  0E15                     	;# 
  1016  0E16                     	;# 
  1017  0E17                     	;# 
  1018  0E18                     	;# 
  1019  0E19                     	;# 
  1020  0E1A                     	;# 
  1021  0E1B                     	;# 
  1022  0E1C                     	;# 
  1023  0E1D                     	;# 
  1024  0E1E                     	;# 
  1025  0E1F                     	;# 
  1026  0E20                     	;# 
  1027  0E21                     	;# 
  1028  0E22                     	;# 
  1029  0E23                     	;# 
  1030  0E24                     	;# 
  1031  0E25                     	;# 
  1032  0E26                     	;# 
  1033  0E27                     	;# 
  1034  0E28                     	;# 
  1035  0E29                     	;# 
  1036  0E2A                     	;# 
  1037  0E2B                     	;# 
  1038  0E2C                     	;# 
  1039  0E2D                     	;# 
  1040  0E2E                     	;# 
  1041  0E2F                     	;# 
  1042  0E30                     	;# 
  1043  0E31                     	;# 
  1044  0E32                     	;# 
  1045  0E33                     	;# 
  1046  0E34                     	;# 
  1047  0E35                     	;# 
  1048  0E36                     	;# 
  1049  0E37                     	;# 
  1050  0E8F                     	;# 
  1051  0E90                     	;# 
  1052  0E91                     	;# 
  1053  0E92                     	;# 
  1054  0E93                     	;# 
  1055  0E94                     	;# 
  1056  0E95                     	;# 
  1057  0E96                     	;# 
  1058  0E97                     	;# 
  1059  0E9C                     	;# 
  1060  0E9D                     	;# 
  1061  0E9E                     	;# 
  1062  0EA1                     	;# 
  1063  0EA2                     	;# 
  1064  0EA3                     	;# 
  1065  0EA4                     	;# 
  1066  0EA5                     	;# 
  1067  0EA9                     	;# 
  1068  0EAA                     	;# 
  1069  0EAB                     	;# 
  1070  0EAC                     	;# 
  1071  0EB1                     	;# 
  1072  0EB2                     	;# 
  1073  0EB3                     	;# 
  1074  0EB8                     	;# 
  1075  0EB9                     	;# 
  1076  0EBA                     	;# 
  1077  0EBB                     	;# 
  1078  0EBC                     	;# 
  1079  0EBD                     	;# 
  1080  0EBE                     	;# 
  1081  0EC3                     	;# 
  1082  0EC5                     	;# 
  1083  0EC6                     	;# 
  1084  0EC7                     	;# 
  1085  0EC8                     	;# 
  1086  0EC9                     	;# 
  1087  0ECA                     	;# 
  1088  0ECB                     	;# 
  1089  0ECC                     	;# 
  1090  0F10                     	;# 
  1091  0F11                     	;# 
  1092  0F12                     	;# 
  1093  0F13                     	;# 
  1094  0F14                     	;# 
  1095  0F15                     	;# 
  1096  0F16                     	;# 
  1097  0F17                     	;# 
  1098  0F18                     	;# 
  1099  0F19                     	;# 
  1100  0F1A                     	;# 
  1101  0F1B                     	;# 
  1102  0F1C                     	;# 
  1103  0F1D                     	;# 
  1104  0F1E                     	;# 
  1105  0F1F                     	;# 
  1106  0F20                     	;# 
  1107  0F21                     	;# 
  1108  0F22                     	;# 
  1109  0F23                     	;# 
  1110  0F24                     	;# 
  1111  0F25                     	;# 
  1112  0F26                     	;# 
  1113  0F27                     	;# 
  1114  0F28                     	;# 
  1115  0F29                     	;# 
  1116  0F2A                     	;# 
  1117  0F2B                     	;# 
  1118  0F2C                     	;# 
  1119  0F2D                     	;# 
  1120  0F2E                     	;# 
  1121  0F2F                     	;# 
  1122  0F30                     	;# 
  1123  0F31                     	;# 
  1124  0F32                     	;# 
  1125  0F38                     	;# 
  1126  0F39                     	;# 
  1127  0F3A                     	;# 
  1128  0F3B                     	;# 
  1129  0F3C                     	;# 
  1130  0F3D                     	;# 
  1131  0F3E                     	;# 
  1132  0F3F                     	;# 
  1133  0F40                     	;# 
  1134  0F41                     	;# 
  1135  0F43                     	;# 
  1136  0F44                     	;# 
  1137  0F45                     	;# 
  1138  0F46                     	;# 
  1139  0F47                     	;# 
  1140  0F48                     	;# 
  1141  0F49                     	;# 
  1142  0F4A                     	;# 
  1143  0F4B                     	;# 
  1144  0F4C                     	;# 
  1145  0F4E                     	;# 
  1146  0F4F                     	;# 
  1147  0F50                     	;# 
  1148  0F51                     	;# 
  1149  0F52                     	;# 
  1150  0F53                     	;# 
  1151  0F54                     	;# 
  1152  0F55                     	;# 
  1153  0F56                     	;# 
  1154  0F57                     	;# 
  1155  0F59                     	;# 
  1156  0F5A                     	;# 
  1157  0F5B                     	;# 
  1158  0F5C                     	;# 
  1159  0F5D                     	;# 
  1160  0F61                     	;# 
  1161  0F62                     	;# 
  1162  0F64                     	;# 
  1163  0F65                     	;# 
  1164  0F66                     	;# 
  1165  0F67                     	;# 
  1166  0F68                     	;# 
  1167  0F69                     	;# 
  1168  0F6A                     	;# 
  1169  0F6B                     	;# 
  1170  0F6C                     	;# 
  1171  0F6D                     	;# 
  1172  0FE4                     	;# 
  1173  0FE5                     	;# 
  1174  0FE6                     	;# 
  1175  0FE7                     	;# 
  1176  0FE8                     	;# 
  1177  0FE9                     	;# 
  1178  0FEA                     	;# 
  1179  0FEB                     	;# 
  1180  0FED                     	;# 
  1181  0FEE                     	;# 
  1182  0FEF                     	;# 
  1183  0000                     	;# 
  1184  0001                     	;# 
  1185  0002                     	;# 
  1186  0003                     	;# 
  1187  0004                     	;# 
  1188  0005                     	;# 
  1189  0006                     	;# 
  1190  0007                     	;# 
  1191  0008                     	;# 
  1192  0009                     	;# 
  1193  000A                     	;# 
  1194  000B                     	;# 
  1195  000C                     	;# 
  1196  000D                     	;# 
  1197  000E                     	;# 
  1198  000F                     	;# 
  1199  0010                     	;# 
  1200  0011                     	;# 
  1201  0012                     	;# 
  1202  0013                     	;# 
  1203  0014                     	;# 
  1204  0015                     	;# 
  1205  0016                     	;# 
  1206  0017                     	;# 
  1207  0018                     	;# 
  1208  0019                     	;# 
  1209  001A                     	;# 
  1210  001C                     	;# 
  1211  001C                     	;# 
  1212  001D                     	;# 
  1213  001D                     	;# 
  1214  001E                     	;# 
  1215  001F                     	;# 
  1216  008C                     	;# 
  1217  008C                     	;# 
  1218  008D                     	;# 
  1219  008E                     	;# 
  1220  008E                     	;# 
  1221  008F                     	;# 
  1222  0090                     	;# 
  1223  0090                     	;# 
  1224  0091                     	;# 
  1225  0093                     	;# 
  1226  0094                     	;# 
  1227  0095                     	;# 
  1228  0096                     	;# 
  1229  0097                     	;# 
  1230  0098                     	;# 
  1231  0099                     	;# 
  1232  009A                     	;# 
  1233  009B                     	;# 
  1234  009C                     	;# 
  1235  009D                     	;# 
  1236  009E                     	;# 
  1237  010C                     	;# 
  1238  010D                     	;# 
  1239  010E                     	;# 
  1240  010E                     	;# 
  1241  010F                     	;# 
  1242  0110                     	;# 
  1243  0110                     	;# 
  1244  0111                     	;# 
  1245  0112                     	;# 
  1246  0112                     	;# 
  1247  0113                     	;# 
  1248  0114                     	;# 
  1249  0114                     	;# 
  1250  0115                     	;# 
  1251  0116                     	;# 
  1252  0116                     	;# 
  1253  0117                     	;# 
  1254  0119                     	;# 
  1255  0119                     	;# 
  1256  0119                     	;# 
  1257  011A                     	;# 
  1258  011A                     	;# 
  1259  011A                     	;# 
  1260  011B                     	;# 
  1261  011B                     	;# 
  1262  011B                     	;# 
  1263  011B                     	;# 
  1264  011B                     	;# 
  1265  011C                     	;# 
  1266  011C                     	;# 
  1267  011C                     	;# 
  1268  011D                     	;# 
  1269  011D                     	;# 
  1270  011D                     	;# 
  1271  011E                     	;# 
  1272  011E                     	;# 
  1273  011E                     	;# 
  1274  011F                     	;# 
  1275  011F                     	;# 
  1276  011F                     	;# 
  1277  011F                     	;# 
  1278  011F                     	;# 
  1279  018C                     	;# 
  1280  018D                     	;# 
  1281  018E                     	;# 
  1282  018F                     	;# 
  1283  0190                     	;# 
  1284  0191                     	;# 
  1285  0192                     	;# 
  1286  0196                     	;# 
  1287  0197                     	;# 
  1288  0198                     	;# 
  1289  0199                     	;# 
  1290  019A                     	;# 
  1291  019B                     	;# 
  1292  019C                     	;# 
  1293  020C                     	;# 
  1294  020C                     	;# 
  1295  020D                     	;# 
  1296  020E                     	;# 
  1297  020F                     	;# 
  1298  020F                     	;# 
  1299  0210                     	;# 
  1300  0210                     	;# 
  1301  0211                     	;# 
  1302  0211                     	;# 
  1303  0212                     	;# 
  1304  0212                     	;# 
  1305  0213                     	;# 
  1306  0214                     	;# 
  1307  0215                     	;# 
  1308  0215                     	;# 
  1309  0216                     	;# 
  1310  0216                     	;# 
  1311  0217                     	;# 
  1312  0217                     	;# 
  1313  0218                     	;# 
  1314  0218                     	;# 
  1315  0219                     	;# 
  1316  021A                     	;# 
  1317  021B                     	;# 
  1318  021B                     	;# 
  1319  021C                     	;# 
  1320  021C                     	;# 
  1321  021D                     	;# 
  1322  021D                     	;# 
  1323  021E                     	;# 
  1324  021F                     	;# 
  1325  028C                     	;# 
  1326  028C                     	;# 
  1327  028D                     	;# 
  1328  028D                     	;# 
  1329  028E                     	;# 
  1330  028F                     	;# 
  1331  0290                     	;# 
  1332  0290                     	;# 
  1333  0291                     	;# 
  1334  0292                     	;# 
  1335  0292                     	;# 
  1336  0293                     	;# 
  1337  0293                     	;# 
  1338  0294                     	;# 
  1339  0295                     	;# 
  1340  0296                     	;# 
  1341  0296                     	;# 
  1342  0297                     	;# 
  1343  0298                     	;# 
  1344  0298                     	;# 
  1345  0299                     	;# 
  1346  0299                     	;# 
  1347  029A                     	;# 
  1348  029B                     	;# 
  1349  029C                     	;# 
  1350  029C                     	;# 
  1351  029D                     	;# 
  1352  030C                     	;# 
  1353  030C                     	;# 
  1354  030D                     	;# 
  1355  030E                     	;# 
  1356  030F                     	;# 
  1357  0310                     	;# 
  1358  0310                     	;# 
  1359  0311                     	;# 
  1360  0312                     	;# 
  1361  0313                     	;# 
  1362  0314                     	;# 
  1363  0314                     	;# 
  1364  0315                     	;# 
  1365  0316                     	;# 
  1366  0317                     	;# 
  1367  0318                     	;# 
  1368  0318                     	;# 
  1369  0319                     	;# 
  1370  031A                     	;# 
  1371  031B                     	;# 
  1372  031C                     	;# 
  1373  031C                     	;# 
  1374  031D                     	;# 
  1375  031E                     	;# 
  1376  031F                     	;# 
  1377  038C                     	;# 
  1378  038C                     	;# 
  1379  038D                     	;# 
  1380  038E                     	;# 
  1381  0390                     	;# 
  1382  0390                     	;# 
  1383  0391                     	;# 
  1384  0392                     	;# 
  1385  040C                     	;# 
  1386  040D                     	;# 
  1387  040E                     	;# 
  1388  040F                     	;# 
  1389  0410                     	;# 
  1390  0411                     	;# 
  1391  0416                     	;# 
  1392  0416                     	;# 
  1393  0417                     	;# 
  1394  0418                     	;# 
  1395  0418                     	;# 
  1396  0419                     	;# 
  1397  041A                     	;# 
  1398  041A                     	;# 
  1399  041B                     	;# 
  1400  041C                     	;# 
  1401  041C                     	;# 
  1402  041D                     	;# 
  1403  041E                     	;# 
  1404  041F                     	;# 
  1405  048C                     	;# 
  1406  048C                     	;# 
  1407  048D                     	;# 
  1408  048E                     	;# 
  1409  048F                     	;# 
  1410  048F                     	;# 
  1411  0490                     	;# 
  1412  0491                     	;# 
  1413  0492                     	;# 
  1414  0492                     	;# 
  1415  0493                     	;# 
  1416  0494                     	;# 
  1417  0495                     	;# 
  1418  0495                     	;# 
  1419  0496                     	;# 
  1420  0497                     	;# 
  1421  0498                     	;# 
  1422  0499                     	;# 
  1423  049A                     	;# 
  1424  049B                     	;# 
  1425  049C                     	;# 
  1426  049D                     	;# 
  1427  050C                     	;# 
  1428  050C                     	;# 
  1429  050D                     	;# 
  1430  050E                     	;# 
  1431  050F                     	;# 
  1432  050F                     	;# 
  1433  0510                     	;# 
  1434  0511                     	;# 
  1435  0512                     	;# 
  1436  0512                     	;# 
  1437  0513                     	;# 
  1438  0514                     	;# 
  1439  0515                     	;# 
  1440  0515                     	;# 
  1441  0516                     	;# 
  1442  0517                     	;# 
  1443  0518                     	;# 
  1444  0519                     	;# 
  1445  051A                     	;# 
  1446  051B                     	;# 
  1447  051C                     	;# 
  1448  051D                     	;# 
  1449  058C                     	;# 
  1450  058C                     	;# 
  1451  058D                     	;# 
  1452  058E                     	;# 
  1453  058F                     	;# 
  1454  058F                     	;# 
  1455  0590                     	;# 
  1456  0591                     	;# 
  1457  0592                     	;# 
  1458  0593                     	;# 
  1459  060C                     	;# 
  1460  060D                     	;# 
  1461  060E                     	;# 
  1462  060F                     	;# 
  1463  0610                     	;# 
  1464  0611                     	;# 
  1465  0612                     	;# 
  1466  0613                     	;# 
  1467  0614                     	;# 
  1468  0616                     	;# 
  1469  0617                     	;# 
  1470  0618                     	;# 
  1471  0619                     	;# 
  1472  061A                     	;# 
  1473  061B                     	;# 
  1474  061C                     	;# 
  1475  061D                     	;# 
  1476  061E                     	;# 
  1477  068C                     	;# 
  1478  068D                     	;# 
  1479  068E                     	;# 
  1480  068F                     	;# 
  1481  0690                     	;# 
  1482  0691                     	;# 
  1483  0692                     	;# 
  1484  0693                     	;# 
  1485  0694                     	;# 
  1486  070C                     	;# 
  1487  070D                     	;# 
  1488  070E                     	;# 
  1489  070F                     	;# 
  1490  0710                     	;# 
  1491  0711                     	;# 
  1492  0712                     	;# 
  1493  0713                     	;# 
  1494  0714                     	;# 
  1495  0716                     	;# 
  1496  0717                     	;# 
  1497  0718                     	;# 
  1498  0719                     	;# 
  1499  071A                     	;# 
  1500  071B                     	;# 
  1501  071C                     	;# 
  1502  071D                     	;# 
  1503  071E                     	;# 
  1504  0796                     	;# 
  1505  0797                     	;# 
  1506  0798                     	;# 
  1507  0799                     	;# 
  1508  079A                     	;# 
  1509  079B                     	;# 
  1510  080C                     	;# 
  1511  080D                     	;# 
  1512  080E                     	;# 
  1513  080F                     	;# 
  1514  0810                     	;# 
  1515  0811                     	;# 
  1516  0812                     	;# 
  1517  0813                     	;# 
  1518  0814                     	;# 
  1519  081A                     	;# 
  1520  081B                     	;# 
  1521  081C                     	;# 
  1522  081D                     	;# 
  1523  081E                     	;# 
  1524  081F                     	;# 
  1525  088C                     	;# 
  1526  088D                     	;# 
  1527  088E                     	;# 
  1528  088F                     	;# 
  1529  0890                     	;# 
  1530  0891                     	;# 
  1531  0892                     	;# 
  1532  0893                     	;# 
  1533  0895                     	;# 
  1534  0896                     	;# 
  1535  0897                     	;# 
  1536  0898                     	;# 
  1537  0899                     	;# 
  1538  089A                     	;# 
  1539  089B                     	;# 
  1540  090C                     	;# 
  1541  090E                     	;# 
  1542  090F                     	;# 
  1543  091F                     	;# 
  1544  098F                     	;# 
  1545  098F                     	;# 
  1546  0990                     	;# 
  1547  0991                     	;# 
  1548  0992                     	;# 
  1549  0993                     	;# 
  1550  0994                     	;# 
  1551  0995                     	;# 
  1552  0996                     	;# 
  1553  0997                     	;# 
  1554  0E0F                     	;# 
  1555  0E10                     	;# 
  1556  0E11                     	;# 
  1557  0E12                     	;# 
  1558  0E13                     	;# 
  1559  0E14                     	;# 
  1560  0E15                     	;# 
  1561  0E16                     	;# 
  1562  0E17                     	;# 
  1563  0E18                     	;# 
  1564  0E19                     	;# 
  1565  0E1A                     	;# 
  1566  0E1B                     	;# 
  1567  0E1C                     	;# 
  1568  0E1D                     	;# 
  1569  0E1E                     	;# 
  1570  0E1F                     	;# 
  1571  0E20                     	;# 
  1572  0E21                     	;# 
  1573  0E22                     	;# 
  1574  0E23                     	;# 
  1575  0E24                     	;# 
  1576  0E25                     	;# 
  1577  0E26                     	;# 
  1578  0E27                     	;# 
  1579  0E28                     	;# 
  1580  0E29                     	;# 
  1581  0E2A                     	;# 
  1582  0E2B                     	;# 
  1583  0E2C                     	;# 
  1584  0E2D                     	;# 
  1585  0E2E                     	;# 
  1586  0E2F                     	;# 
  1587  0E30                     	;# 
  1588  0E31                     	;# 
  1589  0E32                     	;# 
  1590  0E33                     	;# 
  1591  0E34                     	;# 
  1592  0E35                     	;# 
  1593  0E36                     	;# 
  1594  0E37                     	;# 
  1595  0E8F                     	;# 
  1596  0E90                     	;# 
  1597  0E91                     	;# 
  1598  0E92                     	;# 
  1599  0E93                     	;# 
  1600  0E94                     	;# 
  1601  0E95                     	;# 
  1602  0E96                     	;# 
  1603  0E97                     	;# 
  1604  0E9C                     	;# 
  1605  0E9D                     	;# 
  1606  0E9E                     	;# 
  1607  0EA1                     	;# 
  1608  0EA2                     	;# 
  1609  0EA3                     	;# 
  1610  0EA4                     	;# 
  1611  0EA5                     	;# 
  1612  0EA9                     	;# 
  1613  0EAA                     	;# 
  1614  0EAB                     	;# 
  1615  0EAC                     	;# 
  1616  0EB1                     	;# 
  1617  0EB2                     	;# 
  1618  0EB3                     	;# 
  1619  0EB8                     	;# 
  1620  0EB9                     	;# 
  1621  0EBA                     	;# 
  1622  0EBB                     	;# 
  1623  0EBC                     	;# 
  1624  0EBD                     	;# 
  1625  0EBE                     	;# 
  1626  0EC3                     	;# 
  1627  0EC5                     	;# 
  1628  0EC6                     	;# 
  1629  0EC7                     	;# 
  1630  0EC8                     	;# 
  1631  0EC9                     	;# 
  1632  0ECA                     	;# 
  1633  0ECB                     	;# 
  1634  0ECC                     	;# 
  1635  0F10                     	;# 
  1636  0F11                     	;# 
  1637  0F12                     	;# 
  1638  0F13                     	;# 
  1639  0F14                     	;# 
  1640  0F15                     	;# 
  1641  0F16                     	;# 
  1642  0F17                     	;# 
  1643  0F18                     	;# 
  1644  0F19                     	;# 
  1645  0F1A                     	;# 
  1646  0F1B                     	;# 
  1647  0F1C                     	;# 
  1648  0F1D                     	;# 
  1649  0F1E                     	;# 
  1650  0F1F                     	;# 
  1651  0F20                     	;# 
  1652  0F21                     	;# 
  1653  0F22                     	;# 
  1654  0F23                     	;# 
  1655  0F24                     	;# 
  1656  0F25                     	;# 
  1657  0F26                     	;# 
  1658  0F27                     	;# 
  1659  0F28                     	;# 
  1660  0F29                     	;# 
  1661  0F2A                     	;# 
  1662  0F2B                     	;# 
  1663  0F2C                     	;# 
  1664  0F2D                     	;# 
  1665  0F2E                     	;# 
  1666  0F2F                     	;# 
  1667  0F30                     	;# 
  1668  0F31                     	;# 
  1669  0F32                     	;# 
  1670  0F38                     	;# 
  1671  0F39                     	;# 
  1672  0F3A                     	;# 
  1673  0F3B                     	;# 
  1674  0F3C                     	;# 
  1675  0F3D                     	;# 
  1676  0F3E                     	;# 
  1677  0F3F                     	;# 
  1678  0F40                     	;# 
  1679  0F41                     	;# 
  1680  0F43                     	;# 
  1681  0F44                     	;# 
  1682  0F45                     	;# 
  1683  0F46                     	;# 
  1684  0F47                     	;# 
  1685  0F48                     	;# 
  1686  0F49                     	;# 
  1687  0F4A                     	;# 
  1688  0F4B                     	;# 
  1689  0F4C                     	;# 
  1690  0F4E                     	;# 
  1691  0F4F                     	;# 
  1692  0F50                     	;# 
  1693  0F51                     	;# 
  1694  0F52                     	;# 
  1695  0F53                     	;# 
  1696  0F54                     	;# 
  1697  0F55                     	;# 
  1698  0F56                     	;# 
  1699  0F57                     	;# 
  1700  0F59                     	;# 
  1701  0F5A                     	;# 
  1702  0F5B                     	;# 
  1703  0F5C                     	;# 
  1704  0F5D                     	;# 
  1705  0F61                     	;# 
  1706  0F62                     	;# 
  1707  0F64                     	;# 
  1708  0F65                     	;# 
  1709  0F66                     	;# 
  1710  0F67                     	;# 
  1711  0F68                     	;# 
  1712  0F69                     	;# 
  1713  0F6A                     	;# 
  1714  0F6B                     	;# 
  1715  0F6C                     	;# 
  1716  0F6D                     	;# 
  1717  0FE4                     	;# 
  1718  0FE5                     	;# 
  1719  0FE6                     	;# 
  1720  0FE7                     	;# 
  1721  0FE8                     	;# 
  1722  0FE9                     	;# 
  1723  0FEA                     	;# 
  1724  0FEB                     	;# 
  1725  0FED                     	;# 
  1726  0FEE                     	;# 
  1727  0FEF                     	;# 
  1728  0000                     	;# 
  1729  0001                     	;# 
  1730  0002                     	;# 
  1731  0003                     	;# 
  1732  0004                     	;# 
  1733  0005                     	;# 
  1734  0006                     	;# 
  1735  0007                     	;# 
  1736  0008                     	;# 
  1737  0009                     	;# 
  1738  000A                     	;# 
  1739  000B                     	;# 
  1740  000C                     	;# 
  1741  000D                     	;# 
  1742  000E                     	;# 
  1743  000F                     	;# 
  1744  0010                     	;# 
  1745  0011                     	;# 
  1746  0012                     	;# 
  1747  0013                     	;# 
  1748  0014                     	;# 
  1749  0015                     	;# 
  1750  0016                     	;# 
  1751  0017                     	;# 
  1752  0018                     	;# 
  1753  0019                     	;# 
  1754  001A                     	;# 
  1755  001C                     	;# 
  1756  001C                     	;# 
  1757  001D                     	;# 
  1758  001D                     	;# 
  1759  001E                     	;# 
  1760  001F                     	;# 
  1761  008C                     	;# 
  1762  008C                     	;# 
  1763  008D                     	;# 
  1764  008E                     	;# 
  1765  008E                     	;# 
  1766  008F                     	;# 
  1767  0090                     	;# 
  1768  0090                     	;# 
  1769  0091                     	;# 
  1770  0093                     	;# 
  1771  0094                     	;# 
  1772  0095                     	;# 
  1773  0096                     	;# 
  1774  0097                     	;# 
  1775  0098                     	;# 
  1776  0099                     	;# 
  1777  009A                     	;# 
  1778  009B                     	;# 
  1779  009C                     	;# 
  1780  009D                     	;# 
  1781  009E                     	;# 
  1782  010C                     	;# 
  1783  010D                     	;# 
  1784  010E                     	;# 
  1785  010E                     	;# 
  1786  010F                     	;# 
  1787  0110                     	;# 
  1788  0110                     	;# 
  1789  0111                     	;# 
  1790  0112                     	;# 
  1791  0112                     	;# 
  1792  0113                     	;# 
  1793  0114                     	;# 
  1794  0114                     	;# 
  1795  0115                     	;# 
  1796  0116                     	;# 
  1797  0116                     	;# 
  1798  0117                     	;# 
  1799  0119                     	;# 
  1800  0119                     	;# 
  1801  0119                     	;# 
  1802  011A                     	;# 
  1803  011A                     	;# 
  1804  011A                     	;# 
  1805  011B                     	;# 
  1806  011B                     	;# 
  1807  011B                     	;# 
  1808  011B                     	;# 
  1809  011B                     	;# 
  1810  011C                     	;# 
  1811  011C                     	;# 
  1812  011C                     	;# 
  1813  011D                     	;# 
  1814  011D                     	;# 
  1815  011D                     	;# 
  1816  011E                     	;# 
  1817  011E                     	;# 
  1818  011E                     	;# 
  1819  011F                     	;# 
  1820  011F                     	;# 
  1821  011F                     	;# 
  1822  011F                     	;# 
  1823  011F                     	;# 
  1824  018C                     	;# 
  1825  018D                     	;# 
  1826  018E                     	;# 
  1827  018F                     	;# 
  1828  0190                     	;# 
  1829  0191                     	;# 
  1830  0192                     	;# 
  1831  0196                     	;# 
  1832  0197                     	;# 
  1833  0198                     	;# 
  1834  0199                     	;# 
  1835  019A                     	;# 
  1836  019B                     	;# 
  1837  019C                     	;# 
  1838  020C                     	;# 
  1839  020C                     	;# 
  1840  020D                     	;# 
  1841  020E                     	;# 
  1842  020F                     	;# 
  1843  020F                     	;# 
  1844  0210                     	;# 
  1845  0210                     	;# 
  1846  0211                     	;# 
  1847  0211                     	;# 
  1848  0212                     	;# 
  1849  0212                     	;# 
  1850  0213                     	;# 
  1851  0214                     	;# 
  1852  0215                     	;# 
  1853  0215                     	;# 
  1854  0216                     	;# 
  1855  0216                     	;# 
  1856  0217                     	;# 
  1857  0217                     	;# 
  1858  0218                     	;# 
  1859  0218                     	;# 
  1860  0219                     	;# 
  1861  021A                     	;# 
  1862  021B                     	;# 
  1863  021B                     	;# 
  1864  021C                     	;# 
  1865  021C                     	;# 
  1866  021D                     	;# 
  1867  021D                     	;# 
  1868  021E                     	;# 
  1869  021F                     	;# 
  1870  028C                     	;# 
  1871  028C                     	;# 
  1872  028D                     	;# 
  1873  028D                     	;# 
  1874  028E                     	;# 
  1875  028F                     	;# 
  1876  0290                     	;# 
  1877  0290                     	;# 
  1878  0291                     	;# 
  1879  0292                     	;# 
  1880  0292                     	;# 
  1881  0293                     	;# 
  1882  0293                     	;# 
  1883  0294                     	;# 
  1884  0295                     	;# 
  1885  0296                     	;# 
  1886  0296                     	;# 
  1887  0297                     	;# 
  1888  0298                     	;# 
  1889  0298                     	;# 
  1890  0299                     	;# 
  1891  0299                     	;# 
  1892  029A                     	;# 
  1893  029B                     	;# 
  1894  029C                     	;# 
  1895  029C                     	;# 
  1896  029D                     	;# 
  1897  030C                     	;# 
  1898  030C                     	;# 
  1899  030D                     	;# 
  1900  030E                     	;# 
  1901  030F                     	;# 
  1902  0310                     	;# 
  1903  0310                     	;# 
  1904  0311                     	;# 
  1905  0312                     	;# 
  1906  0313                     	;# 
  1907  0314                     	;# 
  1908  0314                     	;# 
  1909  0315                     	;# 
  1910  0316                     	;# 
  1911  0317                     	;# 
  1912  0318                     	;# 
  1913  0318                     	;# 
  1914  0319                     	;# 
  1915  031A                     	;# 
  1916  031B                     	;# 
  1917  031C                     	;# 
  1918  031C                     	;# 
  1919  031D                     	;# 
  1920  031E                     	;# 
  1921  031F                     	;# 
  1922  038C                     	;# 
  1923  038C                     	;# 
  1924  038D                     	;# 
  1925  038E                     	;# 
  1926  0390                     	;# 
  1927  0390                     	;# 
  1928  0391                     	;# 
  1929  0392                     	;# 
  1930  040C                     	;# 
  1931  040D                     	;# 
  1932  040E                     	;# 
  1933  040F                     	;# 
  1934  0410                     	;# 
  1935  0411                     	;# 
  1936  0416                     	;# 
  1937  0416                     	;# 
  1938  0417                     	;# 
  1939  0418                     	;# 
  1940  0418                     	;# 
  1941  0419                     	;# 
  1942  041A                     	;# 
  1943  041A                     	;# 
  1944  041B                     	;# 
  1945  041C                     	;# 
  1946  041C                     	;# 
  1947  041D                     	;# 
  1948  041E                     	;# 
  1949  041F                     	;# 
  1950  048C                     	;# 
  1951  048C                     	;# 
  1952  048D                     	;# 
  1953  048E                     	;# 
  1954  048F                     	;# 
  1955  048F                     	;# 
  1956  0490                     	;# 
  1957  0491                     	;# 
  1958  0492                     	;# 
  1959  0492                     	;# 
  1960  0493                     	;# 
  1961  0494                     	;# 
  1962  0495                     	;# 
  1963  0495                     	;# 
  1964  0496                     	;# 
  1965  0497                     	;# 
  1966  0498                     	;# 
  1967  0499                     	;# 
  1968  049A                     	;# 
  1969  049B                     	;# 
  1970  049C                     	;# 
  1971  049D                     	;# 
  1972  050C                     	;# 
  1973  050C                     	;# 
  1974  050D                     	;# 
  1975  050E                     	;# 
  1976  050F                     	;# 
  1977  050F                     	;# 
  1978  0510                     	;# 
  1979  0511                     	;# 
  1980  0512                     	;# 
  1981  0512                     	;# 
  1982  0513                     	;# 
  1983  0514                     	;# 
  1984  0515                     	;# 
  1985  0515                     	;# 
  1986  0516                     	;# 
  1987  0517                     	;# 
  1988  0518                     	;# 
  1989  0519                     	;# 
  1990  051A                     	;# 
  1991  051B                     	;# 
  1992  051C                     	;# 
  1993  051D                     	;# 
  1994  058C                     	;# 
  1995  058C                     	;# 
  1996  058D                     	;# 
  1997  058E                     	;# 
  1998  058F                     	;# 
  1999  058F                     	;# 
  2000  0590                     	;# 
  2001  0591                     	;# 
  2002  0592                     	;# 
  2003  0593                     	;# 
  2004  060C                     	;# 
  2005  060D                     	;# 
  2006  060E                     	;# 
  2007  060F                     	;# 
  2008  0610                     	;# 
  2009  0611                     	;# 
  2010  0612                     	;# 
  2011  0613                     	;# 
  2012  0614                     	;# 
  2013  0616                     	;# 
  2014  0617                     	;# 
  2015  0618                     	;# 
  2016  0619                     	;# 
  2017  061A                     	;# 
  2018  061B                     	;# 
  2019  061C                     	;# 
  2020  061D                     	;# 
  2021  061E                     	;# 
  2022  068C                     	;# 
  2023  068D                     	;# 
  2024  068E                     	;# 
  2025  068F                     	;# 
  2026  0690                     	;# 
  2027  0691                     	;# 
  2028  0692                     	;# 
  2029  0693                     	;# 
  2030  0694                     	;# 
  2031  070C                     	;# 
  2032  070D                     	;# 
  2033  070E                     	;# 
  2034  070F                     	;# 
  2035  0710                     	;# 
  2036  0711                     	;# 
  2037  0712                     	;# 
  2038  0713                     	;# 
  2039  0714                     	;# 
  2040  0716                     	;# 
  2041  0717                     	;# 
  2042  0718                     	;# 
  2043  0719                     	;# 
  2044  071A                     	;# 
  2045  071B                     	;# 
  2046  071C                     	;# 
  2047  071D                     	;# 
  2048  071E                     	;# 
  2049  0796                     	;# 
  2050  0797                     	;# 
  2051  0798                     	;# 
  2052  0799                     	;# 
  2053  079A                     	;# 
  2054  079B                     	;# 
  2055  080C                     	;# 
  2056  080D                     	;# 
  2057  080E                     	;# 
  2058  080F                     	;# 
  2059  0810                     	;# 
  2060  0811                     	;# 
  2061  0812                     	;# 
  2062  0813                     	;# 
  2063  0814                     	;# 
  2064  081A                     	;# 
  2065  081B                     	;# 
  2066  081C                     	;# 
  2067  081D                     	;# 
  2068  081E                     	;# 
  2069  081F                     	;# 
  2070  088C                     	;# 
  2071  088D                     	;# 
  2072  088E                     	;# 
  2073  088F                     	;# 
  2074  0890                     	;# 
  2075  0891                     	;# 
  2076  0892                     	;# 
  2077  0893                     	;# 
  2078  0895                     	;# 
  2079  0896                     	;# 
  2080  0897                     	;# 
  2081  0898                     	;# 
  2082  0899                     	;# 
  2083  089A                     	;# 
  2084  089B                     	;# 
  2085  090C                     	;# 
  2086  090E                     	;# 
  2087  090F                     	;# 
  2088  091F                     	;# 
  2089  098F                     	;# 
  2090  098F                     	;# 
  2091  0990                     	;# 
  2092  0991                     	;# 
  2093  0992                     	;# 
  2094  0993                     	;# 
  2095  0994                     	;# 
  2096  0995                     	;# 
  2097  0996                     	;# 
  2098  0997                     	;# 
  2099  0E0F                     	;# 
  2100  0E10                     	;# 
  2101  0E11                     	;# 
  2102  0E12                     	;# 
  2103  0E13                     	;# 
  2104  0E14                     	;# 
  2105  0E15                     	;# 
  2106  0E16                     	;# 
  2107  0E17                     	;# 
  2108  0E18                     	;# 
  2109  0E19                     	;# 
  2110  0E1A                     	;# 
  2111  0E1B                     	;# 
  2112  0E1C                     	;# 
  2113  0E1D                     	;# 
  2114  0E1E                     	;# 
  2115  0E1F                     	;# 
  2116  0E20                     	;# 
  2117  0E21                     	;# 
  2118  0E22                     	;# 
  2119  0E23                     	;# 
  2120  0E24                     	;# 
  2121  0E25                     	;# 
  2122  0E26                     	;# 
  2123  0E27                     	;# 
  2124  0E28                     	;# 
  2125  0E29                     	;# 
  2126  0E2A                     	;# 
  2127  0E2B                     	;# 
  2128  0E2C                     	;# 
  2129  0E2D                     	;# 
  2130  0E2E                     	;# 
  2131  0E2F                     	;# 
  2132  0E30                     	;# 
  2133  0E31                     	;# 
  2134  0E32                     	;# 
  2135  0E33                     	;# 
  2136  0E34                     	;# 
  2137  0E35                     	;# 
  2138  0E36                     	;# 
  2139  0E37                     	;# 
  2140  0E8F                     	;# 
  2141  0E90                     	;# 
  2142  0E91                     	;# 
  2143  0E92                     	;# 
  2144  0E93                     	;# 
  2145  0E94                     	;# 
  2146  0E95                     	;# 
  2147  0E96                     	;# 
  2148  0E97                     	;# 
  2149  0E9C                     	;# 
  2150  0E9D                     	;# 
  2151  0E9E                     	;# 
  2152  0EA1                     	;# 
  2153  0EA2                     	;# 
  2154  0EA3                     	;# 
  2155  0EA4                     	;# 
  2156  0EA5                     	;# 
  2157  0EA9                     	;# 
  2158  0EAA                     	;# 
  2159  0EAB                     	;# 
  2160  0EAC                     	;# 
  2161  0EB1                     	;# 
  2162  0EB2                     	;# 
  2163  0EB3                     	;# 
  2164  0EB8                     	;# 
  2165  0EB9                     	;# 
  2166  0EBA                     	;# 
  2167  0EBB                     	;# 
  2168  0EBC                     	;# 
  2169  0EBD                     	;# 
  2170  0EBE                     	;# 
  2171  0EC3                     	;# 
  2172  0EC5                     	;# 
  2173  0EC6                     	;# 
  2174  0EC7                     	;# 
  2175  0EC8                     	;# 
  2176  0EC9                     	;# 
  2177  0ECA                     	;# 
  2178  0ECB                     	;# 
  2179  0ECC                     	;# 
  2180  0F10                     	;# 
  2181  0F11                     	;# 
  2182  0F12                     	;# 
  2183  0F13                     	;# 
  2184  0F14                     	;# 
  2185  0F15                     	;# 
  2186  0F16                     	;# 
  2187  0F17                     	;# 
  2188  0F18                     	;# 
  2189  0F19                     	;# 
  2190  0F1A                     	;# 
  2191  0F1B                     	;# 
  2192  0F1C                     	;# 
  2193  0F1D                     	;# 
  2194  0F1E                     	;# 
  2195  0F1F                     	;# 
  2196  0F20                     	;# 
  2197  0F21                     	;# 
  2198  0F22                     	;# 
  2199  0F23                     	;# 
  2200  0F24                     	;# 
  2201  0F25                     	;# 
  2202  0F26                     	;# 
  2203  0F27                     	;# 
  2204  0F28                     	;# 
  2205  0F29                     	;# 
  2206  0F2A                     	;# 
  2207  0F2B                     	;# 
  2208  0F2C                     	;# 
  2209  0F2D                     	;# 
  2210  0F2E                     	;# 
  2211  0F2F                     	;# 
  2212  0F30                     	;# 
  2213  0F31                     	;# 
  2214  0F32                     	;# 
  2215  0F38                     	;# 
  2216  0F39                     	;# 
  2217  0F3A                     	;# 
  2218  0F3B                     	;# 
  2219  0F3C                     	;# 
  2220  0F3D                     	;# 
  2221  0F3E                     	;# 
  2222  0F3F                     	;# 
  2223  0F40                     	;# 
  2224  0F41                     	;# 
  2225  0F43                     	;# 
  2226  0F44                     	;# 
  2227  0F45                     	;# 
  2228  0F46                     	;# 
  2229  0F47                     	;# 
  2230  0F48                     	;# 
  2231  0F49                     	;# 
  2232  0F4A                     	;# 
  2233  0F4B                     	;# 
  2234  0F4C                     	;# 
  2235  0F4E                     	;# 
  2236  0F4F                     	;# 
  2237  0F50                     	;# 
  2238  0F51                     	;# 
  2239  0F52                     	;# 
  2240  0F53                     	;# 
  2241  0F54                     	;# 
  2242  0F55                     	;# 
  2243  0F56                     	;# 
  2244  0F57                     	;# 
  2245  0F59                     	;# 
  2246  0F5A                     	;# 
  2247  0F5B                     	;# 
  2248  0F5C                     	;# 
  2249  0F5D                     	;# 
  2250  0F61                     	;# 
  2251  0F62                     	;# 
  2252  0F64                     	;# 
  2253  0F65                     	;# 
  2254  0F66                     	;# 
  2255  0F67                     	;# 
  2256  0F68                     	;# 
  2257  0F69                     	;# 
  2258  0F6A                     	;# 
  2259  0F6B                     	;# 
  2260  0F6C                     	;# 
  2261  0F6D                     	;# 
  2262  0FE4                     	;# 
  2263  0FE5                     	;# 
  2264  0FE6                     	;# 
  2265  0FE7                     	;# 
  2266  0FE8                     	;# 
  2267  0FE9                     	;# 
  2268  0FEA                     	;# 
  2269  0FEB                     	;# 
  2270  0FED                     	;# 
  2271  0FEE                     	;# 
  2272  0FEF                     	;# 
  2273  0000                     	;# 
  2274  0001                     	;# 
  2275  0002                     	;# 
  2276  0003                     	;# 
  2277  0004                     	;# 
  2278  0005                     	;# 
  2279  0006                     	;# 
  2280  0007                     	;# 
  2281  0008                     	;# 
  2282  0009                     	;# 
  2283  000A                     	;# 
  2284  000B                     	;# 
  2285  000C                     	;# 
  2286  000D                     	;# 
  2287  000E                     	;# 
  2288  000F                     	;# 
  2289  0010                     	;# 
  2290  0011                     	;# 
  2291  0012                     	;# 
  2292  0013                     	;# 
  2293  0014                     	;# 
  2294  0015                     	;# 
  2295  0016                     	;# 
  2296  0017                     	;# 
  2297  0018                     	;# 
  2298  0019                     	;# 
  2299  001A                     	;# 
  2300  001C                     	;# 
  2301  001C                     	;# 
  2302  001D                     	;# 
  2303  001D                     	;# 
  2304  001E                     	;# 
  2305  001F                     	;# 
  2306  008C                     	;# 
  2307  008C                     	;# 
  2308  008D                     	;# 
  2309  008E                     	;# 
  2310  008E                     	;# 
  2311  008F                     	;# 
  2312  0090                     	;# 
  2313  0090                     	;# 
  2314  0091                     	;# 
  2315  0093                     	;# 
  2316  0094                     	;# 
  2317  0095                     	;# 
  2318  0096                     	;# 
  2319  0097                     	;# 
  2320  0098                     	;# 
  2321  0099                     	;# 
  2322  009A                     	;# 
  2323  009B                     	;# 
  2324  009C                     	;# 
  2325  009D                     	;# 
  2326  009E                     	;# 
  2327  010C                     	;# 
  2328  010D                     	;# 
  2329  010E                     	;# 
  2330  010E                     	;# 
  2331  010F                     	;# 
  2332  0110                     	;# 
  2333  0110                     	;# 
  2334  0111                     	;# 
  2335  0112                     	;# 
  2336  0112                     	;# 
  2337  0113                     	;# 
  2338  0114                     	;# 
  2339  0114                     	;# 
  2340  0115                     	;# 
  2341  0116                     	;# 
  2342  0116                     	;# 
  2343  0117                     	;# 
  2344  0119                     	;# 
  2345  0119                     	;# 
  2346  0119                     	;# 
  2347  011A                     	;# 
  2348  011A                     	;# 
  2349  011A                     	;# 
  2350  011B                     	;# 
  2351  011B                     	;# 
  2352  011B                     	;# 
  2353  011B                     	;# 
  2354  011B                     	;# 
  2355  011C                     	;# 
  2356  011C                     	;# 
  2357  011C                     	;# 
  2358  011D                     	;# 
  2359  011D                     	;# 
  2360  011D                     	;# 
  2361  011E                     	;# 
  2362  011E                     	;# 
  2363  011E                     	;# 
  2364  011F                     	;# 
  2365  011F                     	;# 
  2366  011F                     	;# 
  2367  011F                     	;# 
  2368  011F                     	;# 
  2369  018C                     	;# 
  2370  018D                     	;# 
  2371  018E                     	;# 
  2372  018F                     	;# 
  2373  0190                     	;# 
  2374  0191                     	;# 
  2375  0192                     	;# 
  2376  0196                     	;# 
  2377  0197                     	;# 
  2378  0198                     	;# 
  2379  0199                     	;# 
  2380  019A                     	;# 
  2381  019B                     	;# 
  2382  019C                     	;# 
  2383  020C                     	;# 
  2384  020C                     	;# 
  2385  020D                     	;# 
  2386  020E                     	;# 
  2387  020F                     	;# 
  2388  020F                     	;# 
  2389  0210                     	;# 
  2390  0210                     	;# 
  2391  0211                     	;# 
  2392  0211                     	;# 
  2393  0212                     	;# 
  2394  0212                     	;# 
  2395  0213                     	;# 
  2396  0214                     	;# 
  2397  0215                     	;# 
  2398  0215                     	;# 
  2399  0216                     	;# 
  2400  0216                     	;# 
  2401  0217                     	;# 
  2402  0217                     	;# 
  2403  0218                     	;# 
  2404  0218                     	;# 
  2405  0219                     	;# 
  2406  021A                     	;# 
  2407  021B                     	;# 
  2408  021B                     	;# 
  2409  021C                     	;# 
  2410  021C                     	;# 
  2411  021D                     	;# 
  2412  021D                     	;# 
  2413  021E                     	;# 
  2414  021F                     	;# 
  2415  028C                     	;# 
  2416  028C                     	;# 
  2417  028D                     	;# 
  2418  028D                     	;# 
  2419  028E                     	;# 
  2420  028F                     	;# 
  2421  0290                     	;# 
  2422  0290                     	;# 
  2423  0291                     	;# 
  2424  0292                     	;# 
  2425  0292                     	;# 
  2426  0293                     	;# 
  2427  0293                     	;# 
  2428  0294                     	;# 
  2429  0295                     	;# 
  2430  0296                     	;# 
  2431  0296                     	;# 
  2432  0297                     	;# 
  2433  0298                     	;# 
  2434  0298                     	;# 
  2435  0299                     	;# 
  2436  0299                     	;# 
  2437  029A                     	;# 
  2438  029B                     	;# 
  2439  029C                     	;# 
  2440  029C                     	;# 
  2441  029D                     	;# 
  2442  030C                     	;# 
  2443  030C                     	;# 
  2444  030D                     	;# 
  2445  030E                     	;# 
  2446  030F                     	;# 
  2447  0310                     	;# 
  2448  0310                     	;# 
  2449  0311                     	;# 
  2450  0312                     	;# 
  2451  0313                     	;# 
  2452  0314                     	;# 
  2453  0314                     	;# 
  2454  0315                     	;# 
  2455  0316                     	;# 
  2456  0317                     	;# 
  2457  0318                     	;# 
  2458  0318                     	;# 
  2459  0319                     	;# 
  2460  031A                     	;# 
  2461  031B                     	;# 
  2462  031C                     	;# 
  2463  031C                     	;# 
  2464  031D                     	;# 
  2465  031E                     	;# 
  2466  031F                     	;# 
  2467  038C                     	;# 
  2468  038C                     	;# 
  2469  038D                     	;# 
  2470  038E                     	;# 
  2471  0390                     	;# 
  2472  0390                     	;# 
  2473  0391                     	;# 
  2474  0392                     	;# 
  2475  040C                     	;# 
  2476  040D                     	;# 
  2477  040E                     	;# 
  2478  040F                     	;# 
  2479  0410                     	;# 
  2480  0411                     	;# 
  2481  0416                     	;# 
  2482  0416                     	;# 
  2483  0417                     	;# 
  2484  0418                     	;# 
  2485  0418                     	;# 
  2486  0419                     	;# 
  2487  041A                     	;# 
  2488  041A                     	;# 
  2489  041B                     	;# 
  2490  041C                     	;# 
  2491  041C                     	;# 
  2492  041D                     	;# 
  2493  041E                     	;# 
  2494  041F                     	;# 
  2495  048C                     	;# 
  2496  048C                     	;# 
  2497  048D                     	;# 
  2498  048E                     	;# 
  2499  048F                     	;# 
  2500  048F                     	;# 
  2501  0490                     	;# 
  2502  0491                     	;# 
  2503  0492                     	;# 
  2504  0492                     	;# 
  2505  0493                     	;# 
  2506  0494                     	;# 
  2507  0495                     	;# 
  2508  0495                     	;# 
  2509  0496                     	;# 
  2510  0497                     	;# 
  2511  0498                     	;# 
  2512  0499                     	;# 
  2513  049A                     	;# 
  2514  049B                     	;# 
  2515  049C                     	;# 
  2516  049D                     	;# 
  2517  050C                     	;# 
  2518  050C                     	;# 
  2519  050D                     	;# 
  2520  050E                     	;# 
  2521  050F                     	;# 
  2522  050F                     	;# 
  2523  0510                     	;# 
  2524  0511                     	;# 
  2525  0512                     	;# 
  2526  0512                     	;# 
  2527  0513                     	;# 
  2528  0514                     	;# 
  2529  0515                     	;# 
  2530  0515                     	;# 
  2531  0516                     	;# 
  2532  0517                     	;# 
  2533  0518                     	;# 
  2534  0519                     	;# 
  2535  051A                     	;# 
  2536  051B                     	;# 
  2537  051C                     	;# 
  2538  051D                     	;# 
  2539  058C                     	;# 
  2540  058C                     	;# 
  2541  058D                     	;# 
  2542  058E                     	;# 
  2543  058F                     	;# 
  2544  058F                     	;# 
  2545  0590                     	;# 
  2546  0591                     	;# 
  2547  0592                     	;# 
  2548  0593                     	;# 
  2549  060C                     	;# 
  2550  060D                     	;# 
  2551  060E                     	;# 
  2552  060F                     	;# 
  2553  0610                     	;# 
  2554  0611                     	;# 
  2555  0612                     	;# 
  2556  0613                     	;# 
  2557  0614                     	;# 
  2558  0616                     	;# 
  2559  0617                     	;# 
  2560  0618                     	;# 
  2561  0619                     	;# 
  2562  061A                     	;# 
  2563  061B                     	;# 
  2564  061C                     	;# 
  2565  061D                     	;# 
  2566  061E                     	;# 
  2567  068C                     	;# 
  2568  068D                     	;# 
  2569  068E                     	;# 
  2570  068F                     	;# 
  2571  0690                     	;# 
  2572  0691                     	;# 
  2573  0692                     	;# 
  2574  0693                     	;# 
  2575  0694                     	;# 
  2576  070C                     	;# 
  2577  070D                     	;# 
  2578  070E                     	;# 
  2579  070F                     	;# 
  2580  0710                     	;# 
  2581  0711                     	;# 
  2582  0712                     	;# 
  2583  0713                     	;# 
  2584  0714                     	;# 
  2585  0716                     	;# 
  2586  0717                     	;# 
  2587  0718                     	;# 
  2588  0719                     	;# 
  2589  071A                     	;# 
  2590  071B                     	;# 
  2591  071C                     	;# 
  2592  071D                     	;# 
  2593  071E                     	;# 
  2594  0796                     	;# 
  2595  0797                     	;# 
  2596  0798                     	;# 
  2597  0799                     	;# 
  2598  079A                     	;# 
  2599  079B                     	;# 
  2600  080C                     	;# 
  2601  080D                     	;# 
  2602  080E                     	;# 
  2603  080F                     	;# 
  2604  0810                     	;# 
  2605  0811                     	;# 
  2606  0812                     	;# 
  2607  0813                     	;# 
  2608  0814                     	;# 
  2609  081A                     	;# 
  2610  081B                     	;# 
  2611  081C                     	;# 
  2612  081D                     	;# 
  2613  081E                     	;# 
  2614  081F                     	;# 
  2615  088C                     	;# 
  2616  088D                     	;# 
  2617  088E                     	;# 
  2618  088F                     	;# 
  2619  0890                     	;# 
  2620  0891                     	;# 
  2621  0892                     	;# 
  2622  0893                     	;# 
  2623  0895                     	;# 
  2624  0896                     	;# 
  2625  0897                     	;# 
  2626  0898                     	;# 
  2627  0899                     	;# 
  2628  089A                     	;# 
  2629  089B                     	;# 
  2630  090C                     	;# 
  2631  090E                     	;# 
  2632  090F                     	;# 
  2633  091F                     	;# 
  2634  098F                     	;# 
  2635  098F                     	;# 
  2636  0990                     	;# 
  2637  0991                     	;# 
  2638  0992                     	;# 
  2639  0993                     	;# 
  2640  0994                     	;# 
  2641  0995                     	;# 
  2642  0996                     	;# 
  2643  0997                     	;# 
  2644  0E0F                     	;# 
  2645  0E10                     	;# 
  2646  0E11                     	;# 
  2647  0E12                     	;# 
  2648  0E13                     	;# 
  2649  0E14                     	;# 
  2650  0E15                     	;# 
  2651  0E16                     	;# 
  2652  0E17                     	;# 
  2653  0E18                     	;# 
  2654  0E19                     	;# 
  2655  0E1A                     	;# 
  2656  0E1B                     	;# 
  2657  0E1C                     	;# 
  2658  0E1D                     	;# 
  2659  0E1E                     	;# 
  2660  0E1F                     	;# 
  2661  0E20                     	;# 
  2662  0E21                     	;# 
  2663  0E22                     	;# 
  2664  0E23                     	;# 
  2665  0E24                     	;# 
  2666  0E25                     	;# 
  2667  0E26                     	;# 
  2668  0E27                     	;# 
  2669  0E28                     	;# 
  2670  0E29                     	;# 
  2671  0E2A                     	;# 
  2672  0E2B                     	;# 
  2673  0E2C                     	;# 
  2674  0E2D                     	;# 
  2675  0E2E                     	;# 
  2676  0E2F                     	;# 
  2677  0E30                     	;# 
  2678  0E31                     	;# 
  2679  0E32                     	;# 
  2680  0E33                     	;# 
  2681  0E34                     	;# 
  2682  0E35                     	;# 
  2683  0E36                     	;# 
  2684  0E37                     	;# 
  2685  0E8F                     	;# 
  2686  0E90                     	;# 
  2687  0E91                     	;# 
  2688  0E92                     	;# 
  2689  0E93                     	;# 
  2690  0E94                     	;# 
  2691  0E95                     	;# 
  2692  0E96                     	;# 
  2693  0E97                     	;# 
  2694  0E9C                     	;# 
  2695  0E9D                     	;# 
  2696  0E9E                     	;# 
  2697  0EA1                     	;# 
  2698  0EA2                     	;# 
  2699  0EA3                     	;# 
  2700  0EA4                     	;# 
  2701  0EA5                     	;# 
  2702  0EA9                     	;# 
  2703  0EAA                     	;# 
  2704  0EAB                     	;# 
  2705  0EAC                     	;# 
  2706  0EB1                     	;# 
  2707  0EB2                     	;# 
  2708  0EB3                     	;# 
  2709  0EB8                     	;# 
  2710  0EB9                     	;# 
  2711  0EBA                     	;# 
  2712  0EBB                     	;# 
  2713  0EBC                     	;# 
  2714  0EBD                     	;# 
  2715  0EBE                     	;# 
  2716  0EC3                     	;# 
  2717  0EC5                     	;# 
  2718  0EC6                     	;# 
  2719  0EC7                     	;# 
  2720  0EC8                     	;# 
  2721  0EC9                     	;# 
  2722  0ECA                     	;# 
  2723  0ECB                     	;# 
  2724  0ECC                     	;# 
  2725  0F10                     	;# 
  2726  0F11                     	;# 
  2727  0F12                     	;# 
  2728  0F13                     	;# 
  2729  0F14                     	;# 
  2730  0F15                     	;# 
  2731  0F16                     	;# 
  2732  0F17                     	;# 
  2733  0F18                     	;# 
  2734  0F19                     	;# 
  2735  0F1A                     	;# 
  2736  0F1B                     	;# 
  2737  0F1C                     	;# 
  2738  0F1D                     	;# 
  2739  0F1E                     	;# 
  2740  0F1F                     	;# 
  2741  0F20                     	;# 
  2742  0F21                     	;# 
  2743  0F22                     	;# 
  2744  0F23                     	;# 
  2745  0F24                     	;# 
  2746  0F25                     	;# 
  2747  0F26                     	;# 
  2748  0F27                     	;# 
  2749  0F28                     	;# 
  2750  0F29                     	;# 
  2751  0F2A                     	;# 
  2752  0F2B                     	;# 
  2753  0F2C                     	;# 
  2754  0F2D                     	;# 
  2755  0F2E                     	;# 
  2756  0F2F                     	;# 
  2757  0F30                     	;# 
  2758  0F31                     	;# 
  2759  0F32                     	;# 
  2760  0F38                     	;# 
  2761  0F39                     	;# 
  2762  0F3A                     	;# 
  2763  0F3B                     	;# 
  2764  0F3C                     	;# 
  2765  0F3D                     	;# 
  2766  0F3E                     	;# 
  2767  0F3F                     	;# 
  2768  0F40                     	;# 
  2769  0F41                     	;# 
  2770  0F43                     	;# 
  2771  0F44                     	;# 
  2772  0F45                     	;# 
  2773  0F46                     	;# 
  2774  0F47                     	;# 
  2775  0F48                     	;# 
  2776  0F49                     	;# 
  2777  0F4A                     	;# 
  2778  0F4B                     	;# 
  2779  0F4C                     	;# 
  2780  0F4E                     	;# 
  2781  0F4F                     	;# 
  2782  0F50                     	;# 
  2783  0F51                     	;# 
  2784  0F52                     	;# 
  2785  0F53                     	;# 
  2786  0F54                     	;# 
  2787  0F55                     	;# 
  2788  0F56                     	;# 
  2789  0F57                     	;# 
  2790  0F59                     	;# 
  2791  0F5A                     	;# 
  2792  0F5B                     	;# 
  2793  0F5C                     	;# 
  2794  0F5D                     	;# 
  2795  0F61                     	;# 
  2796  0F62                     	;# 
  2797  0F64                     	;# 
  2798  0F65                     	;# 
  2799  0F66                     	;# 
  2800  0F67                     	;# 
  2801  0F68                     	;# 
  2802  0F69                     	;# 
  2803  0F6A                     	;# 
  2804  0F6B                     	;# 
  2805  0F6C                     	;# 
  2806  0F6D                     	;# 
  2807  0FE4                     	;# 
  2808  0FE5                     	;# 
  2809  0FE6                     	;# 
  2810  0FE7                     	;# 
  2811  0FE8                     	;# 
  2812  0FE9                     	;# 
  2813  0FEA                     	;# 
  2814  0FEB                     	;# 
  2815  0FED                     	;# 
  2816  0FEE                     	;# 
  2817  0FEF                     	;# 
  2818  0000                     	;# 
  2819  0001                     	;# 
  2820  0002                     	;# 
  2821  0003                     	;# 
  2822  0004                     	;# 
  2823  0005                     	;# 
  2824  0006                     	;# 
  2825  0007                     	;# 
  2826  0008                     	;# 
  2827  0009                     	;# 
  2828  000A                     	;# 
  2829  000B                     	;# 
  2830  000C                     	;# 
  2831  000D                     	;# 
  2832  000E                     	;# 
  2833  000F                     	;# 
  2834  0010                     	;# 
  2835  0011                     	;# 
  2836  0012                     	;# 
  2837  0013                     	;# 
  2838  0014                     	;# 
  2839  0015                     	;# 
  2840  0016                     	;# 
  2841  0017                     	;# 
  2842  0018                     	;# 
  2843  0019                     	;# 
  2844  001A                     	;# 
  2845  001C                     	;# 
  2846  001C                     	;# 
  2847  001D                     	;# 
  2848  001D                     	;# 
  2849  001E                     	;# 
  2850  001F                     	;# 
  2851  008C                     	;# 
  2852  008C                     	;# 
  2853  008D                     	;# 
  2854  008E                     	;# 
  2855  008E                     	;# 
  2856  008F                     	;# 
  2857  0090                     	;# 
  2858  0090                     	;# 
  2859  0091                     	;# 
  2860  0093                     	;# 
  2861  0094                     	;# 
  2862  0095                     	;# 
  2863  0096                     	;# 
  2864  0097                     	;# 
  2865  0098                     	;# 
  2866  0099                     	;# 
  2867  009A                     	;# 
  2868  009B                     	;# 
  2869  009C                     	;# 
  2870  009D                     	;# 
  2871  009E                     	;# 
  2872  010C                     	;# 
  2873  010D                     	;# 
  2874  010E                     	;# 
  2875  010E                     	;# 
  2876  010F                     	;# 
  2877  0110                     	;# 
  2878  0110                     	;# 
  2879  0111                     	;# 
  2880  0112                     	;# 
  2881  0112                     	;# 
  2882  0113                     	;# 
  2883  0114                     	;# 
  2884  0114                     	;# 
  2885  0115                     	;# 
  2886  0116                     	;# 
  2887  0116                     	;# 
  2888  0117                     	;# 
  2889  0119                     	;# 
  2890  0119                     	;# 
  2891  0119                     	;# 
  2892  011A                     	;# 
  2893  011A                     	;# 
  2894  011A                     	;# 
  2895  011B                     	;# 
  2896  011B                     	;# 
  2897  011B                     	;# 
  2898  011B                     	;# 
  2899  011B                     	;# 
  2900  011C                     	;# 
  2901  011C                     	;# 
  2902  011C                     	;# 
  2903  011D                     	;# 
  2904  011D                     	;# 
  2905  011D                     	;# 
  2906  011E                     	;# 
  2907  011E                     	;# 
  2908  011E                     	;# 
  2909  011F                     	;# 
  2910  011F                     	;# 
  2911  011F                     	;# 
  2912  011F                     	;# 
  2913  011F                     	;# 
  2914  018C                     	;# 
  2915  018D                     	;# 
  2916  018E                     	;# 
  2917  018F                     	;# 
  2918  0190                     	;# 
  2919  0191                     	;# 
  2920  0192                     	;# 
  2921  0196                     	;# 
  2922  0197                     	;# 
  2923  0198                     	;# 
  2924  0199                     	;# 
  2925  019A                     	;# 
  2926  019B                     	;# 
  2927  019C                     	;# 
  2928  020C                     	;# 
  2929  020C                     	;# 
  2930  020D                     	;# 
  2931  020E                     	;# 
  2932  020F                     	;# 
  2933  020F                     	;# 
  2934  0210                     	;# 
  2935  0210                     	;# 
  2936  0211                     	;# 
  2937  0211                     	;# 
  2938  0212                     	;# 
  2939  0212                     	;# 
  2940  0213                     	;# 
  2941  0214                     	;# 
  2942  0215                     	;# 
  2943  0215                     	;# 
  2944  0216                     	;# 
  2945  0216                     	;# 
  2946  0217                     	;# 
  2947  0217                     	;# 
  2948  0218                     	;# 
  2949  0218                     	;# 
  2950  0219                     	;# 
  2951  021A                     	;# 
  2952  021B                     	;# 
  2953  021B                     	;# 
  2954  021C                     	;# 
  2955  021C                     	;# 
  2956  021D                     	;# 
  2957  021D                     	;# 
  2958  021E                     	;# 
  2959  021F                     	;# 
  2960  028C                     	;# 
  2961  028C                     	;# 
  2962  028D                     	;# 
  2963  028D                     	;# 
  2964  028E                     	;# 
  2965  028F                     	;# 
  2966  0290                     	;# 
  2967  0290                     	;# 
  2968  0291                     	;# 
  2969  0292                     	;# 
  2970  0292                     	;# 
  2971  0293                     	;# 
  2972  0293                     	;# 
  2973  0294                     	;# 
  2974  0295                     	;# 
  2975  0296                     	;# 
  2976  0296                     	;# 
  2977  0297                     	;# 
  2978  0298                     	;# 
  2979  0298                     	;# 
  2980  0299                     	;# 
  2981  0299                     	;# 
  2982  029A                     	;# 
  2983  029B                     	;# 
  2984  029C                     	;# 
  2985  029C                     	;# 
  2986  029D                     	;# 
  2987  030C                     	;# 
  2988  030C                     	;# 
  2989  030D                     	;# 
  2990  030E                     	;# 
  2991  030F                     	;# 
  2992  0310                     	;# 
  2993  0310                     	;# 
  2994  0311                     	;# 
  2995  0312                     	;# 
  2996  0313                     	;# 
  2997  0314                     	;# 
  2998  0314                     	;# 
  2999  0315                     	;# 
  3000  0316                     	;# 
  3001  0317                     	;# 
  3002  0318                     	;# 
  3003  0318                     	;# 
  3004  0319                     	;# 
  3005  031A                     	;# 
  3006  031B                     	;# 
  3007  031C                     	;# 
  3008  031C                     	;# 
  3009  031D                     	;# 
  3010  031E                     	;# 
  3011  031F                     	;# 
  3012  038C                     	;# 
  3013  038C                     	;# 
  3014  038D                     	;# 
  3015  038E                     	;# 
  3016  0390                     	;# 
  3017  0390                     	;# 
  3018  0391                     	;# 
  3019  0392                     	;# 
  3020  040C                     	;# 
  3021  040D                     	;# 
  3022  040E                     	;# 
  3023  040F                     	;# 
  3024  0410                     	;# 
  3025  0411                     	;# 
  3026  0416                     	;# 
  3027  0416                     	;# 
  3028  0417                     	;# 
  3029  0418                     	;# 
  3030  0418                     	;# 
  3031  0419                     	;# 
  3032  041A                     	;# 
  3033  041A                     	;# 
  3034  041B                     	;# 
  3035  041C                     	;# 
  3036  041C                     	;# 
  3037  041D                     	;# 
  3038  041E                     	;# 
  3039  041F                     	;# 
  3040  048C                     	;# 
  3041  048C                     	;# 
  3042  048D                     	;# 
  3043  048E                     	;# 
  3044  048F                     	;# 
  3045  048F                     	;# 
  3046  0490                     	;# 
  3047  0491                     	;# 
  3048  0492                     	;# 
  3049  0492                     	;# 
  3050  0493                     	;# 
  3051  0494                     	;# 
  3052  0495                     	;# 
  3053  0495                     	;# 
  3054  0496                     	;# 
  3055  0497                     	;# 
  3056  0498                     	;# 
  3057  0499                     	;# 
  3058  049A                     	;# 
  3059  049B                     	;# 
  3060  049C                     	;# 
  3061  049D                     	;# 
  3062  050C                     	;# 
  3063  050C                     	;# 
  3064  050D                     	;# 
  3065  050E                     	;# 
  3066  050F                     	;# 
  3067  050F                     	;# 
  3068  0510                     	;# 
  3069  0511                     	;# 
  3070  0512                     	;# 
  3071  0512                     	;# 
  3072  0513                     	;# 
  3073  0514                     	;# 
  3074  0515                     	;# 
  3075  0515                     	;# 
  3076  0516                     	;# 
  3077  0517                     	;# 
  3078  0518                     	;# 
  3079  0519                     	;# 
  3080  051A                     	;# 
  3081  051B                     	;# 
  3082  051C                     	;# 
  3083  051D                     	;# 
  3084  058C                     	;# 
  3085  058C                     	;# 
  3086  058D                     	;# 
  3087  058E                     	;# 
  3088  058F                     	;# 
  3089  058F                     	;# 
  3090  0590                     	;# 
  3091  0591                     	;# 
  3092  0592                     	;# 
  3093  0593                     	;# 
  3094  060C                     	;# 
  3095  060D                     	;# 
  3096  060E                     	;# 
  3097  060F                     	;# 
  3098  0610                     	;# 
  3099  0611                     	;# 
  3100  0612                     	;# 
  3101  0613                     	;# 
  3102  0614                     	;# 
  3103  0616                     	;# 
  3104  0617                     	;# 
  3105  0618                     	;# 
  3106  0619                     	;# 
  3107  061A                     	;# 
  3108  061B                     	;# 
  3109  061C                     	;# 
  3110  061D                     	;# 
  3111  061E                     	;# 
  3112  068C                     	;# 
  3113  068D                     	;# 
  3114  068E                     	;# 
  3115  068F                     	;# 
  3116  0690                     	;# 
  3117  0691                     	;# 
  3118  0692                     	;# 
  3119  0693                     	;# 
  3120  0694                     	;# 
  3121  070C                     	;# 
  3122  070D                     	;# 
  3123  070E                     	;# 
  3124  070F                     	;# 
  3125  0710                     	;# 
  3126  0711                     	;# 
  3127  0712                     	;# 
  3128  0713                     	;# 
  3129  0714                     	;# 
  3130  0716                     	;# 
  3131  0717                     	;# 
  3132  0718                     	;# 
  3133  0719                     	;# 
  3134  071A                     	;# 
  3135  071B                     	;# 
  3136  071C                     	;# 
  3137  071D                     	;# 
  3138  071E                     	;# 
  3139  0796                     	;# 
  3140  0797                     	;# 
  3141  0798                     	;# 
  3142  0799                     	;# 
  3143  079A                     	;# 
  3144  079B                     	;# 
  3145  080C                     	;# 
  3146  080D                     	;# 
  3147  080E                     	;# 
  3148  080F                     	;# 
  3149  0810                     	;# 
  3150  0811                     	;# 
  3151  0812                     	;# 
  3152  0813                     	;# 
  3153  0814                     	;# 
  3154  081A                     	;# 
  3155  081B                     	;# 
  3156  081C                     	;# 
  3157  081D                     	;# 
  3158  081E                     	;# 
  3159  081F                     	;# 
  3160  088C                     	;# 
  3161  088D                     	;# 
  3162  088E                     	;# 
  3163  088F                     	;# 
  3164  0890                     	;# 
  3165  0891                     	;# 
  3166  0892                     	;# 
  3167  0893                     	;# 
  3168  0895                     	;# 
  3169  0896                     	;# 
  3170  0897                     	;# 
  3171  0898                     	;# 
  3172  0899                     	;# 
  3173  089A                     	;# 
  3174  089B                     	;# 
  3175  090C                     	;# 
  3176  090E                     	;# 
  3177  090F                     	;# 
  3178  091F                     	;# 
  3179  098F                     	;# 
  3180  098F                     	;# 
  3181  0990                     	;# 
  3182  0991                     	;# 
  3183  0992                     	;# 
  3184  0993                     	;# 
  3185  0994                     	;# 
  3186  0995                     	;# 
  3187  0996                     	;# 
  3188  0997                     	;# 
  3189  0E0F                     	;# 
  3190  0E10                     	;# 
  3191  0E11                     	;# 
  3192  0E12                     	;# 
  3193  0E13                     	;# 
  3194  0E14                     	;# 
  3195  0E15                     	;# 
  3196  0E16                     	;# 
  3197  0E17                     	;# 
  3198  0E18                     	;# 
  3199  0E19                     	;# 
  3200  0E1A                     	;# 
  3201  0E1B                     	;# 
  3202  0E1C                     	;# 
  3203  0E1D                     	;# 
  3204  0E1E                     	;# 
  3205  0E1F                     	;# 
  3206  0E20                     	;# 
  3207  0E21                     	;# 
  3208  0E22                     	;# 
  3209  0E23                     	;# 
  3210  0E24                     	;# 
  3211  0E25                     	;# 
  3212  0E26                     	;# 
  3213  0E27                     	;# 
  3214  0E28                     	;# 
  3215  0E29                     	;# 
  3216  0E2A                     	;# 
  3217  0E2B                     	;# 
  3218  0E2C                     	;# 
  3219  0E2D                     	;# 
  3220  0E2E                     	;# 
  3221  0E2F                     	;# 
  3222  0E30                     	;# 
  3223  0E31                     	;# 
  3224  0E32                     	;# 
  3225  0E33                     	;# 
  3226  0E34                     	;# 
  3227  0E35                     	;# 
  3228  0E36                     	;# 
  3229  0E37                     	;# 
  3230  0E8F                     	;# 
  3231  0E90                     	;# 
  3232  0E91                     	;# 
  3233  0E92                     	;# 
  3234  0E93                     	;# 
  3235  0E94                     	;# 
  3236  0E95                     	;# 
  3237  0E96                     	;# 
  3238  0E97                     	;# 
  3239  0E9C                     	;# 
  3240  0E9D                     	;# 
  3241  0E9E                     	;# 
  3242  0EA1                     	;# 
  3243  0EA2                     	;# 
  3244  0EA3                     	;# 
  3245  0EA4                     	;# 
  3246  0EA5                     	;# 
  3247  0EA9                     	;# 
  3248  0EAA                     	;# 
  3249  0EAB                     	;# 
  3250  0EAC                     	;# 
  3251  0EB1                     	;# 
  3252  0EB2                     	;# 
  3253  0EB3                     	;# 
  3254  0EB8                     	;# 
  3255  0EB9                     	;# 
  3256  0EBA                     	;# 
  3257  0EBB                     	;# 
  3258  0EBC                     	;# 
  3259  0EBD                     	;# 
  3260  0EBE                     	;# 
  3261  0EC3                     	;# 
  3262  0EC5                     	;# 
  3263  0EC6                     	;# 
  3264  0EC7                     	;# 
  3265  0EC8                     	;# 
  3266  0EC9                     	;# 
  3267  0ECA                     	;# 
  3268  0ECB                     	;# 
  3269  0ECC                     	;# 
  3270  0F10                     	;# 
  3271  0F11                     	;# 
  3272  0F12                     	;# 
  3273  0F13                     	;# 
  3274  0F14                     	;# 
  3275  0F15                     	;# 
  3276  0F16                     	;# 
  3277  0F17                     	;# 
  3278  0F18                     	;# 
  3279  0F19                     	;# 
  3280  0F1A                     	;# 
  3281  0F1B                     	;# 
  3282  0F1C                     	;# 
  3283  0F1D                     	;# 
  3284  0F1E                     	;# 
  3285  0F1F                     	;# 
  3286  0F20                     	;# 
  3287  0F21                     	;# 
  3288  0F22                     	;# 
  3289  0F23                     	;# 
  3290  0F24                     	;# 
  3291  0F25                     	;# 
  3292  0F26                     	;# 
  3293  0F27                     	;# 
  3294  0F28                     	;# 
  3295  0F29                     	;# 
  3296  0F2A                     	;# 
  3297  0F2B                     	;# 
  3298  0F2C                     	;# 
  3299  0F2D                     	;# 
  3300  0F2E                     	;# 
  3301  0F2F                     	;# 
  3302  0F30                     	;# 
  3303  0F31                     	;# 
  3304  0F32                     	;# 
  3305  0F38                     	;# 
  3306  0F39                     	;# 
  3307  0F3A                     	;# 
  3308  0F3B                     	;# 
  3309  0F3C                     	;# 
  3310  0F3D                     	;# 
  3311  0F3E                     	;# 
  3312  0F3F                     	;# 
  3313  0F40                     	;# 
  3314  0F41                     	;# 
  3315  0F43                     	;# 
  3316  0F44                     	;# 
  3317  0F45                     	;# 
  3318  0F46                     	;# 
  3319  0F47                     	;# 
  3320  0F48                     	;# 
  3321  0F49                     	;# 
  3322  0F4A                     	;# 
  3323  0F4B                     	;# 
  3324  0F4C                     	;# 
  3325  0F4E                     	;# 
  3326  0F4F                     	;# 
  3327  0F50                     	;# 
  3328  0F51                     	;# 
  3329  0F52                     	;# 
  3330  0F53                     	;# 
  3331  0F54                     	;# 
  3332  0F55                     	;# 
  3333  0F56                     	;# 
  3334  0F57                     	;# 
  3335  0F59                     	;# 
  3336  0F5A                     	;# 
  3337  0F5B                     	;# 
  3338  0F5C                     	;# 
  3339  0F5D                     	;# 
  3340  0F61                     	;# 
  3341  0F62                     	;# 
  3342  0F64                     	;# 
  3343  0F65                     	;# 
  3344  0F66                     	;# 
  3345  0F67                     	;# 
  3346  0F68                     	;# 
  3347  0F69                     	;# 
  3348  0F6A                     	;# 
  3349  0F6B                     	;# 
  3350  0F6C                     	;# 
  3351  0F6D                     	;# 
  3352  0FE4                     	;# 
  3353  0FE5                     	;# 
  3354  0FE6                     	;# 
  3355  0FE7                     	;# 
  3356  0FE8                     	;# 
  3357  0FE9                     	;# 
  3358  0FEA                     	;# 
  3359  0FEB                     	;# 
  3360  0FED                     	;# 
  3361  0FEE                     	;# 
  3362  0FEF                     	;_lutRY
  3363                           
  3364                           	psect	idataBANK0
  3365  0E8F                     __pidataBANK0:	
  3366                           
  3367                           ;initializer for _responseLength
  3368  0E8F  3409               	retlw	9
  3369                           
  3370                           ;initializer for _debounceLoops
  3371  0E90  3403               	retlw	3
  3372                           
  3373                           ;initializer for _lyData
  3374  0E91  34F7               	retlw	247
  3375                           
  3376                           ;initializer for _lxData
  3377  0E92  34F7               	retlw	247
  3378                           
  3379                           ;initializer for _ryData
  3380  0E93  34F7               	retlw	247
  3381                           
  3382                           ;initializer for _rxData
  3383  0E94  34F7               	retlw	247
  3384                           
  3385                           ;initializer for _digitalStateSecond
  3386  0E95  34FF               	retlw	255
  3387                           
  3388                           ;initializer for _digitalStateFirst
  3389  0E96  34FF               	retlw	255
  3390                           
  3391                           ;initializer for _response
  3392  0E97  34CE               	retlw	206
  3393  0E98  345A               	retlw	90
  3394  0E99  3400               	retlw	0
  3395  0E9A  3400               	retlw	0
  3396  0E9B  3400               	retlw	0
  3397  0E9C  3400               	retlw	0
  3398  0E9D  3400               	retlw	0
  3399  0E9E  3400               	retlw	0
  3400  0E9F  3400               	retlw	0
  3401  0EA0  3400               	retlw	0
  3402  0EA1  3400               	retlw	0
  3403  0EA2  3400               	retlw	0
  3404  0EA3  3400               	retlw	0
  3405  0EA4  3400               	retlw	0
  3406  0EA5  3400               	retlw	0
  3407  0EA6  3400               	retlw	0
  3408  0EA7  3400               	retlw	0
  3409  0EA8  3400               	retlw	0
  3410  0EA9  3400               	retlw	0
  3411  0EAA  3400               	retlw	0
  3412  0011                     _TRISAbits	set	17
  3413  0013                     _TRISCbits	set	19
  3414  0015                     _TRISE	set	21
  3415  0014                     _TRISD	set	20
  3416  0013                     _TRISC	set	19
  3417  0012                     _TRISB	set	18
  3418  0011                     _TRISA	set	17
  3419  000B                     _INTCONbits	set	11
  3420  006B                     _RB3	set	107
  3421  006A                     _RB2	set	106
  3422  006D                     _RB5	set	109
  3423  006C                     _RB4	set	108
  3424  0061                     _RA1	set	97
  3425  0062                     _RA2	set	98
  3426  0063                     _RA3	set	99
  3427  0060                     _RA0	set	96
  3428  006F                     _RB7	set	111
  3429  006E                     _RB6	set	110
  3430  0072                     _RC2	set	114
  3431  0078                     _RD0	set	120
  3432  0069                     _RB1	set	105
  3433  0068                     _RB0	set	104
  3434  0066                     _RA6	set	102
  3435  0067                     _RA7	set	103
  3436  0065                     _RA5	set	101
  3437  0064                     _RA4	set	100
  3438  007C                     _RD4	set	124
  3439  0098                     _ADCLK	set	152
  3440  009A                     _ADREF	set	154
  3441  0095                     _ADCON2	set	149
  3442  0094                     _ADCON1	set	148
  3443  0093                     _ADCON0	set	147
  3444  008C                     _ADRESL	set	140
  3445  008D                     _ADRESH	set	141
  3446  0093                     _ADCON0bits	set	147
  3447  009D                     _ADACQ	set	157
  3448  009C                     _ADPRE	set	156
  3449  009E                     _ADPCH	set	158
  3450  018F                     _SSP1STATbits	set	399
  3451  0190                     _SSP1CON1	set	400
  3452  018F                     _SSP1STAT	set	399
  3453  018C                     _SSP1BUF	set	396
  3454  38C8                     _SSP1IE	set	14536
  3455  3878                     _SSP1IF	set	14456
  3456  081F                     _NVMCON2	set	2079
  3457  081C                     _NVMDATL	set	2076
  3458  081A                     _NVMADRL	set	2074
  3459  081B                     _NVMADRH	set	2075
  3460  081E                     _NVMCON1bits	set	2078
  3461  0E8F                     _PPSLOCK	set	3727
  3462  0F25                     _RC5PPS	set	3877
  3463  0F65                     _WPUE	set	3941
  3464  0F5A                     _WPUD	set	3930
  3465  0F4F                     _WPUC	set	3919
  3466  0F44                     _WPUB	set	3908
  3467  0F39                     _WPUA	set	3897
  3468  0F64                     _ANSELE	set	3940
  3469  0F59                     _ANSELD	set	3929
  3470  0F4E                     _ANSELC	set	3918
  3471  0F43                     _ANSELB	set	3907
  3472  0F38                     _ANSELA	set	3896
  3473                           
  3474                           ; #config settings
  3475  0000                     
  3476                           	psect	cinit
  3477  01CC                     start_initialization:	
  3478  01CC                     __initialization:		;BIGRAM
  3479                           
  3480                           ; Initialize objects allocated to BANK0
  3481  01CC  308F               	movlw	low __pidataBANK0
  3482  01CD  0084               	movwf	4
  3483  01CE  308E               	movlw	(high __pidataBANK0)| (0+128)
  3484  01CF  0085               	movwf	5
  3485  01D0  304E               	movlw	low __pdataBANK0
  3486  01D1  0086               	movwf	6
  3487  01D2  3000               	movlw	high __pdataBANK0
  3488  01D3  0087               	movwf	7
  3489  01D4  3000               	movlw	0
  3490  01D5  00FF               	movwf	btemp+1
  3491  01D6  301C               	movlw	28
  3492  01D7  318E  265C  3181   	fcall	init_ram
  3493                           
  3494                           ; Clear objects allocated to BIGRAM
  3495  01DA  30F0               	movlw	low (0+9200)
  3496  01DB  0084               	movwf	4
  3497  01DC  3023               	movlw	high (0+9200)
  3498  01DD  0085               	movwf	5
  3499  01DE  3000               	movlw	0
  3500  01DF  00FE               	movwf	btemp
  3501  01E0  3004               	movlw	4
  3502  01E1  00FF               	movwf	btemp+1
  3503  01E2  318E  2650  3181   	fcall	clear_ram0
  3504                           
  3505                           ; Clear objects allocated to COMMON
  3506  01E5  01F6               	clrf	__pbssCOMMON& (0+127)
  3507  01E6  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  3508  01E7  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  3509  01E8  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  3510                           
  3511                           ; Clear objects allocated to BANK0
  3512  01E9  01EA               	clrf	__pbssBANK0& (0+127)
  3513  01EA  01EB               	clrf	(__pbssBANK0+1)& (0+127)
  3514  01EB  01EC               	clrf	(__pbssBANK0+2)& (0+127)
  3515  01EC  01ED               	clrf	(__pbssBANK0+3)& (0+127)
  3516                           
  3517                           ; Clear objects allocated to BANK1
  3518  01ED  30A0               	movlw	low __pbssBANK1
  3519  01EE  0084               	movwf	4
  3520  01EF  3000               	movlw	high __pbssBANK1
  3521  01F0  0085               	movwf	5
  3522  01F1  3040               	movlw	64
  3523  01F2  00FE               	movwf	btemp
  3524  01F3  3000               	movlw	0
  3525  01F4  00FF               	movwf	btemp+1
  3526  01F5  318E  2650  3181   	fcall	clear_ram0
  3527  01F8                     end_of_initialization:	
  3528                           ;End of C runtime variable initialization code
  3529                           
  3530  01F8                     __end_of__initialization:	
  3531  01F8  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3532  01F9  0020               	movlb	0
  3533  01FA  318F  2FAC         	ljmp	_main	;jump to C main() function
  3534                           
  3535                           	psect	bssCOMMON
  3536  0076                     __pbssCOMMON:	
  3537  0076                     _escapeMode:	
  3538  0076                     	ds	1
  3539  0077                     _analogMode:	
  3540  0077                     	ds	1
  3541  0078                     _cmdCounter:	
  3542  0078                     	ds	1
  3543  0079                     _index:	
  3544  0079                     	ds	1
  3545                           
  3546                           	psect	bssBANK0
  3547  006A                     __pbssBANK0:	
  3548  006A                     _analogMode_pressure:	
  3549  006A                     	ds	1
  3550  006B                     _INIT_PRESSURE_SENSOR_byte4:	
  3551  006B                     	ds	1
  3552  006C                     _INIT_PRESSURE_SENSOR_byte3:	
  3553  006C                     	ds	1
  3554  006D                     _previousCmd:	
  3555  006D                     	ds	1
  3556                           
  3557                           	psect	dataBANK0
  3558  004E                     __pdataBANK0:	
  3559  004E                     _responseLength:	
  3560  004E                     	ds	1
  3561  004F                     _debounceLoops:	
  3562  004F                     	ds	1
  3563  0050                     _lyData:	
  3564  0050                     	ds	1
  3565  0051                     _lxData:	
  3566  0051                     	ds	1
  3567  0052                     _ryData:	
  3568  0052                     	ds	1
  3569  0053                     _rxData:	
  3570  0053                     	ds	1
  3571  0054                     _digitalStateSecond:	
  3572  0054                     	ds	1
  3573  0055                     _digitalStateFirst:	
  3574  0055                     	ds	1
  3575  0056                     _response:	
  3576  0056                     	ds	20
  3577                           
  3578                           	psect	bssBANK1
  3579  00A0                     __pbssBANK1:	
  3580  00A0                     _IndexDigitalByte2:	
  3581  00A0                     	ds	8
  3582  00A8                     _IndexDigitalByte1:	
  3583  00A8                     	ds	8
  3584  00B0                     _PreviousDigitalByte2:	
  3585  00B0                     	ds	8
  3586  00B8                     _PreviousDigitalByte1:	
  3587  00B8                     	ds	8
  3588  00C0                     _DigitalControllerByte2:	
  3589  00C0                     	ds	8
  3590  00C8                     _DigitalControllerByte1:	
  3591  00C8                     	ds	8
  3592  00D0                     _analogStateSecond:	
  3593  00D0                     	ds	8
  3594  00D8                     _analogStateFirst:	
  3595  00D8                     	ds	8
  3596                           
  3597                           	psect	inittext
  3598  0E5C                     init_ram:	
  3599  0E5C  00FE               	movwf	btemp
  3600  0E5D                     initloop:	
  3601  0E5D  0012               	moviw fsr0++
  3602  0E5E  001E               	movwi fsr1++
  3603  0E5F  3001               	movlw	1
  3604  0E60  02FE               	subwf	btemp,f
  3605  0E61  3000               	movlw	0
  3606  0E62  3BFF               	subwfb	btemp+1,f
  3607  0E63  087F               	movf	btemp+1,w
  3608  0E64  047E               	iorwf	btemp,w
  3609  0E65  1D03               	skipz
  3610  0E66  2E5D               	goto	initloop
  3611  0E67  3400               	retlw	0
  3612                           
  3613                           	psect	clrtext
  3614  0E50                     clear_ram0:	
  3615                           ;	Called with FSR0 containing the base address, and
  3616                           ;	btemp/btemp+1 has the size to clear
  3617                           
  3618  0E50  0064               	clrwdt	;clear the watchdog before getting into this loop
  3619  0E51                     clrloop0:	
  3620  0E51  0180               	clrf	0	;clear RAM location pointed to by FSR
  3621  0E52  3101               	addfsr 0,1
  3622  0E53  3001               	movlw	1
  3623  0E54  02FE               	subwf	btemp,f
  3624  0E55  3000               	movlw	0
  3625  0E56  3BFF               	subwfb	btemp+1,f
  3626  0E57  087F               	movf	btemp+1,w
  3627  0E58  047E               	iorwf	btemp,w
  3628  0E59  1D03               	skipz
  3629  0E5A  2E51               	goto	clrloop0	;have we reached the end yet?
  3630  0E5B  3400               	retlw	0	;all done for this memory range, return
  3631                           
  3632                           	psect	cstackCOMMON
  3633  0070                     __pcstackCOMMON:	
  3634  0070                     ?_spiRead:	
  3635  0070                     ??_spiRead:	
  3636                           ; 1 bytes @ 0x0
  3637                           
  3638  0070                     ?_spiWrite:	
  3639                           ; 1 bytes @ 0x0
  3640                           
  3641  0070                     ??_spiWrite:	
  3642                           ; 1 bytes @ 0x0
  3643                           
  3644  0070                     ?_picInit:	
  3645                           ; 1 bytes @ 0x0
  3646                           
  3647  0070                     ?_adcInit:	
  3648                           ; 1 bytes @ 0x0
  3649                           
  3650  0070                     ?_lutInit:	
  3651                           ; 1 bytes @ 0x0
  3652                           
  3653  0070                     ?_configureController:	
  3654                           ; 1 bytes @ 0x0
  3655                           
  3656  0070                     ?_readController:	
  3657                           ; 1 bytes @ 0x0
  3658                           
  3659  0070                     ?_readControllerAnalog:	
  3660                           ; 1 bytes @ 0x0
  3661                           
  3662  0070                     ?_eepromRead:	
  3663                           ; 1 bytes @ 0x0
  3664                           
  3665  0070                     ?_nvmUnlock:	
  3666                           ; 1 bytes @ 0x0
  3667                           
  3668  0070                     ?_pollController:	
  3669                           ; 1 bytes @ 0x0
  3670                           
  3671  0070                     ??_pollController:	
  3672                           ; 1 bytes @ 0x0
  3673                           
  3674  0070                     ?_PS2Command:	
  3675                           ; 1 bytes @ 0x0
  3676                           
  3677  0070                     ?_main:	
  3678                           ; 1 bytes @ 0x0
  3679                           
  3680  0070                     ?_reversebyte:	
  3681                           ; 1 bytes @ 0x0
  3682                           
  3683  0070                     ?_ppsUnlock:	
  3684                           ; 1 bytes @ 0x0
  3685                           
  3686  0070                     ?_ppsLock:	
  3687                           ; 1 bytes @ 0x0
  3688                           
  3689  0070                     ?_spiReceiveWait:	
  3690                           ; 1 bytes @ 0x0
  3691                           
  3692  0070                     ??_spiReceiveWait:	
  3693                           ; 1 bytes @ 0x0
  3694                           
  3695  0070                     spiWrite@dat:	
  3696                           ; 1 bytes @ 0x0
  3697                           
  3698                           
  3699                           ; 1 bytes @ 0x0
  3700  0070                     	ds	1
  3701  0071                     pollController@response:	
  3702                           
  3703                           ; 1 bytes @ 0x1
  3704  0071                     	ds	1
  3705  0072                     ??_PS2Command:	
  3706                           
  3707                           ; 1 bytes @ 0x2
  3708  0072                     	ds	1
  3709  0073                     PS2Command@cmd:	
  3710                           
  3711                           ; 1 bytes @ 0x3
  3712  0073                     	ds	1
  3713  0074                     ??_adcInit:	
  3714  0074                     ??_readController:	
  3715                           ; 1 bytes @ 0x4
  3716                           
  3717  0074                     ??_eepromRead:	
  3718                           ; 1 bytes @ 0x4
  3719                           
  3720  0074                     ?_eepromWrite:	
  3721                           ; 1 bytes @ 0x4
  3722                           
  3723  0074                     ??_spiInit:	
  3724                           ; 1 bytes @ 0x4
  3725                           
  3726  0074                     ??_nvmUnlock:	
  3727                           ; 1 bytes @ 0x4
  3728                           
  3729  0074                     ??_ppsUnlock:	
  3730                           ; 1 bytes @ 0x4
  3731                           
  3732  0074                     ??_ppsLock:	
  3733                           ; 1 bytes @ 0x4
  3734                           
  3735  0074                     ??___wmul:	
  3736                           ; 1 bytes @ 0x4
  3737                           
  3738  0074                     ?_readADC:	
  3739                           ; 1 bytes @ 0x4
  3740                           
  3741  0074                     reversebyte@byte:	
  3742                           ; 2 bytes @ 0x4
  3743                           
  3744  0074                     spiInit@sType:	
  3745                           ; 1 bytes @ 0x4
  3746                           
  3747  0074                     eepromWrite@data:	
  3748                           ; 1 bytes @ 0x4
  3749                           
  3750  0074                     readADC@channel:	
  3751                           ; 1 bytes @ 0x4
  3752                           
  3753  0074                     ___wmul@product:	
  3754                           ; 2 bytes @ 0x4
  3755                           
  3756                           
  3757                           ; 2 bytes @ 0x4
  3758  0074                     	ds	1
  3759  0075                     ??_eepromWrite:	
  3760                           
  3761                           ; 1 bytes @ 0x5
  3762  0075                     	ds	1
  3763  0076                     ??_Map:	
  3764                           
  3765                           	psect	cstackBANK0
  3766  0020                     __pcstackBANK0:	
  3767                           ; 1 bytes @ 0x6
  3768                           
  3769  0020                     ?_spiInit:	
  3770  0020                     ??_readADC:	
  3771                           ; 1 bytes @ 0x0
  3772                           
  3773  0020                     ??_reversebyte:	
  3774                           ; 1 bytes @ 0x0
  3775                           
  3776  0020                     ?___wmul:	
  3777                           ; 1 bytes @ 0x0
  3778                           
  3779  0020                     readController@analogMode:	
  3780                           ; 2 bytes @ 0x0
  3781                           
  3782  0020                     spiInit@sDataSample:	
  3783                           ; 1 bytes @ 0x0
  3784                           
  3785  0020                     eepromWrite@address:	
  3786                           ; 1 bytes @ 0x0
  3787                           
  3788  0020                     eepromRead@address:	
  3789                           ; 1 bytes @ 0x0
  3790                           
  3791  0020                     ___wmul@multiplier:	
  3792                           ; 1 bytes @ 0x0
  3793                           
  3794                           
  3795                           ; 2 bytes @ 0x0
  3796  0020                     	ds	1
  3797  0021                     spiInit@sClockIdle:	
  3798  0021                     eepromWrite@interruptStatus:	
  3799                           ; 1 bytes @ 0x1
  3800                           
  3801  0021                     eepromRead@data:	
  3802                           ; 1 bytes @ 0x1
  3803                           
  3804                           
  3805                           ; 1 bytes @ 0x1
  3806  0021                     	ds	1
  3807  0022                     spiInit@sTransmitEdge:	
  3808  0022                     ___wmul@multiplicand:	
  3809                           ; 1 bytes @ 0x2
  3810                           
  3811                           
  3812                           ; 2 bytes @ 0x2
  3813  0022                     	ds	1
  3814  0023                     ??_picInit:	
  3815                           
  3816                           ; 1 bytes @ 0x3
  3817  0023                     	ds	1
  3818  0024                     ?___awdiv:	
  3819  0024                     ___awdiv@divisor:	
  3820                           ; 2 bytes @ 0x4
  3821                           
  3822                           
  3823                           ; 2 bytes @ 0x4
  3824  0024                     	ds	2
  3825  0026                     ___awdiv@dividend:	
  3826                           
  3827                           ; 2 bytes @ 0x6
  3828  0026                     	ds	1
  3829  0027                     ??_configureController:	
  3830  0027                     ??_readControllerAnalog:	
  3831                           ; 1 bytes @ 0x7
  3832                           
  3833                           
  3834                           ; 1 bytes @ 0x7
  3835  0027                     	ds	1
  3836  0028                     ??___awdiv:	
  3837  0028                     configureController@lxMin:	
  3838                           ; 1 bytes @ 0x8
  3839                           
  3840                           
  3841                           ; 1 bytes @ 0x8
  3842  0028                     	ds	1
  3843  0029                     configureController@lxMax:	
  3844  0029                     ___awdiv@counter:	
  3845                           ; 1 bytes @ 0x9
  3846                           
  3847                           
  3848                           ; 1 bytes @ 0x9
  3849  0029                     	ds	1
  3850  002A                     configureController@lyMin:	
  3851  002A                     ___awdiv@sign:	
  3852                           ; 1 bytes @ 0xA
  3853                           
  3854                           
  3855                           ; 1 bytes @ 0xA
  3856  002A                     	ds	1
  3857  002B                     configureController@lyMax:	
  3858  002B                     ___awdiv@quotient:	
  3859                           ; 1 bytes @ 0xB
  3860                           
  3861                           
  3862                           ; 2 bytes @ 0xB
  3863  002B                     	ds	1
  3864  002C                     configureController@rxMin:	
  3865                           
  3866                           ; 1 bytes @ 0xC
  3867  002C                     	ds	1
  3868  002D                     ?_Map:	
  3869  002D                     configureController@rxMax:	
  3870                           ; 1 bytes @ 0xD
  3871                           
  3872  002D                     Map@x:	
  3873                           ; 1 bytes @ 0xD
  3874                           
  3875                           
  3876                           ; 2 bytes @ 0xD
  3877  002D                     	ds	1
  3878  002E                     configureController@ryMin:	
  3879                           
  3880                           ; 1 bytes @ 0xE
  3881  002E                     	ds	1
  3882  002F                     configureController@ryMax:	
  3883  002F                     Map@inMin:	
  3884                           ; 1 bytes @ 0xF
  3885                           
  3886                           
  3887                           ; 2 bytes @ 0xF
  3888  002F                     	ds	1
  3889  0030                     configureController@lx:	
  3890                           
  3891                           ; 1 bytes @ 0x10
  3892  0030                     	ds	1
  3893  0031                     configureController@ly:	
  3894  0031                     Map@inMax:	
  3895                           ; 1 bytes @ 0x11
  3896                           
  3897                           
  3898                           ; 2 bytes @ 0x11
  3899  0031                     	ds	1
  3900  0032                     configureController@rx:	
  3901                           
  3902                           ; 1 bytes @ 0x12
  3903  0032                     	ds	1
  3904  0033                     configureController@ry:	
  3905  0033                     Map@outMin:	
  3906                           ; 1 bytes @ 0x13
  3907                           
  3908                           
  3909                           ; 2 bytes @ 0x13
  3910  0033                     	ds	2
  3911  0035                     Map@outMax:	
  3912                           
  3913                           ; 2 bytes @ 0x15
  3914  0035                     	ds	2
  3915  0037                     ??_lutInit:	
  3916                           
  3917                           ; 1 bytes @ 0x17
  3918  0037                     	ds	9
  3919  0040                     lutInit@lxMin:	
  3920                           
  3921                           ; 1 bytes @ 0x20
  3922  0040                     	ds	1
  3923  0041                     lutInit@lxMax:	
  3924                           
  3925                           ; 1 bytes @ 0x21
  3926  0041                     	ds	1
  3927  0042                     lutInit@lyMin:	
  3928                           
  3929                           ; 1 bytes @ 0x22
  3930  0042                     	ds	1
  3931  0043                     lutInit@lyMax:	
  3932                           
  3933                           ; 1 bytes @ 0x23
  3934  0043                     	ds	1
  3935  0044                     lutInit@rxMin:	
  3936                           
  3937                           ; 1 bytes @ 0x24
  3938  0044                     	ds	1
  3939  0045                     lutInit@rxMax:	
  3940                           
  3941                           ; 1 bytes @ 0x25
  3942  0045                     	ds	1
  3943  0046                     lutInit@ryMin:	
  3944                           
  3945                           ; 1 bytes @ 0x26
  3946  0046                     	ds	1
  3947  0047                     lutInit@ryMax:	
  3948                           
  3949                           ; 1 bytes @ 0x27
  3950  0047                     	ds	1
  3951  0048                     lutInit@position:	
  3952                           
  3953                           ; 2 bytes @ 0x28
  3954  0048                     	ds	2
  3955  004A                     ??_main:	
  3956                           
  3957                           ; 1 bytes @ 0x2A
  3958  004A                     	ds	1
  3959  004B                     main@slaveSelectStatePrev:	
  3960                           
  3961                           ; 1 bytes @ 0x2B
  3962  004B                     	ds	1
  3963  004C                     main@count:	
  3964                           
  3965                           ; 1 bytes @ 0x2C
  3966  004C                     	ds	1
  3967  004D                     main@slaveSelect:	
  3968                           
  3969                           ; 1 bytes @ 0x2D
  3970  004D                     	ds	1
  3971                           
  3972                           	psect	maintext
  3973  0FAC                     __pmaintext:	
  3974 ;;
  3975 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3976 ;;
  3977 ;; *************** function _main *****************
  3978 ;; Defined at:
  3979 ;;		line 418 in file "main.c"
  3980 ;; Parameters:    Size  Location     Type
  3981 ;;		None
  3982 ;; Auto vars:     Size  Location     Type
  3983 ;;  slaveSelect     1   45[BANK0 ] unsigned char 
  3984 ;;  count           1   44[BANK0 ] unsigned char 
  3985 ;;  slaveSelectS    1   43[BANK0 ] unsigned char 
  3986 ;; Return value:  Size  Location     Type
  3987 ;;                  1    wreg      void 
  3988 ;; Registers used:
  3989 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3990 ;; Tracked objects:
  3991 ;;		On entry : B1F/0
  3992 ;;		On exit  : 0/0
  3993 ;;		Unchanged: 0/0
  3994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3996 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3997 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3998 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3999 ;;Total ram usage:        4 bytes
  4000 ;; Hardware stack levels required when called:    6
  4001 ;; This function calls:
  4002 ;;		_adcInit
  4003 ;;		_configureController
  4004 ;;		_lutInit
  4005 ;;		_picInit
  4006 ;;		_readController
  4007 ;;		_readControllerAnalog
  4008 ;; This function is called by:
  4009 ;;		Startup code after reset
  4010 ;; This function uses a non-reentrant model
  4011 ;;
  4012                           
  4013                           
  4014                           ;psect for function _main
  4015  0FAC                     _main:	
  4016  0FAC                     l2542:	
  4017                           ;incstack = 0
  4018                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4019                           
  4020                           
  4021                           ;main.c: 420: picInit();
  4022  0FAC  318F  2771  318F   	fcall	_picInit
  4023                           
  4024                           ;main.c: 421: adcInit();
  4025  0FAF  318E  2646  318F   	fcall	_adcInit
  4026  0FB2                     l2544:	
  4027                           
  4028                           ;main.c: 422: lutInit();
  4029  0FB2  3181  21FC  318F   	fcall	_lutInit
  4030  0FB5                     l2546:	
  4031                           
  4032                           ;main.c: 424: response[1] = 0x5A;
  4033  0FB5  305A               	movlw	90
  4034  0FB6  0020               	movlb	0	; select bank0
  4035  0FB7  00CA               	movwf	??_main
  4036  0FB8  084A               	movf	??_main,w
  4037  0FB9  00D7               	movwf	_response+1
  4038  0FBA                     l2548:	
  4039                           
  4040                           ;main.c: 426: char slaveSelect;;main.c: 427: char slaveSelectStatePrev = 0;
  4041  0FBA  01CB               	clrf	main@slaveSelectStatePrev
  4042  0FBB                     l2550:	
  4043                           
  4044                           ;main.c: 428: char count = 0;
  4045  0FBB  01CC               	clrf	main@count
  4046  0FBC                     l2552:	
  4047                           
  4048                           ;main.c: 429: RA4 = 1;
  4049  0FBC  160C               	bsf	12,4	;volatile
  4050  0FBD                     l2554:	
  4051                           
  4052                           ;main.c: 436: if(digitalStateFirst == 0x7F && digitalStateSecond == 0x5F){
  4053  0FBD  307F               	movlw	127
  4054  0FBE  0020               	movlb	0	; select bank0
  4055  0FBF  0655               	xorwf	_digitalStateFirst,w
  4056  0FC0  1D03               	btfss	3,2
  4057  0FC1  2FC3               	goto	u2111
  4058  0FC2  2FC4               	goto	u2110
  4059  0FC3                     u2111:	
  4060  0FC3  2FCD               	goto	l2560
  4061  0FC4                     u2110:	
  4062  0FC4                     l2556:	
  4063  0FC4  305F               	movlw	95
  4064  0FC5  0654               	xorwf	_digitalStateSecond,w
  4065  0FC6  1D03               	btfss	3,2
  4066  0FC7  2FC9               	goto	u2121
  4067  0FC8  2FCA               	goto	u2120
  4068  0FC9                     u2121:	
  4069  0FC9  2FCD               	goto	l2560
  4070  0FCA                     u2120:	
  4071  0FCA                     l2558:	
  4072                           
  4073                           ;main.c: 438: configureController();
  4074  0FCA  3183  23ED  318F   	fcall	_configureController
  4075  0FCD                     l2560:	
  4076                           
  4077                           ;main.c: 440: };main.c: 443: slaveSelect = RA5;
  4078  0FCD  3000               	movlw	0
  4079  0FCE  0020               	movlb	0	; select bank0
  4080  0FCF  1A8C               	btfsc	12,5	;volatile
  4081  0FD0  3001               	movlw	1
  4082  0FD1  00CD               	movwf	main@slaveSelect
  4083  0FD2                     l2562:	
  4084                           
  4085                           ;main.c: 445: if (slaveSelect) {
  4086  0FD2  084D               	movf	main@slaveSelect,w
  4087  0FD3  1903               	btfsc	3,2
  4088  0FD4  2FD6               	goto	u2131
  4089  0FD5  2FD7               	goto	u2130
  4090  0FD6                     u2131:	
  4091  0FD6  2FDB               	goto	l161
  4092  0FD7                     u2130:	
  4093  0FD7                     l2564:	
  4094                           
  4095                           ;main.c: 446: count++;
  4096  0FD7  3001               	movlw	1
  4097  0FD8  00CA               	movwf	??_main
  4098  0FD9  084A               	movf	??_main,w
  4099  0FDA  07CC               	addwf	main@count,f
  4100  0FDB                     l161:	
  4101                           
  4102                           ;main.c: 447: };main.c: 449: if (slaveSelect ^ slaveSelectStatePrev) {
  4103  0FDB  084D               	movf	main@slaveSelect,w
  4104  0FDC  064B               	xorwf	main@slaveSelectStatePrev,w
  4105  0FDD  1903               	btfsc	3,2
  4106  0FDE  2FE0               	goto	u2141
  4107  0FDF  2FE1               	goto	u2140
  4108  0FE0                     u2141:	
  4109  0FE0  2FE2               	goto	l2568
  4110  0FE1                     u2140:	
  4111  0FE1                     l2566:	
  4112                           
  4113                           ;main.c: 450: count = 0;
  4114  0FE1  01CC               	clrf	main@count
  4115  0FE2                     l2568:	
  4116                           
  4117                           ;main.c: 451: };main.c: 453: slaveSelectStatePrev = slaveSelect;
  4118  0FE2  084D               	movf	main@slaveSelect,w
  4119  0FE3  00CA               	movwf	??_main
  4120  0FE4  084A               	movf	??_main,w
  4121  0FE5  00CB               	movwf	main@slaveSelectStatePrev
  4122  0FE6                     l2570:	
  4123                           
  4124                           ;main.c: 455: if (count >= 3) {
  4125  0FE6  3003               	movlw	3
  4126  0FE7  024C               	subwf	main@count,w
  4127  0FE8  1C03               	skipc
  4128  0FE9  2FEB               	goto	u2151
  4129  0FEA  2FEC               	goto	u2150
  4130  0FEB                     u2151:	
  4131  0FEB  2FF6               	goto	l2578
  4132  0FEC                     u2150:	
  4133  0FEC                     l2572:	
  4134                           
  4135                           ;main.c: 457: cmdCounter = 0;
  4136  0FEC  01F8               	clrf	_cmdCounter
  4137  0FED                     l2574:	
  4138                           
  4139                           ;main.c: 458: responseLength = 9;
  4140  0FED  3009               	movlw	9
  4141  0FEE  00CA               	movwf	??_main
  4142  0FEF  084A               	movf	??_main,w
  4143  0FF0  00CE               	movwf	_responseLength
  4144  0FF1                     l2576:	
  4145                           
  4146                           ;main.c: 459: SSP1BUF = 0xFF;
  4147  0FF1  30FF               	movlw	255
  4148  0FF2  0023               	movlb	3	; select bank3
  4149  0FF3  008C               	movwf	12	;volatile
  4150                           
  4151                           ;main.c: 460: previousCmd = 0x00;
  4152  0FF4  0020               	movlb	0	; select bank0
  4153  0FF5  01ED               	clrf	_previousCmd
  4154  0FF6                     l2578:	
  4155                           
  4156                           ;main.c: 461: };main.c: 463: readController(analogMode);
  4157  0FF6  0877               	movf	_analogMode,w
  4158  0FF7  3185  254D  318F   	fcall	_readController
  4159  0FFA                     l2580:	
  4160                           
  4161                           ;main.c: 465: readControllerAnalog();
  4162  0FFA  3187  2730  318F   	fcall	_readControllerAnalog
  4163  0FFD  2FBD               	goto	l2554
  4164  0FFE  3181  29CA         	ljmp	start
  4165  1000                     __end_of_main:	
  4166                           
  4167                           	psect	text1
  4168  0730                     __ptext1:	
  4169 ;; *************** function _readControllerAnalog *****************
  4170 ;; Defined at:
  4171 ;;		line 175 in file "Controller.c"
  4172 ;; Parameters:    Size  Location     Type
  4173 ;;		None
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;		None
  4176 ;; Return value:  Size  Location     Type
  4177 ;;                  1    wreg      void 
  4178 ;; Registers used:
  4179 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4180 ;; Tracked objects:
  4181 ;;		On entry : 0/0
  4182 ;;		On exit  : 0/0
  4183 ;;		Unchanged: 0/0
  4184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4187 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4188 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4189 ;;Total ram usage:        3 bytes
  4190 ;; Hardware stack levels used:    1
  4191 ;; Hardware stack levels required when called:    4
  4192 ;; This function calls:
  4193 ;;		_readADC
  4194 ;;		_reversebyte
  4195 ;; This function is called by:
  4196 ;;		_main
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199                           
  4200                           
  4201                           ;psect for function _readControllerAnalog
  4202  0730                     _readControllerAnalog:	
  4203  0730                     l2540:	
  4204                           ;incstack = 0
  4205                           ; Regs used in _readControllerAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4206                           
  4207                           
  4208                           ;Controller.c: 177: lxData = reversebyte(lutLX[readADC(0b010000)]);
  4209  0730  3010               	movlw	16
  4210  0731  00F4               	movwf	readADC@channel
  4211  0732  3000               	movlw	0
  4212  0733  00F5               	movwf	readADC@channel+1
  4213  0734  318F  2710  3187   	fcall	_readADC
  4214  0737  30F0               	movlw	240
  4215  0738  0020               	movlb	0	; select bank0
  4216  0739  00A7               	movwf	??_readControllerAnalog
  4217  073A  3026               	movlw	38
  4218  073B  00A8               	movwf	??_readControllerAnalog+1
  4219  073C  0874               	movf	?_readADC,w
  4220  073D  0727               	addwf	??_readControllerAnalog,w
  4221  073E  0086               	movwf	6
  4222  073F  0875               	movf	?_readADC+1,w
  4223  0740  3D28               	addwfc	??_readControllerAnalog+1,w
  4224  0741  0087               	movwf	7
  4225  0742  0801               	movf	1,w
  4226  0743  318F  273A  3187   	fcall	_reversebyte
  4227  0746  0020               	movlb	0	; select bank0
  4228  0747  00A9               	movwf	??_readControllerAnalog+2
  4229  0748  0829               	movf	??_readControllerAnalog+2,w
  4230  0749  00D1               	movwf	_lxData
  4231                           
  4232                           ;Controller.c: 178: lyData = reversebyte(lutLY[readADC(0b10001)]);
  4233  074A  3011               	movlw	17
  4234  074B  00F4               	movwf	readADC@channel
  4235  074C  3000               	movlw	0
  4236  074D  00F5               	movwf	readADC@channel+1
  4237  074E  318F  2710  3187   	fcall	_readADC
  4238  0751  30F0               	movlw	240
  4239  0752  0020               	movlb	0	; select bank0
  4240  0753  00A7               	movwf	??_readControllerAnalog
  4241  0754  3025               	movlw	37
  4242  0755  00A8               	movwf	??_readControllerAnalog+1
  4243  0756  0874               	movf	?_readADC,w
  4244  0757  0727               	addwf	??_readControllerAnalog,w
  4245  0758  0086               	movwf	6
  4246  0759  0875               	movf	?_readADC+1,w
  4247  075A  3D28               	addwfc	??_readControllerAnalog+1,w
  4248  075B  0087               	movwf	7
  4249  075C  0801               	movf	1,w
  4250  075D  318F  273A  3187   	fcall	_reversebyte
  4251  0760  0020               	movlb	0	; select bank0
  4252  0761  00A9               	movwf	??_readControllerAnalog+2
  4253  0762  0829               	movf	??_readControllerAnalog+2,w
  4254  0763  00D0               	movwf	_lyData
  4255                           
  4256                           ;Controller.c: 180: rxData = reversebyte(lutRX[readADC(0b010110)]);
  4257  0764  3016               	movlw	22
  4258  0765  00F4               	movwf	readADC@channel
  4259  0766  3000               	movlw	0
  4260  0767  00F5               	movwf	readADC@channel+1
  4261  0768  318F  2710  3187   	fcall	_readADC
  4262  076B  30F0               	movlw	240
  4263  076C  0020               	movlb	0	; select bank0
  4264  076D  00A7               	movwf	??_readControllerAnalog
  4265  076E  3024               	movlw	36
  4266  076F  00A8               	movwf	??_readControllerAnalog+1
  4267  0770  0874               	movf	?_readADC,w
  4268  0771  0727               	addwf	??_readControllerAnalog,w
  4269  0772  0086               	movwf	6
  4270  0773  0875               	movf	?_readADC+1,w
  4271  0774  3D28               	addwfc	??_readControllerAnalog+1,w
  4272  0775  0087               	movwf	7
  4273  0776  0801               	movf	1,w
  4274  0777  318F  273A  3187   	fcall	_reversebyte
  4275  077A  0020               	movlb	0	; select bank0
  4276  077B  00A9               	movwf	??_readControllerAnalog+2
  4277  077C  0829               	movf	??_readControllerAnalog+2,w
  4278  077D  00D3               	movwf	_rxData
  4279                           
  4280                           ;Controller.c: 181: ryData = reversebyte(lutRY[readADC(0b010111)]);
  4281  077E  3017               	movlw	23
  4282  077F  00F4               	movwf	readADC@channel
  4283  0780  3000               	movlw	0
  4284  0781  00F5               	movwf	readADC@channel+1
  4285  0782  318F  2710  3187   	fcall	_readADC
  4286  0785  30F0               	movlw	240
  4287  0786  0020               	movlb	0	; select bank0
  4288  0787  00A7               	movwf	??_readControllerAnalog
  4289  0788  3023               	movlw	35
  4290  0789  00A8               	movwf	??_readControllerAnalog+1
  4291  078A  0874               	movf	?_readADC,w
  4292  078B  0727               	addwf	??_readControllerAnalog,w
  4293  078C  0086               	movwf	6
  4294  078D  0875               	movf	?_readADC+1,w
  4295  078E  3D28               	addwfc	??_readControllerAnalog+1,w
  4296  078F  0087               	movwf	7
  4297  0790  0801               	movf	1,w
  4298  0791  318F  273A  3187   	fcall	_reversebyte
  4299  0794  0020               	movlb	0	; select bank0
  4300  0795  00A9               	movwf	??_readControllerAnalog+2
  4301  0796  0829               	movf	??_readControllerAnalog+2,w
  4302  0797  00D2               	movwf	_ryData
  4303  0798                     l306:	
  4304  0798  0008               	return
  4305  0799                     __end_of_readControllerAnalog:	
  4306                           
  4307                           	psect	text2
  4308  0F3A                     __ptext2:	
  4309 ;; *************** function _reversebyte *****************
  4310 ;; Defined at:
  4311 ;;		line 167 in file "Controller.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;  byte            1    wreg     unsigned char 
  4314 ;; Auto vars:     Size  Location     Type
  4315 ;;  byte            1    4[COMMON] unsigned char 
  4316 ;; Return value:  Size  Location     Type
  4317 ;;                  1    wreg      unsigned char 
  4318 ;; Registers used:
  4319 ;;		wreg, status,2, status,0
  4320 ;; Tracked objects:
  4321 ;;		On entry : 0/0
  4322 ;;		On exit  : 0/0
  4323 ;;		Unchanged: 0/0
  4324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4326 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4327 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4328 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4329 ;;Total ram usage:        4 bytes
  4330 ;; Hardware stack levels used:    1
  4331 ;; Hardware stack levels required when called:    3
  4332 ;; This function calls:
  4333 ;;		Nothing
  4334 ;; This function is called by:
  4335 ;;		_readControllerAnalog
  4336 ;; This function uses a non-reentrant model
  4337 ;;
  4338                           
  4339                           
  4340                           ;psect for function _reversebyte
  4341  0F3A                     _reversebyte:	
  4342                           
  4343                           ;incstack = 0
  4344                           ; Regs used in _reversebyte: [wreg+status,2+status,0]
  4345                           ;reversebyte@byte stored from wreg
  4346  0F3A  00F4               	movwf	reversebyte@byte
  4347  0F3B                     l2370:	
  4348                           
  4349                           ;Controller.c: 168: byte = (byte & 0xF0) >> 4 | (byte & 0x0F) << 4;
  4350  0F3B  0874               	movf	reversebyte@byte,w
  4351  0F3C  390F               	andlw	15
  4352  0F3D  0020               	movlb	0	; select bank0
  4353  0F3E  00A0               	movwf	??_reversebyte
  4354  0F3F  3004               	movlw	4
  4355  0F40                     u1825:	
  4356  0F40  35A0               	lslf	??_reversebyte,f
  4357  0F41  0B89               	decfsz	9,f
  4358  0F42  2F40               	goto	u1825
  4359  0F43  0874               	movf	reversebyte@byte,w
  4360  0F44  00A1               	movwf	??_reversebyte+1
  4361  0F45  3004               	movlw	4
  4362  0F46                     u1835:	
  4363  0F46  36A1               	lsrf	??_reversebyte+1,f
  4364  0F47  0B89               	decfsz	9,f
  4365  0F48  2F46               	goto	u1835
  4366  0F49  0821               	movf	??_reversebyte+1,w
  4367  0F4A  390F               	andlw	15
  4368  0F4B  0420               	iorwf	??_reversebyte,w
  4369  0F4C  00A2               	movwf	??_reversebyte+2
  4370  0F4D  0822               	movf	??_reversebyte+2,w
  4371  0F4E  00F4               	movwf	reversebyte@byte
  4372                           
  4373                           ;Controller.c: 169: byte = (byte & 0xCC) >> 2 | (byte & 0x33) << 2;
  4374  0F4F  0874               	movf	reversebyte@byte,w
  4375  0F50  3933               	andlw	51
  4376  0F51  00A0               	movwf	??_reversebyte
  4377  0F52  3002               	movlw	2
  4378  0F53                     u1845:	
  4379  0F53  35A0               	lslf	??_reversebyte,f
  4380  0F54  0B89               	decfsz	9,f
  4381  0F55  2F53               	goto	u1845
  4382  0F56  0874               	movf	reversebyte@byte,w
  4383  0F57  00A1               	movwf	??_reversebyte+1
  4384  0F58  3002               	movlw	2
  4385  0F59                     u1855:	
  4386  0F59  36A1               	lsrf	??_reversebyte+1,f
  4387  0F5A  0B89               	decfsz	9,f
  4388  0F5B  2F59               	goto	u1855
  4389  0F5C  0821               	movf	??_reversebyte+1,w
  4390  0F5D  3933               	andlw	51
  4391  0F5E  0420               	iorwf	??_reversebyte,w
  4392  0F5F  00A2               	movwf	??_reversebyte+2
  4393  0F60  0822               	movf	??_reversebyte+2,w
  4394  0F61  00F4               	movwf	reversebyte@byte
  4395                           
  4396                           ;Controller.c: 170: byte = (byte & 0xAA) >> 1 | (byte & 0x55) << 1;
  4397  0F62  0874               	movf	reversebyte@byte,w
  4398  0F63  3955               	andlw	85
  4399  0F64  00A0               	movwf	??_reversebyte
  4400  0F65  3001               	movlw	1
  4401  0F66                     u1865:	
  4402  0F66  35A0               	lslf	??_reversebyte,f
  4403  0F67  0B89               	decfsz	9,f
  4404  0F68  2F66               	goto	u1865
  4405  0F69  3674               	lsrf	reversebyte@byte,w
  4406  0F6A  3955               	andlw	85
  4407  0F6B  0420               	iorwf	??_reversebyte,w
  4408  0F6C  00A1               	movwf	??_reversebyte+1
  4409  0F6D  0821               	movf	??_reversebyte+1,w
  4410  0F6E  00F4               	movwf	reversebyte@byte
  4411  0F6F                     l2372:	
  4412                           
  4413                           ;Controller.c: 172: return byte;
  4414  0F6F  0874               	movf	reversebyte@byte,w
  4415  0F70                     l303:	
  4416  0F70  0008               	return
  4417  0F71                     __end_of_reversebyte:	
  4418                           
  4419                           	psect	text3
  4420  0F71                     __ptext3:	
  4421 ;; *************** function _picInit *****************
  4422 ;; Defined at:
  4423 ;;		line 32 in file "PicConfig.c"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;		None
  4426 ;; Auto vars:     Size  Location     Type
  4427 ;;		None
  4428 ;; Return value:  Size  Location     Type
  4429 ;;                  1    wreg      void 
  4430 ;; Registers used:
  4431 ;;		wreg, status,2, status,0, pclath, cstack
  4432 ;; Tracked objects:
  4433 ;;		On entry : 0/0
  4434 ;;		On exit  : 0/0
  4435 ;;		Unchanged: 0/0
  4436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4439 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4440 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4441 ;;Total ram usage:        2 bytes
  4442 ;; Hardware stack levels used:    1
  4443 ;; Hardware stack levels required when called:    4
  4444 ;; This function calls:
  4445 ;;		_ppsLock
  4446 ;;		_ppsUnlock
  4447 ;;		_spiInit
  4448 ;; This function is called by:
  4449 ;;		_main
  4450 ;; This function uses a non-reentrant model
  4451 ;;
  4452                           
  4453                           
  4454                           ;psect for function _picInit
  4455  0F71                     _picInit:	
  4456  0F71                     l2402:	
  4457                           ;incstack = 0
  4458                           ; Regs used in _picInit: [wreg+status,2+status,0+pclath+cstack]
  4459                           
  4460                           
  4461                           ;PicConfig.c: 35: TRISA = 0xFF;
  4462  0F71  30FF               	movlw	255
  4463  0F72  0020               	movlb	0	; select bank0
  4464  0F73  0091               	movwf	17	;volatile
  4465                           
  4466                           ;PicConfig.c: 36: TRISB = 0xFF;
  4467  0F74  30FF               	movlw	255
  4468  0F75  0092               	movwf	18	;volatile
  4469                           
  4470                           ;PicConfig.c: 37: TRISC = 0xFF;
  4471  0F76  30FF               	movlw	255
  4472  0F77  0093               	movwf	19	;volatile
  4473                           
  4474                           ;PicConfig.c: 38: TRISD = 0xEF;
  4475  0F78  30EF               	movlw	239
  4476  0F79  0094               	movwf	20	;volatile
  4477                           
  4478                           ;PicConfig.c: 39: TRISE = 0xFF;
  4479  0F7A  30FF               	movlw	255
  4480  0F7B  0095               	movwf	21	;volatile
  4481  0F7C                     l2404:	
  4482                           
  4483                           ;PicConfig.c: 42: ANSELA = 0;
  4484  0F7C  003E               	movlb	30	; select bank30
  4485  0F7D  01B8               	clrf	56	;volatile
  4486  0F7E                     l2406:	
  4487                           
  4488                           ;PicConfig.c: 43: ANSELB = 0;
  4489  0F7E  01C3               	clrf	67	;volatile
  4490                           
  4491                           ;PicConfig.c: 44: ANSELC = 0xC3;
  4492  0F7F  30C3               	movlw	195
  4493  0F80  00CE               	movwf	78	;volatile
  4494  0F81                     l2408:	
  4495                           
  4496                           ;PicConfig.c: 45: ANSELD = 0;
  4497  0F81  01D9               	clrf	89	;volatile
  4498  0F82                     l2410:	
  4499                           
  4500                           ;PicConfig.c: 46: ANSELE = 0;
  4501  0F82  01E4               	clrf	100	;volatile
  4502                           
  4503                           ;PicConfig.c: 49: WPUA = 0xCF;
  4504  0F83  30CF               	movlw	207
  4505  0F84  00B9               	movwf	57	;volatile
  4506                           
  4507                           ;PicConfig.c: 50: WPUB = 0xFF;
  4508  0F85  30FF               	movlw	255
  4509  0F86  00C4               	movwf	68	;volatile
  4510                           
  4511                           ;PicConfig.c: 51: WPUC = 0x04;
  4512  0F87  3004               	movlw	4
  4513  0F88  00CF               	movwf	79	;volatile
  4514                           
  4515                           ;PicConfig.c: 52: WPUD = 0x01;
  4516  0F89  3001               	movlw	1
  4517  0F8A  00DA               	movwf	90	;volatile
  4518  0F8B                     l2412:	
  4519                           
  4520                           ;PicConfig.c: 53: WPUE = 0;
  4521  0F8B  01E5               	clrf	101	;volatile
  4522  0F8C                     l2414:	
  4523                           
  4524                           ;PicConfig.c: 56: spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_HIGH, 
      +                          SPI_ACTIVE_2_IDLE);
  4525  0F8C  0020               	movlb	0	; select bank0
  4526  0F8D  01A0               	clrf	spiInit@sDataSample
  4527  0F8E  3010               	movlw	16
  4528  0F8F  00A3               	movwf	??_picInit
  4529  0F90  0823               	movf	??_picInit,w
  4530  0F91  00A1               	movwf	spiInit@sClockIdle
  4531  0F92  3040               	movlw	64
  4532  0F93  00A4               	movwf	??_picInit+1
  4533  0F94  0824               	movf	??_picInit+1,w
  4534  0F95  00A2               	movwf	spiInit@sTransmitEdge
  4535  0F96  3024               	movlw	36
  4536  0F97  318E  267A  318F   	fcall	_spiInit
  4537  0F9A                     l2416:	
  4538                           
  4539                           ;PicConfig.c: 58: TRISCbits.TRISC5 = 0;
  4540  0F9A  0020               	movlb	0	; select bank0
  4541  0F9B  1293               	bcf	19,5	;volatile
  4542  0F9C                     l2418:	
  4543                           
  4544                           ;PicConfig.c: 59: TRISAbits.TRISA4 = 0;
  4545  0F9C  1211               	bcf	17,4	;volatile
  4546  0F9D                     l2420:	
  4547                           
  4548                           ;PicConfig.c: 60: ppsUnlock();
  4549  0F9D  3187  27F9  318F   	fcall	_ppsUnlock
  4550  0FA0                     l2422:	
  4551                           
  4552                           ;PicConfig.c: 62: RC5PPS = 0x15;
  4553  0FA0  3015               	movlw	21
  4554  0FA1  003E               	movlb	30	; select bank30
  4555  0FA2  00A5               	movwf	37	;volatile
  4556  0FA3                     l2424:	
  4557                           
  4558                           ;PicConfig.c: 64: ppsLock();
  4559  0FA3  318E  263E  318F   	fcall	_ppsLock
  4560  0FA6                     l2426:	
  4561                           
  4562                           ;PicConfig.c: 67: INTCONbits.GIE = 1;
  4563  0FA6  178B               	bsf	11,7	;volatile
  4564  0FA7                     l2428:	
  4565                           
  4566                           ;PicConfig.c: 68: INTCONbits.PEIE = 1;
  4567  0FA7  170B               	bsf	11,6	;volatile
  4568  0FA8                     l2430:	
  4569                           
  4570                           ;PicConfig.c: 69: SSP1IF = 0;
  4571  0FA8  002E               	movlb	14	; select bank14
  4572  0FA9  100F               	bcf	15,0	;volatile
  4573  0FAA                     l2432:	
  4574                           
  4575                           ;PicConfig.c: 70: SSP1IE = 1;
  4576  0FAA  1419               	bsf	25,0	;volatile
  4577  0FAB                     l392:	
  4578  0FAB  0008               	return
  4579  0FAC                     __end_of_picInit:	
  4580                           
  4581                           	psect	text4
  4582  0E7A                     __ptext4:	
  4583 ;; *************** function _spiInit *****************
  4584 ;; Defined at:
  4585 ;;		line 10 in file "Spi.c"
  4586 ;; Parameters:    Size  Location     Type
  4587 ;;  sType           1    wreg     enum E11980
  4588 ;;  sDataSample     1    0[BANK0 ] enum E11988
  4589 ;;  sClockIdle      1    1[BANK0 ] enum E11992
  4590 ;;  sTransmitEdg    1    2[BANK0 ] enum E11996
  4591 ;; Auto vars:     Size  Location     Type
  4592 ;;  sType           1    4[COMMON] enum E11980
  4593 ;; Return value:  Size  Location     Type
  4594 ;;                  1    wreg      void 
  4595 ;; Registers used:
  4596 ;;		wreg, status,2, status,0
  4597 ;; Tracked objects:
  4598 ;;		On entry : 0/0
  4599 ;;		On exit  : 0/0
  4600 ;;		Unchanged: 0/0
  4601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4602 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4603 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4605 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4606 ;;Total ram usage:        4 bytes
  4607 ;; Hardware stack levels used:    1
  4608 ;; Hardware stack levels required when called:    3
  4609 ;; This function calls:
  4610 ;;		Nothing
  4611 ;; This function is called by:
  4612 ;;		_picInit
  4613 ;; This function uses a non-reentrant model
  4614 ;;
  4615                           
  4616                           
  4617                           ;psect for function _spiInit
  4618  0E7A                     _spiInit:	
  4619                           
  4620                           ;incstack = 0
  4621                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  4622                           ;spiInit@sType stored from wreg
  4623  0E7A  00F4               	movwf	spiInit@sType
  4624  0E7B                     l2396:	
  4625                           
  4626                           ;Spi.c: 13: if(sType & 0b00000100)
  4627  0E7B  1D74               	btfss	spiInit@sType,2
  4628  0E7C  2E7E               	goto	u1891
  4629  0E7D  2E7F               	goto	u1890
  4630  0E7E                     u1891:	
  4631  0E7E  2E84               	goto	l2400
  4632  0E7F                     u1890:	
  4633  0E7F                     l2398:	
  4634                           
  4635                           ;Spi.c: 14: {;Spi.c: 15: SSP1STAT = sTransmitEdge;
  4636  0E7F  0020               	movlb	0	; select bank0
  4637  0E80  0822               	movf	spiInit@sTransmitEdge,w
  4638  0E81  0023               	movlb	3	; select bank3
  4639  0E82  008F               	movwf	15	;volatile
  4640                           
  4641                           ;Spi.c: 17: }
  4642  0E83  2E89               	goto	l404
  4643  0E84                     l2400:	
  4644                           
  4645                           ;Spi.c: 18: else;Spi.c: 19: {;Spi.c: 20: SSP1STAT = sDataSample | sTransmitEdge;
  4646  0E84  0020               	movlb	0	; select bank0
  4647  0E85  0820               	movf	spiInit@sDataSample,w
  4648  0E86  0422               	iorwf	spiInit@sTransmitEdge,w
  4649  0E87  0023               	movlb	3	; select bank3
  4650  0E88  008F               	movwf	15	;volatile
  4651  0E89                     l404:	
  4652                           
  4653                           ;Spi.c: 22: };Spi.c: 24: SSP1CON1 = sType | sClockIdle;
  4654  0E89  0874               	movf	spiInit@sType,w
  4655  0E8A  0020               	movlb	0	; select bank0
  4656  0E8B  0421               	iorwf	spiInit@sClockIdle,w
  4657  0E8C  0023               	movlb	3	; select bank3
  4658  0E8D  0090               	movwf	16	;volatile
  4659  0E8E                     l405:	
  4660  0E8E  0008               	return
  4661  0E8F                     __end_of_spiInit:	
  4662                           
  4663                           	psect	text5
  4664  07F9                     __ptext5:	
  4665 ;; *************** function _ppsUnlock *****************
  4666 ;; Defined at:
  4667 ;;		line 9 in file "PicConfig.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;		None
  4670 ;; Auto vars:     Size  Location     Type
  4671 ;;		None
  4672 ;; Return value:  Size  Location     Type
  4673 ;;                  1    wreg      void 
  4674 ;; Registers used:
  4675 ;;		wreg, status,2
  4676 ;; Tracked objects:
  4677 ;;		On entry : 0/0
  4678 ;;		On exit  : 0/0
  4679 ;;		Unchanged: 0/0
  4680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4685 ;;Total ram usage:        0 bytes
  4686 ;; Hardware stack levels used:    1
  4687 ;; Hardware stack levels required when called:    3
  4688 ;; This function calls:
  4689 ;;		Nothing
  4690 ;; This function is called by:
  4691 ;;		_picInit
  4692 ;; This function uses a non-reentrant model
  4693 ;;
  4694                           
  4695                           
  4696                           ;psect for function _ppsUnlock
  4697  07F9                     _ppsUnlock:	
  4698  07F9                     l1854:	
  4699                           ;incstack = 0
  4700                           ; Regs used in _ppsUnlock: [wreg+status,2]
  4701                           
  4702                           
  4703                           ;PicConfig.c: 10: PPSLOCK = 0x55;
  4704  07F9  3055               	movlw	85
  4705  07FA  003D               	movlb	29	; select bank29
  4706  07FB  008F               	movwf	15	;volsfr
  4707                           
  4708                           ;PicConfig.c: 11: PPSLOCK = 0xAA;
  4709  07FC  30AA               	movlw	170
  4710  07FD  008F               	movwf	15	;volsfr
  4711  07FE                     l1856:	
  4712                           
  4713                           ;PicConfig.c: 12: PPSLOCK = 0;
  4714  07FE  018F               	clrf	15	;volsfr
  4715  07FF                     l383:	
  4716  07FF  0008               	return
  4717  0800                     __end_of_ppsUnlock:	
  4718                           
  4719                           	psect	text6
  4720  0E3E                     __ptext6:	
  4721 ;; *************** function _ppsLock *****************
  4722 ;; Defined at:
  4723 ;;		line 15 in file "PicConfig.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;		None
  4726 ;; Auto vars:     Size  Location     Type
  4727 ;;		None
  4728 ;; Return value:  Size  Location     Type
  4729 ;;                  1    wreg      void 
  4730 ;; Registers used:
  4731 ;;		wreg
  4732 ;; Tracked objects:
  4733 ;;		On entry : 0/0
  4734 ;;		On exit  : 0/0
  4735 ;;		Unchanged: 0/0
  4736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4741 ;;Total ram usage:        0 bytes
  4742 ;; Hardware stack levels used:    1
  4743 ;; Hardware stack levels required when called:    3
  4744 ;; This function calls:
  4745 ;;		Nothing
  4746 ;; This function is called by:
  4747 ;;		_picInit
  4748 ;; This function uses a non-reentrant model
  4749 ;;
  4750                           
  4751                           
  4752                           ;psect for function _ppsLock
  4753  0E3E                     _ppsLock:	
  4754  0E3E                     l1858:	
  4755                           ;incstack = 0
  4756                           ; Regs used in _ppsLock: [wreg]
  4757                           
  4758                           
  4759                           ;PicConfig.c: 16: PPSLOCK = 0x55;
  4760  0E3E  3055               	movlw	85
  4761  0E3F  003D               	movlb	29	; select bank29
  4762  0E40  008F               	movwf	15	;volsfr
  4763                           
  4764                           ;PicConfig.c: 17: PPSLOCK = 0xAA;
  4765  0E41  30AA               	movlw	170
  4766  0E42  008F               	movwf	15	;volsfr
  4767                           
  4768                           ;PicConfig.c: 18: PPSLOCK = 1;
  4769  0E43  3001               	movlw	1
  4770  0E44  008F               	movwf	15	;volsfr
  4771  0E45                     l386:	
  4772  0E45  0008               	return
  4773  0E46                     __end_of_ppsLock:	
  4774                           
  4775                           	psect	text7
  4776  01FC                     __ptext7:	
  4777 ;; *************** function _lutInit *****************
  4778 ;; Defined at:
  4779 ;;		line 98 in file "Controller.c"
  4780 ;; Parameters:    Size  Location     Type
  4781 ;;		None
  4782 ;; Auto vars:     Size  Location     Type
  4783 ;;  position        2   40[BANK0 ] int 
  4784 ;;  ryMax           1   39[BANK0 ] unsigned char 
  4785 ;;  ryMin           1   38[BANK0 ] unsigned char 
  4786 ;;  rxMax           1   37[BANK0 ] unsigned char 
  4787 ;;  rxMin           1   36[BANK0 ] unsigned char 
  4788 ;;  lyMax           1   35[BANK0 ] unsigned char 
  4789 ;;  lyMin           1   34[BANK0 ] unsigned char 
  4790 ;;  lxMax           1   33[BANK0 ] unsigned char 
  4791 ;;  lxMin           1   32[BANK0 ] unsigned char 
  4792 ;; Return value:  Size  Location     Type
  4793 ;;                  1    wreg      void 
  4794 ;; Registers used:
  4795 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4796 ;; Tracked objects:
  4797 ;;		On entry : 0/0
  4798 ;;		On exit  : 0/0
  4799 ;;		Unchanged: 0/0
  4800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4802 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4803 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4804 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4805 ;;Total ram usage:       19 bytes
  4806 ;; Hardware stack levels used:    1
  4807 ;; Hardware stack levels required when called:    5
  4808 ;; This function calls:
  4809 ;;		_Map
  4810 ;;		_eepromRead
  4811 ;; This function is called by:
  4812 ;;		_main
  4813 ;; This function uses a non-reentrant model
  4814 ;;
  4815                           
  4816                           
  4817                           ;psect for function _lutInit
  4818  01FC                     _lutInit:	
  4819  01FC                     l2434:	
  4820                           ;incstack = 0
  4821                           ; Regs used in _lutInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4822                           
  4823                           
  4824                           ;Controller.c: 100: char lxMin = eepromRead(0x60);
  4825  01FC  3060               	movlw	96
  4826  01FD  318E  2668  3181   	fcall	_eepromRead
  4827  0200  0020               	movlb	0	; select bank0
  4828  0201  00B7               	movwf	??_lutInit
  4829  0202  0837               	movf	??_lutInit,w
  4830  0203  00C0               	movwf	lutInit@lxMin
  4831                           
  4832                           ;Controller.c: 101: char lxMax = eepromRead(0x61);
  4833  0204  3061               	movlw	97
  4834  0205  318E  2668  3181   	fcall	_eepromRead
  4835  0208  0020               	movlb	0	; select bank0
  4836  0209  00B7               	movwf	??_lutInit
  4837  020A  0837               	movf	??_lutInit,w
  4838  020B  00C1               	movwf	lutInit@lxMax
  4839                           
  4840                           ;Controller.c: 102: char lyMin = eepromRead(0x62);
  4841  020C  3062               	movlw	98
  4842  020D  318E  2668  3181   	fcall	_eepromRead
  4843  0210  0020               	movlb	0	; select bank0
  4844  0211  00B7               	movwf	??_lutInit
  4845  0212  0837               	movf	??_lutInit,w
  4846  0213  00C2               	movwf	lutInit@lyMin
  4847                           
  4848                           ;Controller.c: 103: char lyMax = eepromRead(0x63);
  4849  0214  3063               	movlw	99
  4850  0215  318E  2668  3181   	fcall	_eepromRead
  4851  0218  0020               	movlb	0	; select bank0
  4852  0219  00B7               	movwf	??_lutInit
  4853  021A  0837               	movf	??_lutInit,w
  4854  021B  00C3               	movwf	lutInit@lyMax
  4855                           
  4856                           ;Controller.c: 105: char rxMin = eepromRead(0x64);
  4857  021C  3064               	movlw	100
  4858  021D  318E  2668  3181   	fcall	_eepromRead
  4859  0220  0020               	movlb	0	; select bank0
  4860  0221  00B7               	movwf	??_lutInit
  4861  0222  0837               	movf	??_lutInit,w
  4862  0223  00C4               	movwf	lutInit@rxMin
  4863                           
  4864                           ;Controller.c: 106: char rxMax = eepromRead(0x65);
  4865  0224  3065               	movlw	101
  4866  0225  318E  2668  3181   	fcall	_eepromRead
  4867  0228  0020               	movlb	0	; select bank0
  4868  0229  00B7               	movwf	??_lutInit
  4869  022A  0837               	movf	??_lutInit,w
  4870  022B  00C5               	movwf	lutInit@rxMax
  4871                           
  4872                           ;Controller.c: 107: char ryMin = eepromRead(0x66);
  4873  022C  3066               	movlw	102
  4874  022D  318E  2668  3181   	fcall	_eepromRead
  4875  0230  0020               	movlb	0	; select bank0
  4876  0231  00B7               	movwf	??_lutInit
  4877  0232  0837               	movf	??_lutInit,w
  4878  0233  00C6               	movwf	lutInit@ryMin
  4879                           
  4880                           ;Controller.c: 108: char ryMax = eepromRead(0x67);
  4881  0234  3067               	movlw	103
  4882  0235  318E  2668  3181   	fcall	_eepromRead
  4883  0238  0020               	movlb	0	; select bank0
  4884  0239  00B7               	movwf	??_lutInit
  4885  023A  0837               	movf	??_lutInit,w
  4886  023B  00C7               	movwf	lutInit@ryMax
  4887  023C                     l2436:	
  4888                           
  4889                           ;Controller.c: 110: for (int position = 0; position < 256; position++) {
  4890  023C  01C8               	clrf	lutInit@position
  4891  023D  01C9               	clrf	lutInit@position+1
  4892  023E                     l2442:	
  4893                           
  4894                           ;Controller.c: 113: if (position < lxMin) {
  4895  023E  0020               	movlb	0	; select bank0
  4896  023F  0849               	movf	lutInit@position+1,w
  4897  0240  3A80               	xorlw	128
  4898  0241  00B7               	movwf	??_lutInit
  4899  0242  3080               	movlw	128
  4900  0243  0237               	subwf	??_lutInit,w
  4901  0244  1D03               	skipz
  4902  0245  2A48               	goto	u1905
  4903  0246  0840               	movf	lutInit@lxMin,w
  4904  0247  0248               	subwf	lutInit@position,w
  4905  0248                     u1905:	
  4906  0248  1803               	skipnc
  4907  0249  2A4B               	goto	u1901
  4908  024A  2A4C               	goto	u1900
  4909  024B                     u1901:	
  4910  024B  2A59               	goto	l2446
  4911  024C                     u1900:	
  4912  024C                     l2444:	
  4913                           
  4914                           ;Controller.c: 115: lutLX[position] = 0;
  4915  024C  30F0               	movlw	240
  4916  024D  0020               	movlb	0	; select bank0
  4917  024E  00B7               	movwf	??_lutInit
  4918  024F  3026               	movlw	38
  4919  0250  00B8               	movwf	??_lutInit+1
  4920  0251  0848               	movf	lutInit@position,w
  4921  0252  0737               	addwf	??_lutInit,w
  4922  0253  0086               	movwf	6
  4923  0254  0849               	movf	lutInit@position+1,w
  4924  0255  3D38               	addwfc	??_lutInit+1,w
  4925  0256  0087               	movwf	7
  4926  0257  0181               	clrf	1
  4927                           
  4928                           ;Controller.c: 116: } else if (position > lxMax) {
  4929  0258  2AA6               	goto	l2452
  4930  0259                     l2446:	
  4931  0259  0020               	movlb	0	; select bank0
  4932  025A  0849               	movf	lutInit@position+1,w
  4933  025B  3A80               	xorlw	128
  4934  025C  3C80               	sublw	128
  4935  025D  1D03               	skipz
  4936  025E  2A61               	goto	u1915
  4937  025F  0848               	movf	lutInit@position,w
  4938  0260  0241               	subwf	lutInit@lxMax,w
  4939  0261                     u1915:	
  4940  0261  1803               	skipnc
  4941  0262  2A64               	goto	u1911
  4942  0263  2A65               	goto	u1910
  4943  0264                     u1911:	
  4944  0264  2A77               	goto	l2450
  4945  0265                     u1910:	
  4946  0265                     l2448:	
  4947                           
  4948                           ;Controller.c: 117: lutLX[position] = 255;
  4949  0265  30F0               	movlw	240
  4950  0266  0020               	movlb	0	; select bank0
  4951  0267  00B7               	movwf	??_lutInit
  4952  0268  3026               	movlw	38
  4953  0269  00B8               	movwf	??_lutInit+1
  4954  026A  0848               	movf	lutInit@position,w
  4955  026B  0737               	addwf	??_lutInit,w
  4956  026C  00B9               	movwf	??_lutInit+2
  4957  026D  0849               	movf	lutInit@position+1,w
  4958  026E  3D38               	addwfc	??_lutInit+1,w
  4959  026F  00BA               	movwf	??_lutInit+3
  4960  0270  0839               	movf	??_lutInit+2,w
  4961  0271  0086               	movwf	6
  4962  0272  083A               	movf	??_lutInit+3,w
  4963  0273  0087               	movwf	7
  4964  0274  30FF               	movlw	255
  4965  0275  0081               	movwf	1
  4966                           
  4967                           ;Controller.c: 119: } else {
  4968  0276  2AA6               	goto	l2452
  4969  0277                     l2450:	
  4970                           
  4971                           ;Controller.c: 120: lutLX[position] = Map(position, lxMin, lxMax, 0, 255);
  4972  0277  0020               	movlb	0	; select bank0
  4973  0278  0849               	movf	lutInit@position+1,w
  4974  0279  00AE               	movwf	Map@x+1
  4975  027A  0848               	movf	lutInit@position,w
  4976  027B  00AD               	movwf	Map@x
  4977  027C  0840               	movf	lutInit@lxMin,w
  4978  027D  00B7               	movwf	??_lutInit
  4979  027E  01B8               	clrf	??_lutInit+1
  4980  027F  0837               	movf	??_lutInit,w
  4981  0280  00AF               	movwf	Map@inMin
  4982  0281  0838               	movf	??_lutInit+1,w
  4983  0282  00B0               	movwf	Map@inMin+1
  4984  0283  0841               	movf	lutInit@lxMax,w
  4985  0284  00B9               	movwf	??_lutInit+2
  4986  0285  01BA               	clrf	??_lutInit+3
  4987  0286  0839               	movf	??_lutInit+2,w
  4988  0287  00B1               	movwf	Map@inMax
  4989  0288  083A               	movf	??_lutInit+3,w
  4990  0289  00B2               	movwf	Map@inMax+1
  4991  028A  3000               	movlw	0
  4992  028B  00B3               	movwf	Map@outMin
  4993  028C  00B4               	movwf	Map@outMin+1
  4994  028D  30FF               	movlw	255
  4995  028E  00B5               	movwf	Map@outMax
  4996  028F  3000               	movlw	0
  4997  0290  00B6               	movwf	Map@outMax+1
  4998  0291  318E  26CB  3181   	fcall	_Map
  4999  0294  0020               	movlb	0	; select bank0
  5000  0295  00BB               	movwf	??_lutInit+4
  5001  0296  30F0               	movlw	240
  5002  0297  00BC               	movwf	??_lutInit+5
  5003  0298  3026               	movlw	38
  5004  0299  00BD               	movwf	??_lutInit+6
  5005  029A  0848               	movf	lutInit@position,w
  5006  029B  073C               	addwf	??_lutInit+5,w
  5007  029C  00BE               	movwf	??_lutInit+7
  5008  029D  0849               	movf	lutInit@position+1,w
  5009  029E  3D3D               	addwfc	??_lutInit+6,w
  5010  029F  00BF               	movwf	??_lutInit+8
  5011  02A0  083E               	movf	??_lutInit+7,w
  5012  02A1  0086               	movwf	6
  5013  02A2  083F               	movf	??_lutInit+8,w
  5014  02A3  0087               	movwf	7
  5015  02A4  083B               	movf	??_lutInit+4,w
  5016  02A5  0081               	movwf	1
  5017  02A6                     l2452:	
  5018                           
  5019                           ;Controller.c: 121: };Controller.c: 124: if (position < lyMin) {
  5020  02A6  0849               	movf	lutInit@position+1,w
  5021  02A7  3A80               	xorlw	128
  5022  02A8  00B7               	movwf	??_lutInit
  5023  02A9  3080               	movlw	128
  5024  02AA  0237               	subwf	??_lutInit,w
  5025  02AB  1D03               	skipz
  5026  02AC  2AAF               	goto	u1925
  5027  02AD  0842               	movf	lutInit@lyMin,w
  5028  02AE  0248               	subwf	lutInit@position,w
  5029  02AF                     u1925:	
  5030  02AF  1803               	skipnc
  5031  02B0  2AB2               	goto	u1921
  5032  02B1  2AB3               	goto	u1920
  5033  02B2                     u1921:	
  5034  02B2  2AC0               	goto	l2456
  5035  02B3                     u1920:	
  5036  02B3                     l2454:	
  5037                           
  5038                           ;Controller.c: 125: lutLY[position] = 0;
  5039  02B3  30F0               	movlw	240
  5040  02B4  0020               	movlb	0	; select bank0
  5041  02B5  00B7               	movwf	??_lutInit
  5042  02B6  3025               	movlw	37
  5043  02B7  00B8               	movwf	??_lutInit+1
  5044  02B8  0848               	movf	lutInit@position,w
  5045  02B9  0737               	addwf	??_lutInit,w
  5046  02BA  0086               	movwf	6
  5047  02BB  0849               	movf	lutInit@position+1,w
  5048  02BC  3D38               	addwfc	??_lutInit+1,w
  5049  02BD  0087               	movwf	7
  5050  02BE  0181               	clrf	1
  5051                           
  5052                           ;Controller.c: 126: } else if (position > lyMax) {
  5053  02BF  2B0D               	goto	l2462
  5054  02C0                     l2456:	
  5055  02C0  0020               	movlb	0	; select bank0
  5056  02C1  0849               	movf	lutInit@position+1,w
  5057  02C2  3A80               	xorlw	128
  5058  02C3  3C80               	sublw	128
  5059  02C4  1D03               	skipz
  5060  02C5  2AC8               	goto	u1935
  5061  02C6  0848               	movf	lutInit@position,w
  5062  02C7  0243               	subwf	lutInit@lyMax,w
  5063  02C8                     u1935:	
  5064  02C8  1803               	skipnc
  5065  02C9  2ACB               	goto	u1931
  5066  02CA  2ACC               	goto	u1930
  5067  02CB                     u1931:	
  5068  02CB  2ADE               	goto	l2460
  5069  02CC                     u1930:	
  5070  02CC                     l2458:	
  5071                           
  5072                           ;Controller.c: 127: lutLY[position] = 255;
  5073  02CC  30F0               	movlw	240
  5074  02CD  0020               	movlb	0	; select bank0
  5075  02CE  00B7               	movwf	??_lutInit
  5076  02CF  3025               	movlw	37
  5077  02D0  00B8               	movwf	??_lutInit+1
  5078  02D1  0848               	movf	lutInit@position,w
  5079  02D2  0737               	addwf	??_lutInit,w
  5080  02D3  00B9               	movwf	??_lutInit+2
  5081  02D4  0849               	movf	lutInit@position+1,w
  5082  02D5  3D38               	addwfc	??_lutInit+1,w
  5083  02D6  00BA               	movwf	??_lutInit+3
  5084  02D7  0839               	movf	??_lutInit+2,w
  5085  02D8  0086               	movwf	6
  5086  02D9  083A               	movf	??_lutInit+3,w
  5087  02DA  0087               	movwf	7
  5088  02DB  30FF               	movlw	255
  5089  02DC  0081               	movwf	1
  5090                           
  5091                           ;Controller.c: 129: } else {
  5092  02DD  2B0D               	goto	l2462
  5093  02DE                     l2460:	
  5094                           
  5095                           ;Controller.c: 130: lutLY[position] = Map(position, lyMin, lyMax, 0, 255);
  5096  02DE  0020               	movlb	0	; select bank0
  5097  02DF  0849               	movf	lutInit@position+1,w
  5098  02E0  00AE               	movwf	Map@x+1
  5099  02E1  0848               	movf	lutInit@position,w
  5100  02E2  00AD               	movwf	Map@x
  5101  02E3  0842               	movf	lutInit@lyMin,w
  5102  02E4  00B7               	movwf	??_lutInit
  5103  02E5  01B8               	clrf	??_lutInit+1
  5104  02E6  0837               	movf	??_lutInit,w
  5105  02E7  00AF               	movwf	Map@inMin
  5106  02E8  0838               	movf	??_lutInit+1,w
  5107  02E9  00B0               	movwf	Map@inMin+1
  5108  02EA  0843               	movf	lutInit@lyMax,w
  5109  02EB  00B9               	movwf	??_lutInit+2
  5110  02EC  01BA               	clrf	??_lutInit+3
  5111  02ED  0839               	movf	??_lutInit+2,w
  5112  02EE  00B1               	movwf	Map@inMax
  5113  02EF  083A               	movf	??_lutInit+3,w
  5114  02F0  00B2               	movwf	Map@inMax+1
  5115  02F1  3000               	movlw	0
  5116  02F2  00B3               	movwf	Map@outMin
  5117  02F3  00B4               	movwf	Map@outMin+1
  5118  02F4  30FF               	movlw	255
  5119  02F5  00B5               	movwf	Map@outMax
  5120  02F6  3000               	movlw	0
  5121  02F7  00B6               	movwf	Map@outMax+1
  5122  02F8  318E  26CB  3181   	fcall	_Map
  5123  02FB  0020               	movlb	0	; select bank0
  5124  02FC  00BB               	movwf	??_lutInit+4
  5125  02FD  30F0               	movlw	240
  5126  02FE  00BC               	movwf	??_lutInit+5
  5127  02FF  3025               	movlw	37
  5128  0300  00BD               	movwf	??_lutInit+6
  5129  0301  0848               	movf	lutInit@position,w
  5130  0302  073C               	addwf	??_lutInit+5,w
  5131  0303  00BE               	movwf	??_lutInit+7
  5132  0304  0849               	movf	lutInit@position+1,w
  5133  0305  3D3D               	addwfc	??_lutInit+6,w
  5134  0306  00BF               	movwf	??_lutInit+8
  5135  0307  083E               	movf	??_lutInit+7,w
  5136  0308  0086               	movwf	6
  5137  0309  083F               	movf	??_lutInit+8,w
  5138  030A  0087               	movwf	7
  5139  030B  083B               	movf	??_lutInit+4,w
  5140  030C  0081               	movwf	1
  5141  030D                     l2462:	
  5142                           
  5143                           ;Controller.c: 131: };Controller.c: 134: if (position < rxMin) {
  5144  030D  0849               	movf	lutInit@position+1,w
  5145  030E  3A80               	xorlw	128
  5146  030F  00B7               	movwf	??_lutInit
  5147  0310  3080               	movlw	128
  5148  0311  0237               	subwf	??_lutInit,w
  5149  0312  1D03               	skipz
  5150  0313  2B16               	goto	u1945
  5151  0314  0844               	movf	lutInit@rxMin,w
  5152  0315  0248               	subwf	lutInit@position,w
  5153  0316                     u1945:	
  5154  0316  1803               	skipnc
  5155  0317  2B19               	goto	u1941
  5156  0318  2B1A               	goto	u1940
  5157  0319                     u1941:	
  5158  0319  2B27               	goto	l2466
  5159  031A                     u1940:	
  5160  031A                     l2464:	
  5161                           
  5162                           ;Controller.c: 135: lutRX[position] = 0;
  5163  031A  30F0               	movlw	240
  5164  031B  0020               	movlb	0	; select bank0
  5165  031C  00B7               	movwf	??_lutInit
  5166  031D  3024               	movlw	36
  5167  031E  00B8               	movwf	??_lutInit+1
  5168  031F  0848               	movf	lutInit@position,w
  5169  0320  0737               	addwf	??_lutInit,w
  5170  0321  0086               	movwf	6
  5171  0322  0849               	movf	lutInit@position+1,w
  5172  0323  3D38               	addwfc	??_lutInit+1,w
  5173  0324  0087               	movwf	7
  5174  0325  0181               	clrf	1
  5175                           
  5176                           ;Controller.c: 136: } else if (position > rxMax) {
  5177  0326  2B74               	goto	l2472
  5178  0327                     l2466:	
  5179  0327  0020               	movlb	0	; select bank0
  5180  0328  0849               	movf	lutInit@position+1,w
  5181  0329  3A80               	xorlw	128
  5182  032A  3C80               	sublw	128
  5183  032B  1D03               	skipz
  5184  032C  2B2F               	goto	u1955
  5185  032D  0848               	movf	lutInit@position,w
  5186  032E  0245               	subwf	lutInit@rxMax,w
  5187  032F                     u1955:	
  5188  032F  1803               	skipnc
  5189  0330  2B32               	goto	u1951
  5190  0331  2B33               	goto	u1950
  5191  0332                     u1951:	
  5192  0332  2B45               	goto	l2470
  5193  0333                     u1950:	
  5194  0333                     l2468:	
  5195                           
  5196                           ;Controller.c: 137: lutRX[position] = 255;
  5197  0333  30F0               	movlw	240
  5198  0334  0020               	movlb	0	; select bank0
  5199  0335  00B7               	movwf	??_lutInit
  5200  0336  3024               	movlw	36
  5201  0337  00B8               	movwf	??_lutInit+1
  5202  0338  0848               	movf	lutInit@position,w
  5203  0339  0737               	addwf	??_lutInit,w
  5204  033A  00B9               	movwf	??_lutInit+2
  5205  033B  0849               	movf	lutInit@position+1,w
  5206  033C  3D38               	addwfc	??_lutInit+1,w
  5207  033D  00BA               	movwf	??_lutInit+3
  5208  033E  0839               	movf	??_lutInit+2,w
  5209  033F  0086               	movwf	6
  5210  0340  083A               	movf	??_lutInit+3,w
  5211  0341  0087               	movwf	7
  5212  0342  30FF               	movlw	255
  5213  0343  0081               	movwf	1
  5214                           
  5215                           ;Controller.c: 139: } else {
  5216  0344  2B74               	goto	l2472
  5217  0345                     l2470:	
  5218                           
  5219                           ;Controller.c: 140: lutRX[position] = Map(position, rxMin, rxMax, 0, 255);
  5220  0345  0020               	movlb	0	; select bank0
  5221  0346  0849               	movf	lutInit@position+1,w
  5222  0347  00AE               	movwf	Map@x+1
  5223  0348  0848               	movf	lutInit@position,w
  5224  0349  00AD               	movwf	Map@x
  5225  034A  0844               	movf	lutInit@rxMin,w
  5226  034B  00B7               	movwf	??_lutInit
  5227  034C  01B8               	clrf	??_lutInit+1
  5228  034D  0837               	movf	??_lutInit,w
  5229  034E  00AF               	movwf	Map@inMin
  5230  034F  0838               	movf	??_lutInit+1,w
  5231  0350  00B0               	movwf	Map@inMin+1
  5232  0351  0845               	movf	lutInit@rxMax,w
  5233  0352  00B9               	movwf	??_lutInit+2
  5234  0353  01BA               	clrf	??_lutInit+3
  5235  0354  0839               	movf	??_lutInit+2,w
  5236  0355  00B1               	movwf	Map@inMax
  5237  0356  083A               	movf	??_lutInit+3,w
  5238  0357  00B2               	movwf	Map@inMax+1
  5239  0358  3000               	movlw	0
  5240  0359  00B3               	movwf	Map@outMin
  5241  035A  00B4               	movwf	Map@outMin+1
  5242  035B  30FF               	movlw	255
  5243  035C  00B5               	movwf	Map@outMax
  5244  035D  3000               	movlw	0
  5245  035E  00B6               	movwf	Map@outMax+1
  5246  035F  318E  26CB  3181   	fcall	_Map
  5247  0362  0020               	movlb	0	; select bank0
  5248  0363  00BB               	movwf	??_lutInit+4
  5249  0364  30F0               	movlw	240
  5250  0365  00BC               	movwf	??_lutInit+5
  5251  0366  3024               	movlw	36
  5252  0367  00BD               	movwf	??_lutInit+6
  5253  0368  0848               	movf	lutInit@position,w
  5254  0369  073C               	addwf	??_lutInit+5,w
  5255  036A  00BE               	movwf	??_lutInit+7
  5256  036B  0849               	movf	lutInit@position+1,w
  5257  036C  3D3D               	addwfc	??_lutInit+6,w
  5258  036D  00BF               	movwf	??_lutInit+8
  5259  036E  083E               	movf	??_lutInit+7,w
  5260  036F  0086               	movwf	6
  5261  0370  083F               	movf	??_lutInit+8,w
  5262  0371  0087               	movwf	7
  5263  0372  083B               	movf	??_lutInit+4,w
  5264  0373  0081               	movwf	1
  5265  0374                     l2472:	
  5266                           
  5267                           ;Controller.c: 141: };Controller.c: 144: if (position < ryMin) {
  5268  0374  0849               	movf	lutInit@position+1,w
  5269  0375  3A80               	xorlw	128
  5270  0376  00B7               	movwf	??_lutInit
  5271  0377  3080               	movlw	128
  5272  0378  0237               	subwf	??_lutInit,w
  5273  0379  1D03               	skipz
  5274  037A  2B7D               	goto	u1965
  5275  037B  0846               	movf	lutInit@ryMin,w
  5276  037C  0248               	subwf	lutInit@position,w
  5277  037D                     u1965:	
  5278  037D  1803               	skipnc
  5279  037E  2B80               	goto	u1961
  5280  037F  2B81               	goto	u1960
  5281  0380                     u1961:	
  5282  0380  2B8E               	goto	l2476
  5283  0381                     u1960:	
  5284  0381                     l2474:	
  5285                           
  5286                           ;Controller.c: 145: lutRY[position] = 0;
  5287  0381  30F0               	movlw	240
  5288  0382  0020               	movlb	0	; select bank0
  5289  0383  00B7               	movwf	??_lutInit
  5290  0384  3023               	movlw	35
  5291  0385  00B8               	movwf	??_lutInit+1
  5292  0386  0848               	movf	lutInit@position,w
  5293  0387  0737               	addwf	??_lutInit,w
  5294  0388  0086               	movwf	6
  5295  0389  0849               	movf	lutInit@position+1,w
  5296  038A  3D38               	addwfc	??_lutInit+1,w
  5297  038B  0087               	movwf	7
  5298  038C  0181               	clrf	1
  5299                           
  5300                           ;Controller.c: 146: } else if (position > ryMax) {
  5301  038D  2BDB               	goto	l2482
  5302  038E                     l2476:	
  5303  038E  0020               	movlb	0	; select bank0
  5304  038F  0849               	movf	lutInit@position+1,w
  5305  0390  3A80               	xorlw	128
  5306  0391  3C80               	sublw	128
  5307  0392  1D03               	skipz
  5308  0393  2B96               	goto	u1975
  5309  0394  0848               	movf	lutInit@position,w
  5310  0395  0247               	subwf	lutInit@ryMax,w
  5311  0396                     u1975:	
  5312  0396  1803               	skipnc
  5313  0397  2B99               	goto	u1971
  5314  0398  2B9A               	goto	u1970
  5315  0399                     u1971:	
  5316  0399  2BAC               	goto	l2480
  5317  039A                     u1970:	
  5318  039A                     l2478:	
  5319                           
  5320                           ;Controller.c: 147: lutRY[position] = 255;
  5321  039A  30F0               	movlw	240
  5322  039B  0020               	movlb	0	; select bank0
  5323  039C  00B7               	movwf	??_lutInit
  5324  039D  3023               	movlw	35
  5325  039E  00B8               	movwf	??_lutInit+1
  5326  039F  0848               	movf	lutInit@position,w
  5327  03A0  0737               	addwf	??_lutInit,w
  5328  03A1  00B9               	movwf	??_lutInit+2
  5329  03A2  0849               	movf	lutInit@position+1,w
  5330  03A3  3D38               	addwfc	??_lutInit+1,w
  5331  03A4  00BA               	movwf	??_lutInit+3
  5332  03A5  0839               	movf	??_lutInit+2,w
  5333  03A6  0086               	movwf	6
  5334  03A7  083A               	movf	??_lutInit+3,w
  5335  03A8  0087               	movwf	7
  5336  03A9  30FF               	movlw	255
  5337  03AA  0081               	movwf	1
  5338                           
  5339                           ;Controller.c: 149: } else {
  5340  03AB  2BDB               	goto	l2482
  5341  03AC                     l2480:	
  5342                           
  5343                           ;Controller.c: 150: lutRY[position] = Map(position, ryMin, ryMax, 0, 255);
  5344  03AC  0020               	movlb	0	; select bank0
  5345  03AD  0849               	movf	lutInit@position+1,w
  5346  03AE  00AE               	movwf	Map@x+1
  5347  03AF  0848               	movf	lutInit@position,w
  5348  03B0  00AD               	movwf	Map@x
  5349  03B1  0846               	movf	lutInit@ryMin,w
  5350  03B2  00B7               	movwf	??_lutInit
  5351  03B3  01B8               	clrf	??_lutInit+1
  5352  03B4  0837               	movf	??_lutInit,w
  5353  03B5  00AF               	movwf	Map@inMin
  5354  03B6  0838               	movf	??_lutInit+1,w
  5355  03B7  00B0               	movwf	Map@inMin+1
  5356  03B8  0847               	movf	lutInit@ryMax,w
  5357  03B9  00B9               	movwf	??_lutInit+2
  5358  03BA  01BA               	clrf	??_lutInit+3
  5359  03BB  0839               	movf	??_lutInit+2,w
  5360  03BC  00B1               	movwf	Map@inMax
  5361  03BD  083A               	movf	??_lutInit+3,w
  5362  03BE  00B2               	movwf	Map@inMax+1
  5363  03BF  3000               	movlw	0
  5364  03C0  00B3               	movwf	Map@outMin
  5365  03C1  00B4               	movwf	Map@outMin+1
  5366  03C2  30FF               	movlw	255
  5367  03C3  00B5               	movwf	Map@outMax
  5368  03C4  3000               	movlw	0
  5369  03C5  00B6               	movwf	Map@outMax+1
  5370  03C6  318E  26CB  3181   	fcall	_Map
  5371  03C9  0020               	movlb	0	; select bank0
  5372  03CA  00BB               	movwf	??_lutInit+4
  5373  03CB  30F0               	movlw	240
  5374  03CC  00BC               	movwf	??_lutInit+5
  5375  03CD  3023               	movlw	35
  5376  03CE  00BD               	movwf	??_lutInit+6
  5377  03CF  0848               	movf	lutInit@position,w
  5378  03D0  073C               	addwf	??_lutInit+5,w
  5379  03D1  00BE               	movwf	??_lutInit+7
  5380  03D2  0849               	movf	lutInit@position+1,w
  5381  03D3  3D3D               	addwfc	??_lutInit+6,w
  5382  03D4  00BF               	movwf	??_lutInit+8
  5383  03D5  083E               	movf	??_lutInit+7,w
  5384  03D6  0086               	movwf	6
  5385  03D7  083F               	movf	??_lutInit+8,w
  5386  03D8  0087               	movwf	7
  5387  03D9  083B               	movf	??_lutInit+4,w
  5388  03DA  0081               	movwf	1
  5389  03DB                     l2482:	
  5390  03DB  3001               	movlw	1
  5391  03DC  07C8               	addwf	lutInit@position,f
  5392  03DD  3000               	movlw	0
  5393  03DE  3DC9               	addwfc	lutInit@position+1,f
  5394  03DF                     l2484:	
  5395  03DF  0849               	movf	lutInit@position+1,w
  5396  03E0  3A80               	xorlw	128
  5397  03E1  00B7               	movwf	??_lutInit
  5398  03E2  3081               	movlw	129
  5399  03E3  0237               	subwf	??_lutInit,w
  5400  03E4  1D03               	skipz
  5401  03E5  2BE8               	goto	u1985
  5402  03E6  3000               	movlw	0
  5403  03E7  0248               	subwf	lutInit@position,w
  5404  03E8                     u1985:	
  5405  03E8  1C03               	skipc
  5406  03E9  2BEB               	goto	u1981
  5407  03EA  2BEC               	goto	u1980
  5408  03EB                     u1981:	
  5409  03EB  2A3E               	goto	l2442
  5410  03EC                     u1980:	
  5411  03EC                     l294:	
  5412  03EC  0008               	return
  5413  03ED                     __end_of_lutInit:	
  5414                           
  5415                           	psect	text8
  5416  0E68                     __ptext8:	
  5417 ;; *************** function _eepromRead *****************
  5418 ;; Defined at:
  5419 ;;		line 33 in file "Nvm.c"
  5420 ;; Parameters:    Size  Location     Type
  5421 ;;  address         1    wreg     unsigned char 
  5422 ;; Auto vars:     Size  Location     Type
  5423 ;;  address         1    0[BANK0 ] unsigned char 
  5424 ;;  data            1    1[BANK0 ] unsigned char 
  5425 ;; Return value:  Size  Location     Type
  5426 ;;                  1    wreg      unsigned char 
  5427 ;; Registers used:
  5428 ;;		wreg
  5429 ;; Tracked objects:
  5430 ;;		On entry : 0/0
  5431 ;;		On exit  : 0/0
  5432 ;;		Unchanged: 0/0
  5433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5435 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5436 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5437 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5438 ;;Total ram usage:        3 bytes
  5439 ;; Hardware stack levels used:    1
  5440 ;; Hardware stack levels required when called:    3
  5441 ;; This function calls:
  5442 ;;		Nothing
  5443 ;; This function is called by:
  5444 ;;		_lutInit
  5445 ;; This function uses a non-reentrant model
  5446 ;;
  5447                           
  5448                           
  5449                           ;psect for function _eepromRead
  5450  0E68                     _eepromRead:	
  5451                           
  5452                           ;incstack = 0
  5453                           ; Regs used in _eepromRead: [wreg]
  5454                           ;eepromRead@address stored from wreg
  5455  0E68  0020               	movlb	0	; select bank0
  5456  0E69  00A0               	movwf	eepromRead@address
  5457  0E6A                     l2362:	
  5458                           
  5459                           ;Nvm.c: 35: char data;;Nvm.c: 37: NVMCON1bits.NVMREGS = 1;
  5460  0E6A  0030               	movlb	16	; select bank16
  5461  0E6B  171E               	bsf	30,6	;volsfr
  5462  0E6C                     l2364:	
  5463                           
  5464                           ;Nvm.c: 38: NVMADRH = 0xF0;
  5465  0E6C  30F0               	movlw	240
  5466  0E6D  009B               	movwf	27	;volatile
  5467                           
  5468                           ;Nvm.c: 39: NVMADRL = address;
  5469  0E6E  0020               	movlb	0	; select bank0
  5470  0E6F  0820               	movf	eepromRead@address,w
  5471  0E70  0030               	movlb	16	; select bank16
  5472  0E71  009A               	movwf	26	;volatile
  5473  0E72                     l2366:	
  5474                           
  5475                           ;Nvm.c: 40: NVMCON1bits.RD = 1;
  5476  0E72  141E               	bsf	30,0	;volsfr
  5477                           
  5478                           ;Nvm.c: 42: data = NVMDATL;
  5479  0E73  081C               	movf	28,w	;volatile
  5480  0E74  00F4               	movwf	??_eepromRead
  5481  0E75  0874               	movf	??_eepromRead,w
  5482  0E76  0020               	movlb	0	; select bank0
  5483  0E77  00A1               	movwf	eepromRead@data
  5484                           
  5485                           ;Nvm.c: 44: return data;
  5486  0E78  0821               	movf	eepromRead@data,w
  5487  0E79                     l441:	
  5488  0E79  0008               	return
  5489  0E7A                     __end_of_eepromRead:	
  5490                           
  5491                           	psect	text9
  5492  0ECB                     __ptext9:	
  5493 ;; *************** function _Map *****************
  5494 ;; Defined at:
  5495 ;;		line 93 in file "Controller.c"
  5496 ;; Parameters:    Size  Location     Type
  5497 ;;  x               2   13[BANK0 ] int 
  5498 ;;  inMin           2   15[BANK0 ] int 
  5499 ;;  inMax           2   17[BANK0 ] int 
  5500 ;;  outMin          2   19[BANK0 ] int 
  5501 ;;  outMax          2   21[BANK0 ] int 
  5502 ;; Auto vars:     Size  Location     Type
  5503 ;;		None
  5504 ;; Return value:  Size  Location     Type
  5505 ;;                  1    wreg      unsigned char 
  5506 ;; Registers used:
  5507 ;;		wreg, status,2, status,0, pclath, cstack
  5508 ;; Tracked objects:
  5509 ;;		On entry : 0/0
  5510 ;;		On exit  : 0/0
  5511 ;;		Unchanged: 0/0
  5512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5513 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5516 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5517 ;;Total ram usage:       10 bytes
  5518 ;; Hardware stack levels used:    1
  5519 ;; Hardware stack levels required when called:    4
  5520 ;; This function calls:
  5521 ;;		___awdiv
  5522 ;;		___wmul
  5523 ;; This function is called by:
  5524 ;;		_lutInit
  5525 ;; This function uses a non-reentrant model
  5526 ;;
  5527                           
  5528                           
  5529                           ;psect for function _Map
  5530  0ECB                     _Map:	
  5531  0ECB                     l2358:	
  5532                           ;incstack = 0
  5533                           ; Regs used in _Map: [wreg+status,2+status,0+pclath+cstack]
  5534                           
  5535                           
  5536                           ;Controller.c: 95: return (((x - inMin) * (outMax - outMin)) / (inMax - inMin)) + outMin
      +                          ;
  5537  0ECB  0020               	movlb	0	; select bank0
  5538  0ECC  082F               	movf	Map@inMin,w
  5539  0ECD  0231               	subwf	Map@inMax,w
  5540  0ECE  00A4               	movwf	___awdiv@divisor
  5541  0ECF  0830               	movf	Map@inMin+1,w
  5542  0ED0  3B32               	subwfb	Map@inMax+1,w
  5543  0ED1  00A5               	movwf	___awdiv@divisor+1
  5544  0ED2  082F               	movf	Map@inMin,w
  5545  0ED3  022D               	subwf	Map@x,w
  5546  0ED4  00A0               	movwf	___wmul@multiplier
  5547  0ED5  0830               	movf	Map@inMin+1,w
  5548  0ED6  3B2E               	subwfb	Map@x+1,w
  5549  0ED7  00A1               	movwf	___wmul@multiplier+1
  5550  0ED8  0833               	movf	Map@outMin,w
  5551  0ED9  0235               	subwf	Map@outMax,w
  5552  0EDA  00A2               	movwf	___wmul@multiplicand
  5553  0EDB  0834               	movf	Map@outMin+1,w
  5554  0EDC  3B36               	subwfb	Map@outMax+1,w
  5555  0EDD  00A3               	movwf	___wmul@multiplicand+1
  5556  0EDE  318E  26AB  318E   	fcall	___wmul
  5557  0EE1  0020               	movlb	0	; select bank0
  5558  0EE2  0821               	movf	?___wmul+1,w
  5559  0EE3  00A7               	movwf	___awdiv@dividend+1
  5560  0EE4  0820               	movf	?___wmul,w
  5561  0EE5  00A6               	movwf	___awdiv@dividend
  5562  0EE6  3187  2799  318E   	fcall	___awdiv
  5563  0EE9  0020               	movlb	0	; select bank0
  5564  0EEA  0824               	movf	?___awdiv,w
  5565  0EEB  0733               	addwf	Map@outMin,w
  5566  0EEC                     l273:	
  5567  0EEC  0008               	return
  5568  0EED                     __end_of_Map:	
  5569                           
  5570                           	psect	text10
  5571  0EAB                     __ptext10:	
  5572 ;; *************** function ___wmul *****************
  5573 ;; Defined at:
  5574 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  5575 ;; Parameters:    Size  Location     Type
  5576 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5577 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5578 ;; Auto vars:     Size  Location     Type
  5579 ;;  product         2    4[COMMON] unsigned int 
  5580 ;; Return value:  Size  Location     Type
  5581 ;;                  2    0[BANK0 ] unsigned int 
  5582 ;; Registers used:
  5583 ;;		wreg, status,2, status,0
  5584 ;; Tracked objects:
  5585 ;;		On entry : 0/0
  5586 ;;		On exit  : 0/0
  5587 ;;		Unchanged: 0/0
  5588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5589 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5590 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5592 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5593 ;;Total ram usage:        6 bytes
  5594 ;; Hardware stack levels used:    1
  5595 ;; Hardware stack levels required when called:    3
  5596 ;; This function calls:
  5597 ;;		Nothing
  5598 ;; This function is called by:
  5599 ;;		_Map
  5600 ;; This function uses a non-reentrant model
  5601 ;;
  5602                           
  5603                           
  5604                           ;psect for function ___wmul
  5605  0EAB                     ___wmul:	
  5606  0EAB                     l2302:	
  5607                           ;incstack = 0
  5608                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5609                           
  5610  0EAB  01F4               	clrf	___wmul@product
  5611  0EAC  01F5               	clrf	___wmul@product+1
  5612  0EAD                     l2304:	
  5613  0EAD  0020               	movlb	0	; select bank0
  5614  0EAE  1C20               	btfss	___wmul@multiplier,0
  5615  0EAF  2EB1               	goto	u1631
  5616  0EB0  2EB2               	goto	u1630
  5617  0EB1                     u1631:	
  5618  0EB1  2EB6               	goto	l596
  5619  0EB2                     u1630:	
  5620  0EB2                     l2306:	
  5621  0EB2  0822               	movf	___wmul@multiplicand,w
  5622  0EB3  07F4               	addwf	___wmul@product,f
  5623  0EB4  0823               	movf	___wmul@multiplicand+1,w
  5624  0EB5  3DF5               	addwfc	___wmul@product+1,f
  5625  0EB6                     l596:	
  5626  0EB6  3001               	movlw	1
  5627  0EB7                     u1645:	
  5628  0EB7  35A2               	lslf	___wmul@multiplicand,f
  5629  0EB8  0DA3               	rlf	___wmul@multiplicand+1,f
  5630  0EB9  0B89               	decfsz	9,f
  5631  0EBA  2EB7               	goto	u1645
  5632  0EBB                     l2308:	
  5633  0EBB  3001               	movlw	1
  5634  0EBC                     u1655:	
  5635  0EBC  36A1               	lsrf	___wmul@multiplier+1,f
  5636  0EBD  0CA0               	rrf	___wmul@multiplier,f
  5637  0EBE  0B89               	decfsz	9,f
  5638  0EBF  2EBC               	goto	u1655
  5639  0EC0                     l2310:	
  5640  0EC0  0820               	movf	___wmul@multiplier,w
  5641  0EC1  0421               	iorwf	___wmul@multiplier+1,w
  5642  0EC2  1D03               	btfss	3,2
  5643  0EC3  2EC5               	goto	u1661
  5644  0EC4  2EC6               	goto	u1660
  5645  0EC5                     u1661:	
  5646  0EC5  2EAD               	goto	l2304
  5647  0EC6                     u1660:	
  5648  0EC6                     l2312:	
  5649  0EC6  0875               	movf	___wmul@product+1,w
  5650  0EC7  00A1               	movwf	?___wmul+1
  5651  0EC8  0874               	movf	___wmul@product,w
  5652  0EC9  00A0               	movwf	?___wmul
  5653  0ECA                     l598:	
  5654  0ECA  0008               	return
  5655  0ECB                     __end_of___wmul:	
  5656                           
  5657                           	psect	text11
  5658  0799                     __ptext11:	
  5659 ;; *************** function ___awdiv *****************
  5660 ;; Defined at:
  5661 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  5662 ;; Parameters:    Size  Location     Type
  5663 ;;  divisor         2    4[BANK0 ] int 
  5664 ;;  dividend        2    6[BANK0 ] int 
  5665 ;; Auto vars:     Size  Location     Type
  5666 ;;  quotient        2   11[BANK0 ] int 
  5667 ;;  sign            1   10[BANK0 ] unsigned char 
  5668 ;;  counter         1    9[BANK0 ] unsigned char 
  5669 ;; Return value:  Size  Location     Type
  5670 ;;                  2    4[BANK0 ] int 
  5671 ;; Registers used:
  5672 ;;		wreg, status,2, status,0
  5673 ;; Tracked objects:
  5674 ;;		On entry : 0/0
  5675 ;;		On exit  : 0/0
  5676 ;;		Unchanged: 0/0
  5677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5678 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5679 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5680 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5681 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5682 ;;Total ram usage:        9 bytes
  5683 ;; Hardware stack levels used:    1
  5684 ;; Hardware stack levels required when called:    3
  5685 ;; This function calls:
  5686 ;;		Nothing
  5687 ;; This function is called by:
  5688 ;;		_Map
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692                           
  5693                           ;psect for function ___awdiv
  5694  0799                     ___awdiv:	
  5695  0799                     l1718:	
  5696                           ;incstack = 0
  5697                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5698                           
  5699  0799  0020               	movlb	0	; select bank0
  5700  079A  01AA               	clrf	___awdiv@sign
  5701  079B                     l1720:	
  5702  079B  1FA5               	btfss	___awdiv@divisor+1,7
  5703  079C  2F9E               	goto	u861
  5704  079D  2F9F               	goto	u860
  5705  079E                     u861:	
  5706  079E  2FA6               	goto	l1726
  5707  079F                     u860:	
  5708  079F                     l1722:	
  5709  079F  09A4               	comf	___awdiv@divisor,f
  5710  07A0  09A5               	comf	___awdiv@divisor+1,f
  5711  07A1  0AA4               	incf	___awdiv@divisor,f
  5712  07A2  1903               	skipnz
  5713  07A3  0AA5               	incf	___awdiv@divisor+1,f
  5714  07A4                     l1724:	
  5715  07A4  01AA               	clrf	___awdiv@sign
  5716  07A5  0AAA               	incf	___awdiv@sign,f
  5717  07A6                     l1726:	
  5718  07A6  1FA7               	btfss	___awdiv@dividend+1,7
  5719  07A7  2FA9               	goto	u871
  5720  07A8  2FAA               	goto	u870
  5721  07A9                     u871:	
  5722  07A9  2FB3               	goto	l1732
  5723  07AA                     u870:	
  5724  07AA                     l1728:	
  5725  07AA  09A6               	comf	___awdiv@dividend,f
  5726  07AB  09A7               	comf	___awdiv@dividend+1,f
  5727  07AC  0AA6               	incf	___awdiv@dividend,f
  5728  07AD  1903               	skipnz
  5729  07AE  0AA7               	incf	___awdiv@dividend+1,f
  5730  07AF                     l1730:	
  5731  07AF  3001               	movlw	1
  5732  07B0  00A8               	movwf	??___awdiv
  5733  07B1  0828               	movf	??___awdiv,w
  5734  07B2  06AA               	xorwf	___awdiv@sign,f
  5735  07B3                     l1732:	
  5736  07B3  01AB               	clrf	___awdiv@quotient
  5737  07B4  01AC               	clrf	___awdiv@quotient+1
  5738  07B5                     l1734:	
  5739  07B5  0824               	movf	___awdiv@divisor,w
  5740  07B6  0425               	iorwf	___awdiv@divisor+1,w
  5741  07B7  1903               	btfsc	3,2
  5742  07B8  2FBA               	goto	u881
  5743  07B9  2FBB               	goto	u880
  5744  07BA                     u881:	
  5745  07BA  2FEA               	goto	l1754
  5746  07BB                     u880:	
  5747  07BB                     l1736:	
  5748  07BB  01A9               	clrf	___awdiv@counter
  5749  07BC  0AA9               	incf	___awdiv@counter,f
  5750  07BD  2FC7               	goto	l1742
  5751  07BE                     l1738:	
  5752  07BE  3001               	movlw	1
  5753  07BF                     u895:	
  5754  07BF  35A4               	lslf	___awdiv@divisor,f
  5755  07C0  0DA5               	rlf	___awdiv@divisor+1,f
  5756  07C1  0B89               	decfsz	9,f
  5757  07C2  2FBF               	goto	u895
  5758  07C3                     l1740:	
  5759  07C3  3001               	movlw	1
  5760  07C4  00A8               	movwf	??___awdiv
  5761  07C5  0828               	movf	??___awdiv,w
  5762  07C6  07A9               	addwf	___awdiv@counter,f
  5763  07C7                     l1742:	
  5764  07C7  1FA5               	btfss	___awdiv@divisor+1,7
  5765  07C8  2FCA               	goto	u901
  5766  07C9  2FCB               	goto	u900
  5767  07CA                     u901:	
  5768  07CA  2FBE               	goto	l1738
  5769  07CB                     u900:	
  5770  07CB                     l1744:	
  5771  07CB  3001               	movlw	1
  5772  07CC                     u915:	
  5773  07CC  35AB               	lslf	___awdiv@quotient,f
  5774  07CD  0DAC               	rlf	___awdiv@quotient+1,f
  5775  07CE  0B89               	decfsz	9,f
  5776  07CF  2FCC               	goto	u915
  5777  07D0  0825               	movf	___awdiv@divisor+1,w
  5778  07D1  0227               	subwf	___awdiv@dividend+1,w
  5779  07D2  1D03               	skipz
  5780  07D3  2FD6               	goto	u925
  5781  07D4  0824               	movf	___awdiv@divisor,w
  5782  07D5  0226               	subwf	___awdiv@dividend,w
  5783  07D6                     u925:	
  5784  07D6  1C03               	skipc
  5785  07D7  2FD9               	goto	u921
  5786  07D8  2FDA               	goto	u920
  5787  07D9                     u921:	
  5788  07D9  2FDF               	goto	l1750
  5789  07DA                     u920:	
  5790  07DA                     l1746:	
  5791  07DA  0824               	movf	___awdiv@divisor,w
  5792  07DB  02A6               	subwf	___awdiv@dividend,f
  5793  07DC  0825               	movf	___awdiv@divisor+1,w
  5794  07DD  3BA7               	subwfb	___awdiv@dividend+1,f
  5795  07DE                     l1748:	
  5796  07DE  142B               	bsf	___awdiv@quotient,0
  5797  07DF                     l1750:	
  5798  07DF  3001               	movlw	1
  5799  07E0                     u935:	
  5800  07E0  36A5               	lsrf	___awdiv@divisor+1,f
  5801  07E1  0CA4               	rrf	___awdiv@divisor,f
  5802  07E2  0B89               	decfsz	9,f
  5803  07E3  2FE0               	goto	u935
  5804  07E4                     l1752:	
  5805  07E4  3001               	movlw	1
  5806  07E5  02A9               	subwf	___awdiv@counter,f
  5807  07E6  1D03               	btfss	3,2
  5808  07E7  2FE9               	goto	u941
  5809  07E8  2FEA               	goto	u940
  5810  07E9                     u941:	
  5811  07E9  2FCB               	goto	l1744
  5812  07EA                     u940:	
  5813  07EA                     l1754:	
  5814  07EA  082A               	movf	___awdiv@sign,w
  5815  07EB  1903               	btfsc	3,2
  5816  07EC  2FEE               	goto	u951
  5817  07ED  2FEF               	goto	u950
  5818  07EE                     u951:	
  5819  07EE  2FF4               	goto	l1758
  5820  07EF                     u950:	
  5821  07EF                     l1756:	
  5822  07EF  09AB               	comf	___awdiv@quotient,f
  5823  07F0  09AC               	comf	___awdiv@quotient+1,f
  5824  07F1  0AAB               	incf	___awdiv@quotient,f
  5825  07F2  1903               	skipnz
  5826  07F3  0AAC               	incf	___awdiv@quotient+1,f
  5827  07F4                     l1758:	
  5828  07F4  082C               	movf	___awdiv@quotient+1,w
  5829  07F5  00A5               	movwf	?___awdiv+1
  5830  07F6  082B               	movf	___awdiv@quotient,w
  5831  07F7  00A4               	movwf	?___awdiv
  5832  07F8                     l749:	
  5833  07F8  0008               	return
  5834  07F9                     __end_of___awdiv:	
  5835                           
  5836                           	psect	text12
  5837  03ED                     __ptext12:	
  5838 ;; *************** function _configureController *****************
  5839 ;; Defined at:
  5840 ;;		line 186 in file "Controller.c"
  5841 ;; Parameters:    Size  Location     Type
  5842 ;;		None
  5843 ;; Auto vars:     Size  Location     Type
  5844 ;;  ry              1   19[BANK0 ] unsigned char 
  5845 ;;  rx              1   18[BANK0 ] unsigned char 
  5846 ;;  ly              1   17[BANK0 ] unsigned char 
  5847 ;;  lx              1   16[BANK0 ] unsigned char 
  5848 ;;  ryMax           1   15[BANK0 ] unsigned char 
  5849 ;;  ryMin           1   14[BANK0 ] unsigned char 
  5850 ;;  rxMax           1   13[BANK0 ] unsigned char 
  5851 ;;  rxMin           1   12[BANK0 ] unsigned char 
  5852 ;;  lyMax           1   11[BANK0 ] unsigned char 
  5853 ;;  lyMin           1   10[BANK0 ] unsigned char 
  5854 ;;  lxMax           1    9[BANK0 ] unsigned char 
  5855 ;;  lxMin           1    8[BANK0 ] unsigned char 
  5856 ;; Return value:  Size  Location     Type
  5857 ;;                  1    wreg      void 
  5858 ;; Registers used:
  5859 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5860 ;; Tracked objects:
  5861 ;;		On entry : 0/0
  5862 ;;		On exit  : 0/0
  5863 ;;		Unchanged: 0/0
  5864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5866 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5867 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5868 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5869 ;;Total ram usage:       13 bytes
  5870 ;; Hardware stack levels used:    1
  5871 ;; Hardware stack levels required when called:    5
  5872 ;; This function calls:
  5873 ;;		_eepromWrite
  5874 ;;		_readADC
  5875 ;;		_readController
  5876 ;; This function is called by:
  5877 ;;		_main
  5878 ;; This function uses a non-reentrant model
  5879 ;;
  5880                           
  5881                           
  5882                           ;psect for function _configureController
  5883  03ED                     _configureController:	
  5884  03ED                     l2486:	
  5885                           ;incstack = 0
  5886                           ; Regs used in _configureController: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5887                           
  5888                           
  5889                           ;Controller.c: 189: INTCONbits.GIE = 0;
  5890  03ED  138B               	bcf	11,7	;volatile
  5891                           
  5892                           ;Controller.c: 190: INTCONbits.PEIE = 0;
  5893  03EE  130B               	bcf	11,6	;volatile
  5894  03EF                     l2488:	
  5895                           
  5896                           ;Controller.c: 192: char lxMin = readADC(0b010000);
  5897  03EF  3010               	movlw	16
  5898  03F0  00F4               	movwf	readADC@channel
  5899  03F1  3000               	movlw	0
  5900  03F2  00F5               	movwf	readADC@channel+1
  5901  03F3  318F  2710  3183   	fcall	_readADC
  5902  03F6  0874               	movf	?_readADC,w
  5903  03F7  0020               	movlb	0	; select bank0
  5904  03F8  00A7               	movwf	??_configureController
  5905  03F9  0827               	movf	??_configureController,w
  5906  03FA  00A8               	movwf	configureController@lxMin
  5907                           
  5908                           ;Controller.c: 193: char lxMax = readADC(0b010000);
  5909  03FB  3010               	movlw	16
  5910  03FC  00F4               	movwf	readADC@channel
  5911  03FD  3000               	movlw	0
  5912  03FE  00F5               	movwf	readADC@channel+1
  5913  03FF  318F  2710  3183   	fcall	_readADC
  5914  0402  0874               	movf	?_readADC,w
  5915  0403  0020               	movlb	0	; select bank0
  5916  0404  00A7               	movwf	??_configureController
  5917  0405  0827               	movf	??_configureController,w
  5918  0406  00A9               	movwf	configureController@lxMax
  5919                           
  5920                           ;Controller.c: 194: char lyMin = readADC(0b10001);
  5921  0407  3011               	movlw	17
  5922  0408  00F4               	movwf	readADC@channel
  5923  0409  3000               	movlw	0
  5924  040A  00F5               	movwf	readADC@channel+1
  5925  040B  318F  2710  3183   	fcall	_readADC
  5926  040E  0874               	movf	?_readADC,w
  5927  040F  0020               	movlb	0	; select bank0
  5928  0410  00A7               	movwf	??_configureController
  5929  0411  0827               	movf	??_configureController,w
  5930  0412  00AA               	movwf	configureController@lyMin
  5931                           
  5932                           ;Controller.c: 195: char lyMax = readADC(0b10001);
  5933  0413  3011               	movlw	17
  5934  0414  00F4               	movwf	readADC@channel
  5935  0415  3000               	movlw	0
  5936  0416  00F5               	movwf	readADC@channel+1
  5937  0417  318F  2710  3183   	fcall	_readADC
  5938  041A  0874               	movf	?_readADC,w
  5939  041B  0020               	movlb	0	; select bank0
  5940  041C  00A7               	movwf	??_configureController
  5941  041D  0827               	movf	??_configureController,w
  5942  041E  00AB               	movwf	configureController@lyMax
  5943                           
  5944                           ;Controller.c: 197: char rxMin = readADC(0b010110);
  5945  041F  3016               	movlw	22
  5946  0420  00F4               	movwf	readADC@channel
  5947  0421  3000               	movlw	0
  5948  0422  00F5               	movwf	readADC@channel+1
  5949  0423  318F  2710  3183   	fcall	_readADC
  5950  0426  0874               	movf	?_readADC,w
  5951  0427  0020               	movlb	0	; select bank0
  5952  0428  00A7               	movwf	??_configureController
  5953  0429  0827               	movf	??_configureController,w
  5954  042A  00AC               	movwf	configureController@rxMin
  5955                           
  5956                           ;Controller.c: 198: char rxMax = readADC(0b010110);
  5957  042B  3016               	movlw	22
  5958  042C  00F4               	movwf	readADC@channel
  5959  042D  3000               	movlw	0
  5960  042E  00F5               	movwf	readADC@channel+1
  5961  042F  318F  2710  3183   	fcall	_readADC
  5962  0432  0874               	movf	?_readADC,w
  5963  0433  0020               	movlb	0	; select bank0
  5964  0434  00A7               	movwf	??_configureController
  5965  0435  0827               	movf	??_configureController,w
  5966  0436  00AD               	movwf	configureController@rxMax
  5967                           
  5968                           ;Controller.c: 199: char ryMin = readADC(0b010111);
  5969  0437  3017               	movlw	23
  5970  0438  00F4               	movwf	readADC@channel
  5971  0439  3000               	movlw	0
  5972  043A  00F5               	movwf	readADC@channel+1
  5973  043B  318F  2710  3183   	fcall	_readADC
  5974  043E  0874               	movf	?_readADC,w
  5975  043F  0020               	movlb	0	; select bank0
  5976  0440  00A7               	movwf	??_configureController
  5977  0441  0827               	movf	??_configureController,w
  5978  0442  00AE               	movwf	configureController@ryMin
  5979                           
  5980                           ;Controller.c: 200: char ryMax = readADC(0b010111);
  5981  0443  3017               	movlw	23
  5982  0444  00F4               	movwf	readADC@channel
  5983  0445  3000               	movlw	0
  5984  0446  00F5               	movwf	readADC@channel+1
  5985  0447  318F  2710  3183   	fcall	_readADC
  5986  044A  0874               	movf	?_readADC,w
  5987  044B  0020               	movlb	0	; select bank0
  5988  044C  00A7               	movwf	??_configureController
  5989  044D  0827               	movf	??_configureController,w
  5990  044E  00AF               	movwf	configureController@ryMax
  5991  044F                     l2490:	
  5992                           
  5993                           ;Controller.c: 212: readController(0);
  5994  044F  3000               	movlw	0
  5995  0450  3185  254D  3183   	fcall	_readController
  5996  0453                     l2492:	
  5997                           
  5998                           ;Controller.c: 215: if (digitalStateFirst == 0x6F && digitalStateSecond == 0x3F) {
  5999  0453  306F               	movlw	111
  6000  0454  0020               	movlb	0	; select bank0
  6001  0455  0655               	xorwf	_digitalStateFirst,w
  6002  0456  1D03               	btfss	3,2
  6003  0457  2C59               	goto	u1991
  6004  0458  2C5A               	goto	u1990
  6005  0459                     u1991:	
  6006  0459  2C75               	goto	l2508
  6007  045A                     u1990:	
  6008  045A                     l2494:	
  6009  045A  303F               	movlw	63
  6010  045B  0654               	xorwf	_digitalStateSecond,w
  6011  045C  1D03               	btfss	3,2
  6012  045D  2C5F               	goto	u2001
  6013  045E  2C60               	goto	u2000
  6014  045F                     u2001:	
  6015  045F  2C75               	goto	l2508
  6016  0460                     u2000:	
  6017  0460                     l2496:	
  6018                           
  6019                           ;Controller.c: 218: lxMin = 0;
  6020  0460  01A8               	clrf	configureController@lxMin
  6021  0461                     l2498:	
  6022                           
  6023                           ;Controller.c: 219: lxMax = 255;
  6024  0461  30FF               	movlw	255
  6025  0462  00A7               	movwf	??_configureController
  6026  0463  0827               	movf	??_configureController,w
  6027  0464  00A9               	movwf	configureController@lxMax
  6028  0465                     l2500:	
  6029                           
  6030                           ;Controller.c: 220: lyMin = 0;
  6031  0465  01AA               	clrf	configureController@lyMin
  6032                           
  6033                           ;Controller.c: 221: lyMax = 255;
  6034  0466  30FF               	movlw	255
  6035  0467  00A7               	movwf	??_configureController
  6036  0468  0827               	movf	??_configureController,w
  6037  0469  00AB               	movwf	configureController@lyMax
  6038  046A                     l2502:	
  6039                           
  6040                           ;Controller.c: 223: rxMin = 0;
  6041  046A  01AC               	clrf	configureController@rxMin
  6042  046B                     l2504:	
  6043                           
  6044                           ;Controller.c: 224: rxMax = 255;
  6045  046B  30FF               	movlw	255
  6046  046C  00A7               	movwf	??_configureController
  6047  046D  0827               	movf	??_configureController,w
  6048  046E  00AD               	movwf	configureController@rxMax
  6049                           
  6050                           ;Controller.c: 225: ryMin = 0;
  6051  046F  01AE               	clrf	configureController@ryMin
  6052  0470                     l2506:	
  6053                           
  6054                           ;Controller.c: 226: ryMax = 255;
  6055  0470  30FF               	movlw	255
  6056  0471  00A7               	movwf	??_configureController
  6057  0472  0827               	movf	??_configureController,w
  6058  0473  00AF               	movwf	configureController@ryMax
  6059                           
  6060                           ;Controller.c: 228: break;
  6061  0474  2D03               	goto	l2534
  6062  0475                     l2508:	
  6063                           
  6064                           ;Controller.c: 229: };Controller.c: 232: if (digitalStateFirst == 0x7F && digitalStateSe
      +                          cond == 0xCF) {
  6065  0475  307F               	movlw	127
  6066  0476  0655               	xorwf	_digitalStateFirst,w
  6067  0477  1D03               	btfss	3,2
  6068  0478  2C7A               	goto	u2011
  6069  0479  2C7B               	goto	u2010
  6070  047A                     u2011:	
  6071  047A  2C82               	goto	l2514
  6072  047B                     u2010:	
  6073  047B                     l2510:	
  6074  047B  30CF               	movlw	207
  6075  047C  0654               	xorwf	_digitalStateSecond,w
  6076  047D  1D03               	btfss	3,2
  6077  047E  2C80               	goto	u2021
  6078  047F  2C81               	goto	u2020
  6079  0480                     u2021:	
  6080  0480  2C82               	goto	l2514
  6081  0481                     u2020:	
  6082  0481  2D03               	goto	l2534
  6083  0482                     l2514:	
  6084                           
  6085                           ;Controller.c: 235: };Controller.c: 237: lx = readADC(0b010000);
  6086  0482  3010               	movlw	16
  6087  0483  00F4               	movwf	readADC@channel
  6088  0484  3000               	movlw	0
  6089  0485  00F5               	movwf	readADC@channel+1
  6090  0486  318F  2710  3183   	fcall	_readADC
  6091  0489  0874               	movf	?_readADC,w
  6092  048A  0020               	movlb	0	; select bank0
  6093  048B  00A7               	movwf	??_configureController
  6094  048C  0827               	movf	??_configureController,w
  6095  048D  00B0               	movwf	configureController@lx
  6096                           
  6097                           ;Controller.c: 238: ly = readADC(0b10001);
  6098  048E  3011               	movlw	17
  6099  048F  00F4               	movwf	readADC@channel
  6100  0490  3000               	movlw	0
  6101  0491  00F5               	movwf	readADC@channel+1
  6102  0492  318F  2710  3183   	fcall	_readADC
  6103  0495  0874               	movf	?_readADC,w
  6104  0496  0020               	movlb	0	; select bank0
  6105  0497  00A7               	movwf	??_configureController
  6106  0498  0827               	movf	??_configureController,w
  6107  0499  00B1               	movwf	configureController@ly
  6108                           
  6109                           ;Controller.c: 240: rx = readADC(0b010110);
  6110  049A  3016               	movlw	22
  6111  049B  00F4               	movwf	readADC@channel
  6112  049C  3000               	movlw	0
  6113  049D  00F5               	movwf	readADC@channel+1
  6114  049E  318F  2710  3183   	fcall	_readADC
  6115  04A1  0874               	movf	?_readADC,w
  6116  04A2  0020               	movlb	0	; select bank0
  6117  04A3  00A7               	movwf	??_configureController
  6118  04A4  0827               	movf	??_configureController,w
  6119  04A5  00B2               	movwf	configureController@rx
  6120                           
  6121                           ;Controller.c: 241: ry = readADC(0b010111);
  6122  04A6  3017               	movlw	23
  6123  04A7  00F4               	movwf	readADC@channel
  6124  04A8  3000               	movlw	0
  6125  04A9  00F5               	movwf	readADC@channel+1
  6126  04AA  318F  2710  3183   	fcall	_readADC
  6127  04AD  0874               	movf	?_readADC,w
  6128  04AE  0020               	movlb	0	; select bank0
  6129  04AF  00A7               	movwf	??_configureController
  6130  04B0  0827               	movf	??_configureController,w
  6131  04B1  00B3               	movwf	configureController@ry
  6132  04B2                     l2516:	
  6133                           
  6134                           ;Controller.c: 244: if (ly > lyMax) {
  6135  04B2  0831               	movf	configureController@ly,w
  6136  04B3  022B               	subwf	configureController@lyMax,w
  6137  04B4  1803               	skipnc
  6138  04B5  2CB7               	goto	u2031
  6139  04B6  2CB8               	goto	u2030
  6140  04B7                     u2031:	
  6141  04B7  2CBC               	goto	l313
  6142  04B8                     u2030:	
  6143  04B8                     l2518:	
  6144                           
  6145                           ;Controller.c: 245: lyMax = ly;
  6146  04B8  0831               	movf	configureController@ly,w
  6147  04B9  00A7               	movwf	??_configureController
  6148  04BA  0827               	movf	??_configureController,w
  6149  04BB  00AB               	movwf	configureController@lyMax
  6150  04BC                     l313:	
  6151                           
  6152                           ;Controller.c: 246: };Controller.c: 248: if (ly < lyMin) {
  6153  04BC  082A               	movf	configureController@lyMin,w
  6154  04BD  0231               	subwf	configureController@ly,w
  6155  04BE  1803               	skipnc
  6156  04BF  2CC1               	goto	u2041
  6157  04C0  2CC2               	goto	u2040
  6158  04C1                     u2041:	
  6159  04C1  2CC6               	goto	l314
  6160  04C2                     u2040:	
  6161  04C2                     l2520:	
  6162                           
  6163                           ;Controller.c: 249: lyMin = ly;
  6164  04C2  0831               	movf	configureController@ly,w
  6165  04C3  00A7               	movwf	??_configureController
  6166  04C4  0827               	movf	??_configureController,w
  6167  04C5  00AA               	movwf	configureController@lyMin
  6168  04C6                     l314:	
  6169                           
  6170                           ;Controller.c: 250: };Controller.c: 252: if (lx > lxMax) {
  6171  04C6  0830               	movf	configureController@lx,w
  6172  04C7  0229               	subwf	configureController@lxMax,w
  6173  04C8  1803               	skipnc
  6174  04C9  2CCB               	goto	u2051
  6175  04CA  2CCC               	goto	u2050
  6176  04CB                     u2051:	
  6177  04CB  2CD0               	goto	l315
  6178  04CC                     u2050:	
  6179  04CC                     l2522:	
  6180                           
  6181                           ;Controller.c: 253: lxMax = lx;
  6182  04CC  0830               	movf	configureController@lx,w
  6183  04CD  00A7               	movwf	??_configureController
  6184  04CE  0827               	movf	??_configureController,w
  6185  04CF  00A9               	movwf	configureController@lxMax
  6186  04D0                     l315:	
  6187                           
  6188                           ;Controller.c: 254: };Controller.c: 256: if (lx < lxMin) {
  6189  04D0  0828               	movf	configureController@lxMin,w
  6190  04D1  0230               	subwf	configureController@lx,w
  6191  04D2  1803               	skipnc
  6192  04D3  2CD5               	goto	u2061
  6193  04D4  2CD6               	goto	u2060
  6194  04D5                     u2061:	
  6195  04D5  2CDA               	goto	l316
  6196  04D6                     u2060:	
  6197  04D6                     l2524:	
  6198                           
  6199                           ;Controller.c: 257: lxMin = lx;
  6200  04D6  0830               	movf	configureController@lx,w
  6201  04D7  00A7               	movwf	??_configureController
  6202  04D8  0827               	movf	??_configureController,w
  6203  04D9  00A8               	movwf	configureController@lxMin
  6204  04DA                     l316:	
  6205                           
  6206                           ;Controller.c: 258: };Controller.c: 262: if (ry > ryMax) {
  6207  04DA  0833               	movf	configureController@ry,w
  6208  04DB  022F               	subwf	configureController@ryMax,w
  6209  04DC  1803               	skipnc
  6210  04DD  2CDF               	goto	u2071
  6211  04DE  2CE0               	goto	u2070
  6212  04DF                     u2071:	
  6213  04DF  2CE4               	goto	l317
  6214  04E0                     u2070:	
  6215  04E0                     l2526:	
  6216                           
  6217                           ;Controller.c: 263: ryMax = ry;
  6218  04E0  0833               	movf	configureController@ry,w
  6219  04E1  00A7               	movwf	??_configureController
  6220  04E2  0827               	movf	??_configureController,w
  6221  04E3  00AF               	movwf	configureController@ryMax
  6222  04E4                     l317:	
  6223                           
  6224                           ;Controller.c: 264: };Controller.c: 266: if (ry < ryMin) {
  6225  04E4  082E               	movf	configureController@ryMin,w
  6226  04E5  0233               	subwf	configureController@ry,w
  6227  04E6  1803               	skipnc
  6228  04E7  2CE9               	goto	u2081
  6229  04E8  2CEA               	goto	u2080
  6230  04E9                     u2081:	
  6231  04E9  2CEE               	goto	l318
  6232  04EA                     u2080:	
  6233  04EA                     l2528:	
  6234                           
  6235                           ;Controller.c: 267: ryMin = ry;
  6236  04EA  0833               	movf	configureController@ry,w
  6237  04EB  00A7               	movwf	??_configureController
  6238  04EC  0827               	movf	??_configureController,w
  6239  04ED  00AE               	movwf	configureController@ryMin
  6240  04EE                     l318:	
  6241                           
  6242                           ;Controller.c: 268: };Controller.c: 270: if (rx > rxMax) {
  6243  04EE  0832               	movf	configureController@rx,w
  6244  04EF  022D               	subwf	configureController@rxMax,w
  6245  04F0  1803               	skipnc
  6246  04F1  2CF3               	goto	u2091
  6247  04F2  2CF4               	goto	u2090
  6248  04F3                     u2091:	
  6249  04F3  2CF8               	goto	l319
  6250  04F4                     u2090:	
  6251  04F4                     l2530:	
  6252                           
  6253                           ;Controller.c: 271: rxMax = rx;
  6254  04F4  0832               	movf	configureController@rx,w
  6255  04F5  00A7               	movwf	??_configureController
  6256  04F6  0827               	movf	??_configureController,w
  6257  04F7  00AD               	movwf	configureController@rxMax
  6258  04F8                     l319:	
  6259                           
  6260                           ;Controller.c: 272: };Controller.c: 274: if (rx < rxMin) {
  6261  04F8  082C               	movf	configureController@rxMin,w
  6262  04F9  0232               	subwf	configureController@rx,w
  6263  04FA  1803               	skipnc
  6264  04FB  2CFD               	goto	u2101
  6265  04FC  2CFE               	goto	u2100
  6266  04FD                     u2101:	
  6267  04FD  2C4F               	goto	l2490
  6268  04FE                     u2100:	
  6269  04FE                     l2532:	
  6270                           
  6271                           ;Controller.c: 275: rxMin = rx;
  6272  04FE  0832               	movf	configureController@rx,w
  6273  04FF  00A7               	movwf	??_configureController
  6274  0500  0827               	movf	??_configureController,w
  6275  0501  00AC               	movwf	configureController@rxMin
  6276  0502  2C4F               	goto	l2490
  6277  0503                     l2534:	
  6278                           
  6279                           ;Controller.c: 276: };Controller.c: 279: };Controller.c: 281: eepromWrite(0x60, lxMin);
  6280  0503  0828               	movf	configureController@lxMin,w
  6281  0504  00A7               	movwf	??_configureController
  6282  0505  0827               	movf	??_configureController,w
  6283  0506  00F4               	movwf	eepromWrite@data
  6284  0507  3060               	movlw	96
  6285  0508  318E  26ED  3183   	fcall	_eepromWrite
  6286                           
  6287                           ;Controller.c: 282: eepromWrite(0x61, lxMax);
  6288  050B  0020               	movlb	0	; select bank0
  6289  050C  0829               	movf	configureController@lxMax,w
  6290  050D  00A7               	movwf	??_configureController
  6291  050E  0827               	movf	??_configureController,w
  6292  050F  00F4               	movwf	eepromWrite@data
  6293  0510  3061               	movlw	97
  6294  0511  318E  26ED  3183   	fcall	_eepromWrite
  6295                           
  6296                           ;Controller.c: 283: eepromWrite(0x62, lyMin);
  6297  0514  0020               	movlb	0	; select bank0
  6298  0515  082A               	movf	configureController@lyMin,w
  6299  0516  00A7               	movwf	??_configureController
  6300  0517  0827               	movf	??_configureController,w
  6301  0518  00F4               	movwf	eepromWrite@data
  6302  0519  3062               	movlw	98
  6303  051A  318E  26ED  3183   	fcall	_eepromWrite
  6304                           
  6305                           ;Controller.c: 284: eepromWrite(0x63, lyMax);
  6306  051D  0020               	movlb	0	; select bank0
  6307  051E  082B               	movf	configureController@lyMax,w
  6308  051F  00A7               	movwf	??_configureController
  6309  0520  0827               	movf	??_configureController,w
  6310  0521  00F4               	movwf	eepromWrite@data
  6311  0522  3063               	movlw	99
  6312  0523  318E  26ED  3183   	fcall	_eepromWrite
  6313                           
  6314                           ;Controller.c: 286: eepromWrite(0x64, rxMin);
  6315  0526  0020               	movlb	0	; select bank0
  6316  0527  082C               	movf	configureController@rxMin,w
  6317  0528  00A7               	movwf	??_configureController
  6318  0529  0827               	movf	??_configureController,w
  6319  052A  00F4               	movwf	eepromWrite@data
  6320  052B  3064               	movlw	100
  6321  052C  318E  26ED  3183   	fcall	_eepromWrite
  6322                           
  6323                           ;Controller.c: 287: eepromWrite(0x65, rxMax);
  6324  052F  0020               	movlb	0	; select bank0
  6325  0530  082D               	movf	configureController@rxMax,w
  6326  0531  00A7               	movwf	??_configureController
  6327  0532  0827               	movf	??_configureController,w
  6328  0533  00F4               	movwf	eepromWrite@data
  6329  0534  3065               	movlw	101
  6330  0535  318E  26ED  3183   	fcall	_eepromWrite
  6331                           
  6332                           ;Controller.c: 288: eepromWrite(0x66, ryMin);
  6333  0538  0020               	movlb	0	; select bank0
  6334  0539  082E               	movf	configureController@ryMin,w
  6335  053A  00A7               	movwf	??_configureController
  6336  053B  0827               	movf	??_configureController,w
  6337  053C  00F4               	movwf	eepromWrite@data
  6338  053D  3066               	movlw	102
  6339  053E  318E  26ED  3183   	fcall	_eepromWrite
  6340                           
  6341                           ;Controller.c: 289: eepromWrite(0x67, ryMax);
  6342  0541  0020               	movlb	0	; select bank0
  6343  0542  082F               	movf	configureController@ryMax,w
  6344  0543  00A7               	movwf	??_configureController
  6345  0544  0827               	movf	??_configureController,w
  6346  0545  00F4               	movwf	eepromWrite@data
  6347  0546  3067               	movlw	103
  6348  0547  318E  26ED  3183   	fcall	_eepromWrite
  6349  054A                     l2536:	
  6350                           
  6351                           ;Controller.c: 291: INTCONbits.GIE = 1;
  6352  054A  178B               	bsf	11,7	;volatile
  6353  054B                     l2538:	
  6354                           
  6355                           ;Controller.c: 292: INTCONbits.PEIE = 1;
  6356  054B  170B               	bsf	11,6	;volatile
  6357  054C                     l322:	
  6358  054C  0008               	return
  6359  054D                     __end_of_configureController:	
  6360                           
  6361                           	psect	text13
  6362  054D                     __ptext13:	
  6363 ;; *************** function _readController *****************
  6364 ;; Defined at:
  6365 ;;		line 12 in file "Controller.c"
  6366 ;; Parameters:    Size  Location     Type
  6367 ;;  analogMode      1    wreg     unsigned char 
  6368 ;; Auto vars:     Size  Location     Type
  6369 ;;  analogMode      1    0[BANK0 ] unsigned char 
  6370 ;; Return value:  Size  Location     Type
  6371 ;;                  1    wreg      void 
  6372 ;; Registers used:
  6373 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6374 ;; Tracked objects:
  6375 ;;		On entry : 0/0
  6376 ;;		On exit  : 0/0
  6377 ;;		Unchanged: 0/0
  6378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6380 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6381 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6382 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6383 ;;Total ram usage:        3 bytes
  6384 ;; Hardware stack levels used:    1
  6385 ;; Hardware stack levels required when called:    3
  6386 ;; This function calls:
  6387 ;;		Nothing
  6388 ;; This function is called by:
  6389 ;;		_main
  6390 ;;		_configureController
  6391 ;; This function uses a non-reentrant model
  6392 ;;
  6393                           
  6394                           
  6395                           ;psect for function _readController
  6396  054D                     _readController:	
  6397                           
  6398                           ;incstack = 0
  6399                           ; Regs used in _readController: [wreg-fsr1h+status,2+status,0]
  6400                           ;readController@analogMode stored from wreg
  6401  054D  0020               	movlb	0	; select bank0
  6402  054E  00A0               	movwf	readController@analogMode
  6403  054F                     l2316:	
  6404                           
  6405                           ;Controller.c: 15: DigitalControllerByte1[DDown] = RA7;
  6406  054F  3000               	movlw	0
  6407  0550  1B8C               	btfsc	12,7	;volatile
  6408  0551  3001               	movlw	1
  6409  0552  0021               	movlb	1	; select bank1
  6410  0553  00C9               	movwf	(_DigitalControllerByte1^(0+128)+1)
  6411                           
  6412                           ;Controller.c: 16: DigitalControllerByte1[DUp] = RA6;
  6413  0554  3000               	movlw	0
  6414  0555  0020               	movlb	0	; select bank0
  6415  0556  1B0C               	btfsc	12,6	;volatile
  6416  0557  3001               	movlw	1
  6417  0558  0021               	movlb	1	; select bank1
  6418  0559  00CB               	movwf	(_DigitalControllerByte1^(0+128)+3)
  6419                           
  6420                           ;Controller.c: 17: DigitalControllerByte1[DLeft] = RB0;
  6421  055A  3000               	movlw	0
  6422  055B  0020               	movlb	0	; select bank0
  6423  055C  180D               	btfsc	13,0	;volatile
  6424  055D  3001               	movlw	1
  6425  055E  0021               	movlb	1	; select bank1
  6426  055F  00C8               	movwf	_DigitalControllerByte1^(0+128)
  6427                           
  6428                           ;Controller.c: 18: DigitalControllerByte1[DRight] = RB1;
  6429  0560  3000               	movlw	0
  6430  0561  0020               	movlb	0	; select bank0
  6431  0562  188D               	btfsc	13,1	;volatile
  6432  0563  3001               	movlw	1
  6433  0564  0021               	movlb	1	; select bank1
  6434  0565  00CA               	movwf	(_DigitalControllerByte1^(0+128)+2)
  6435                           
  6436                           ;Controller.c: 19: DigitalControllerByte1[R3] = RD0;
  6437  0566  3000               	movlw	0
  6438  0567  0020               	movlb	0	; select bank0
  6439  0568  180F               	btfsc	15,0	;volatile
  6440  0569  3001               	movlw	1
  6441  056A  0021               	movlb	1	; select bank1
  6442  056B  00CD               	movwf	(_DigitalControllerByte1^(0+128)+5)
  6443                           
  6444                           ;Controller.c: 20: DigitalControllerByte1[L3] = RC2;
  6445  056C  3000               	movlw	0
  6446  056D  0020               	movlb	0	; select bank0
  6447  056E  190E               	btfsc	14,2	;volatile
  6448  056F  3001               	movlw	1
  6449  0570  0021               	movlb	1	; select bank1
  6450  0571  00CE               	movwf	(_DigitalControllerByte1^(0+128)+6)
  6451                           
  6452                           ;Controller.c: 21: DigitalControllerByte1[Start] = RB6;
  6453  0572  3000               	movlw	0
  6454  0573  0020               	movlb	0	; select bank0
  6455  0574  1B0D               	btfsc	13,6	;volatile
  6456  0575  3001               	movlw	1
  6457  0576  0021               	movlb	1	; select bank1
  6458  0577  00CC               	movwf	(_DigitalControllerByte1^(0+128)+4)
  6459                           
  6460                           ;Controller.c: 22: DigitalControllerByte1[Select] = RB7;
  6461  0578  3000               	movlw	0
  6462  0579  0020               	movlb	0	; select bank0
  6463  057A  1B8D               	btfsc	13,7	;volatile
  6464  057B  3001               	movlw	1
  6465  057C  0021               	movlb	1	; select bank1
  6466  057D  00CF               	movwf	(_DigitalControllerByte1^(0+128)+7)
  6467                           
  6468                           ;Controller.c: 24: DigitalControllerByte2[Square] = RA0;
  6469  057E  3000               	movlw	0
  6470  057F  0020               	movlb	0	; select bank0
  6471  0580  180C               	btfsc	12,0	;volatile
  6472  0581  3001               	movlw	1
  6473  0582  0021               	movlb	1	; select bank1
  6474  0583  00C0               	movwf	_DigitalControllerByte2^(0+128)
  6475                           
  6476                           ;Controller.c: 25: DigitalControllerByte2[Circle] = RA3;
  6477  0584  3000               	movlw	0
  6478  0585  0020               	movlb	0	; select bank0
  6479  0586  198C               	btfsc	12,3	;volatile
  6480  0587  3001               	movlw	1
  6481  0588  0021               	movlb	1	; select bank1
  6482  0589  00C2               	movwf	(_DigitalControllerByte2^(0+128)+2)
  6483                           
  6484                           ;Controller.c: 26: DigitalControllerByte2[X] = RA2;
  6485  058A  3000               	movlw	0
  6486  058B  0020               	movlb	0	; select bank0
  6487  058C  190C               	btfsc	12,2	;volatile
  6488  058D  3001               	movlw	1
  6489  058E  0021               	movlb	1	; select bank1
  6490  058F  00C1               	movwf	(_DigitalControllerByte2^(0+128)+1)
  6491                           
  6492                           ;Controller.c: 27: DigitalControllerByte2[Triangle] = RA1;
  6493  0590  3000               	movlw	0
  6494  0591  0020               	movlb	0	; select bank0
  6495  0592  188C               	btfsc	12,1	;volatile
  6496  0593  3001               	movlw	1
  6497  0594  0021               	movlb	1	; select bank1
  6498  0595  00C3               	movwf	(_DigitalControllerByte2^(0+128)+3)
  6499                           
  6500                           ;Controller.c: 28: DigitalControllerByte2[R1] = RB4;
  6501  0596  3000               	movlw	0
  6502  0597  0020               	movlb	0	; select bank0
  6503  0598  1A0D               	btfsc	13,4	;volatile
  6504  0599  3001               	movlw	1
  6505  059A  0021               	movlb	1	; select bank1
  6506  059B  00C4               	movwf	(_DigitalControllerByte2^(0+128)+4)
  6507                           
  6508                           ;Controller.c: 29: DigitalControllerByte2[R2] = RB5;
  6509  059C  3000               	movlw	0
  6510  059D  0020               	movlb	0	; select bank0
  6511  059E  1A8D               	btfsc	13,5	;volatile
  6512  059F  3001               	movlw	1
  6513  05A0  0021               	movlb	1	; select bank1
  6514  05A1  00C6               	movwf	(_DigitalControllerByte2^(0+128)+6)
  6515                           
  6516                           ;Controller.c: 30: DigitalControllerByte2[L1] = RB2;
  6517  05A2  3000               	movlw	0
  6518  05A3  0020               	movlb	0	; select bank0
  6519  05A4  190D               	btfsc	13,2	;volatile
  6520  05A5  3001               	movlw	1
  6521  05A6  0021               	movlb	1	; select bank1
  6522  05A7  00C5               	movwf	(_DigitalControllerByte2^(0+128)+5)
  6523                           
  6524                           ;Controller.c: 31: DigitalControllerByte2[L2] = RB3;
  6525  05A8  3000               	movlw	0
  6526  05A9  0020               	movlb	0	; select bank0
  6527  05AA  198D               	btfsc	13,3	;volatile
  6528  05AB  3001               	movlw	1
  6529  05AC  0021               	movlb	1	; select bank1
  6530  05AD  00C7               	movwf	(_DigitalControllerByte2^(0+128)+7)
  6531  05AE                     l2318:	
  6532                           
  6533                           ;Controller.c: 36: if (index > Select) {
  6534  05AE  3008               	movlw	8
  6535  05AF  0279               	subwf	_index,w
  6536  05B0  1C03               	skipc
  6537  05B1  2DB3               	goto	u1671
  6538  05B2  2DB4               	goto	u1670
  6539  05B3                     u1671:	
  6540  05B3  2DB5               	goto	l2322
  6541  05B4                     u1670:	
  6542  05B4                     l2320:	
  6543                           
  6544                           ;Controller.c: 37: index = 0;
  6545  05B4  01F9               	clrf	_index
  6546  05B5                     l2322:	
  6547                           
  6548                           ;Controller.c: 38: };Controller.c: 41: if (!DigitalControllerByte1[index]) {
  6549  05B5  0879               	movf	_index,w
  6550  05B6  3EC8               	addlw	(low (_DigitalControllerByte1| 0))& (0+255)
  6551  05B7  0086               	movwf	6
  6552  05B8  0187               	clrf	7
  6553  05B9  0801               	movf	1,w
  6554  05BA  1D03               	btfss	3,2
  6555  05BB  2DBD               	goto	u1681
  6556  05BC  2DBE               	goto	u1680
  6557  05BD                     u1681:	
  6558  05BD  2DC6               	goto	l260
  6559  05BE                     u1680:	
  6560  05BE                     l2324:	
  6561                           
  6562                           ;Controller.c: 42: IndexDigitalByte1[index]++;
  6563  05BE  3001               	movlw	1
  6564  05BF  00F4               	movwf	??_readController
  6565  05C0  0879               	movf	_index,w
  6566  05C1  3EA8               	addlw	(low (_IndexDigitalByte1| 0))& (0+255)
  6567  05C2  0086               	movwf	6
  6568  05C3  0187               	clrf	7
  6569  05C4  0874               	movf	??_readController,w
  6570  05C5  0781               	addwf	1,f
  6571  05C6                     l260:	
  6572                           
  6573                           ;Controller.c: 43: };Controller.c: 44: if (!DigitalControllerByte2[index]) {
  6574  05C6  0879               	movf	_index,w
  6575  05C7  3EC0               	addlw	(low (_DigitalControllerByte2| 0))& (0+255)
  6576  05C8  0086               	movwf	6
  6577  05C9  0187               	clrf	7
  6578  05CA  0801               	movf	1,w
  6579  05CB  1D03               	btfss	3,2
  6580  05CC  2DCE               	goto	u1691
  6581  05CD  2DCF               	goto	u1690
  6582  05CE                     u1691:	
  6583  05CE  2DD7               	goto	l2328
  6584  05CF                     u1690:	
  6585  05CF                     l2326:	
  6586                           
  6587                           ;Controller.c: 45: IndexDigitalByte2[index]++;
  6588  05CF  3001               	movlw	1
  6589  05D0  00F4               	movwf	??_readController
  6590  05D1  0879               	movf	_index,w
  6591  05D2  3EA0               	addlw	(low (_IndexDigitalByte2| 0))& (0+255)
  6592  05D3  0086               	movwf	6
  6593  05D4  0187               	clrf	7
  6594  05D5  0874               	movf	??_readController,w
  6595  05D6  0781               	addwf	1,f
  6596  05D7                     l2328:	
  6597                           
  6598                           ;Controller.c: 46: };Controller.c: 49: if (DigitalControllerByte1[index] ^ PreviousDigit
      +                          alByte1[index]) {
  6599  05D7  0879               	movf	_index,w
  6600  05D8  3EB8               	addlw	(low (_PreviousDigitalByte1| 0))& (0+255)
  6601  05D9  0086               	movwf	6
  6602  05DA  0187               	clrf	7
  6603  05DB  0879               	movf	_index,w
  6604  05DC  3EC8               	addlw	(low (_DigitalControllerByte1| 0))& (0+255)
  6605  05DD  0084               	movwf	4
  6606  05DE  0185               	clrf	5
  6607  05DF  0800               	movf	0,w
  6608  05E0  0601               	xorwf	1,w
  6609  05E1  1903               	btfsc	3,2
  6610  05E2  2DE4               	goto	u1701
  6611  05E3  2DE5               	goto	u1700
  6612  05E4                     u1701:	
  6613  05E4  2E00               	goto	l2338
  6614  05E5                     u1700:	
  6615  05E5                     l2330:	
  6616                           
  6617                           ;Controller.c: 50: IndexDigitalByte1[index] = 0;
  6618  05E5  0879               	movf	_index,w
  6619  05E6  3EA8               	addlw	(low (_IndexDigitalByte1| 0))& (0+255)
  6620  05E7  0086               	movwf	6
  6621  05E8  0187               	clrf	7
  6622  05E9  0181               	clrf	1
  6623  05EA                     l2332:	
  6624                           
  6625                           ;Controller.c: 51: digitalStateFirst |= 1 << index;
  6626  05EA  3001               	movlw	1
  6627  05EB  00F4               	movwf	??_readController
  6628  05EC  0A79               	incf	_index,w
  6629  05ED  2DEF               	goto	u1714
  6630  05EE                     u1715:	
  6631  05EE  35F4               	lslf	??_readController,f
  6632  05EF                     u1714:	
  6633  05EF  0B89               	decfsz	9,f
  6634  05F0  2DEE               	goto	u1715
  6635  05F1  0874               	movf	??_readController,w
  6636  05F2  00F5               	movwf	??_readController+1
  6637  05F3  0875               	movf	??_readController+1,w
  6638  05F4  0020               	movlb	0	; select bank0
  6639  05F5  04D5               	iorwf	_digitalStateFirst,f
  6640  05F6                     l2334:	
  6641                           
  6642                           ;Controller.c: 53: if (analogMode) {
  6643  05F6  0820               	movf	readController@analogMode,w
  6644  05F7  1903               	btfsc	3,2
  6645  05F8  2DFA               	goto	u1721
  6646  05F9  2DFB               	goto	u1720
  6647  05FA                     u1721:	
  6648  05FA  2E00               	goto	l2338
  6649  05FB                     u1720:	
  6650  05FB                     l2336:	
  6651                           
  6652                           ;Controller.c: 54: analogStateFirst[index] = 0x00;
  6653  05FB  0879               	movf	_index,w
  6654  05FC  3ED8               	addlw	(low (_analogStateFirst| 0))& (0+255)
  6655  05FD  0086               	movwf	6
  6656  05FE  0187               	clrf	7
  6657  05FF  0181               	clrf	1
  6658  0600                     l2338:	
  6659                           
  6660                           ;Controller.c: 55: };Controller.c: 57: };Controller.c: 58: if (DigitalControllerByte2[in
      +                          dex] ^ PreviousDigitalByte2[index]) {
  6661  0600  0879               	movf	_index,w
  6662  0601  3EB0               	addlw	(low (_PreviousDigitalByte2| 0))& (0+255)
  6663  0602  0086               	movwf	6
  6664  0603  0187               	clrf	7
  6665  0604  0879               	movf	_index,w
  6666  0605  3EC0               	addlw	(low (_DigitalControllerByte2| 0))& (0+255)
  6667  0606  0084               	movwf	4
  6668  0607  0185               	clrf	5
  6669  0608  0800               	movf	0,w
  6670  0609  0601               	xorwf	1,w
  6671  060A  1903               	btfsc	3,2
  6672  060B  2E0D               	goto	u1731
  6673  060C  2E0E               	goto	u1730
  6674  060D                     u1731:	
  6675  060D  2E29               	goto	l264
  6676  060E                     u1730:	
  6677  060E                     l2340:	
  6678                           
  6679                           ;Controller.c: 59: IndexDigitalByte2[index] = 0;
  6680  060E  0879               	movf	_index,w
  6681  060F  3EA0               	addlw	(low (_IndexDigitalByte2| 0))& (0+255)
  6682  0610  0086               	movwf	6
  6683  0611  0187               	clrf	7
  6684  0612  0181               	clrf	1
  6685  0613                     l2342:	
  6686                           
  6687                           ;Controller.c: 60: digitalStateSecond |= 1 << index;
  6688  0613  3001               	movlw	1
  6689  0614  00F4               	movwf	??_readController
  6690  0615  0A79               	incf	_index,w
  6691  0616  2E18               	goto	u1744
  6692  0617                     u1745:	
  6693  0617  35F4               	lslf	??_readController,f
  6694  0618                     u1744:	
  6695  0618  0B89               	decfsz	9,f
  6696  0619  2E17               	goto	u1745
  6697  061A  0874               	movf	??_readController,w
  6698  061B  00F5               	movwf	??_readController+1
  6699  061C  0875               	movf	??_readController+1,w
  6700  061D  0020               	movlb	0	; select bank0
  6701  061E  04D4               	iorwf	_digitalStateSecond,f
  6702  061F                     l2344:	
  6703                           
  6704                           ;Controller.c: 62: if (analogMode) {
  6705  061F  0820               	movf	readController@analogMode,w
  6706  0620  1903               	btfsc	3,2
  6707  0621  2E23               	goto	u1751
  6708  0622  2E24               	goto	u1750
  6709  0623                     u1751:	
  6710  0623  2E29               	goto	l264
  6711  0624                     u1750:	
  6712  0624                     l2346:	
  6713                           
  6714                           ;Controller.c: 63: analogStateSecond[index] = 0x00;
  6715  0624  0879               	movf	_index,w
  6716  0625  3ED0               	addlw	(low (_analogStateSecond| 0))& (0+255)
  6717  0626  0086               	movwf	6
  6718  0627  0187               	clrf	7
  6719  0628  0181               	clrf	1
  6720  0629                     l264:	
  6721  0629  0879               	movf	_index,w
  6722  062A  3EA8               	addlw	(low (_IndexDigitalByte1| 0))& (0+255)
  6723  062B  0086               	movwf	6
  6724  062C  0187               	clrf	7
  6725  062D  3003               	movlw	3
  6726  062E  0201               	subwf	1,w
  6727  062F  1C03               	skipc
  6728  0630  2E32               	goto	u1761
  6729  0631  2E33               	goto	u1760
  6730  0632                     u1761:	
  6731  0632  2E4D               	goto	l266
  6732  0633                     u1760:	
  6733  0633                     l2348:	
  6734                           
  6735                           ;Controller.c: 70: digitalStateFirst &= ~(1 << index);
  6736  0633  3001               	movlw	1
  6737  0634  00F4               	movwf	??_readController
  6738  0635  0A79               	incf	_index,w
  6739  0636  2E38               	goto	u1774
  6740  0637                     u1775:	
  6741  0637  35F4               	lslf	??_readController,f
  6742  0638                     u1774:	
  6743  0638  0B89               	decfsz	9,f
  6744  0639  2E37               	goto	u1775
  6745  063A  0874               	movf	??_readController,w
  6746  063B  3AFF               	xorlw	255
  6747  063C  00F5               	movwf	??_readController+1
  6748  063D  0875               	movf	??_readController+1,w
  6749  063E  0020               	movlb	0	; select bank0
  6750  063F  05D5               	andwf	_digitalStateFirst,f
  6751                           
  6752                           ;Controller.c: 72: if (analogMode) {
  6753  0640  0820               	movf	readController@analogMode,w
  6754  0641  1903               	btfsc	3,2
  6755  0642  2E44               	goto	u1781
  6756  0643  2E45               	goto	u1780
  6757  0644                     u1781:	
  6758  0644  2E4D               	goto	l266
  6759  0645                     u1780:	
  6760  0645                     l2350:	
  6761                           
  6762                           ;Controller.c: 73: analogStateFirst[index] = 0xFF;
  6763  0645  30FF               	movlw	255
  6764  0646  00F4               	movwf	??_readController
  6765  0647  0879               	movf	_index,w
  6766  0648  3ED8               	addlw	(low (_analogStateFirst| 0))& (0+255)
  6767  0649  0086               	movwf	6
  6768  064A  0187               	clrf	7
  6769  064B  0874               	movf	??_readController,w
  6770  064C  0081               	movwf	1
  6771  064D                     l266:	
  6772  064D  0879               	movf	_index,w
  6773  064E  3EA0               	addlw	(low (_IndexDigitalByte2| 0))& (0+255)
  6774  064F  0086               	movwf	6
  6775  0650  0187               	clrf	7
  6776  0651  3003               	movlw	3
  6777  0652  0201               	subwf	1,w
  6778  0653  1C03               	skipc
  6779  0654  2E56               	goto	u1791
  6780  0655  2E57               	goto	u1790
  6781  0656                     u1791:	
  6782  0656  2E71               	goto	l268
  6783  0657                     u1790:	
  6784  0657                     l2352:	
  6785                           
  6786                           ;Controller.c: 78: digitalStateSecond &= ~(1 << index);
  6787  0657  3001               	movlw	1
  6788  0658  00F4               	movwf	??_readController
  6789  0659  0A79               	incf	_index,w
  6790  065A  2E5C               	goto	u1804
  6791  065B                     u1805:	
  6792  065B  35F4               	lslf	??_readController,f
  6793  065C                     u1804:	
  6794  065C  0B89               	decfsz	9,f
  6795  065D  2E5B               	goto	u1805
  6796  065E  0874               	movf	??_readController,w
  6797  065F  3AFF               	xorlw	255
  6798  0660  00F5               	movwf	??_readController+1
  6799  0661  0875               	movf	??_readController+1,w
  6800  0662  0020               	movlb	0	; select bank0
  6801  0663  05D4               	andwf	_digitalStateSecond,f
  6802                           
  6803                           ;Controller.c: 80: if (analogMode) {
  6804  0664  0820               	movf	readController@analogMode,w
  6805  0665  1903               	btfsc	3,2
  6806  0666  2E68               	goto	u1811
  6807  0667  2E69               	goto	u1810
  6808  0668                     u1811:	
  6809  0668  2E71               	goto	l268
  6810  0669                     u1810:	
  6811  0669                     l2354:	
  6812                           
  6813                           ;Controller.c: 81: analogStateSecond[index] = 0xFF;
  6814  0669  30FF               	movlw	255
  6815  066A  00F4               	movwf	??_readController
  6816  066B  0879               	movf	_index,w
  6817  066C  3ED0               	addlw	(low (_analogStateSecond| 0))& (0+255)
  6818  066D  0086               	movwf	6
  6819  066E  0187               	clrf	7
  6820  066F  0874               	movf	??_readController,w
  6821  0670  0081               	movwf	1
  6822  0671                     l268:	
  6823                           
  6824                           ;Controller.c: 82: };Controller.c: 84: };Controller.c: 87: PreviousDigitalByte1[index] =
      +                           DigitalControllerByte1[index];
  6825  0671  0879               	movf	_index,w
  6826  0672  3EC8               	addlw	(low (_DigitalControllerByte1| 0))& (0+255)
  6827  0673  0086               	movwf	6
  6828  0674  0187               	clrf	7
  6829  0675  0801               	movf	1,w
  6830  0676  00F4               	movwf	??_readController
  6831  0677  0879               	movf	_index,w
  6832  0678  3EB8               	addlw	(low (_PreviousDigitalByte1| 0))& (0+255)
  6833  0679  0086               	movwf	6
  6834  067A  0187               	clrf	7
  6835  067B  0874               	movf	??_readController,w
  6836  067C  0081               	movwf	1
  6837                           
  6838                           ;Controller.c: 88: PreviousDigitalByte2[index] = DigitalControllerByte2[index];
  6839  067D  0879               	movf	_index,w
  6840  067E  3EC0               	addlw	(low (_DigitalControllerByte2| 0))& (0+255)
  6841  067F  0086               	movwf	6
  6842  0680  0187               	clrf	7
  6843  0681  0801               	movf	1,w
  6844  0682  00F4               	movwf	??_readController
  6845  0683  0879               	movf	_index,w
  6846  0684  3EB0               	addlw	(low (_PreviousDigitalByte2| 0))& (0+255)
  6847  0685  0086               	movwf	6
  6848  0686  0187               	clrf	7
  6849  0687  0874               	movf	??_readController,w
  6850  0688  0081               	movwf	1
  6851  0689                     l2356:	
  6852                           
  6853                           ;Controller.c: 90: index++;
  6854  0689  3001               	movlw	1
  6855  068A  00F4               	movwf	??_readController
  6856  068B  0874               	movf	??_readController,w
  6857  068C  07F9               	addwf	_index,f
  6858  068D                     l270:	
  6859  068D  0008               	return
  6860  068E                     __end_of_readController:	
  6861                           
  6862                           	psect	text14
  6863  0F10                     __ptext14:	
  6864 ;; *************** function _readADC *****************
  6865 ;; Defined at:
  6866 ;;		line 156 in file "Controller.c"
  6867 ;; Parameters:    Size  Location     Type
  6868 ;;  channel         2    4[COMMON] int 
  6869 ;; Auto vars:     Size  Location     Type
  6870 ;;		None
  6871 ;; Return value:  Size  Location     Type
  6872 ;;                  2    4[COMMON] unsigned int 
  6873 ;; Registers used:
  6874 ;;		wreg, status,2, status,0
  6875 ;; Tracked objects:
  6876 ;;		On entry : 0/0
  6877 ;;		On exit  : 0/0
  6878 ;;		Unchanged: 0/0
  6879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6880 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6882 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6883 ;;      Totals:         2       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6884 ;;Total ram usage:        9 bytes
  6885 ;; Hardware stack levels used:    1
  6886 ;; Hardware stack levels required when called:    3
  6887 ;; This function calls:
  6888 ;;		Nothing
  6889 ;; This function is called by:
  6890 ;;		_readControllerAnalog
  6891 ;;		_configureController
  6892 ;; This function uses a non-reentrant model
  6893 ;;
  6894                           
  6895                           
  6896                           ;psect for function _readADC
  6897  0F10                     _readADC:	
  6898  0F10                     l1816:	
  6899                           ;incstack = 0
  6900                           ; Regs used in _readADC: [wreg+status,2+status,0]
  6901                           
  6902                           
  6903                           ;Controller.c: 157: ADPCH = channel;
  6904  0F10  0874               	movf	readADC@channel,w
  6905  0F11  0021               	movlb	1	; select bank1
  6906  0F12  009E               	movwf	30	;volatile
  6907  0F13                     l1818:	
  6908                           
  6909                           ;Controller.c: 158: ADPRE = 0x00;
  6910  0F13  019C               	clrf	28	;volatile
  6911  0F14                     l1820:	
  6912                           
  6913                           ;Controller.c: 159: ADACQ = 0x3F;
  6914  0F14  303F               	movlw	63
  6915  0F15  009D               	movwf	29	;volatile
  6916  0F16                     l1822:	
  6917                           
  6918                           ;Controller.c: 161: ADCON0bits.ADGO = 1;
  6919  0F16  1413               	bsf	19,0	;volatile
  6920  0F17                     l297:	
  6921                           ;Controller.c: 162: while (ADCON0bits.ADGO);
  6922                           
  6923  0F17  1813               	btfsc	19,0	;volatile
  6924  0F18  2F1A               	goto	u1111
  6925  0F19  2F1B               	goto	u1110
  6926  0F1A                     u1111:	
  6927  0F1A  2F17               	goto	l297
  6928  0F1B                     u1110:	
  6929  0F1B                     l1824:	
  6930                           
  6931                           ;Controller.c: 164: return ((ADRESH << 6) | (ADRESL >> 2));
  6932  0F1B  080C               	movf	12,w	;volatile
  6933  0F1C  0020               	movlb	0	; select bank0
  6934  0F1D  00A0               	movwf	??_readADC
  6935  0F1E  3002               	movlw	2
  6936  0F1F                     u1125:	
  6937  0F1F  36A0               	lsrf	??_readADC,f
  6938  0F20  0B89               	decfsz	9,f
  6939  0F21  2F1F               	goto	u1125
  6940  0F22  0820               	movf	??_readADC,w
  6941  0F23  00A1               	movwf	??_readADC+1
  6942  0F24  01A2               	clrf	??_readADC+2
  6943  0F25  0021               	movlb	1	; select bank1
  6944  0F26  080D               	movf	13,w	;volatile
  6945  0F27  0020               	movlb	0	; select bank0
  6946  0F28  00A3               	movwf	??_readADC+3
  6947  0F29  01A4               	clrf	??_readADC+4
  6948  0F2A  3006               	movlw	6
  6949  0F2B                     u1135:	
  6950  0F2B  35A3               	lslf	??_readADC+3,f
  6951  0F2C  0DA4               	rlf	??_readADC+4,f
  6952  0F2D  0B89               	decfsz	9,f
  6953  0F2E  2F2B               	goto	u1135
  6954  0F2F  0821               	movf	??_readADC+1,w
  6955  0F30  0423               	iorwf	??_readADC+3,w
  6956  0F31  00A5               	movwf	??_readADC+5
  6957  0F32  0822               	movf	??_readADC+2,w
  6958  0F33  0424               	iorwf	??_readADC+4,w
  6959  0F34  00A6               	movwf	??_readADC+6
  6960  0F35  0825               	movf	??_readADC+5,w
  6961  0F36  00F4               	movwf	?_readADC
  6962  0F37  0826               	movf	??_readADC+6,w
  6963  0F38  00F5               	movwf	?_readADC+1
  6964  0F39                     l300:	
  6965  0F39  0008               	return
  6966  0F3A                     __end_of_readADC:	
  6967                           
  6968                           	psect	text15
  6969  0EED                     __ptext15:	
  6970 ;; *************** function _eepromWrite *****************
  6971 ;; Defined at:
  6972 ;;		line 9 in file "Nvm.c"
  6973 ;; Parameters:    Size  Location     Type
  6974 ;;  address         1    wreg     unsigned char 
  6975 ;;  data            1    4[COMMON] unsigned char 
  6976 ;; Auto vars:     Size  Location     Type
  6977 ;;  address         1    0[BANK0 ] unsigned char 
  6978 ;;  interruptSta    1    1[BANK0 ] unsigned char 
  6979 ;; Return value:  Size  Location     Type
  6980 ;;                  1    wreg      void 
  6981 ;; Registers used:
  6982 ;;		wreg, status,2, status,0, pclath, cstack
  6983 ;; Tracked objects:
  6984 ;;		On entry : 0/0
  6985 ;;		On exit  : 0/0
  6986 ;;		Unchanged: 0/0
  6987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6988 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6989 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6991 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6992 ;;Total ram usage:        3 bytes
  6993 ;; Hardware stack levels used:    1
  6994 ;; Hardware stack levels required when called:    4
  6995 ;; This function calls:
  6996 ;;		_nvmUnlock
  6997 ;; This function is called by:
  6998 ;;		_configureController
  6999 ;; This function uses a non-reentrant model
  7000 ;;
  7001                           
  7002                           
  7003                           ;psect for function _eepromWrite
  7004  0EED                     _eepromWrite:	
  7005                           
  7006                           ;incstack = 0
  7007                           ; Regs used in _eepromWrite: [wreg+status,2+status,0+pclath+cstack]
  7008                           ;eepromWrite@address stored from wreg
  7009  0EED  0020               	movlb	0	; select bank0
  7010  0EEE  00A0               	movwf	eepromWrite@address
  7011  0EEF                     l2376:	
  7012                           
  7013                           ;Nvm.c: 12: unsigned char interruptStatus = INTCONbits.GIE;
  7014  0EEF  3000               	movlw	0
  7015  0EF0  1B8B               	btfsc	11,7	;volatile
  7016  0EF1  3001               	movlw	1
  7017  0EF2  00A1               	movwf	eepromWrite@interruptStatus
  7018  0EF3                     l2378:	
  7019                           
  7020                           ;Nvm.c: 14: INTCONbits.GIE = 0;
  7021  0EF3  138B               	bcf	11,7	;volatile
  7022  0EF4                     l2380:	
  7023                           
  7024                           ;Nvm.c: 16: NVMCON1bits.NVMREGS = 1;
  7025  0EF4  0030               	movlb	16	; select bank16
  7026  0EF5  171E               	bsf	30,6	;volsfr
  7027  0EF6                     l2382:	
  7028                           
  7029                           ;Nvm.c: 17: NVMCON1bits.WREN = 1;
  7030  0EF6  151E               	bsf	30,2	;volsfr
  7031  0EF7                     l2384:	
  7032                           
  7033                           ;Nvm.c: 19: NVMADRH = 0xF0;
  7034  0EF7  30F0               	movlw	240
  7035  0EF8  009B               	movwf	27	;volatile
  7036  0EF9                     l2386:	
  7037                           
  7038                           ;Nvm.c: 20: NVMADRL = address;
  7039  0EF9  0020               	movlb	0	; select bank0
  7040  0EFA  0820               	movf	eepromWrite@address,w
  7041  0EFB  0030               	movlb	16	; select bank16
  7042  0EFC  009A               	movwf	26	;volatile
  7043  0EFD                     l2388:	
  7044                           
  7045                           ;Nvm.c: 22: NVMDATL = data;
  7046  0EFD  0874               	movf	eepromWrite@data,w
  7047  0EFE  009C               	movwf	28	;volatile
  7048  0EFF                     l2390:	
  7049                           
  7050                           ;Nvm.c: 24: nvmUnlock();
  7051  0EFF  318E  2637  318E   	fcall	_nvmUnlock
  7052  0F02                     l434:	
  7053                           ;Nvm.c: 26: while (NVMCON1bits.WR);
  7054                           
  7055  0F02  0030               	movlb	16	; select bank16
  7056  0F03  189E               	btfsc	30,1	;volsfr
  7057  0F04  2F06               	goto	u1871
  7058  0F05  2F07               	goto	u1870
  7059  0F06                     u1871:	
  7060  0F06  2F02               	goto	l434
  7061  0F07                     u1870:	
  7062  0F07                     l436:	
  7063                           
  7064                           ;Nvm.c: 28: NVMCON1bits.WREN = 0;
  7065  0F07  111E               	bcf	30,2	;volsfr
  7066  0F08                     l2392:	
  7067                           
  7068                           ;Nvm.c: 30: if (interruptStatus) INTCONbits.GIE = 1;
  7069  0F08  0020               	movlb	0	; select bank0
  7070  0F09  0821               	movf	eepromWrite@interruptStatus,w
  7071  0F0A  1903               	btfsc	3,2
  7072  0F0B  2F0D               	goto	u1881
  7073  0F0C  2F0E               	goto	u1880
  7074  0F0D                     u1881:	
  7075  0F0D  2F0F               	goto	l438
  7076  0F0E                     u1880:	
  7077  0F0E                     l2394:	
  7078  0F0E  178B               	bsf	11,7	;volatile
  7079  0F0F                     l438:	
  7080  0F0F  0008               	return
  7081  0F10                     __end_of_eepromWrite:	
  7082                           
  7083                           	psect	text16
  7084  0E37                     __ptext16:	
  7085 ;; *************** function _nvmUnlock *****************
  7086 ;; Defined at:
  7087 ;;		line 48 in file "Nvm.c"
  7088 ;; Parameters:    Size  Location     Type
  7089 ;;		None
  7090 ;; Auto vars:     Size  Location     Type
  7091 ;;		None
  7092 ;; Return value:  Size  Location     Type
  7093 ;;                  1    wreg      void 
  7094 ;; Registers used:
  7095 ;;		wreg
  7096 ;; Tracked objects:
  7097 ;;		On entry : 0/0
  7098 ;;		On exit  : 0/0
  7099 ;;		Unchanged: 0/0
  7100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7105 ;;Total ram usage:        0 bytes
  7106 ;; Hardware stack levels used:    1
  7107 ;; Hardware stack levels required when called:    3
  7108 ;; This function calls:
  7109 ;;		Nothing
  7110 ;; This function is called by:
  7111 ;;		_eepromWrite
  7112 ;; This function uses a non-reentrant model
  7113 ;;
  7114                           
  7115                           
  7116                           ;psect for function _nvmUnlock
  7117  0E37                     _nvmUnlock:	
  7118  0E37                     l2298:	
  7119                           ;incstack = 0
  7120                           ; Regs used in _nvmUnlock: [wreg]
  7121                           
  7122                           
  7123                           ;Nvm.c: 50: NVMCON2 = 0x55;
  7124  0E37  3055               	movlw	85
  7125  0E38  0030               	movlb	16	; select bank16
  7126  0E39  009F               	movwf	31	;volsfr
  7127                           
  7128                           ;Nvm.c: 51: NVMCON2 = 0xAA;
  7129  0E3A  30AA               	movlw	170
  7130  0E3B  009F               	movwf	31	;volsfr
  7131  0E3C                     l2300:	
  7132                           
  7133                           ;Nvm.c: 52: NVMCON1bits.WR = 1;
  7134  0E3C  149E               	bsf	30,1	;volsfr
  7135  0E3D                     l444:	
  7136  0E3D  0008               	return
  7137  0E3E                     __end_of_nvmUnlock:	
  7138                           
  7139                           	psect	text17
  7140  0E46                     __ptext17:	
  7141 ;; *************** function _adcInit *****************
  7142 ;; Defined at:
  7143 ;;		line 21 in file "PicConfig.c"
  7144 ;; Parameters:    Size  Location     Type
  7145 ;;		None
  7146 ;; Auto vars:     Size  Location     Type
  7147 ;;		None
  7148 ;; Return value:  Size  Location     Type
  7149 ;;                  1    wreg      void 
  7150 ;; Registers used:
  7151 ;;		wreg, status,2
  7152 ;; Tracked objects:
  7153 ;;		On entry : 0/0
  7154 ;;		On exit  : 0/0
  7155 ;;		Unchanged: 0/0
  7156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7161 ;;Total ram usage:        0 bytes
  7162 ;; Hardware stack levels used:    1
  7163 ;; Hardware stack levels required when called:    3
  7164 ;; This function calls:
  7165 ;;		Nothing
  7166 ;; This function is called by:
  7167 ;;		_main
  7168 ;; This function uses a non-reentrant model
  7169 ;;
  7170                           
  7171                           
  7172                           ;psect for function _adcInit
  7173  0E46                     _adcInit:	
  7174  0E46                     l1940:	
  7175                           ;incstack = 0
  7176                           ; Regs used in _adcInit: [wreg+status,2]
  7177                           
  7178                           
  7179                           ;PicConfig.c: 22: ADCON0 = 0x04;
  7180  0E46  3004               	movlw	4
  7181  0E47  0021               	movlb	1	; select bank1
  7182  0E48  0093               	movwf	19	;volatile
  7183  0E49                     l1942:	
  7184                           
  7185                           ;PicConfig.c: 23: ADCON1 = 0;
  7186  0E49  0194               	clrf	20	;volatile
  7187  0E4A                     l1944:	
  7188                           
  7189                           ;PicConfig.c: 24: ADCON2 = 0;
  7190  0E4A  0195               	clrf	21	;volatile
  7191  0E4B                     l1946:	
  7192                           
  7193                           ;PicConfig.c: 25: ADREF = 0;
  7194  0E4B  019A               	clrf	26	;volatile
  7195  0E4C                     l1948:	
  7196                           
  7197                           ;PicConfig.c: 26: ADCLK = 0x3F;
  7198  0E4C  303F               	movlw	63
  7199  0E4D  0098               	movwf	24	;volatile
  7200  0E4E                     l1950:	
  7201                           
  7202                           ;PicConfig.c: 27: ADCON0bits.ADON = 1;
  7203  0E4E  1793               	bsf	19,7	;volatile
  7204  0E4F                     l389:	
  7205  0E4F  0008               	return
  7206  0E50                     __end_of_adcInit:	
  7207                           
  7208                           	psect	intentry
  7209  0004                     __pintentry:	
  7210 ;; *************** function _PS2Command *****************
  7211 ;; Defined at:
  7212 ;;		line 58 in file "main.c"
  7213 ;; Parameters:    Size  Location     Type
  7214 ;;		None
  7215 ;; Auto vars:     Size  Location     Type
  7216 ;;  cmd             1    3[COMMON] unsigned char 
  7217 ;; Return value:  Size  Location     Type
  7218 ;;                  1    wreg      void 
  7219 ;; Registers used:
  7220 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7221 ;; Tracked objects:
  7222 ;;		On entry : 0/0
  7223 ;;		On exit  : 0/0
  7224 ;;		Unchanged: 0/0
  7225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7227 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7228 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7229 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7230 ;;Total ram usage:        2 bytes
  7231 ;; Hardware stack levels used:    1
  7232 ;; Hardware stack levels required when called:    2
  7233 ;; This function calls:
  7234 ;;		_pollController
  7235 ;;		_spiRead
  7236 ;;		_spiWrite
  7237 ;; This function is called by:
  7238 ;;		Interrupt level 1
  7239 ;; This function uses a non-reentrant model
  7240 ;;
  7241                           
  7242  0004                     _PS2Command:	
  7243                           
  7244                           ;incstack = 0
  7245  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  7246                           
  7247                           ; Regs used in _PS2Command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7248  0005  3180               	pagesel	$
  7249  0006                     i1l2060:	
  7250                           
  7251                           ;main.c: 60: if (SSP1IF) {
  7252  0006  002E               	movlb	14	; select bank14
  7253  0007  1C0F               	btfss	15,0	;volatile
  7254  0008  280A               	goto	u145_21
  7255  0009  280B               	goto	u145_20
  7256  000A                     u145_21:	
  7257  000A  29C8               	goto	i1l154
  7258  000B                     u145_20:	
  7259  000B                     i1l2062:	
  7260                           
  7261                           ;main.c: 62: char cmd = spiRead();
  7262  000B  318E  2631  3180   	fcall	_spiRead
  7263  000E  00F2               	movwf	??_PS2Command
  7264  000F  0872               	movf	??_PS2Command,w
  7265  0010  00F3               	movwf	PS2Command@cmd
  7266                           
  7267                           ;main.c: 64: switch (cmdCounter) {
  7268  0011  2982               	goto	i1l2230
  7269  0012                     i1l2064:	
  7270                           
  7271                           ;main.c: 72: INIT_PRESSURE_SENSOR_byte3 = cmd;
  7272  0012  0873               	movf	PS2Command@cmd,w
  7273  0013  00F2               	movwf	??_PS2Command
  7274  0014  0872               	movf	??_PS2Command,w
  7275  0015  00EC               	movwf	_INIT_PRESSURE_SENSOR_byte3
  7276  0016                     i1l2066:	
  7277                           
  7278                           ;main.c: 73: analogMode_pressure = 1;
  7279  0016  01EA               	clrf	_analogMode_pressure
  7280  0017  0AEA               	incf	_analogMode_pressure,f
  7281                           
  7282                           ;main.c: 75: break;
  7283  0018  298A               	goto	i1l2232
  7284  0019                     i1l2068:	
  7285                           
  7286                           ;main.c: 78: if(cmd == 0x80)
  7287  0019  3080               	movlw	128
  7288  001A  0673               	xorwf	PS2Command@cmd,w
  7289  001B  1D03               	btfss	3,2
  7290  001C  281E               	goto	u146_21
  7291  001D  281F               	goto	u146_20
  7292  001E                     u146_21:	
  7293  001E  2821               	goto	i1l103
  7294  001F                     u146_20:	
  7295  001F                     i1l2070:	
  7296                           
  7297                           ;main.c: 79: RD4 = 1;
  7298  001F  160F               	bsf	15,4	;volatile
  7299  0020  298A               	goto	i1l2232
  7300  0021                     i1l103:	
  7301                           
  7302                           ;main.c: 80: else;main.c: 81: RD4 = 0;
  7303  0021  120F               	bcf	15,4	;volatile
  7304  0022  298A               	goto	i1l2232
  7305  0023                     i1l2072:	
  7306                           
  7307                           ;main.c: 86: if (cmd == 0x80)
  7308  0023  3080               	movlw	128
  7309  0024  0673               	xorwf	PS2Command@cmd,w
  7310  0025  1D03               	btfss	3,2
  7311  0026  2828               	goto	u147_21
  7312  0027  2829               	goto	u147_20
  7313  0028                     u147_21:	
  7314  0028  282C               	goto	i1l2076
  7315  0029                     u147_20:	
  7316  0029                     i1l2074:	
  7317                           
  7318                           ;main.c: 87: escapeMode = 1;
  7319  0029  01F6               	clrf	_escapeMode
  7320  002A  0AF6               	incf	_escapeMode,f
  7321  002B  298A               	goto	i1l2232
  7322  002C                     i1l2076:	
  7323                           
  7324                           ;main.c: 88: else;main.c: 89: escapeMode = 0;
  7325  002C  01F6               	clrf	_escapeMode
  7326  002D  298A               	goto	i1l2232
  7327  002E                     i1l2078:	
  7328                           
  7329                           ;main.c: 94: if (cmd == 0x80)
  7330  002E  3080               	movlw	128
  7331  002F  0673               	xorwf	PS2Command@cmd,w
  7332  0030  1D03               	btfss	3,2
  7333  0031  2833               	goto	u148_21
  7334  0032  2834               	goto	u148_20
  7335  0033                     u148_21:	
  7336  0033  2837               	goto	i1l2082
  7337  0034                     u148_20:	
  7338  0034                     i1l2080:	
  7339                           
  7340                           ;main.c: 95: analogMode = 1;
  7341  0034  01F7               	clrf	_analogMode
  7342  0035  0AF7               	incf	_analogMode,f
  7343  0036  2838               	goto	i1l110
  7344  0037                     i1l2082:	
  7345                           
  7346                           ;main.c: 96: else;main.c: 97: analogMode = 0; analogMode_pressure = 0;
  7347  0037  01F7               	clrf	_analogMode
  7348  0038                     i1l110:	
  7349  0038  01EA               	clrf	_analogMode_pressure
  7350                           
  7351                           ;main.c: 98: break;
  7352  0039  298A               	goto	i1l2232
  7353  003A                     i1l2084:	
  7354                           
  7355                           ;main.c: 101: if (cmd == 0x80) {
  7356  003A  3080               	movlw	128
  7357  003B  0673               	xorwf	PS2Command@cmd,w
  7358  003C  1D03               	btfss	3,2
  7359  003D  283F               	goto	u149_21
  7360  003E  2840               	goto	u149_20
  7361  003F                     u149_21:	
  7362  003F  2853               	goto	i1l2096
  7363  0040                     u149_20:	
  7364  0040                     i1l2086:	
  7365                           
  7366                           ;main.c: 102: response[2] = 0x00;
  7367  0040  01D8               	clrf	_response+2
  7368                           
  7369                           ;main.c: 103: response[3] = 0x00;
  7370  0041  01D9               	clrf	_response+3
  7371  0042                     i1l2088:	
  7372                           
  7373                           ;main.c: 104: response[4] = 0x80;
  7374  0042  3080               	movlw	128
  7375  0043  00F2               	movwf	??_PS2Command
  7376  0044  0872               	movf	??_PS2Command,w
  7377  0045  00DA               	movwf	_response+4
  7378  0046                     i1l2090:	
  7379                           
  7380                           ;main.c: 105: response[5] = 0x80;
  7381  0046  3080               	movlw	128
  7382  0047  00F2               	movwf	??_PS2Command
  7383  0048  0872               	movf	??_PS2Command,w
  7384  0049  00DB               	movwf	_response+5
  7385  004A                     i1l2092:	
  7386                           
  7387                           ;main.c: 106: response[6] = 0x80;
  7388  004A  3080               	movlw	128
  7389  004B  00F2               	movwf	??_PS2Command
  7390  004C  0872               	movf	??_PS2Command,w
  7391  004D  00DC               	movwf	_response+6
  7392  004E                     i1l2094:	
  7393                           
  7394                           ;main.c: 107: response[7] = 0x28;
  7395  004E  3028               	movlw	40
  7396  004F  00F2               	movwf	??_PS2Command
  7397  0050  0872               	movf	??_PS2Command,w
  7398  0051  00DD               	movwf	_response+7
  7399                           
  7400                           ;main.c: 108: } else {
  7401  0052  298A               	goto	i1l2232
  7402  0053                     i1l2096:	
  7403                           
  7404                           ;main.c: 109: response[2] = 0x00;
  7405  0053  01D8               	clrf	_response+2
  7406                           
  7407                           ;main.c: 110: response[3] = 0x00;
  7408  0054  01D9               	clrf	_response+3
  7409  0055                     i1l2098:	
  7410                           
  7411                           ;main.c: 111: response[4] = 0x80;
  7412  0055  3080               	movlw	128
  7413  0056  00F2               	movwf	??_PS2Command
  7414  0057  0872               	movf	??_PS2Command,w
  7415  0058  00DA               	movwf	_response+4
  7416  0059                     i1l2100:	
  7417                           
  7418                           ;main.c: 112: response[5] = 0x40;
  7419  0059  3040               	movlw	64
  7420  005A  00F2               	movwf	??_PS2Command
  7421  005B  0872               	movf	??_PS2Command,w
  7422  005C  00DB               	movwf	_response+5
  7423                           
  7424                           ;main.c: 113: response[6] = 0x00;
  7425  005D  01DC               	clrf	_response+6
  7426  005E                     i1l2102:	
  7427                           
  7428                           ;main.c: 114: response[7] = 0x50;
  7429  005E  3050               	movlw	80
  7430  005F  00F2               	movwf	??_PS2Command
  7431  0060  0872               	movf	??_PS2Command,w
  7432  0061  00DD               	movwf	_response+7
  7433  0062  298A               	goto	i1l2232
  7434  0063                     i1l2104:	
  7435                           
  7436                           ;main.c: 121: if (cmd == 0x80) {
  7437  0063  3080               	movlw	128
  7438  0064  0673               	xorwf	PS2Command@cmd,w
  7439  0065  1D03               	btfss	3,2
  7440  0066  2868               	goto	u150_21
  7441  0067  2869               	goto	u150_20
  7442  0068                     u150_21:	
  7443  0068  2873               	goto	i1l2114
  7444  0069                     u150_20:	
  7445  0069                     i1l2106:	
  7446                           
  7447                           ;main.c: 122: response[2] = 0x00;
  7448  0069  01D8               	clrf	_response+2
  7449                           
  7450                           ;main.c: 123: response[3] = 0x00;
  7451  006A  01D9               	clrf	_response+3
  7452                           
  7453                           ;main.c: 124: response[4] = 0x00;
  7454  006B  01DA               	clrf	_response+4
  7455  006C                     i1l2108:	
  7456                           
  7457                           ;main.c: 125: response[5] = 0xE0;
  7458  006C  30E0               	movlw	224
  7459  006D  00F2               	movwf	??_PS2Command
  7460  006E  0872               	movf	??_PS2Command,w
  7461  006F  00DB               	movwf	_response+5
  7462  0070                     i1l2110:	
  7463                           
  7464                           ;main.c: 126: response[6] = 0x00;
  7465  0070  01DC               	clrf	_response+6
  7466  0071                     i1l2112:	
  7467                           
  7468                           ;main.c: 127: response[7] = 0x00;
  7469  0071  01DD               	clrf	_response+7
  7470                           
  7471                           ;main.c: 128: } else {
  7472  0072  298A               	goto	i1l2232
  7473  0073                     i1l2114:	
  7474                           
  7475                           ;main.c: 129: response[2] = 0x00;
  7476  0073  01D8               	clrf	_response+2
  7477                           
  7478                           ;main.c: 130: response[3] = 0x00;
  7479  0074  01D9               	clrf	_response+3
  7480                           
  7481                           ;main.c: 131: response[4] = 0x00;
  7482  0075  01DA               	clrf	_response+4
  7483  0076                     i1l2116:	
  7484                           
  7485                           ;main.c: 132: response[5] = 0x20;
  7486  0076  3020               	movlw	32
  7487  0077  00F2               	movwf	??_PS2Command
  7488  0078  0872               	movf	??_PS2Command,w
  7489  0079  00DB               	movwf	_response+5
  7490  007A  2870               	goto	i1l2110
  7491  007B                     i1l2124:	
  7492  007B  0020               	movlb	0	; select bank0
  7493  007C  086D               	movf	_previousCmd,w
  7494                           
  7495                           ; Switch size 1, requested type "simple"
  7496                           ; Number of cases is 7, Range of values is 2 to 242
  7497                           ; switch strategies available:
  7498                           ; Name         Instructions Cycles
  7499                           ; simple_byte           22    12 (average)
  7500                           ; jumptable            263     9 (fixed)
  7501                           ;	Chosen strategy is simple_byte
  7502  007D  3A02               	xorlw	2	; case 2
  7503  007E  1903               	skipnz
  7504  007F  2812               	goto	i1l2064
  7505  0080  3A20               	xorlw	32	; case 34
  7506  0081  1903               	skipnz
  7507  0082  282E               	goto	i1l2078
  7508  0083  3A10               	xorlw	16	; case 50
  7509  0084  1903               	skipnz
  7510  0085  2863               	goto	i1l2104
  7511  0086  3A70               	xorlw	112	; case 66
  7512  0087  1903               	skipnz
  7513  0088  2819               	goto	i1l2068
  7514  0089  3A20               	xorlw	32	; case 98
  7515  008A  1903               	skipnz
  7516  008B  283A               	goto	i1l2084
  7517  008C  3AA0               	xorlw	160	; case 194
  7518  008D  1903               	skipnz
  7519  008E  2823               	goto	i1l2072
  7520  008F  3A30               	xorlw	48	; case 242
  7521  0090  1903               	skipnz
  7522  0091  298A               	goto	i1l2232
  7523  0092  298A               	goto	i1l2232
  7524  0093                     i1l2126:	
  7525                           
  7526                           ;main.c: 153: INIT_PRESSURE_SENSOR_byte4 = cmd;
  7527  0093  0873               	movf	PS2Command@cmd,w
  7528  0094  00F2               	movwf	??_PS2Command
  7529  0095  0872               	movf	??_PS2Command,w
  7530  0096  00EB               	movwf	_INIT_PRESSURE_SENSOR_byte4
  7531  0097  2816               	goto	i1l2066
  7532  0098                     i1l2130:	
  7533  0098  298A               	goto	i1l2232
  7534  0099                     i1l2136:	
  7535  0099  0020               	movlb	0	; select bank0
  7536  009A  086D               	movf	_previousCmd,w
  7537                           
  7538                           ; Switch size 1, requested type "simple"
  7539                           ; Number of cases is 3, Range of values is 2 to 242
  7540                           ; switch strategies available:
  7541                           ; Name         Instructions Cycles
  7542                           ; simple_byte           10     6 (average)
  7543                           ; jumptable            263     9 (fixed)
  7544                           ;	Chosen strategy is simple_byte
  7545  009B  3A02               	xorlw	2	; case 2
  7546  009C  1903               	skipnz
  7547  009D  2893               	goto	i1l2126
  7548  009E  3A40               	xorlw	64	; case 66
  7549  009F  1903               	skipnz
  7550  00A0  2898               	goto	i1l2130
  7551  00A1  3AB0               	xorlw	176	; case 242
  7552  00A2  1903               	skipnz
  7553  00A3  298A               	goto	i1l2232
  7554  00A4  298A               	goto	i1l2232
  7555  00A5                     i1l2138:	
  7556                           
  7557                           ;main.c: 184: response[2] = 0x00;
  7558  00A5  0020               	movlb	0	; select bank0
  7559  00A6  01D8               	clrf	_response+2
  7560                           
  7561                           ;main.c: 185: response[3] = 0x00;
  7562  00A7  01D9               	clrf	_response+3
  7563  00A8                     i1l2140:	
  7564                           
  7565                           ;main.c: 186: response[4] = 0x40;
  7566  00A8  3040               	movlw	64
  7567  00A9  00F2               	movwf	??_PS2Command
  7568  00AA  0872               	movf	??_PS2Command,w
  7569  00AB  00DA               	movwf	_response+4
  7570  00AC                     i1l2142:	
  7571                           
  7572                           ;main.c: 187: response[5] = 0x00;
  7573  00AC  01DB               	clrf	_response+5
  7574  00AD                     i1l2144:	
  7575                           
  7576                           ;main.c: 188: response[6] = 0x00;
  7577  00AD  01DC               	clrf	_response+6
  7578  00AE                     i1l2146:	
  7579                           
  7580                           ;main.c: 189: response[7] = 0x5A;
  7581  00AE  305A               	movlw	90
  7582  00AF  00F2               	movwf	??_PS2Command
  7583  00B0  0872               	movf	??_PS2Command,w
  7584  00B1  00DD               	movwf	_response+7
  7585  00B2                     i1l2148:	
  7586                           
  7587                           ;main.c: 191: previousCmd = cmd;
  7588  00B2  0873               	movf	PS2Command@cmd,w
  7589  00B3  00F2               	movwf	??_PS2Command
  7590  00B4  0872               	movf	??_PS2Command,w
  7591  00B5  0020               	movlb	0	; select bank0
  7592  00B6  00ED               	movwf	_previousCmd
  7593                           
  7594                           ;main.c: 193: break;
  7595  00B7  298A               	goto	i1l2232
  7596  00B8                     i1l2150:	
  7597                           
  7598                           ;main.c: 201: if (analogMode) {
  7599  00B8  0877               	movf	_analogMode,w
  7600  00B9  1903               	btfsc	3,2
  7601  00BA  28BC               	goto	u151_21
  7602  00BB  28BD               	goto	u151_20
  7603  00BC                     u151_21:	
  7604  00BC  28D1               	goto	i1l2158
  7605  00BD                     u151_20:	
  7606  00BD                     i1l2152:	
  7607                           
  7608                           ;main.c: 202: response[2] = 0xFF;
  7609  00BD  30FF               	movlw	255
  7610  00BE  00F2               	movwf	??_PS2Command
  7611  00BF  0872               	movf	??_PS2Command,w
  7612  00C0  0020               	movlb	0	; select bank0
  7613  00C1  00D8               	movwf	_response+2
  7614                           
  7615                           ;main.c: 203: response[3] = 0xFF;
  7616  00C2  30FF               	movlw	255
  7617  00C3  00F2               	movwf	??_PS2Command
  7618  00C4  0872               	movf	??_PS2Command,w
  7619  00C5  00D9               	movwf	_response+3
  7620                           
  7621                           ;main.c: 204: response[4] = 0xC0;
  7622  00C6  30C0               	movlw	192
  7623  00C7  00F2               	movwf	??_PS2Command
  7624  00C8  0872               	movf	??_PS2Command,w
  7625  00C9  00DA               	movwf	_response+4
  7626  00CA                     i1l2154:	
  7627                           
  7628                           ;main.c: 205: response[5] = 0x00;
  7629  00CA  01DB               	clrf	_response+5
  7630  00CB                     i1l2156:	
  7631                           
  7632                           ;main.c: 206: response[6] = 0x00;
  7633  00CB  01DC               	clrf	_response+6
  7634                           
  7635                           ;main.c: 207: response[7] = 0x5A;
  7636  00CC  305A               	movlw	90
  7637  00CD  00F2               	movwf	??_PS2Command
  7638  00CE  0872               	movf	??_PS2Command,w
  7639  00CF  00DD               	movwf	_response+7
  7640                           
  7641                           ;main.c: 208: } else {
  7642  00D0  298A               	goto	i1l2232
  7643  00D1                     i1l2158:	
  7644                           
  7645                           ;main.c: 209: response[2] = 0x00;
  7646  00D1  0020               	movlb	0	; select bank0
  7647  00D2  01D8               	clrf	_response+2
  7648                           
  7649                           ;main.c: 210: response[3] = 0x00;
  7650  00D3  01D9               	clrf	_response+3
  7651                           
  7652                           ;main.c: 211: response[4] = 0x00;
  7653  00D4  01DA               	clrf	_response+4
  7654                           
  7655                           ;main.c: 212: response[5] = 0x00;
  7656  00D5  01DB               	clrf	_response+5
  7657                           
  7658                           ;main.c: 213: response[6] = 0x00;
  7659  00D6  01DC               	clrf	_response+6
  7660                           
  7661                           ;main.c: 214: response[7] = 0x00;
  7662  00D7  01DD               	clrf	_response+7
  7663  00D8  298A               	goto	i1l2232
  7664  00D9                     i1l2160:	
  7665                           
  7666                           ;main.c: 225: pollController(response);
  7667  00D9  3056               	movlw	(low (_response| 0))& (0+255)
  7668  00DA  3186  268E  3180   	fcall	_pollController
  7669  00DD  28B2               	goto	i1l2148
  7670  00DE                     i1l2164:	
  7671                           
  7672                           ;main.c: 236: if(escapeMode) {
  7673  00DE  0876               	movf	_escapeMode,w
  7674  00DF  1903               	btfsc	3,2
  7675  00E0  28E2               	goto	u152_21
  7676  00E1  28E3               	goto	u152_20
  7677  00E2                     u152_21:	
  7678  00E2  28EB               	goto	i1l2168
  7679  00E3                     u152_20:	
  7680  00E3                     i1l2166:	
  7681                           
  7682                           ;main.c: 237: response[2] = 0x00;
  7683  00E3  0020               	movlb	0	; select bank0
  7684  00E4  01D8               	clrf	_response+2
  7685                           
  7686                           ;main.c: 238: response[3] = 0x00;
  7687  00E5  01D9               	clrf	_response+3
  7688                           
  7689                           ;main.c: 239: response[4] = 0x00;
  7690  00E6  01DA               	clrf	_response+4
  7691                           
  7692                           ;main.c: 240: response[5] = 0x00;
  7693  00E7  01DB               	clrf	_response+5
  7694                           
  7695                           ;main.c: 241: response[6] = 0x00;
  7696  00E8  01DC               	clrf	_response+6
  7697                           
  7698                           ;main.c: 242: response[7] = 0x00;
  7699  00E9  01DD               	clrf	_response+7
  7700                           
  7701                           ;main.c: 243: }
  7702  00EA  28B2               	goto	i1l2148
  7703  00EB                     i1l2168:	
  7704                           
  7705                           ;main.c: 244: else {;main.c: 245: pollController(response);
  7706  00EB  3056               	movlw	(low (_response| 0))& (0+255)
  7707  00EC  3186  268E  3180   	fcall	_pollController
  7708  00EF  28B2               	goto	i1l2148
  7709  00F0                     i1l2176:	
  7710                           
  7711                           ;main.c: 277: response[2] = 0xC0;
  7712  00F0  30C0               	movlw	192
  7713  00F1  00F2               	movwf	??_PS2Command
  7714  00F2  0872               	movf	??_PS2Command,w
  7715  00F3  0020               	movlb	0	; select bank0
  7716  00F4  00D8               	movwf	_response+2
  7717                           
  7718                           ;main.c: 278: response[3] = 0x40;
  7719  00F5  3040               	movlw	64
  7720  00F6  00F2               	movwf	??_PS2Command
  7721  00F7  0872               	movf	??_PS2Command,w
  7722  00F8  00D9               	movwf	_response+3
  7723  00F9                     i1l2178:	
  7724                           
  7725                           ;main.c: 280: if (analogMode)
  7726  00F9  0877               	movf	_analogMode,w
  7727  00FA  1903               	btfsc	3,2
  7728  00FB  28FD               	goto	u153_21
  7729  00FC  28FE               	goto	u153_20
  7730  00FD                     u153_21:	
  7731  00FD  2903               	goto	i1l2182
  7732  00FE                     u153_20:	
  7733  00FE                     i1l2180:	
  7734                           
  7735                           ;main.c: 281: response[4] = 0x80;
  7736  00FE  3080               	movlw	128
  7737  00FF  00F2               	movwf	??_PS2Command
  7738  0100  0872               	movf	??_PS2Command,w
  7739  0101  00DA               	movwf	_response+4
  7740  0102  2904               	goto	i1l2184
  7741  0103                     i1l2182:	
  7742                           
  7743                           ;main.c: 282: else;main.c: 283: response[4] = 0x00;
  7744  0103  01DA               	clrf	_response+4
  7745  0104                     i1l2184:	
  7746                           
  7747                           ;main.c: 285: response[5] = 0x40;
  7748  0104  3040               	movlw	64
  7749  0105  00F2               	movwf	??_PS2Command
  7750  0106  0872               	movf	??_PS2Command,w
  7751  0107  00DB               	movwf	_response+5
  7752  0108                     i1l2186:	
  7753                           
  7754                           ;main.c: 286: response[6] = 0x80;
  7755  0108  3080               	movlw	128
  7756  0109  00F2               	movwf	??_PS2Command
  7757  010A  0872               	movf	??_PS2Command,w
  7758  010B  00DC               	movwf	_response+6
  7759                           
  7760                           ;main.c: 287: response[7] = 0x00;
  7761  010C  01DD               	clrf	_response+7
  7762                           
  7763                           ;main.c: 289: break;
  7764  010D  298A               	goto	i1l2232
  7765  010E                     i1l2188:	
  7766                           
  7767                           ;main.c: 297: response[2] = 0x00;
  7768  010E  0020               	movlb	0	; select bank0
  7769  010F  01D8               	clrf	_response+2
  7770                           
  7771                           ;main.c: 298: response[3] = 0x00;
  7772  0110  01D9               	clrf	_response+3
  7773  0111                     i1l2190:	
  7774                           
  7775                           ;main.c: 299: response[4] = 0x80;
  7776  0111  3080               	movlw	128
  7777  0112  00F2               	movwf	??_PS2Command
  7778  0113  0872               	movf	??_PS2Command,w
  7779  0114  00DA               	movwf	_response+4
  7780  0115                     i1l2192:	
  7781                           
  7782                           ;main.c: 300: response[5] = 0x80;
  7783  0115  3080               	movlw	128
  7784  0116  00F2               	movwf	??_PS2Command
  7785  0117  0872               	movf	??_PS2Command,w
  7786  0118  00DB               	movwf	_response+5
  7787  0119                     i1l2194:	
  7788                           
  7789                           ;main.c: 301: response[6] = 0x80;
  7790  0119  3080               	movlw	128
  7791  011A  00F2               	movwf	??_PS2Command
  7792  011B  0872               	movf	??_PS2Command,w
  7793  011C  00DC               	movwf	_response+6
  7794  011D                     i1l2196:	
  7795                           
  7796                           ;main.c: 302: response[7] = 0x50;
  7797  011D  3050               	movlw	80
  7798  011E  00F2               	movwf	??_PS2Command
  7799  011F  0872               	movf	??_PS2Command,w
  7800  0120  00DD               	movwf	_response+7
  7801  0121  28B2               	goto	i1l2148
  7802  0122                     i1l2200:	
  7803                           
  7804                           ;main.c: 315: response[2] = 0x00;
  7805  0122  0020               	movlb	0	; select bank0
  7806  0123  01D8               	clrf	_response+2
  7807                           
  7808                           ;main.c: 316: response[3] = 0x00;
  7809  0124  01D9               	clrf	_response+3
  7810  0125                     i1l2202:	
  7811                           
  7812                           ;main.c: 317: response[4] = 0x40;
  7813  0125  3040               	movlw	64
  7814  0126  00F2               	movwf	??_PS2Command
  7815  0127  0872               	movf	??_PS2Command,w
  7816  0128  00DA               	movwf	_response+4
  7817  0129                     i1l2204:	
  7818                           
  7819                           ;main.c: 318: response[5] = 0x00;
  7820  0129  01DB               	clrf	_response+5
  7821                           
  7822                           ;main.c: 319: response[6] = 0x80;
  7823  012A  3080               	movlw	128
  7824  012B  00F2               	movwf	??_PS2Command
  7825  012C  0872               	movf	??_PS2Command,w
  7826  012D  00DC               	movwf	_response+6
  7827  012E  2871               	goto	i1l2112
  7828  012F                     i1l2208:	
  7829                           
  7830                           ;main.c: 331: response[2] = 0x00;
  7831  012F  0020               	movlb	0	; select bank0
  7832  0130  01D8               	clrf	_response+2
  7833                           
  7834                           ;main.c: 332: response[3] = 0x00;
  7835  0131  01D9               	clrf	_response+3
  7836                           
  7837                           ;main.c: 333: response[4] = 0x00;
  7838  0132  01DA               	clrf	_response+4
  7839  0133                     i1l2210:	
  7840                           
  7841                           ;main.c: 334: response[5] = 0x20;
  7842  0133  3020               	movlw	32
  7843  0134  00F2               	movwf	??_PS2Command
  7844  0135  0872               	movf	??_PS2Command,w
  7845  0136  00DB               	movwf	_response+5
  7846  0137                     i1l2212:	
  7847                           
  7848                           ;main.c: 335: response[6] = 0x00;
  7849  0137  01DC               	clrf	_response+6
  7850  0138                     i1l2214:	
  7851                           
  7852                           ;main.c: 336: response[7] = 0x00;
  7853  0138  01DD               	clrf	_response+7
  7854  0139  28B2               	goto	i1l2148
  7855  013A                     i1l2218:	
  7856                           
  7857                           ;main.c: 350: response[2] = 0xFF;
  7858  013A  30FF               	movlw	255
  7859  013B  00F2               	movwf	??_PS2Command
  7860  013C  0872               	movf	??_PS2Command,w
  7861  013D  0020               	movlb	0	; select bank0
  7862  013E  00D8               	movwf	_response+2
  7863                           
  7864                           ;main.c: 351: response[3] = 0xFF;
  7865  013F  30FF               	movlw	255
  7866  0140  00F2               	movwf	??_PS2Command
  7867  0141  0872               	movf	??_PS2Command,w
  7868  0142  00D9               	movwf	_response+3
  7869                           
  7870                           ;main.c: 352: response[4] = 0xFF;
  7871  0143  30FF               	movlw	255
  7872  0144  00F2               	movwf	??_PS2Command
  7873  0145  0872               	movf	??_PS2Command,w
  7874  0146  00DA               	movwf	_response+4
  7875                           
  7876                           ;main.c: 353: response[5] = 0xFF;
  7877  0147  30FF               	movlw	255
  7878  0148  00F2               	movwf	??_PS2Command
  7879  0149  0872               	movf	??_PS2Command,w
  7880  014A  00DB               	movwf	_response+5
  7881                           
  7882                           ;main.c: 354: response[6] = 0xFF;
  7883  014B  30FF               	movlw	255
  7884  014C  00F2               	movwf	??_PS2Command
  7885  014D  0872               	movf	??_PS2Command,w
  7886  014E  00DC               	movwf	_response+6
  7887                           
  7888                           ;main.c: 355: response[7] = 0xFF;
  7889  014F  30FF               	movlw	255
  7890  0150  00F2               	movwf	??_PS2Command
  7891  0151  0872               	movf	??_PS2Command,w
  7892  0152  00DD               	movwf	_response+7
  7893                           
  7894                           ;main.c: 357: break;
  7895  0153  298A               	goto	i1l2232
  7896  0154                     i1l2220:	
  7897                           
  7898                           ;main.c: 367: response[2] = 0x00;
  7899  0154  0020               	movlb	0	; select bank0
  7900  0155  01D8               	clrf	_response+2
  7901                           
  7902                           ;main.c: 368: response[3] = 0x00;
  7903  0156  01D9               	clrf	_response+3
  7904                           
  7905                           ;main.c: 369: response[4] = 0x00;
  7906  0157  01DA               	clrf	_response+4
  7907                           
  7908                           ;main.c: 370: response[5] = 0x00;
  7909  0158  01DB               	clrf	_response+5
  7910                           
  7911                           ;main.c: 371: response[6] = 0x00;
  7912  0159  01DC               	clrf	_response+6
  7913  015A                     i1l2222:	
  7914                           
  7915                           ;main.c: 372: response[7] = 0x5A;
  7916  015A  305A               	movlw	90
  7917  015B  00F2               	movwf	??_PS2Command
  7918  015C  0872               	movf	??_PS2Command,w
  7919  015D  00DD               	movwf	_response+7
  7920                           
  7921                           ;main.c: 374: break;
  7922  015E  298A               	goto	i1l2232
  7923  015F                     i1l2226:	
  7924  015F  0873               	movf	PS2Command@cmd,w
  7925                           
  7926                           ; Switch size 1, requested type "simple"
  7927                           ; Number of cases is 11, Range of values is 2 to 242
  7928                           ; switch strategies available:
  7929                           ; Name         Instructions Cycles
  7930                           ; simple_byte           34    18 (average)
  7931                           ; jumptable            263     9 (fixed)
  7932                           ;	Chosen strategy is simple_byte
  7933  0160  3A02               	xorlw	2	; case 2
  7934  0161  1903               	skipnz
  7935  0162  28A5               	goto	i1l2138
  7936  0163  3A20               	xorlw	32	; case 34
  7937  0164  1903               	skipnz
  7938  0165  28E3               	goto	i1l2166
  7939  0166  3A10               	xorlw	16	; case 50
  7940  0167  1903               	skipnz
  7941  0168  292F               	goto	i1l2208
  7942  0169  3A70               	xorlw	112	; case 66
  7943  016A  1903               	skipnz
  7944  016B  28D9               	goto	i1l2160
  7945  016C  3A20               	xorlw	32	; case 98
  7946  016D  1903               	skipnz
  7947  016E  290E               	goto	i1l2188
  7948  016F  3AE0               	xorlw	224	; case 130
  7949  0170  1903               	skipnz
  7950  0171  28B8               	goto	i1l2150
  7951  0172  3A20               	xorlw	32	; case 162
  7952  0173  1903               	skipnz
  7953  0174  28F0               	goto	i1l2176
  7954  0175  3A10               	xorlw	16	; case 178
  7955  0176  1903               	skipnz
  7956  0177  293A               	goto	i1l2218
  7957  0178  3A70               	xorlw	112	; case 194
  7958  0179  1903               	skipnz
  7959  017A  28DE               	goto	i1l2164
  7960  017B  3A20               	xorlw	32	; case 226
  7961  017C  1903               	skipnz
  7962  017D  2922               	goto	i1l2200
  7963  017E  3A10               	xorlw	16	; case 242
  7964  017F  1903               	skipnz
  7965  0180  2954               	goto	i1l2220
  7966  0181  298A               	goto	i1l2232
  7967  0182                     i1l2230:	
  7968  0182  0878               	movf	_cmdCounter,w
  7969                           
  7970                           ; Switch size 1, requested type "simple"
  7971                           ; Number of cases is 2, Range of values is 3 to 4
  7972                           ; switch strategies available:
  7973                           ; Name         Instructions Cycles
  7974                           ; simple_byte            7     4 (average)
  7975                           ; direct_byte           13     9 (fixed)
  7976                           ; jumptable            263     9 (fixed)
  7977                           ;	Chosen strategy is simple_byte
  7978  0183  3A03               	xorlw	3	; case 3
  7979  0184  1903               	skipnz
  7980  0185  287B               	goto	i1l2124
  7981  0186  3A07               	xorlw	7	; case 4
  7982  0187  1903               	skipnz
  7983  0188  2899               	goto	i1l2136
  7984  0189  295F               	goto	i1l2226
  7985  018A                     i1l2232:	
  7986                           
  7987                           ;main.c: 382: spiWrite(response[cmdCounter]);
  7988  018A  0878               	movf	_cmdCounter,w
  7989  018B  3E56               	addlw	(low (_response| 0))& (0+255)
  7990  018C  0086               	movwf	6
  7991  018D  0187               	clrf	7
  7992  018E  0801               	movf	1,w
  7993  018F  318E  2626  3180   	fcall	_spiWrite
  7994  0192                     i1l2234:	
  7995                           
  7996                           ;main.c: 384: RA4 = 0;
  7997  0192  0020               	movlb	0	; select bank0
  7998  0193  120C               	bcf	12,4	;volatile
  7999  0194                     i1l2236:	
  8000                           
  8001                           ;main.c: 385: _delay((unsigned long)((1)*(32000000/4000000.0)));
  8002  0194  3200               	nop2	;2 cycle nop
  8003  0195  3200               	nop2	;2 cycle nop
  8004  0196  3200               	nop2	;2 cycle nop
  8005  0197  3200               	nop2	;2 cycle nop
  8006  0198                     i1l2238:	
  8007                           
  8008                           ;main.c: 386: RA4 = 1;
  8009  0198  0020               	movlb	0	; select bank0
  8010  0199  160C               	bsf	12,4	;volatile
  8011  019A                     i1l2240:	
  8012                           
  8013                           ;main.c: 389: if (cmdCounter < responseLength) {
  8014  019A  084E               	movf	_responseLength,w
  8015  019B  0278               	subwf	_cmdCounter,w
  8016  019C  1803               	skipnc
  8017  019D  299F               	goto	u154_21
  8018  019E  29A0               	goto	u154_20
  8019  019F                     u154_21:	
  8020  019F  29A4               	goto	i1l147
  8021  01A0                     u154_20:	
  8022  01A0                     i1l2242:	
  8023                           
  8024                           ;main.c: 390: cmdCounter++;
  8025  01A0  3001               	movlw	1
  8026  01A1  00F2               	movwf	??_PS2Command
  8027  01A2  0872               	movf	??_PS2Command,w
  8028  01A3  07F8               	addwf	_cmdCounter,f
  8029  01A4                     i1l147:	
  8030                           
  8031                           ;main.c: 391: };main.c: 394: if (escapeMode) {
  8032  01A4  0876               	movf	_escapeMode,w
  8033  01A5  1903               	btfsc	3,2
  8034  01A6  29A8               	goto	u155_21
  8035  01A7  29A9               	goto	u155_20
  8036  01A8                     u155_21:	
  8037  01A8  29AE               	goto	i1l2246
  8038  01A9                     u155_20:	
  8039  01A9                     i1l2244:	
  8040                           
  8041                           ;main.c: 395: response[0] = 0xCF;
  8042  01A9  30CF               	movlw	207
  8043  01AA  00F2               	movwf	??_PS2Command
  8044  01AB  0872               	movf	??_PS2Command,w
  8045  01AC  00D6               	movwf	_response
  8046                           
  8047                           ;main.c: 396: }
  8048  01AD  29C6               	goto	i1l2256
  8049  01AE                     i1l2246:	
  8050                           
  8051                           ;main.c: 397: else {;main.c: 398: if (analogMode) {
  8052  01AE  0877               	movf	_analogMode,w
  8053  01AF  1903               	btfsc	3,2
  8054  01B0  29B2               	goto	u156_21
  8055  01B1  29B3               	goto	u156_20
  8056  01B2                     u156_21:	
  8057  01B2  29C2               	goto	i1l2254
  8058  01B3                     u156_20:	
  8059  01B3                     i1l2248:	
  8060                           
  8061                           ;main.c: 399: if(analogMode_pressure) {
  8062  01B3  086A               	movf	_analogMode_pressure,w
  8063  01B4  1903               	btfsc	3,2
  8064  01B5  29B7               	goto	u157_21
  8065  01B6  29B8               	goto	u157_20
  8066  01B7                     u157_21:	
  8067  01B7  29BD               	goto	i1l2252
  8068  01B8                     u157_20:	
  8069  01B8                     i1l2250:	
  8070                           
  8071                           ;main.c: 400: response[0] = 0x9E;
  8072  01B8  309E               	movlw	158
  8073  01B9  00F2               	movwf	??_PS2Command
  8074  01BA  0872               	movf	??_PS2Command,w
  8075  01BB  00D6               	movwf	_response
  8076                           
  8077                           ;main.c: 401: }
  8078  01BC  29C6               	goto	i1l2256
  8079  01BD                     i1l2252:	
  8080                           
  8081                           ;main.c: 402: else {;main.c: 403: response[0] = 0xCE;
  8082  01BD  30CE               	movlw	206
  8083  01BE  00F2               	movwf	??_PS2Command
  8084  01BF  0872               	movf	??_PS2Command,w
  8085  01C0  00D6               	movwf	_response
  8086  01C1  29C6               	goto	i1l2256
  8087  01C2                     i1l2254:	
  8088                           
  8089                           ;main.c: 406: else {;main.c: 407: response[0] = 0x82;
  8090  01C2  3082               	movlw	130
  8091  01C3  00F2               	movwf	??_PS2Command
  8092  01C4  0872               	movf	??_PS2Command,w
  8093  01C5  00D6               	movwf	_response
  8094  01C6                     i1l2256:	
  8095                           
  8096                           ;main.c: 408: };main.c: 409: };main.c: 411: SSP1IF = 0;
  8097  01C6  002E               	movlb	14	; select bank14
  8098  01C7  100F               	bcf	15,0	;volatile
  8099  01C8                     i1l154:	
  8100  01C8  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8101  01C9  0009               	retfie
  8102  01CA                     __end_of_PS2Command:	
  8103                           
  8104                           	psect	text19
  8105  0E26                     __ptext19:	
  8106 ;; *************** function _spiWrite *****************
  8107 ;; Defined at:
  8108 ;;		line 32 in file "Spi.c"
  8109 ;; Parameters:    Size  Location     Type
  8110 ;;  dat             1    wreg     unsigned char 
  8111 ;; Auto vars:     Size  Location     Type
  8112 ;;  dat             1    0[COMMON] unsigned char 
  8113 ;; Return value:  Size  Location     Type
  8114 ;;                  1    wreg      void 
  8115 ;; Registers used:
  8116 ;;		wreg
  8117 ;; Tracked objects:
  8118 ;;		On entry : 0/0
  8119 ;;		On exit  : 0/0
  8120 ;;		Unchanged: 0/0
  8121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8123 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8125 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8126 ;;Total ram usage:        1 bytes
  8127 ;; Hardware stack levels used:    1
  8128 ;; This function calls:
  8129 ;;		Nothing
  8130 ;; This function is called by:
  8131 ;;		_PS2Command
  8132 ;; This function uses a non-reentrant model
  8133 ;;
  8134                           
  8135                           
  8136                           ;psect for function _spiWrite
  8137  0E26                     _spiWrite:	
  8138                           
  8139                           ;incstack = 0
  8140                           ; Regs used in _spiWrite: [wreg]
  8141                           ;spiWrite@dat stored from wreg
  8142  0E26  00F0               	movwf	spiWrite@dat
  8143  0E27                     i1l1906:	
  8144                           
  8145                           ;Spi.c: 34: SSP1BUF = dat;
  8146  0E27  0870               	movf	spiWrite@dat,w
  8147  0E28  0023               	movlb	3	; select bank3
  8148  0E29  008C               	movwf	12	;volatile
  8149  0E2A                     i1l414:	
  8150  0E2A  0008               	return
  8151  0E2B                     __end_of_spiWrite:	
  8152                           
  8153                           	psect	text20
  8154  0E31                     __ptext20:	
  8155 ;; *************** function _spiRead *****************
  8156 ;; Defined at:
  8157 ;;		line 37 in file "Spi.c"
  8158 ;; Parameters:    Size  Location     Type
  8159 ;;		None
  8160 ;; Auto vars:     Size  Location     Type
  8161 ;;		None
  8162 ;; Return value:  Size  Location     Type
  8163 ;;                  1    wreg      unsigned char 
  8164 ;; Registers used:
  8165 ;;		wreg, status,2, status,0, pclath, cstack
  8166 ;; Tracked objects:
  8167 ;;		On entry : 0/0
  8168 ;;		On exit  : 0/0
  8169 ;;		Unchanged: 0/0
  8170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8175 ;;Total ram usage:        0 bytes
  8176 ;; Hardware stack levels used:    1
  8177 ;; Hardware stack levels required when called:    1
  8178 ;; This function calls:
  8179 ;;		_spiReceiveWait
  8180 ;; This function is called by:
  8181 ;;		_PS2Command
  8182 ;; This function uses a non-reentrant model
  8183 ;;
  8184                           
  8185                           
  8186                           ;psect for function _spiRead
  8187  0E31                     _spiRead:	
  8188  0E31                     i1l1900:	
  8189                           ;incstack = 0
  8190                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  8191                           
  8192                           
  8193                           ;Spi.c: 39: spiReceiveWait();
  8194  0E31  318E  262B  318E   	fcall	_spiReceiveWait
  8195  0E34                     i1l1902:	
  8196                           
  8197                           ;Spi.c: 40: return(SSP1BUF);
  8198  0E34  0023               	movlb	3	; select bank3
  8199  0E35  080C               	movf	12,w	;volatile
  8200  0E36                     i1l417:	
  8201  0E36  0008               	return
  8202  0E37                     __end_of_spiRead:	
  8203                           
  8204                           	psect	text21
  8205  0E2B                     __ptext21:	
  8206 ;; *************** function _spiReceiveWait *****************
  8207 ;; Defined at:
  8208 ;;		line 27 in file "Spi.c"
  8209 ;; Parameters:    Size  Location     Type
  8210 ;;		None
  8211 ;; Auto vars:     Size  Location     Type
  8212 ;;		None
  8213 ;; Return value:  Size  Location     Type
  8214 ;;                  1    wreg      void 
  8215 ;; Registers used:
  8216 ;;		None
  8217 ;; Tracked objects:
  8218 ;;		On entry : 0/0
  8219 ;;		On exit  : 0/0
  8220 ;;		Unchanged: 0/0
  8221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8226 ;;Total ram usage:        0 bytes
  8227 ;; Hardware stack levels used:    1
  8228 ;; This function calls:
  8229 ;;		Nothing
  8230 ;; This function is called by:
  8231 ;;		_spiRead
  8232 ;; This function uses a non-reentrant model
  8233 ;;
  8234                           
  8235                           
  8236                           ;psect for function _spiReceiveWait
  8237  0E2B                     _spiReceiveWait:	
  8238  0E2B                     i1l1866:	
  8239                           ;incstack = 0
  8240                           ; Regs used in _spiReceiveWait: []
  8241                           
  8242  0E2B                     i1l408:	
  8243                           ;Spi.c: 29: while ( !SSP1STATbits.BF );
  8244                           
  8245  0E2B  0023               	movlb	3	; select bank3
  8246  0E2C  1C0F               	btfss	15,0	;volatile
  8247  0E2D  2E2F               	goto	u122_21
  8248  0E2E  2E30               	goto	u122_20
  8249  0E2F                     u122_21:	
  8250  0E2F  2E2B               	goto	i1l408
  8251  0E30                     u122_20:	
  8252  0E30                     i1l411:	
  8253  0E30  0008               	return
  8254  0E31                     __end_of_spiReceiveWait:	
  8255                           
  8256                           	psect	text22
  8257  068E                     __ptext22:	
  8258 ;; *************** function _pollController *****************
  8259 ;; Defined at:
  8260 ;;		line 27 in file "main.c"
  8261 ;; Parameters:    Size  Location     Type
  8262 ;;  response        1    wreg     PTR unsigned char 
  8263 ;;		 -> response(20), 
  8264 ;; Auto vars:     Size  Location     Type
  8265 ;;  response        1    1[COMMON] PTR unsigned char 
  8266 ;;		 -> response(20), 
  8267 ;; Return value:  Size  Location     Type
  8268 ;;                  1    wreg      void 
  8269 ;; Registers used:
  8270 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8271 ;; Tracked objects:
  8272 ;;		On entry : 0/0
  8273 ;;		On exit  : 0/0
  8274 ;;		Unchanged: 0/0
  8275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8277 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8278 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8279 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8280 ;;Total ram usage:        2 bytes
  8281 ;; Hardware stack levels used:    1
  8282 ;; This function calls:
  8283 ;;		Nothing
  8284 ;; This function is called by:
  8285 ;;		_PS2Command
  8286 ;; This function uses a non-reentrant model
  8287 ;;
  8288                           
  8289                           
  8290                           ;psect for function _pollController
  8291  068E                     _pollController:	
  8292                           
  8293                           ;incstack = 0
  8294                           ; Regs used in _pollController: [wreg+fsr1l+fsr1h+status,2+status,0]
  8295                           ;pollController@response stored from wreg
  8296  068E  00F1               	movwf	pollController@response
  8297  068F                     i1l1868:	
  8298                           
  8299                           ;main.c: 29: response[2] = digitalStateFirst;
  8300  068F  0020               	movlb	0	; select bank0
  8301  0690  0855               	movf	_digitalStateFirst,w
  8302  0691  00F0               	movwf	??_pollController
  8303  0692  0871               	movf	pollController@response,w
  8304  0693  3E02               	addlw	2
  8305  0694  0086               	movwf	6
  8306  0695  0187               	clrf	7
  8307  0696  0870               	movf	??_pollController,w
  8308  0697  0081               	movwf	1
  8309                           
  8310                           ;main.c: 30: response[3] = digitalStateSecond;
  8311  0698  0854               	movf	_digitalStateSecond,w
  8312  0699  00F0               	movwf	??_pollController
  8313  069A  0871               	movf	pollController@response,w
  8314  069B  3E03               	addlw	3
  8315  069C  0086               	movwf	6
  8316  069D  0187               	clrf	7
  8317  069E  0870               	movf	??_pollController,w
  8318  069F  0081               	movwf	1
  8319                           
  8320                           ;main.c: 31: response[4] = rxData;
  8321  06A0  0853               	movf	_rxData,w
  8322  06A1  00F0               	movwf	??_pollController
  8323  06A2  0871               	movf	pollController@response,w
  8324  06A3  3E04               	addlw	4
  8325  06A4  0086               	movwf	6
  8326  06A5  0187               	clrf	7
  8327  06A6  0870               	movf	??_pollController,w
  8328  06A7  0081               	movwf	1
  8329                           
  8330                           ;main.c: 32: response[5] = ryData;
  8331  06A8  0852               	movf	_ryData,w
  8332  06A9  00F0               	movwf	??_pollController
  8333  06AA  0871               	movf	pollController@response,w
  8334  06AB  3E05               	addlw	5
  8335  06AC  0086               	movwf	6
  8336  06AD  0187               	clrf	7
  8337  06AE  0870               	movf	??_pollController,w
  8338  06AF  0081               	movwf	1
  8339                           
  8340                           ;main.c: 33: response[6] = lxData;
  8341  06B0  0851               	movf	_lxData,w
  8342  06B1  00F0               	movwf	??_pollController
  8343  06B2  0871               	movf	pollController@response,w
  8344  06B3  3E06               	addlw	6
  8345  06B4  0086               	movwf	6
  8346  06B5  0187               	clrf	7
  8347  06B6  0870               	movf	??_pollController,w
  8348  06B7  0081               	movwf	1
  8349                           
  8350                           ;main.c: 34: response[7] = lyData;
  8351  06B8  0850               	movf	_lyData,w
  8352  06B9  00F0               	movwf	??_pollController
  8353  06BA  0871               	movf	pollController@response,w
  8354  06BB  3E07               	addlw	7
  8355  06BC  0086               	movwf	6
  8356  06BD  0187               	clrf	7
  8357  06BE  0870               	movf	??_pollController,w
  8358  06BF  0081               	movwf	1
  8359  06C0                     i1l1870:	
  8360                           
  8361                           ;main.c: 36: if(analogMode_pressure) {
  8362  06C0  086A               	movf	_analogMode_pressure,w
  8363  06C1  1903               	btfsc	3,2
  8364  06C2  2EC4               	goto	u123_21
  8365  06C3  2EC5               	goto	u123_20
  8366  06C4                     u123_21:	
  8367  06C4  2F2B               	goto	i1l1898
  8368  06C5                     u123_20:	
  8369  06C5                     i1l1872:	
  8370                           
  8371                           ;main.c: 37: responseLength = 20;
  8372  06C5  3014               	movlw	20
  8373  06C6  00F0               	movwf	??_pollController
  8374  06C7  0870               	movf	??_pollController,w
  8375  06C8  00CE               	movwf	_responseLength
  8376  06C9                     i1l1874:	
  8377                           
  8378                           ;main.c: 39: response[8] = analogStateFirst[2];
  8379  06C9  0021               	movlb	1	; select bank1
  8380  06CA  085A               	movf	(_analogStateFirst^(0+128)+2),w
  8381  06CB  00F0               	movwf	??_pollController
  8382  06CC  0871               	movf	pollController@response,w
  8383  06CD  3E08               	addlw	8
  8384  06CE  0086               	movwf	6
  8385  06CF  0187               	clrf	7
  8386  06D0  0870               	movf	??_pollController,w
  8387  06D1  0081               	movwf	1
  8388  06D2                     i1l1876:	
  8389                           
  8390                           ;main.c: 40: response[9] = analogStateFirst[0];
  8391  06D2  0858               	movf	_analogStateFirst^(0+128),w
  8392  06D3  00F0               	movwf	??_pollController
  8393  06D4  0871               	movf	pollController@response,w
  8394  06D5  3E09               	addlw	9
  8395  06D6  0086               	movwf	6
  8396  06D7  0187               	clrf	7
  8397  06D8  0870               	movf	??_pollController,w
  8398  06D9  0081               	movwf	1
  8399  06DA                     i1l1878:	
  8400                           
  8401                           ;main.c: 41: response[10] = analogStateFirst[3];
  8402  06DA  085B               	movf	(_analogStateFirst^(0+128)+3),w
  8403  06DB  00F0               	movwf	??_pollController
  8404  06DC  0871               	movf	pollController@response,w
  8405  06DD  3E0A               	addlw	10
  8406  06DE  0086               	movwf	6
  8407  06DF  0187               	clrf	7
  8408  06E0  0870               	movf	??_pollController,w
  8409  06E1  0081               	movwf	1
  8410  06E2                     i1l1880:	
  8411                           
  8412                           ;main.c: 42: response[11] = analogStateFirst[1];
  8413  06E2  0859               	movf	(_analogStateFirst^(0+128)+1),w
  8414  06E3  00F0               	movwf	??_pollController
  8415  06E4  0871               	movf	pollController@response,w
  8416  06E5  3E0B               	addlw	11
  8417  06E6  0086               	movwf	6
  8418  06E7  0187               	clrf	7
  8419  06E8  0870               	movf	??_pollController,w
  8420  06E9  0081               	movwf	1
  8421  06EA                     i1l1882:	
  8422                           
  8423                           ;main.c: 43: response[12] = analogStateSecond[3];
  8424  06EA  0853               	movf	(_analogStateSecond^(0+128)+3),w
  8425  06EB  00F0               	movwf	??_pollController
  8426  06EC  0871               	movf	pollController@response,w
  8427  06ED  3E0C               	addlw	12
  8428  06EE  0086               	movwf	6
  8429  06EF  0187               	clrf	7
  8430  06F0  0870               	movf	??_pollController,w
  8431  06F1  0081               	movwf	1
  8432  06F2                     i1l1884:	
  8433                           
  8434                           ;main.c: 44: response[13] = analogStateSecond[2];
  8435  06F2  0852               	movf	(_analogStateSecond^(0+128)+2),w
  8436  06F3  00F0               	movwf	??_pollController
  8437  06F4  0871               	movf	pollController@response,w
  8438  06F5  3E0D               	addlw	13
  8439  06F6  0086               	movwf	6
  8440  06F7  0187               	clrf	7
  8441  06F8  0870               	movf	??_pollController,w
  8442  06F9  0081               	movwf	1
  8443  06FA                     i1l1886:	
  8444                           
  8445                           ;main.c: 45: response[14] = analogStateSecond[1];
  8446  06FA  0851               	movf	(_analogStateSecond^(0+128)+1),w
  8447  06FB  00F0               	movwf	??_pollController
  8448  06FC  0871               	movf	pollController@response,w
  8449  06FD  3E0E               	addlw	14
  8450  06FE  0086               	movwf	6
  8451  06FF  0187               	clrf	7
  8452  0700  0870               	movf	??_pollController,w
  8453  0701  0081               	movwf	1
  8454  0702                     i1l1888:	
  8455                           
  8456                           ;main.c: 46: response[15] = analogStateSecond[0];
  8457  0702  0850               	movf	_analogStateSecond^(0+128),w
  8458  0703  00F0               	movwf	??_pollController
  8459  0704  0871               	movf	pollController@response,w
  8460  0705  3E0F               	addlw	15
  8461  0706  0086               	movwf	6
  8462  0707  0187               	clrf	7
  8463  0708  0870               	movf	??_pollController,w
  8464  0709  0081               	movwf	1
  8465  070A                     i1l1890:	
  8466                           
  8467                           ;main.c: 47: response[16] = analogStateSecond[5];
  8468  070A  0855               	movf	(_analogStateSecond^(0+128)+5),w
  8469  070B  00F0               	movwf	??_pollController
  8470  070C  0871               	movf	pollController@response,w
  8471  070D  3E10               	addlw	16
  8472  070E  0086               	movwf	6
  8473  070F  0187               	clrf	7
  8474  0710  0870               	movf	??_pollController,w
  8475  0711  0081               	movwf	1
  8476  0712                     i1l1892:	
  8477                           
  8478                           ;main.c: 48: response[17] = analogStateSecond[4];
  8479  0712  0854               	movf	(_analogStateSecond^(0+128)+4),w
  8480  0713  00F0               	movwf	??_pollController
  8481  0714  0871               	movf	pollController@response,w
  8482  0715  3E11               	addlw	17
  8483  0716  0086               	movwf	6
  8484  0717  0187               	clrf	7
  8485  0718  0870               	movf	??_pollController,w
  8486  0719  0081               	movwf	1
  8487  071A                     i1l1894:	
  8488                           
  8489                           ;main.c: 49: response[18] = analogStateSecond[7];
  8490  071A  0857               	movf	(_analogStateSecond^(0+128)+7),w
  8491  071B  00F0               	movwf	??_pollController
  8492  071C  0871               	movf	pollController@response,w
  8493  071D  3E12               	addlw	18
  8494  071E  0086               	movwf	6
  8495  071F  0187               	clrf	7
  8496  0720  0870               	movf	??_pollController,w
  8497  0721  0081               	movwf	1
  8498  0722                     i1l1896:	
  8499                           
  8500                           ;main.c: 50: response[19] = analogStateSecond[6];
  8501  0722  0856               	movf	(_analogStateSecond^(0+128)+6),w
  8502  0723  00F0               	movwf	??_pollController
  8503  0724  0871               	movf	pollController@response,w
  8504  0725  3E13               	addlw	19
  8505  0726  0086               	movwf	6
  8506  0727  0187               	clrf	7
  8507  0728  0870               	movf	??_pollController,w
  8508  0729  0081               	movwf	1
  8509                           
  8510                           ;main.c: 51: }
  8511  072A  2F2F               	goto	i1l91
  8512  072B                     i1l1898:	
  8513                           
  8514                           ;main.c: 52: else {;main.c: 53: responseLength = 5;
  8515  072B  3005               	movlw	5
  8516  072C  00F0               	movwf	??_pollController
  8517  072D  0870               	movf	??_pollController,w
  8518  072E  00CE               	movwf	_responseLength
  8519  072F                     i1l91:	
  8520  072F  0008               	return
  8521  0730                     __end_of_pollController:	
  8522  007E                     btemp	set	126	;btemp
  8523  007E                     int$flags	set	126
  8524  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        28
    BSS         72
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     46      78
    BANK1            80      0      64
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    pollController@response	PTR unsigned char  size(1) Largest target is 20
		 -> response(BANK0[20]), 


Critical Paths under _main in COMMON

    _main->_readController
    _readControllerAnalog->_readADC
    _picInit->_spiInit
    _Map->___wmul
    ___awdiv->___wmul
    _configureController->_readADC
    _configureController->_readController

Critical Paths under _PS2Command in COMMON

    _PS2Command->_pollController

Critical Paths under _main in BANK0

    _main->_lutInit
    _readControllerAnalog->_readADC
    _picInit->_spiInit
    _lutInit->_Map
    _Map->___awdiv
    ___awdiv->___wmul
    _configureController->_readADC

Critical Paths under _PS2Command in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _PS2Command in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _PS2Command in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _PS2Command in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _PS2Command in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _PS2Command in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _PS2Command in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _PS2Command in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _PS2Command in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _PS2Command in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _PS2Command in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _PS2Command in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _PS2Command in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _PS2Command in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _PS2Command in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _PS2Command in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _PS2Command in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _PS2Command in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _PS2Command in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _PS2Command in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _PS2Command in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _PS2Command in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _PS2Command in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _PS2Command in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _PS2Command in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _PS2Command in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    9653
                                             42 BANK0      4     4      0
                            _adcInit
                _configureController
                            _lutInit
                            _picInit
                     _readController
               _readControllerAnalog
 ---------------------------------------------------------------------------------
 (1) _readControllerAnalog                                 3     3      0    1464
                                              7 BANK0      3     3      0
                            _readADC
                        _reversebyte
 ---------------------------------------------------------------------------------
 (2) _reversebyte                                          4     4      0     226
                                              4 COMMON     1     1      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _picInit                                              2     2      0     456
                                              3 BANK0      2     2      0
                            _ppsLock
                          _ppsUnlock
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              4 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _ppsUnlock                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ppsLock                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lutInit                                             19    19      0    4182
                                             23 BANK0     19    19      0
                                _Map
                         _eepromRead
 ---------------------------------------------------------------------------------
 (2) _eepromRead                                           3     3      0      65
                                              4 COMMON     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Map                                                 10     0     10    2785
                                             13 BANK0     10     0     10
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     316
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     452
                                              4 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _configureController                                 13    13      0    3254
                                              7 BANK0     13    13      0
                        _eepromWrite
                            _readADC
                     _readController
 ---------------------------------------------------------------------------------
 (1) _readController                                       3     3      0     124
                                              4 COMMON     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _readADC                                              9     7      2    1238
                                              4 COMMON     2     0      2
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) _eepromWrite                                          3     2      1     816
                                              4 COMMON     1     0      1
                                              0 BANK0      2     2      0
                          _nvmUnlock
 ---------------------------------------------------------------------------------
 (3) _nvmUnlock                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _PS2Command                                           2     2      0     815
                                              2 COMMON     2     2      0
                     _pollController
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (5) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (6) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _pollController                                       2     2      0     462
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adcInit
   _configureController
     _eepromWrite
       _nvmUnlock
     _readADC
     _readController
   _lutInit
     _Map
       ___awdiv
         ___wmul (ARG)
       ___wmul
     _eepromRead
   _picInit
     _ppsLock
     _ppsUnlock
     _spiInit
   _readController
   _readControllerAnalog
     _readADC
     _reversebyte

 _PS2Command (ROOT)
   _pollController
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2E      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      40       7       80.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      98      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      98      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              30      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14               0      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15               0      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16               0      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17               0      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18               0      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19               0      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20               0      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21               0      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22               0      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23               0      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Dec 04 12:21:33 2021

                  __CFG_CP$OFF 0000                   ___awdiv@sign 002A            ___wmul@multiplicand 0022  
                  __CFG_LVP$ON 0000                            l300 0F39                            l303 0F70  
                          l313 04BC                            l161 0FDB                            l322 054C  
                          l314 04C6                            l306 0798                            l315 04D0  
                          l260 05C6                            l316 04DA                            l404 0E89  
                          l317 04E4                            l405 0E8E                            l270 068D  
                          l318 04EE                            l319 04F8                            l264 0629  
                          l273 0EEC                            l441 0E79                            l434 0F02  
                          l266 064D                            l444 0E3D                            l436 0F07  
                          l268 0671                            l438 0F0F                            l294 03EC  
                          l383 07FF                            l392 0FAB                            l297 0F17  
                          l386 0E45                            l389 0E4F                            l596 0EB6  
                          l749 07F8                            l598 0ECA                            _RA0 0060  
                          _RA1 0061                            _RB0 0068                            _RA2 0062  
                          _RB1 0069                            _RA3 0063                            _RA4 0064  
                          _RB2 006A                            _RA5 0065                            _RB3 006B  
                          _RA6 0066                            _RD0 0078                            _RC2 0072  
                          _RB4 006C                            _RA7 0067                            _RB5 006D  
                          _RB6 006E                            _RB7 006F                            _RD4 007C  
                 __CFG_CPD$OFF 0000                            u900 07CB                            u901 07CA  
                          u920 07DA                            u921 07D9                            u915 07CC  
                          u940 07EA                            u860 079F                            u941 07E9  
                          u925 07D6                            u861 079E                            u950 07EF  
                          u870 07AA                            u951 07EE                            u935 07E0  
                          u871 07A9                            u880 07BB                            u881 07BA  
                          u895 07BF                            _Map 0ECB                   __CFG_BORV$LO 0000  
                          wreg 0009            _analogMode_pressure 006A                 eepromRead@data 0021  
                 __CFG_ZCD$OFF 0000                           ?_Map 002D                           l2300 0E3C  
                         l2310 0EC0                           l2302 0EAB                           l2320 05B4  
                         l2312 0EC6                           l2304 0EAD                           l2400 0E84  
                         l2330 05E5                           l2322 05B5                           l2306 0EB2  
                         l2410 0F82                           l2402 0F71                           l2340 060E  
                         l2332 05EA                           l2324 05BE                           l2316 054F  
                         l2500 0465                           l2308 0EBB                           l2420 0F9D  
                         l2412 0F8B                           l2404 0F7C                           l2350 0645  
                         l2342 0613                           l2334 05F6                           l2326 05CF  
                         l2318 05AE                           l2510 047B                           l2502 046A  
                         l2430 0FA8                           l2422 0FA0                           l2414 0F8C  
                         l2406 0F7E                           l2352 0657                           l2344 061F  
                         l2336 05FB                           l2328 05D7                           l2520 04C2  
                         l2504 046B                           l1720 079B                           l2432 0FAA  
                         l2424 0FA3                           l2416 0F9A                           l2408 0F81  
                         l2354 0669                           l2346 0624                           l2338 0600  
                         l2530 04F4                           l2522 04CC                           l2514 0482  
                         l2506 0470                           l1730 07AF                           l1722 079F  
                         l2362 0E6A                           l2450 0277                           l2442 023E  
                         l2434 01FC                           l2426 0FA6                           l2418 0F9C  
                         l2370 0F3B                           l2380 0EF4                           l1820 0F14  
                         l2356 0689                           l2348 0633                           l2532 04FE  
                         l2524 04D6                           l2516 04B2                           l2508 0475  
                         l1740 07C3                           l1732 07B3                           l1724 07A4  
                         l2364 0E6C                           l2460 02DE                           l2452 02A6  
                         l2444 024C                           l2436 023C                           l2428 0FA7  
                         l2372 0F6F                           l2540 0730                           l2390 0EFF  
                         l2382 0EF6                           l1822 0F16                           l2526 04E0  
                         l2518 04B8                           l2534 0503                           l1750 07DF  
                         l1742 07C7                           l1734 07B5                           l1726 07A6  
                         l1718 0799                           l2358 0ECB                           l2366 0E72  
                         l2470 0345                           l2462 030D                           l2454 02B3  
                         l2446 0259                           l2550 0FBB                           l2542 0FAC  
                         l2392 0F08                           l2384 0EF7                           l2376 0EEF  
                         l1824 0F1B                           l1816 0F10                           l2536 054A  
                         l2528 04EA                           l1752 07E4                           l1744 07CB  
                         l1736 07BB                           l1728 07AA                           l2480 03AC  
                         l2472 0374                           l2464 031A                           l2456 02C0  
                         l2448 0265                           l2560 0FCD                           l2552 0FBC  
                         l2544 0FB2                           l2298 0E37                           l2394 0F0E  
                         l2386 0EF9                           l2378 0EF3                           l1818 0F13  
                         l2538 054B                           l2490 044F                           l1746 07DA  
                         l1738 07BE                           l1754 07EA                           l2482 03DB  
                         l2474 0381                           l2466 0327                           l2458 02CC  
                         l2570 0FE6                           l2562 0FD2                           l2554 0FBD  
                         l2546 0FB5                           l1940 0E46                           l2388 0EFD  
                         l2492 0453                           l1756 07EF                           l1748 07DE  
                         l2484 03DF                           l2476 038E                           l2468 0333  
                         l2396 0E7B                           l2580 0FFA                           l2572 0FEC  
                         l2564 0FD7                           l2556 0FC4                           l2548 0FBA  
                         l1950 0E4E                           l1942 0E49                           l2494 045A  
                         l2486 03ED                           l1758 07F4                           l2478 039A  
                         l1854 07F9                           l2398 0E7F                           l2574 0FED  
                         l2566 0FE1                           l2558 0FCA                           l1944 0E4A  
                         l2496 0460                           l2488 03EF                           l1856 07FE  
                         l2576 0FF1                           l2568 0FE2                           l1946 0E4B  
                         l2498 0461                           l1858 0E3E                           l2578 0FF6  
                         l1948 0E4C                           u1110 0F1B                           u1111 0F1A  
                         u2000 0460                           u2001 045F                           u2010 047B  
                         u2011 047A                           u2100 04FE                           u2020 0481  
                         u1125 0F1F                           u2101 04FD                           u2021 0480  
                         u2030 04B8                           u2110 0FC4                           u1135 0F2B  
                         u2031 04B7                           u2111 0FC3                           u2040 04C2  
                         u2120 0FCA                           u2041 04C1                           u2121 0FC9  
                         u2050 04CC                           u2130 0FD7                           u2051 04CB  
                         u2131 0FD6                           u2060 04D6                           u2140 0FE1  
                         u2061 04D5                           u2141 0FE0                           u2070 04E0  
                         u2150 0FEC                           u2071 04DF                           u2151 0FEB  
                         u2080 04EA                           u2081 04E9                           u2090 04F4  
                         u2091 04F3                           u1700 05E5                           u1701 05E4  
                         u1630 0EB2                           u1631 0EB1                           u1720 05FB  
                         u1721 05FA                           u1810 0669                           u1730 060E  
                         u1714 05EF                           u1811 0668                           u1731 060D  
                         u1715 05EE                           u1804 065C                           u1660 0EC6  
                         u1900 024C                           u1805 065B                           u1661 0EC5  
                         u1645 0EB7                           u1901 024B                           u1750 0624  
                         u1670 05B4                           u1910 0265                           u1751 0623  
                         u1671 05B3                           u1655 0EBC                           u1911 0264  
                         u1760 0633                           u1744 0618                           u1680 05BE  
                         u1920 02B3                           u1761 0632                           u1745 0617  
                         u1681 05BD                           u1921 02B2                           u1905 0248  
                         u1825 0F40                           u1690 05CF                           u1930 02CC  
                         u1691 05CE                           u1931 02CB                           u1915 0261  
                         u1835 0F46                           u1780 0645                           u1940 031A  
                         u1781 0644                           u1941 0319                           u1925 02AF  
                         u1845 0F53                           u1870 0F07                           u1790 0657  
                         u1774 0638                           u1950 0333                           u1871 0F06  
                         u1791 0656                           u1775 0637                           u1951 0332  
                         u1935 02C8                           u1855 0F59                           u1880 0F0E  
                         u1960 0381                           u1881 0F0D                           u1961 0380  
                         u1945 0316                           u1865 0F66                           u1970 039A  
                         u1890 0E7F                           u1971 0399                           u1955 032F  
                         u1891 0E7E                           u1980 03EC                           u1981 03EB  
                         u1965 037D                           u1990 045A                           u1991 0459  
                         u1975 0396                           u1985 03E8                           i1l91 072F  
                         Map@x 002D                           _WPUA 0F39                           _WPUB 0F44  
                         _WPUC 0F4F                           _WPUD 0F5A                           _WPUE 0F65  
                 __CFG_WRT$OFF 0000                  __CFG_FCMEN$ON 0000                           _main 0FAC  
                         fsr0h 0005                           fsr1h 0007                           indf0 0000  
                         fsr0l 0004                           indf1 0001                           fsr1l 0006  
                         btemp 007E                  __CFG_BOREN$ON 0000                           start 01CA  
                  ?_PS2Command 0070                  __CFG_CSWEN$ON 0000                lutInit@position 0048  
                        ??_Map 0076       configureController@lxMax 0029       configureController@lxMin 0028  
     configureController@lyMax 002B       configureController@lyMin 002A       configureController@rxMax 002D  
     configureController@rxMin 002C       configureController@ryMax 002F       configureController@ryMin 002E  
                        _ADACQ 009D                          ?_main 0070                          _ADCLK 0098  
                        _ADPCH 009E                __end_of_adcInit 0E50                          _ADREF 009A  
              __end_of___awdiv 07F9                          _ADPRE 009C                  __CFG_WDTE$OFF 0000  
              ___awdiv@divisor 0024       main@slaveSelectStatePrev 004B                          i1l110 0038  
                        i1l103 0021                          i1l154 01C8                          i1l411 0E30  
                        i1l147 01A4                          i1l414 0E2A                          i1l408 0E2B  
                        i1l417 0E36                ___awdiv@counter 0029                          _TRISA 0011  
                        _TRISB 0012                          _TRISC 0013                          _TRISD 0014  
                        _TRISE 0015    __end_of_configureController 054D                __end_of_readADC 0F3A  
              __end_of_picInit 0FAC                          _index 0079  __size_of_readControllerAnalog 0069  
                        _lutLX 26F0                          _lutLY 25F0                          _lutRX 24F0  
                        _lutRY 23F0                __end_of_lutInit 03ED                __end_of_ppsLock 0E46  
              __end_of_spiInit 0E8F                __end_of_spiRead 0E37                          status 0003  
                        wtemp0 007E                  PS2Command@cmd 0073                 __CFG_MCLRE$OFF 0000  
              __initialization 01CC                   __end_of_main 1000                         ??_main 004A  
          __size_of_PS2Command 01C6                         _ADCON0 0093                         _ADCON1 0094  
                       _ADCON2 0095                         _ADRESH 008D                         _ADRESL 008C  
             ___awdiv@dividend 0026                         _ANSELA 0F38                         _ANSELB 0F43  
                       _ANSELC 0F4E                         _ANSELD 0F59                         _ANSELE 0F64  
         _PreviousDigitalByte1 00B8           _PreviousDigitalByte2 00B0                         i1l2100 0059  
                       i1l2110 0070                         i1l2102 005E                         i1l2200 0122  
                       i1l2112 0071                         i1l2104 0063                         i1l2210 0133  
                       i1l2202 0125                         i1l2130 0098                         i1l2106 0069  
                       i1l2114 0073                         _RC5PPS 0F25                         i1l2220 0154  
                       i1l2212 0137                         i1l2204 0129                         i1l2140 00A8  
                       i1l2124 007B                         i1l2116 0076                         i1l2108 006C  
                       i1l2060 0006                         i1l2222 015A                         i1l2214 0138  
                       i1l2150 00B8                         i1l2142 00AC                         i1l2126 0093  
                       i1l2070 001F                         i1l2230 0182                         i1l2062 000B  
                       i1l2240 019A                         i1l2208 012F                         i1l2160 00D9  
                       i1l2152 00BD                         i1l2144 00AD                         i1l2136 0099  
                       i1l2080 0034                         i1l2072 0023                         i1l2232 018A  
                       i1l2064 0012                         i1l2250 01B8                         i1l2242 01A0  
                       i1l2234 0192                         i1l2226 015F                         i1l2218 013A  
                       i1l2154 00CA                         i1l2146 00AE                         i1l2138 00A5  
                       i1l2090 0046                         i1l2082 0037                         i1l2074 0029  
                       i1l2066 0016                         i1l2252 01BD                         i1l2244 01A9  
                       i1l2236 0194                         i1l2180 00FE                         i1l2164 00DE  
                       i1l2156 00CB                         i1l2148 00B2                         i1l2092 004A  
                       i1l2084 003A                         i1l2076 002C                         i1l2068 0019  
                       i1l2254 01C2                         i1l2246 01AE                         i1l2238 0198  
                       i1l2190 0111                         i1l2182 0103                         i1l2166 00E3  
                       i1l2158 00D1                         i1l2094 004E                         i1l2086 0040  
                       i1l2078 002E                         i1l2248 01B3                         i1l2256 01C6  
                       i1l2192 0115                         i1l2184 0104                         i1l2176 00F0  
                       i1l2168 00EB                         i1l2088 0042                         i1l2096 0053  
                       i1l2194 0119                         i1l2186 0108                         i1l2178 00F9  
                       i1l2098 0055                         i1l1900 0E31                         i1l2196 011D  
                       i1l2188 010E                         i1l1902 0E34                         u122_20 0E30  
                       u122_21 0E2F                         i1l1906 0E27                         i1l1870 06C0  
                       i1l1880 06E2                         i1l1872 06C5                         u123_20 06C5  
                       u123_21 06C4                         i1l1890 070A                         i1l1882 06EA  
                       i1l1874 06C9                         i1l1866 0E2B                         i1l1892 0712  
                       i1l1884 06F2                         i1l1876 06D2                         i1l1868 068F  
                       i1l1894 071A                         i1l1886 06FA                         i1l1878 06DA  
                       i1l1896 0722                         i1l1888 0702                 __CFG_WDTCCS$SC 0000  
                       i1l1898 072B                         u150_20 0069                         u150_21 0068  
                       u151_20 00BD                         u151_21 00BC                         u152_20 00E3  
                       u152_21 00E2                         u153_20 00FE                         u145_20 000B  
                       u153_21 00FD                         u145_21 000A                         u154_20 01A0  
                       u146_20 001F                         u154_21 019F                         u146_21 001E  
                       u155_20 01A9                         u147_20 0029                         u155_21 01A8  
                       u147_21 0028                         u156_20 01B3                         u148_20 0034  
                       u156_21 01B2                         u148_21 0033                         u157_20 01B8  
                       u149_20 0040                         u157_21 01B7                         u149_21 003F  
                       _SSP1IE 38C8                         _SSP1IF 3878                 __CFG_PWRTE$OFF 0000  
         __size_of_eepromWrite 0023                         ___wmul 0EAB                      ??_adcInit 0074  
                    ??___awdiv 0028                 __CFG_STVREN$ON 0000        __size_of_pollController 00A2  
                       _lxData 0051                         _lyData 0050                eepromWrite@data 0074  
                       _rxData 0053               ___awdiv@quotient 002B                         _ryData 0052  
                 ?_reversebyte 0070                      ??_readADC 0020                      ??_picInit 0023  
                    ??_lutInit 0037               __end_of_spiWrite 0E2B                      ??_ppsLock 0074  
                    ??_spiInit 0074                      ??_spiRead 0070              _IndexDigitalByte1 00A8  
            _IndexDigitalByte2 00A0        __end_of__initialization 01F8                 __pcstackCOMMON 0070  
                 __pidataBANK0 0E8F         _DigitalControllerByte1 00C8         _DigitalControllerByte2 00C0  
            eepromRead@address 0020        __size_of_readController 0141                     _cmdCounter 0078  
                   __pbssBANK0 006A                     __pbssBANK1 00A0                     _analogMode 0077  
                 ??_PS2Command 0072                     __pmaintext 0FAC                        ?___wmul 0020  
                   __pintentry 0004        __size_of_spiReceiveWait 0006            __CFG_RSTOSC$HFINT32 0000  
           __size_of_nvmUnlock 0007             __size_of_ppsUnlock 0007                     _eepromRead 0E68  
   eepromWrite@interruptStatus 0021                        _NVMADRH 081B                        _NVMADRL 081A  
                      _NVMDATL 081C                        _NVMCON2 081F             __end_of_PS2Command 01CA  
                      _PPSLOCK 0E8F                        _SSP1BUF 018C                     _escapeMode 0076  
     readController@analogMode 0020   __end_of_readControllerAnalog 0799           __CFG_SCANE$available 0000  
                    ?_spiWrite 0070                        _adcInit 0E46                        ___awdiv 0799  
               _pollController 068E                __size_of___wmul 0020                        __ptext1 0730  
                      __ptext2 0F3A                        __ptext3 0F71                        __ptext4 0E7A  
                      __ptext5 07F9                        __ptext6 0E3E                        __ptext7 01FC  
                      __ptext8 0E68                        __ptext9 0ECB                        _readADC 0F10  
                 __size_of_Map 0022                        _picInit 0F71           __size_of_reversebyte 0037  
                      _lutInit 01FC                        _ppsLock 0E3E                        _spiInit 0E7A  
                      _spiRead 0E31                        clrloop0 0E51           end_of_initialization 01F8  
                      init_ram 0E5C   __size_of_configureController 0160                        initloop 0E5D  
            __end_of_nvmUnlock 0E3E              __end_of_ppsUnlock 0800         __end_of_pollController 0730  
                   ??_spiWrite 0070                reversebyte@byte 0074          __CFG_WDTCPS$WDTCPS_31 0000  
                    Map@outMax 0035                      Map@outMin 0033                    ?_eepromRead 0070  
               _readController 054D                      _TRISAbits 0011                      _TRISCbits 0013  
                  spiWrite@dat 0070               __CFG_FEXTOSC$OFF 0000     _INIT_PRESSURE_SENSOR_byte3 006C  
   _INIT_PRESSURE_SENSOR_byte4 006B             _digitalStateSecond 0054                  ??_eepromWrite 0075  
              ?_pollController 0070                 _spiReceiveWait 0E2B                 __end_of___wmul 0ECB  
       __end_of_readController 068E            start_initialization 01CC                    __end_of_Map 0EED  
         _readControllerAnalog 0730                  _debounceLoops 004F            __size_of_eepromRead 0012  
             __CFG_LPBOREN$OFF 0000         __end_of_spiReceiveWait 0E31            __end_of_eepromWrite 0F10  
                     ??___wmul 0074                    __pdataBANK0 004E                ?_readController 0070  
                  __pbssBIGRAM 23F0                    __pbssCOMMON 0076                      ___latbits 0003  
                __pcstackBANK0 0020          configureController@lx 0030          configureController@ly 0031  
        configureController@rx 0032          configureController@ry 0033          ?_readControllerAnalog 0070  
               _responseLength 004E              _analogStateSecond 00D0                ?_spiReceiveWait 0070  
                     ?_adcInit 0070                       ?___awdiv 0024               __CFG_PPS1WAY$OFF 0000  
            __size_of_spiWrite 0005            _configureController 03ED                       ?_readADC 0074  
                     ?_picInit 0070                       ?_lutInit 0070                       ?_ppsLock 0070  
                     ?_spiInit 0020                       ?_spiRead 0070             eepromWrite@address 0020  
         spiInit@sTransmitEdge 0022           ?_configureController 0070                 ___wmul@product 0074  
                  _eepromWrite 0EED                      clear_ram0 0E50             spiInit@sDataSample 0020  
                    _nvmUnlock 0E37                       Map@inMax 0031                       Map@inMin 002F  
                    _ppsUnlock 07F9                       _SSP1CON1 0190                       _SSP1STAT 018F  
                ??_reversebyte 0020                     _ADCON0bits 0093              ___wmul@multiplier 0020  
                 lutInit@lxMax 0041                   lutInit@lxMin 0040                   lutInit@lyMax 0043  
                 lutInit@lyMin 0042              _digitalStateFirst 0055                   lutInit@rxMax 0045  
                 lutInit@rxMin 0044                   lutInit@ryMax 0047                   lutInit@ryMin 0046  
                 ??_eepromRead 0074                      main@count 004C         ??_readControllerAnalog 0027  
        ??_configureController 0027               ??_pollController 0070             __end_of_eepromRead 0E7A  
                   ?_nvmUnlock 0070                     ?_ppsUnlock 0070               __size_of_adcInit 000A  
             __size_of___awdiv 0060                 readADC@channel 0074               _analogStateFirst 00D8  
             __size_of_readADC 002A               __size_of_picInit 003B            __end_of_reversebyte 0F71  
             __size_of_lutInit 01F1                       __ptext10 0EAB                       __ptext11 0799  
                     __ptext20 0E31                       __ptext12 03ED                       __ptext21 0E2B  
                     __ptext13 054D                       __ptext22 068E                       __ptext14 0F10  
                     __ptext15 0EED                       __ptext16 0E37                       __ptext17 0E46  
                     __ptext19 0E26               __size_of_ppsLock 0008               __size_of_spiInit 0015  
             __size_of_spiRead 0006                  __size_of_main 0054           __CFG_WDTCWS$WDTCWS_7 0000  
                     _response 0056               ??_readController 0074                       _spiWrite 0E26  
                     int$flags 007E                   spiInit@sType 0074                main@slaveSelect 004D  
                 _SSP1STATbits 018F              spiInit@sClockIdle 0021                     _INTCONbits 000B  
                  _NVMCON1bits 081E         pollController@response 0071                       intlevel1 0000  
             ??_spiReceiveWait 0070              __CFG_CLKOUTEN$OFF 0000                     _PS2Command 0004  
                  ??_nvmUnlock 0074                    ??_ppsUnlock 0074                    _reversebyte 0F3A  
                  _previousCmd 006D                   ?_eepromWrite 0074  
