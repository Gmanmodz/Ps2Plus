

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Dec 05 09:54:20 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18876
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	dabs	1,0xCA0,32
    46                           	dabs	1,0xC20,80
    47                           	dabs	1,0xBA0,80
    48                           	dabs	1,0xB30,64
    49                           	dabs	1,0xB20,16
    50                           	dabs	1,0xAA0,80
    51                           	dabs	1,0xA20,80
    52                           	dabs	1,0x9A0,80
    53                           	dabs	1,0x920,80
    54                           	dabs	1,0x8A0,80
    55                           	dabs	1,0x820,80
    56                           	dabs	1,0x7E0,16
    57                           	dabs	1,0x7A0,64
    58                           	dabs	1,0x720,80
    59                           	dabs	1,0x6A0,80
    60                           	dabs	1,0x650,32
    61                           	dabs	1,0x23F0,0,_lutRY
    62                           	dabs	1,0x24F0,0,_lutRX
    63                           	dabs	1,0x25F0,0,_lutLY
    64                           	dabs	1,0x26F0,0,_lutLX
    65                           	dabs	1,0x7E,2
    66  0000                     
    67                           ; Version 2.10
    68                           ; Generated 31/07/2019 GMT
    69                           ; 
    70                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC16F18876 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101  0000                     	;# 
   102  0001                     	;# 
   103  0002                     	;# 
   104  0003                     	;# 
   105  0004                     	;# 
   106  0005                     	;# 
   107  0006                     	;# 
   108  0007                     	;# 
   109  0008                     	;# 
   110  0009                     	;# 
   111  000A                     	;# 
   112  000B                     	;# 
   113  000C                     	;# 
   114  000D                     	;# 
   115  000E                     	;# 
   116  000F                     	;# 
   117  0010                     	;# 
   118  0011                     	;# 
   119  0012                     	;# 
   120  0013                     	;# 
   121  0014                     	;# 
   122  0015                     	;# 
   123  0016                     	;# 
   124  0017                     	;# 
   125  0018                     	;# 
   126  0019                     	;# 
   127  001A                     	;# 
   128  001C                     	;# 
   129  001C                     	;# 
   130  001D                     	;# 
   131  001D                     	;# 
   132  001E                     	;# 
   133  001F                     	;# 
   134  008C                     	;# 
   135  008C                     	;# 
   136  008D                     	;# 
   137  008E                     	;# 
   138  008E                     	;# 
   139  008F                     	;# 
   140  0090                     	;# 
   141  0090                     	;# 
   142  0091                     	;# 
   143  0093                     	;# 
   144  0094                     	;# 
   145  0095                     	;# 
   146  0096                     	;# 
   147  0097                     	;# 
   148  0098                     	;# 
   149  0099                     	;# 
   150  009A                     	;# 
   151  009B                     	;# 
   152  009C                     	;# 
   153  009D                     	;# 
   154  009E                     	;# 
   155  010C                     	;# 
   156  010D                     	;# 
   157  010E                     	;# 
   158  010E                     	;# 
   159  010F                     	;# 
   160  0110                     	;# 
   161  0110                     	;# 
   162  0111                     	;# 
   163  0112                     	;# 
   164  0112                     	;# 
   165  0113                     	;# 
   166  0114                     	;# 
   167  0114                     	;# 
   168  0115                     	;# 
   169  0116                     	;# 
   170  0116                     	;# 
   171  0117                     	;# 
   172  0119                     	;# 
   173  0119                     	;# 
   174  0119                     	;# 
   175  011A                     	;# 
   176  011A                     	;# 
   177  011A                     	;# 
   178  011B                     	;# 
   179  011B                     	;# 
   180  011B                     	;# 
   181  011B                     	;# 
   182  011B                     	;# 
   183  011C                     	;# 
   184  011C                     	;# 
   185  011C                     	;# 
   186  011D                     	;# 
   187  011D                     	;# 
   188  011D                     	;# 
   189  011E                     	;# 
   190  011E                     	;# 
   191  011E                     	;# 
   192  011F                     	;# 
   193  011F                     	;# 
   194  011F                     	;# 
   195  011F                     	;# 
   196  011F                     	;# 
   197  018C                     	;# 
   198  018D                     	;# 
   199  018E                     	;# 
   200  018F                     	;# 
   201  0190                     	;# 
   202  0191                     	;# 
   203  0192                     	;# 
   204  0196                     	;# 
   205  0197                     	;# 
   206  0198                     	;# 
   207  0199                     	;# 
   208  019A                     	;# 
   209  019B                     	;# 
   210  019C                     	;# 
   211  020C                     	;# 
   212  020C                     	;# 
   213  020D                     	;# 
   214  020E                     	;# 
   215  020F                     	;# 
   216  020F                     	;# 
   217  0210                     	;# 
   218  0210                     	;# 
   219  0211                     	;# 
   220  0211                     	;# 
   221  0212                     	;# 
   222  0212                     	;# 
   223  0213                     	;# 
   224  0214                     	;# 
   225  0215                     	;# 
   226  0215                     	;# 
   227  0216                     	;# 
   228  0216                     	;# 
   229  0217                     	;# 
   230  0217                     	;# 
   231  0218                     	;# 
   232  0218                     	;# 
   233  0219                     	;# 
   234  021A                     	;# 
   235  021B                     	;# 
   236  021B                     	;# 
   237  021C                     	;# 
   238  021C                     	;# 
   239  021D                     	;# 
   240  021D                     	;# 
   241  021E                     	;# 
   242  021F                     	;# 
   243  028C                     	;# 
   244  028C                     	;# 
   245  028D                     	;# 
   246  028D                     	;# 
   247  028E                     	;# 
   248  028F                     	;# 
   249  0290                     	;# 
   250  0290                     	;# 
   251  0291                     	;# 
   252  0292                     	;# 
   253  0292                     	;# 
   254  0293                     	;# 
   255  0293                     	;# 
   256  0294                     	;# 
   257  0295                     	;# 
   258  0296                     	;# 
   259  0296                     	;# 
   260  0297                     	;# 
   261  0298                     	;# 
   262  0298                     	;# 
   263  0299                     	;# 
   264  0299                     	;# 
   265  029A                     	;# 
   266  029B                     	;# 
   267  029C                     	;# 
   268  029C                     	;# 
   269  029D                     	;# 
   270  030C                     	;# 
   271  030C                     	;# 
   272  030D                     	;# 
   273  030E                     	;# 
   274  030F                     	;# 
   275  0310                     	;# 
   276  0310                     	;# 
   277  0311                     	;# 
   278  0312                     	;# 
   279  0313                     	;# 
   280  0314                     	;# 
   281  0314                     	;# 
   282  0315                     	;# 
   283  0316                     	;# 
   284  0317                     	;# 
   285  0318                     	;# 
   286  0318                     	;# 
   287  0319                     	;# 
   288  031A                     	;# 
   289  031B                     	;# 
   290  031C                     	;# 
   291  031C                     	;# 
   292  031D                     	;# 
   293  031E                     	;# 
   294  031F                     	;# 
   295  038C                     	;# 
   296  038C                     	;# 
   297  038D                     	;# 
   298  038E                     	;# 
   299  0390                     	;# 
   300  0390                     	;# 
   301  0391                     	;# 
   302  0392                     	;# 
   303  040C                     	;# 
   304  040D                     	;# 
   305  040E                     	;# 
   306  040F                     	;# 
   307  0410                     	;# 
   308  0411                     	;# 
   309  0416                     	;# 
   310  0416                     	;# 
   311  0417                     	;# 
   312  0418                     	;# 
   313  0418                     	;# 
   314  0419                     	;# 
   315  041A                     	;# 
   316  041A                     	;# 
   317  041B                     	;# 
   318  041C                     	;# 
   319  041C                     	;# 
   320  041D                     	;# 
   321  041E                     	;# 
   322  041F                     	;# 
   323  048C                     	;# 
   324  048C                     	;# 
   325  048D                     	;# 
   326  048E                     	;# 
   327  048F                     	;# 
   328  048F                     	;# 
   329  0490                     	;# 
   330  0491                     	;# 
   331  0492                     	;# 
   332  0492                     	;# 
   333  0493                     	;# 
   334  0494                     	;# 
   335  0495                     	;# 
   336  0495                     	;# 
   337  0496                     	;# 
   338  0497                     	;# 
   339  0498                     	;# 
   340  0499                     	;# 
   341  049A                     	;# 
   342  049B                     	;# 
   343  049C                     	;# 
   344  049D                     	;# 
   345  050C                     	;# 
   346  050C                     	;# 
   347  050D                     	;# 
   348  050E                     	;# 
   349  050F                     	;# 
   350  050F                     	;# 
   351  0510                     	;# 
   352  0511                     	;# 
   353  0512                     	;# 
   354  0512                     	;# 
   355  0513                     	;# 
   356  0514                     	;# 
   357  0515                     	;# 
   358  0515                     	;# 
   359  0516                     	;# 
   360  0517                     	;# 
   361  0518                     	;# 
   362  0519                     	;# 
   363  051A                     	;# 
   364  051B                     	;# 
   365  051C                     	;# 
   366  051D                     	;# 
   367  058C                     	;# 
   368  058C                     	;# 
   369  058D                     	;# 
   370  058E                     	;# 
   371  058F                     	;# 
   372  058F                     	;# 
   373  0590                     	;# 
   374  0591                     	;# 
   375  0592                     	;# 
   376  0593                     	;# 
   377  060C                     	;# 
   378  060D                     	;# 
   379  060E                     	;# 
   380  060F                     	;# 
   381  0610                     	;# 
   382  0611                     	;# 
   383  0612                     	;# 
   384  0613                     	;# 
   385  0614                     	;# 
   386  0616                     	;# 
   387  0617                     	;# 
   388  0618                     	;# 
   389  0619                     	;# 
   390  061A                     	;# 
   391  061B                     	;# 
   392  061C                     	;# 
   393  061D                     	;# 
   394  061E                     	;# 
   395  068C                     	;# 
   396  068D                     	;# 
   397  068E                     	;# 
   398  068F                     	;# 
   399  0690                     	;# 
   400  0691                     	;# 
   401  0692                     	;# 
   402  0693                     	;# 
   403  0694                     	;# 
   404  070C                     	;# 
   405  070D                     	;# 
   406  070E                     	;# 
   407  070F                     	;# 
   408  0710                     	;# 
   409  0711                     	;# 
   410  0712                     	;# 
   411  0713                     	;# 
   412  0714                     	;# 
   413  0716                     	;# 
   414  0717                     	;# 
   415  0718                     	;# 
   416  0719                     	;# 
   417  071A                     	;# 
   418  071B                     	;# 
   419  071C                     	;# 
   420  071D                     	;# 
   421  071E                     	;# 
   422  0796                     	;# 
   423  0797                     	;# 
   424  0798                     	;# 
   425  0799                     	;# 
   426  079A                     	;# 
   427  079B                     	;# 
   428  080C                     	;# 
   429  080D                     	;# 
   430  080E                     	;# 
   431  080F                     	;# 
   432  0810                     	;# 
   433  0811                     	;# 
   434  0812                     	;# 
   435  0813                     	;# 
   436  0814                     	;# 
   437  081A                     	;# 
   438  081B                     	;# 
   439  081C                     	;# 
   440  081D                     	;# 
   441  081E                     	;# 
   442  081F                     	;# 
   443  088C                     	;# 
   444  088D                     	;# 
   445  088E                     	;# 
   446  088F                     	;# 
   447  0890                     	;# 
   448  0891                     	;# 
   449  0892                     	;# 
   450  0893                     	;# 
   451  0895                     	;# 
   452  0896                     	;# 
   453  0897                     	;# 
   454  0898                     	;# 
   455  0899                     	;# 
   456  089A                     	;# 
   457  089B                     	;# 
   458  090C                     	;# 
   459  090E                     	;# 
   460  090F                     	;# 
   461  091F                     	;# 
   462  098F                     	;# 
   463  098F                     	;# 
   464  0990                     	;# 
   465  0991                     	;# 
   466  0992                     	;# 
   467  0993                     	;# 
   468  0994                     	;# 
   469  0995                     	;# 
   470  0996                     	;# 
   471  0997                     	;# 
   472  0E0F                     	;# 
   473  0E10                     	;# 
   474  0E11                     	;# 
   475  0E12                     	;# 
   476  0E13                     	;# 
   477  0E14                     	;# 
   478  0E15                     	;# 
   479  0E16                     	;# 
   480  0E17                     	;# 
   481  0E18                     	;# 
   482  0E19                     	;# 
   483  0E1A                     	;# 
   484  0E1B                     	;# 
   485  0E1C                     	;# 
   486  0E1D                     	;# 
   487  0E1E                     	;# 
   488  0E1F                     	;# 
   489  0E20                     	;# 
   490  0E21                     	;# 
   491  0E22                     	;# 
   492  0E23                     	;# 
   493  0E24                     	;# 
   494  0E25                     	;# 
   495  0E26                     	;# 
   496  0E27                     	;# 
   497  0E28                     	;# 
   498  0E29                     	;# 
   499  0E2A                     	;# 
   500  0E2B                     	;# 
   501  0E2C                     	;# 
   502  0E2D                     	;# 
   503  0E2E                     	;# 
   504  0E2F                     	;# 
   505  0E30                     	;# 
   506  0E31                     	;# 
   507  0E32                     	;# 
   508  0E33                     	;# 
   509  0E34                     	;# 
   510  0E35                     	;# 
   511  0E36                     	;# 
   512  0E37                     	;# 
   513  0E8F                     	;# 
   514  0E90                     	;# 
   515  0E91                     	;# 
   516  0E92                     	;# 
   517  0E93                     	;# 
   518  0E94                     	;# 
   519  0E95                     	;# 
   520  0E96                     	;# 
   521  0E97                     	;# 
   522  0E9C                     	;# 
   523  0E9D                     	;# 
   524  0E9E                     	;# 
   525  0EA1                     	;# 
   526  0EA2                     	;# 
   527  0EA3                     	;# 
   528  0EA4                     	;# 
   529  0EA5                     	;# 
   530  0EA9                     	;# 
   531  0EAA                     	;# 
   532  0EAB                     	;# 
   533  0EAC                     	;# 
   534  0EB1                     	;# 
   535  0EB2                     	;# 
   536  0EB3                     	;# 
   537  0EB8                     	;# 
   538  0EB9                     	;# 
   539  0EBA                     	;# 
   540  0EBB                     	;# 
   541  0EBC                     	;# 
   542  0EBD                     	;# 
   543  0EBE                     	;# 
   544  0EC3                     	;# 
   545  0EC5                     	;# 
   546  0EC6                     	;# 
   547  0EC7                     	;# 
   548  0EC8                     	;# 
   549  0EC9                     	;# 
   550  0ECA                     	;# 
   551  0ECB                     	;# 
   552  0ECC                     	;# 
   553  0F10                     	;# 
   554  0F11                     	;# 
   555  0F12                     	;# 
   556  0F13                     	;# 
   557  0F14                     	;# 
   558  0F15                     	;# 
   559  0F16                     	;# 
   560  0F17                     	;# 
   561  0F18                     	;# 
   562  0F19                     	;# 
   563  0F1A                     	;# 
   564  0F1B                     	;# 
   565  0F1C                     	;# 
   566  0F1D                     	;# 
   567  0F1E                     	;# 
   568  0F1F                     	;# 
   569  0F20                     	;# 
   570  0F21                     	;# 
   571  0F22                     	;# 
   572  0F23                     	;# 
   573  0F24                     	;# 
   574  0F25                     	;# 
   575  0F26                     	;# 
   576  0F27                     	;# 
   577  0F28                     	;# 
   578  0F29                     	;# 
   579  0F2A                     	;# 
   580  0F2B                     	;# 
   581  0F2C                     	;# 
   582  0F2D                     	;# 
   583  0F2E                     	;# 
   584  0F2F                     	;# 
   585  0F30                     	;# 
   586  0F31                     	;# 
   587  0F32                     	;# 
   588  0F38                     	;# 
   589  0F39                     	;# 
   590  0F3A                     	;# 
   591  0F3B                     	;# 
   592  0F3C                     	;# 
   593  0F3D                     	;# 
   594  0F3E                     	;# 
   595  0F3F                     	;# 
   596  0F40                     	;# 
   597  0F41                     	;# 
   598  0F43                     	;# 
   599  0F44                     	;# 
   600  0F45                     	;# 
   601  0F46                     	;# 
   602  0F47                     	;# 
   603  0F48                     	;# 
   604  0F49                     	;# 
   605  0F4A                     	;# 
   606  0F4B                     	;# 
   607  0F4C                     	;# 
   608  0F4E                     	;# 
   609  0F4F                     	;# 
   610  0F50                     	;# 
   611  0F51                     	;# 
   612  0F52                     	;# 
   613  0F53                     	;# 
   614  0F54                     	;# 
   615  0F55                     	;# 
   616  0F56                     	;# 
   617  0F57                     	;# 
   618  0F59                     	;# 
   619  0F5A                     	;# 
   620  0F5B                     	;# 
   621  0F5C                     	;# 
   622  0F5D                     	;# 
   623  0F61                     	;# 
   624  0F62                     	;# 
   625  0F64                     	;# 
   626  0F65                     	;# 
   627  0F66                     	;# 
   628  0F67                     	;# 
   629  0F68                     	;# 
   630  0F69                     	;# 
   631  0F6A                     	;# 
   632  0F6B                     	;# 
   633  0F6C                     	;# 
   634  0F6D                     	;# 
   635  0FE4                     	;# 
   636  0FE5                     	;# 
   637  0FE6                     	;# 
   638  0FE7                     	;# 
   639  0FE8                     	;# 
   640  0FE9                     	;# 
   641  0FEA                     	;# 
   642  0FEB                     	;# 
   643  0FED                     	;# 
   644  0FEE                     	;# 
   645  0FEF                     	;# 
   646  0000                     	;# 
   647  0001                     	;# 
   648  0002                     	;# 
   649  0003                     	;# 
   650  0004                     	;# 
   651  0005                     	;# 
   652  0006                     	;# 
   653  0007                     	;# 
   654  0008                     	;# 
   655  0009                     	;# 
   656  000A                     	;# 
   657  000B                     	;# 
   658  000C                     	;# 
   659  000D                     	;# 
   660  000E                     	;# 
   661  000F                     	;# 
   662  0010                     	;# 
   663  0011                     	;# 
   664  0012                     	;# 
   665  0013                     	;# 
   666  0014                     	;# 
   667  0015                     	;# 
   668  0016                     	;# 
   669  0017                     	;# 
   670  0018                     	;# 
   671  0019                     	;# 
   672  001A                     	;# 
   673  001C                     	;# 
   674  001C                     	;# 
   675  001D                     	;# 
   676  001D                     	;# 
   677  001E                     	;# 
   678  001F                     	;# 
   679  008C                     	;# 
   680  008C                     	;# 
   681  008D                     	;# 
   682  008E                     	;# 
   683  008E                     	;# 
   684  008F                     	;# 
   685  0090                     	;# 
   686  0090                     	;# 
   687  0091                     	;# 
   688  0093                     	;# 
   689  0094                     	;# 
   690  0095                     	;# 
   691  0096                     	;# 
   692  0097                     	;# 
   693  0098                     	;# 
   694  0099                     	;# 
   695  009A                     	;# 
   696  009B                     	;# 
   697  009C                     	;# 
   698  009D                     	;# 
   699  009E                     	;# 
   700  010C                     	;# 
   701  010D                     	;# 
   702  010E                     	;# 
   703  010E                     	;# 
   704  010F                     	;# 
   705  0110                     	;# 
   706  0110                     	;# 
   707  0111                     	;# 
   708  0112                     	;# 
   709  0112                     	;# 
   710  0113                     	;# 
   711  0114                     	;# 
   712  0114                     	;# 
   713  0115                     	;# 
   714  0116                     	;# 
   715  0116                     	;# 
   716  0117                     	;# 
   717  0119                     	;# 
   718  0119                     	;# 
   719  0119                     	;# 
   720  011A                     	;# 
   721  011A                     	;# 
   722  011A                     	;# 
   723  011B                     	;# 
   724  011B                     	;# 
   725  011B                     	;# 
   726  011B                     	;# 
   727  011B                     	;# 
   728  011C                     	;# 
   729  011C                     	;# 
   730  011C                     	;# 
   731  011D                     	;# 
   732  011D                     	;# 
   733  011D                     	;# 
   734  011E                     	;# 
   735  011E                     	;# 
   736  011E                     	;# 
   737  011F                     	;# 
   738  011F                     	;# 
   739  011F                     	;# 
   740  011F                     	;# 
   741  011F                     	;# 
   742  018C                     	;# 
   743  018D                     	;# 
   744  018E                     	;# 
   745  018F                     	;# 
   746  0190                     	;# 
   747  0191                     	;# 
   748  0192                     	;# 
   749  0196                     	;# 
   750  0197                     	;# 
   751  0198                     	;# 
   752  0199                     	;# 
   753  019A                     	;# 
   754  019B                     	;# 
   755  019C                     	;# 
   756  020C                     	;# 
   757  020C                     	;# 
   758  020D                     	;# 
   759  020E                     	;# 
   760  020F                     	;# 
   761  020F                     	;# 
   762  0210                     	;# 
   763  0210                     	;# 
   764  0211                     	;# 
   765  0211                     	;# 
   766  0212                     	;# 
   767  0212                     	;# 
   768  0213                     	;# 
   769  0214                     	;# 
   770  0215                     	;# 
   771  0215                     	;# 
   772  0216                     	;# 
   773  0216                     	;# 
   774  0217                     	;# 
   775  0217                     	;# 
   776  0218                     	;# 
   777  0218                     	;# 
   778  0219                     	;# 
   779  021A                     	;# 
   780  021B                     	;# 
   781  021B                     	;# 
   782  021C                     	;# 
   783  021C                     	;# 
   784  021D                     	;# 
   785  021D                     	;# 
   786  021E                     	;# 
   787  021F                     	;# 
   788  028C                     	;# 
   789  028C                     	;# 
   790  028D                     	;# 
   791  028D                     	;# 
   792  028E                     	;# 
   793  028F                     	;# 
   794  0290                     	;# 
   795  0290                     	;# 
   796  0291                     	;# 
   797  0292                     	;# 
   798  0292                     	;# 
   799  0293                     	;# 
   800  0293                     	;# 
   801  0294                     	;# 
   802  0295                     	;# 
   803  0296                     	;# 
   804  0296                     	;# 
   805  0297                     	;# 
   806  0298                     	;# 
   807  0298                     	;# 
   808  0299                     	;# 
   809  0299                     	;# 
   810  029A                     	;# 
   811  029B                     	;# 
   812  029C                     	;# 
   813  029C                     	;# 
   814  029D                     	;# 
   815  030C                     	;# 
   816  030C                     	;# 
   817  030D                     	;# 
   818  030E                     	;# 
   819  030F                     	;# 
   820  0310                     	;# 
   821  0310                     	;# 
   822  0311                     	;# 
   823  0312                     	;# 
   824  0313                     	;# 
   825  0314                     	;# 
   826  0314                     	;# 
   827  0315                     	;# 
   828  0316                     	;# 
   829  0317                     	;# 
   830  0318                     	;# 
   831  0318                     	;# 
   832  0319                     	;# 
   833  031A                     	;# 
   834  031B                     	;# 
   835  031C                     	;# 
   836  031C                     	;# 
   837  031D                     	;# 
   838  031E                     	;# 
   839  031F                     	;# 
   840  038C                     	;# 
   841  038C                     	;# 
   842  038D                     	;# 
   843  038E                     	;# 
   844  0390                     	;# 
   845  0390                     	;# 
   846  0391                     	;# 
   847  0392                     	;# 
   848  040C                     	;# 
   849  040D                     	;# 
   850  040E                     	;# 
   851  040F                     	;# 
   852  0410                     	;# 
   853  0411                     	;# 
   854  0416                     	;# 
   855  0416                     	;# 
   856  0417                     	;# 
   857  0418                     	;# 
   858  0418                     	;# 
   859  0419                     	;# 
   860  041A                     	;# 
   861  041A                     	;# 
   862  041B                     	;# 
   863  041C                     	;# 
   864  041C                     	;# 
   865  041D                     	;# 
   866  041E                     	;# 
   867  041F                     	;# 
   868  048C                     	;# 
   869  048C                     	;# 
   870  048D                     	;# 
   871  048E                     	;# 
   872  048F                     	;# 
   873  048F                     	;# 
   874  0490                     	;# 
   875  0491                     	;# 
   876  0492                     	;# 
   877  0492                     	;# 
   878  0493                     	;# 
   879  0494                     	;# 
   880  0495                     	;# 
   881  0495                     	;# 
   882  0496                     	;# 
   883  0497                     	;# 
   884  0498                     	;# 
   885  0499                     	;# 
   886  049A                     	;# 
   887  049B                     	;# 
   888  049C                     	;# 
   889  049D                     	;# 
   890  050C                     	;# 
   891  050C                     	;# 
   892  050D                     	;# 
   893  050E                     	;# 
   894  050F                     	;# 
   895  050F                     	;# 
   896  0510                     	;# 
   897  0511                     	;# 
   898  0512                     	;# 
   899  0512                     	;# 
   900  0513                     	;# 
   901  0514                     	;# 
   902  0515                     	;# 
   903  0515                     	;# 
   904  0516                     	;# 
   905  0517                     	;# 
   906  0518                     	;# 
   907  0519                     	;# 
   908  051A                     	;# 
   909  051B                     	;# 
   910  051C                     	;# 
   911  051D                     	;# 
   912  058C                     	;# 
   913  058C                     	;# 
   914  058D                     	;# 
   915  058E                     	;# 
   916  058F                     	;# 
   917  058F                     	;# 
   918  0590                     	;# 
   919  0591                     	;# 
   920  0592                     	;# 
   921  0593                     	;# 
   922  060C                     	;# 
   923  060D                     	;# 
   924  060E                     	;# 
   925  060F                     	;# 
   926  0610                     	;# 
   927  0611                     	;# 
   928  0612                     	;# 
   929  0613                     	;# 
   930  0614                     	;# 
   931  0616                     	;# 
   932  0617                     	;# 
   933  0618                     	;# 
   934  0619                     	;# 
   935  061A                     	;# 
   936  061B                     	;# 
   937  061C                     	;# 
   938  061D                     	;# 
   939  061E                     	;# 
   940  068C                     	;# 
   941  068D                     	;# 
   942  068E                     	;# 
   943  068F                     	;# 
   944  0690                     	;# 
   945  0691                     	;# 
   946  0692                     	;# 
   947  0693                     	;# 
   948  0694                     	;# 
   949  070C                     	;# 
   950  070D                     	;# 
   951  070E                     	;# 
   952  070F                     	;# 
   953  0710                     	;# 
   954  0711                     	;# 
   955  0712                     	;# 
   956  0713                     	;# 
   957  0714                     	;# 
   958  0716                     	;# 
   959  0717                     	;# 
   960  0718                     	;# 
   961  0719                     	;# 
   962  071A                     	;# 
   963  071B                     	;# 
   964  071C                     	;# 
   965  071D                     	;# 
   966  071E                     	;# 
   967  0796                     	;# 
   968  0797                     	;# 
   969  0798                     	;# 
   970  0799                     	;# 
   971  079A                     	;# 
   972  079B                     	;# 
   973  080C                     	;# 
   974  080D                     	;# 
   975  080E                     	;# 
   976  080F                     	;# 
   977  0810                     	;# 
   978  0811                     	;# 
   979  0812                     	;# 
   980  0813                     	;# 
   981  0814                     	;# 
   982  081A                     	;# 
   983  081B                     	;# 
   984  081C                     	;# 
   985  081D                     	;# 
   986  081E                     	;# 
   987  081F                     	;# 
   988  088C                     	;# 
   989  088D                     	;# 
   990  088E                     	;# 
   991  088F                     	;# 
   992  0890                     	;# 
   993  0891                     	;# 
   994  0892                     	;# 
   995  0893                     	;# 
   996  0895                     	;# 
   997  0896                     	;# 
   998  0897                     	;# 
   999  0898                     	;# 
  1000  0899                     	;# 
  1001  089A                     	;# 
  1002  089B                     	;# 
  1003  090C                     	;# 
  1004  090E                     	;# 
  1005  090F                     	;# 
  1006  091F                     	;# 
  1007  098F                     	;# 
  1008  098F                     	;# 
  1009  0990                     	;# 
  1010  0991                     	;# 
  1011  0992                     	;# 
  1012  0993                     	;# 
  1013  0994                     	;# 
  1014  0995                     	;# 
  1015  0996                     	;# 
  1016  0997                     	;# 
  1017  0E0F                     	;# 
  1018  0E10                     	;# 
  1019  0E11                     	;# 
  1020  0E12                     	;# 
  1021  0E13                     	;# 
  1022  0E14                     	;# 
  1023  0E15                     	;# 
  1024  0E16                     	;# 
  1025  0E17                     	;# 
  1026  0E18                     	;# 
  1027  0E19                     	;# 
  1028  0E1A                     	;# 
  1029  0E1B                     	;# 
  1030  0E1C                     	;# 
  1031  0E1D                     	;# 
  1032  0E1E                     	;# 
  1033  0E1F                     	;# 
  1034  0E20                     	;# 
  1035  0E21                     	;# 
  1036  0E22                     	;# 
  1037  0E23                     	;# 
  1038  0E24                     	;# 
  1039  0E25                     	;# 
  1040  0E26                     	;# 
  1041  0E27                     	;# 
  1042  0E28                     	;# 
  1043  0E29                     	;# 
  1044  0E2A                     	;# 
  1045  0E2B                     	;# 
  1046  0E2C                     	;# 
  1047  0E2D                     	;# 
  1048  0E2E                     	;# 
  1049  0E2F                     	;# 
  1050  0E30                     	;# 
  1051  0E31                     	;# 
  1052  0E32                     	;# 
  1053  0E33                     	;# 
  1054  0E34                     	;# 
  1055  0E35                     	;# 
  1056  0E36                     	;# 
  1057  0E37                     	;# 
  1058  0E8F                     	;# 
  1059  0E90                     	;# 
  1060  0E91                     	;# 
  1061  0E92                     	;# 
  1062  0E93                     	;# 
  1063  0E94                     	;# 
  1064  0E95                     	;# 
  1065  0E96                     	;# 
  1066  0E97                     	;# 
  1067  0E9C                     	;# 
  1068  0E9D                     	;# 
  1069  0E9E                     	;# 
  1070  0EA1                     	;# 
  1071  0EA2                     	;# 
  1072  0EA3                     	;# 
  1073  0EA4                     	;# 
  1074  0EA5                     	;# 
  1075  0EA9                     	;# 
  1076  0EAA                     	;# 
  1077  0EAB                     	;# 
  1078  0EAC                     	;# 
  1079  0EB1                     	;# 
  1080  0EB2                     	;# 
  1081  0EB3                     	;# 
  1082  0EB8                     	;# 
  1083  0EB9                     	;# 
  1084  0EBA                     	;# 
  1085  0EBB                     	;# 
  1086  0EBC                     	;# 
  1087  0EBD                     	;# 
  1088  0EBE                     	;# 
  1089  0EC3                     	;# 
  1090  0EC5                     	;# 
  1091  0EC6                     	;# 
  1092  0EC7                     	;# 
  1093  0EC8                     	;# 
  1094  0EC9                     	;# 
  1095  0ECA                     	;# 
  1096  0ECB                     	;# 
  1097  0ECC                     	;# 
  1098  0F10                     	;# 
  1099  0F11                     	;# 
  1100  0F12                     	;# 
  1101  0F13                     	;# 
  1102  0F14                     	;# 
  1103  0F15                     	;# 
  1104  0F16                     	;# 
  1105  0F17                     	;# 
  1106  0F18                     	;# 
  1107  0F19                     	;# 
  1108  0F1A                     	;# 
  1109  0F1B                     	;# 
  1110  0F1C                     	;# 
  1111  0F1D                     	;# 
  1112  0F1E                     	;# 
  1113  0F1F                     	;# 
  1114  0F20                     	;# 
  1115  0F21                     	;# 
  1116  0F22                     	;# 
  1117  0F23                     	;# 
  1118  0F24                     	;# 
  1119  0F25                     	;# 
  1120  0F26                     	;# 
  1121  0F27                     	;# 
  1122  0F28                     	;# 
  1123  0F29                     	;# 
  1124  0F2A                     	;# 
  1125  0F2B                     	;# 
  1126  0F2C                     	;# 
  1127  0F2D                     	;# 
  1128  0F2E                     	;# 
  1129  0F2F                     	;# 
  1130  0F30                     	;# 
  1131  0F31                     	;# 
  1132  0F32                     	;# 
  1133  0F38                     	;# 
  1134  0F39                     	;# 
  1135  0F3A                     	;# 
  1136  0F3B                     	;# 
  1137  0F3C                     	;# 
  1138  0F3D                     	;# 
  1139  0F3E                     	;# 
  1140  0F3F                     	;# 
  1141  0F40                     	;# 
  1142  0F41                     	;# 
  1143  0F43                     	;# 
  1144  0F44                     	;# 
  1145  0F45                     	;# 
  1146  0F46                     	;# 
  1147  0F47                     	;# 
  1148  0F48                     	;# 
  1149  0F49                     	;# 
  1150  0F4A                     	;# 
  1151  0F4B                     	;# 
  1152  0F4C                     	;# 
  1153  0F4E                     	;# 
  1154  0F4F                     	;# 
  1155  0F50                     	;# 
  1156  0F51                     	;# 
  1157  0F52                     	;# 
  1158  0F53                     	;# 
  1159  0F54                     	;# 
  1160  0F55                     	;# 
  1161  0F56                     	;# 
  1162  0F57                     	;# 
  1163  0F59                     	;# 
  1164  0F5A                     	;# 
  1165  0F5B                     	;# 
  1166  0F5C                     	;# 
  1167  0F5D                     	;# 
  1168  0F61                     	;# 
  1169  0F62                     	;# 
  1170  0F64                     	;# 
  1171  0F65                     	;# 
  1172  0F66                     	;# 
  1173  0F67                     	;# 
  1174  0F68                     	;# 
  1175  0F69                     	;# 
  1176  0F6A                     	;# 
  1177  0F6B                     	;# 
  1178  0F6C                     	;# 
  1179  0F6D                     	;# 
  1180  0FE4                     	;# 
  1181  0FE5                     	;# 
  1182  0FE6                     	;# 
  1183  0FE7                     	;# 
  1184  0FE8                     	;# 
  1185  0FE9                     	;# 
  1186  0FEA                     	;# 
  1187  0FEB                     	;# 
  1188  0FED                     	;# 
  1189  0FEE                     	;# 
  1190  0FEF                     	;# 
  1191  0000                     	;# 
  1192  0001                     	;# 
  1193  0002                     	;# 
  1194  0003                     	;# 
  1195  0004                     	;# 
  1196  0005                     	;# 
  1197  0006                     	;# 
  1198  0007                     	;# 
  1199  0008                     	;# 
  1200  0009                     	;# 
  1201  000A                     	;# 
  1202  000B                     	;# 
  1203  000C                     	;# 
  1204  000D                     	;# 
  1205  000E                     	;# 
  1206  000F                     	;# 
  1207  0010                     	;# 
  1208  0011                     	;# 
  1209  0012                     	;# 
  1210  0013                     	;# 
  1211  0014                     	;# 
  1212  0015                     	;# 
  1213  0016                     	;# 
  1214  0017                     	;# 
  1215  0018                     	;# 
  1216  0019                     	;# 
  1217  001A                     	;# 
  1218  001C                     	;# 
  1219  001C                     	;# 
  1220  001D                     	;# 
  1221  001D                     	;# 
  1222  001E                     	;# 
  1223  001F                     	;# 
  1224  008C                     	;# 
  1225  008C                     	;# 
  1226  008D                     	;# 
  1227  008E                     	;# 
  1228  008E                     	;# 
  1229  008F                     	;# 
  1230  0090                     	;# 
  1231  0090                     	;# 
  1232  0091                     	;# 
  1233  0093                     	;# 
  1234  0094                     	;# 
  1235  0095                     	;# 
  1236  0096                     	;# 
  1237  0097                     	;# 
  1238  0098                     	;# 
  1239  0099                     	;# 
  1240  009A                     	;# 
  1241  009B                     	;# 
  1242  009C                     	;# 
  1243  009D                     	;# 
  1244  009E                     	;# 
  1245  010C                     	;# 
  1246  010D                     	;# 
  1247  010E                     	;# 
  1248  010E                     	;# 
  1249  010F                     	;# 
  1250  0110                     	;# 
  1251  0110                     	;# 
  1252  0111                     	;# 
  1253  0112                     	;# 
  1254  0112                     	;# 
  1255  0113                     	;# 
  1256  0114                     	;# 
  1257  0114                     	;# 
  1258  0115                     	;# 
  1259  0116                     	;# 
  1260  0116                     	;# 
  1261  0117                     	;# 
  1262  0119                     	;# 
  1263  0119                     	;# 
  1264  0119                     	;# 
  1265  011A                     	;# 
  1266  011A                     	;# 
  1267  011A                     	;# 
  1268  011B                     	;# 
  1269  011B                     	;# 
  1270  011B                     	;# 
  1271  011B                     	;# 
  1272  011B                     	;# 
  1273  011C                     	;# 
  1274  011C                     	;# 
  1275  011C                     	;# 
  1276  011D                     	;# 
  1277  011D                     	;# 
  1278  011D                     	;# 
  1279  011E                     	;# 
  1280  011E                     	;# 
  1281  011E                     	;# 
  1282  011F                     	;# 
  1283  011F                     	;# 
  1284  011F                     	;# 
  1285  011F                     	;# 
  1286  011F                     	;# 
  1287  018C                     	;# 
  1288  018D                     	;# 
  1289  018E                     	;# 
  1290  018F                     	;# 
  1291  0190                     	;# 
  1292  0191                     	;# 
  1293  0192                     	;# 
  1294  0196                     	;# 
  1295  0197                     	;# 
  1296  0198                     	;# 
  1297  0199                     	;# 
  1298  019A                     	;# 
  1299  019B                     	;# 
  1300  019C                     	;# 
  1301  020C                     	;# 
  1302  020C                     	;# 
  1303  020D                     	;# 
  1304  020E                     	;# 
  1305  020F                     	;# 
  1306  020F                     	;# 
  1307  0210                     	;# 
  1308  0210                     	;# 
  1309  0211                     	;# 
  1310  0211                     	;# 
  1311  0212                     	;# 
  1312  0212                     	;# 
  1313  0213                     	;# 
  1314  0214                     	;# 
  1315  0215                     	;# 
  1316  0215                     	;# 
  1317  0216                     	;# 
  1318  0216                     	;# 
  1319  0217                     	;# 
  1320  0217                     	;# 
  1321  0218                     	;# 
  1322  0218                     	;# 
  1323  0219                     	;# 
  1324  021A                     	;# 
  1325  021B                     	;# 
  1326  021B                     	;# 
  1327  021C                     	;# 
  1328  021C                     	;# 
  1329  021D                     	;# 
  1330  021D                     	;# 
  1331  021E                     	;# 
  1332  021F                     	;# 
  1333  028C                     	;# 
  1334  028C                     	;# 
  1335  028D                     	;# 
  1336  028D                     	;# 
  1337  028E                     	;# 
  1338  028F                     	;# 
  1339  0290                     	;# 
  1340  0290                     	;# 
  1341  0291                     	;# 
  1342  0292                     	;# 
  1343  0292                     	;# 
  1344  0293                     	;# 
  1345  0293                     	;# 
  1346  0294                     	;# 
  1347  0295                     	;# 
  1348  0296                     	;# 
  1349  0296                     	;# 
  1350  0297                     	;# 
  1351  0298                     	;# 
  1352  0298                     	;# 
  1353  0299                     	;# 
  1354  0299                     	;# 
  1355  029A                     	;# 
  1356  029B                     	;# 
  1357  029C                     	;# 
  1358  029C                     	;# 
  1359  029D                     	;# 
  1360  030C                     	;# 
  1361  030C                     	;# 
  1362  030D                     	;# 
  1363  030E                     	;# 
  1364  030F                     	;# 
  1365  0310                     	;# 
  1366  0310                     	;# 
  1367  0311                     	;# 
  1368  0312                     	;# 
  1369  0313                     	;# 
  1370  0314                     	;# 
  1371  0314                     	;# 
  1372  0315                     	;# 
  1373  0316                     	;# 
  1374  0317                     	;# 
  1375  0318                     	;# 
  1376  0318                     	;# 
  1377  0319                     	;# 
  1378  031A                     	;# 
  1379  031B                     	;# 
  1380  031C                     	;# 
  1381  031C                     	;# 
  1382  031D                     	;# 
  1383  031E                     	;# 
  1384  031F                     	;# 
  1385  038C                     	;# 
  1386  038C                     	;# 
  1387  038D                     	;# 
  1388  038E                     	;# 
  1389  0390                     	;# 
  1390  0390                     	;# 
  1391  0391                     	;# 
  1392  0392                     	;# 
  1393  040C                     	;# 
  1394  040D                     	;# 
  1395  040E                     	;# 
  1396  040F                     	;# 
  1397  0410                     	;# 
  1398  0411                     	;# 
  1399  0416                     	;# 
  1400  0416                     	;# 
  1401  0417                     	;# 
  1402  0418                     	;# 
  1403  0418                     	;# 
  1404  0419                     	;# 
  1405  041A                     	;# 
  1406  041A                     	;# 
  1407  041B                     	;# 
  1408  041C                     	;# 
  1409  041C                     	;# 
  1410  041D                     	;# 
  1411  041E                     	;# 
  1412  041F                     	;# 
  1413  048C                     	;# 
  1414  048C                     	;# 
  1415  048D                     	;# 
  1416  048E                     	;# 
  1417  048F                     	;# 
  1418  048F                     	;# 
  1419  0490                     	;# 
  1420  0491                     	;# 
  1421  0492                     	;# 
  1422  0492                     	;# 
  1423  0493                     	;# 
  1424  0494                     	;# 
  1425  0495                     	;# 
  1426  0495                     	;# 
  1427  0496                     	;# 
  1428  0497                     	;# 
  1429  0498                     	;# 
  1430  0499                     	;# 
  1431  049A                     	;# 
  1432  049B                     	;# 
  1433  049C                     	;# 
  1434  049D                     	;# 
  1435  050C                     	;# 
  1436  050C                     	;# 
  1437  050D                     	;# 
  1438  050E                     	;# 
  1439  050F                     	;# 
  1440  050F                     	;# 
  1441  0510                     	;# 
  1442  0511                     	;# 
  1443  0512                     	;# 
  1444  0512                     	;# 
  1445  0513                     	;# 
  1446  0514                     	;# 
  1447  0515                     	;# 
  1448  0515                     	;# 
  1449  0516                     	;# 
  1450  0517                     	;# 
  1451  0518                     	;# 
  1452  0519                     	;# 
  1453  051A                     	;# 
  1454  051B                     	;# 
  1455  051C                     	;# 
  1456  051D                     	;# 
  1457  058C                     	;# 
  1458  058C                     	;# 
  1459  058D                     	;# 
  1460  058E                     	;# 
  1461  058F                     	;# 
  1462  058F                     	;# 
  1463  0590                     	;# 
  1464  0591                     	;# 
  1465  0592                     	;# 
  1466  0593                     	;# 
  1467  060C                     	;# 
  1468  060D                     	;# 
  1469  060E                     	;# 
  1470  060F                     	;# 
  1471  0610                     	;# 
  1472  0611                     	;# 
  1473  0612                     	;# 
  1474  0613                     	;# 
  1475  0614                     	;# 
  1476  0616                     	;# 
  1477  0617                     	;# 
  1478  0618                     	;# 
  1479  0619                     	;# 
  1480  061A                     	;# 
  1481  061B                     	;# 
  1482  061C                     	;# 
  1483  061D                     	;# 
  1484  061E                     	;# 
  1485  068C                     	;# 
  1486  068D                     	;# 
  1487  068E                     	;# 
  1488  068F                     	;# 
  1489  0690                     	;# 
  1490  0691                     	;# 
  1491  0692                     	;# 
  1492  0693                     	;# 
  1493  0694                     	;# 
  1494  070C                     	;# 
  1495  070D                     	;# 
  1496  070E                     	;# 
  1497  070F                     	;# 
  1498  0710                     	;# 
  1499  0711                     	;# 
  1500  0712                     	;# 
  1501  0713                     	;# 
  1502  0714                     	;# 
  1503  0716                     	;# 
  1504  0717                     	;# 
  1505  0718                     	;# 
  1506  0719                     	;# 
  1507  071A                     	;# 
  1508  071B                     	;# 
  1509  071C                     	;# 
  1510  071D                     	;# 
  1511  071E                     	;# 
  1512  0796                     	;# 
  1513  0797                     	;# 
  1514  0798                     	;# 
  1515  0799                     	;# 
  1516  079A                     	;# 
  1517  079B                     	;# 
  1518  080C                     	;# 
  1519  080D                     	;# 
  1520  080E                     	;# 
  1521  080F                     	;# 
  1522  0810                     	;# 
  1523  0811                     	;# 
  1524  0812                     	;# 
  1525  0813                     	;# 
  1526  0814                     	;# 
  1527  081A                     	;# 
  1528  081B                     	;# 
  1529  081C                     	;# 
  1530  081D                     	;# 
  1531  081E                     	;# 
  1532  081F                     	;# 
  1533  088C                     	;# 
  1534  088D                     	;# 
  1535  088E                     	;# 
  1536  088F                     	;# 
  1537  0890                     	;# 
  1538  0891                     	;# 
  1539  0892                     	;# 
  1540  0893                     	;# 
  1541  0895                     	;# 
  1542  0896                     	;# 
  1543  0897                     	;# 
  1544  0898                     	;# 
  1545  0899                     	;# 
  1546  089A                     	;# 
  1547  089B                     	;# 
  1548  090C                     	;# 
  1549  090E                     	;# 
  1550  090F                     	;# 
  1551  091F                     	;# 
  1552  098F                     	;# 
  1553  098F                     	;# 
  1554  0990                     	;# 
  1555  0991                     	;# 
  1556  0992                     	;# 
  1557  0993                     	;# 
  1558  0994                     	;# 
  1559  0995                     	;# 
  1560  0996                     	;# 
  1561  0997                     	;# 
  1562  0E0F                     	;# 
  1563  0E10                     	;# 
  1564  0E11                     	;# 
  1565  0E12                     	;# 
  1566  0E13                     	;# 
  1567  0E14                     	;# 
  1568  0E15                     	;# 
  1569  0E16                     	;# 
  1570  0E17                     	;# 
  1571  0E18                     	;# 
  1572  0E19                     	;# 
  1573  0E1A                     	;# 
  1574  0E1B                     	;# 
  1575  0E1C                     	;# 
  1576  0E1D                     	;# 
  1577  0E1E                     	;# 
  1578  0E1F                     	;# 
  1579  0E20                     	;# 
  1580  0E21                     	;# 
  1581  0E22                     	;# 
  1582  0E23                     	;# 
  1583  0E24                     	;# 
  1584  0E25                     	;# 
  1585  0E26                     	;# 
  1586  0E27                     	;# 
  1587  0E28                     	;# 
  1588  0E29                     	;# 
  1589  0E2A                     	;# 
  1590  0E2B                     	;# 
  1591  0E2C                     	;# 
  1592  0E2D                     	;# 
  1593  0E2E                     	;# 
  1594  0E2F                     	;# 
  1595  0E30                     	;# 
  1596  0E31                     	;# 
  1597  0E32                     	;# 
  1598  0E33                     	;# 
  1599  0E34                     	;# 
  1600  0E35                     	;# 
  1601  0E36                     	;# 
  1602  0E37                     	;# 
  1603  0E8F                     	;# 
  1604  0E90                     	;# 
  1605  0E91                     	;# 
  1606  0E92                     	;# 
  1607  0E93                     	;# 
  1608  0E94                     	;# 
  1609  0E95                     	;# 
  1610  0E96                     	;# 
  1611  0E97                     	;# 
  1612  0E9C                     	;# 
  1613  0E9D                     	;# 
  1614  0E9E                     	;# 
  1615  0EA1                     	;# 
  1616  0EA2                     	;# 
  1617  0EA3                     	;# 
  1618  0EA4                     	;# 
  1619  0EA5                     	;# 
  1620  0EA9                     	;# 
  1621  0EAA                     	;# 
  1622  0EAB                     	;# 
  1623  0EAC                     	;# 
  1624  0EB1                     	;# 
  1625  0EB2                     	;# 
  1626  0EB3                     	;# 
  1627  0EB8                     	;# 
  1628  0EB9                     	;# 
  1629  0EBA                     	;# 
  1630  0EBB                     	;# 
  1631  0EBC                     	;# 
  1632  0EBD                     	;# 
  1633  0EBE                     	;# 
  1634  0EC3                     	;# 
  1635  0EC5                     	;# 
  1636  0EC6                     	;# 
  1637  0EC7                     	;# 
  1638  0EC8                     	;# 
  1639  0EC9                     	;# 
  1640  0ECA                     	;# 
  1641  0ECB                     	;# 
  1642  0ECC                     	;# 
  1643  0F10                     	;# 
  1644  0F11                     	;# 
  1645  0F12                     	;# 
  1646  0F13                     	;# 
  1647  0F14                     	;# 
  1648  0F15                     	;# 
  1649  0F16                     	;# 
  1650  0F17                     	;# 
  1651  0F18                     	;# 
  1652  0F19                     	;# 
  1653  0F1A                     	;# 
  1654  0F1B                     	;# 
  1655  0F1C                     	;# 
  1656  0F1D                     	;# 
  1657  0F1E                     	;# 
  1658  0F1F                     	;# 
  1659  0F20                     	;# 
  1660  0F21                     	;# 
  1661  0F22                     	;# 
  1662  0F23                     	;# 
  1663  0F24                     	;# 
  1664  0F25                     	;# 
  1665  0F26                     	;# 
  1666  0F27                     	;# 
  1667  0F28                     	;# 
  1668  0F29                     	;# 
  1669  0F2A                     	;# 
  1670  0F2B                     	;# 
  1671  0F2C                     	;# 
  1672  0F2D                     	;# 
  1673  0F2E                     	;# 
  1674  0F2F                     	;# 
  1675  0F30                     	;# 
  1676  0F31                     	;# 
  1677  0F32                     	;# 
  1678  0F38                     	;# 
  1679  0F39                     	;# 
  1680  0F3A                     	;# 
  1681  0F3B                     	;# 
  1682  0F3C                     	;# 
  1683  0F3D                     	;# 
  1684  0F3E                     	;# 
  1685  0F3F                     	;# 
  1686  0F40                     	;# 
  1687  0F41                     	;# 
  1688  0F43                     	;# 
  1689  0F44                     	;# 
  1690  0F45                     	;# 
  1691  0F46                     	;# 
  1692  0F47                     	;# 
  1693  0F48                     	;# 
  1694  0F49                     	;# 
  1695  0F4A                     	;# 
  1696  0F4B                     	;# 
  1697  0F4C                     	;# 
  1698  0F4E                     	;# 
  1699  0F4F                     	;# 
  1700  0F50                     	;# 
  1701  0F51                     	;# 
  1702  0F52                     	;# 
  1703  0F53                     	;# 
  1704  0F54                     	;# 
  1705  0F55                     	;# 
  1706  0F56                     	;# 
  1707  0F57                     	;# 
  1708  0F59                     	;# 
  1709  0F5A                     	;# 
  1710  0F5B                     	;# 
  1711  0F5C                     	;# 
  1712  0F5D                     	;# 
  1713  0F61                     	;# 
  1714  0F62                     	;# 
  1715  0F64                     	;# 
  1716  0F65                     	;# 
  1717  0F66                     	;# 
  1718  0F67                     	;# 
  1719  0F68                     	;# 
  1720  0F69                     	;# 
  1721  0F6A                     	;# 
  1722  0F6B                     	;# 
  1723  0F6C                     	;# 
  1724  0F6D                     	;# 
  1725  0FE4                     	;# 
  1726  0FE5                     	;# 
  1727  0FE6                     	;# 
  1728  0FE7                     	;# 
  1729  0FE8                     	;# 
  1730  0FE9                     	;# 
  1731  0FEA                     	;# 
  1732  0FEB                     	;# 
  1733  0FED                     	;# 
  1734  0FEE                     	;# 
  1735  0FEF                     	;# 
  1736  0000                     	;# 
  1737  0001                     	;# 
  1738  0002                     	;# 
  1739  0003                     	;# 
  1740  0004                     	;# 
  1741  0005                     	;# 
  1742  0006                     	;# 
  1743  0007                     	;# 
  1744  0008                     	;# 
  1745  0009                     	;# 
  1746  000A                     	;# 
  1747  000B                     	;# 
  1748  000C                     	;# 
  1749  000D                     	;# 
  1750  000E                     	;# 
  1751  000F                     	;# 
  1752  0010                     	;# 
  1753  0011                     	;# 
  1754  0012                     	;# 
  1755  0013                     	;# 
  1756  0014                     	;# 
  1757  0015                     	;# 
  1758  0016                     	;# 
  1759  0017                     	;# 
  1760  0018                     	;# 
  1761  0019                     	;# 
  1762  001A                     	;# 
  1763  001C                     	;# 
  1764  001C                     	;# 
  1765  001D                     	;# 
  1766  001D                     	;# 
  1767  001E                     	;# 
  1768  001F                     	;# 
  1769  008C                     	;# 
  1770  008C                     	;# 
  1771  008D                     	;# 
  1772  008E                     	;# 
  1773  008E                     	;# 
  1774  008F                     	;# 
  1775  0090                     	;# 
  1776  0090                     	;# 
  1777  0091                     	;# 
  1778  0093                     	;# 
  1779  0094                     	;# 
  1780  0095                     	;# 
  1781  0096                     	;# 
  1782  0097                     	;# 
  1783  0098                     	;# 
  1784  0099                     	;# 
  1785  009A                     	;# 
  1786  009B                     	;# 
  1787  009C                     	;# 
  1788  009D                     	;# 
  1789  009E                     	;# 
  1790  010C                     	;# 
  1791  010D                     	;# 
  1792  010E                     	;# 
  1793  010E                     	;# 
  1794  010F                     	;# 
  1795  0110                     	;# 
  1796  0110                     	;# 
  1797  0111                     	;# 
  1798  0112                     	;# 
  1799  0112                     	;# 
  1800  0113                     	;# 
  1801  0114                     	;# 
  1802  0114                     	;# 
  1803  0115                     	;# 
  1804  0116                     	;# 
  1805  0116                     	;# 
  1806  0117                     	;# 
  1807  0119                     	;# 
  1808  0119                     	;# 
  1809  0119                     	;# 
  1810  011A                     	;# 
  1811  011A                     	;# 
  1812  011A                     	;# 
  1813  011B                     	;# 
  1814  011B                     	;# 
  1815  011B                     	;# 
  1816  011B                     	;# 
  1817  011B                     	;# 
  1818  011C                     	;# 
  1819  011C                     	;# 
  1820  011C                     	;# 
  1821  011D                     	;# 
  1822  011D                     	;# 
  1823  011D                     	;# 
  1824  011E                     	;# 
  1825  011E                     	;# 
  1826  011E                     	;# 
  1827  011F                     	;# 
  1828  011F                     	;# 
  1829  011F                     	;# 
  1830  011F                     	;# 
  1831  011F                     	;# 
  1832  018C                     	;# 
  1833  018D                     	;# 
  1834  018E                     	;# 
  1835  018F                     	;# 
  1836  0190                     	;# 
  1837  0191                     	;# 
  1838  0192                     	;# 
  1839  0196                     	;# 
  1840  0197                     	;# 
  1841  0198                     	;# 
  1842  0199                     	;# 
  1843  019A                     	;# 
  1844  019B                     	;# 
  1845  019C                     	;# 
  1846  020C                     	;# 
  1847  020C                     	;# 
  1848  020D                     	;# 
  1849  020E                     	;# 
  1850  020F                     	;# 
  1851  020F                     	;# 
  1852  0210                     	;# 
  1853  0210                     	;# 
  1854  0211                     	;# 
  1855  0211                     	;# 
  1856  0212                     	;# 
  1857  0212                     	;# 
  1858  0213                     	;# 
  1859  0214                     	;# 
  1860  0215                     	;# 
  1861  0215                     	;# 
  1862  0216                     	;# 
  1863  0216                     	;# 
  1864  0217                     	;# 
  1865  0217                     	;# 
  1866  0218                     	;# 
  1867  0218                     	;# 
  1868  0219                     	;# 
  1869  021A                     	;# 
  1870  021B                     	;# 
  1871  021B                     	;# 
  1872  021C                     	;# 
  1873  021C                     	;# 
  1874  021D                     	;# 
  1875  021D                     	;# 
  1876  021E                     	;# 
  1877  021F                     	;# 
  1878  028C                     	;# 
  1879  028C                     	;# 
  1880  028D                     	;# 
  1881  028D                     	;# 
  1882  028E                     	;# 
  1883  028F                     	;# 
  1884  0290                     	;# 
  1885  0290                     	;# 
  1886  0291                     	;# 
  1887  0292                     	;# 
  1888  0292                     	;# 
  1889  0293                     	;# 
  1890  0293                     	;# 
  1891  0294                     	;# 
  1892  0295                     	;# 
  1893  0296                     	;# 
  1894  0296                     	;# 
  1895  0297                     	;# 
  1896  0298                     	;# 
  1897  0298                     	;# 
  1898  0299                     	;# 
  1899  0299                     	;# 
  1900  029A                     	;# 
  1901  029B                     	;# 
  1902  029C                     	;# 
  1903  029C                     	;# 
  1904  029D                     	;# 
  1905  030C                     	;# 
  1906  030C                     	;# 
  1907  030D                     	;# 
  1908  030E                     	;# 
  1909  030F                     	;# 
  1910  0310                     	;# 
  1911  0310                     	;# 
  1912  0311                     	;# 
  1913  0312                     	;# 
  1914  0313                     	;# 
  1915  0314                     	;# 
  1916  0314                     	;# 
  1917  0315                     	;# 
  1918  0316                     	;# 
  1919  0317                     	;# 
  1920  0318                     	;# 
  1921  0318                     	;# 
  1922  0319                     	;# 
  1923  031A                     	;# 
  1924  031B                     	;# 
  1925  031C                     	;# 
  1926  031C                     	;# 
  1927  031D                     	;# 
  1928  031E                     	;# 
  1929  031F                     	;# 
  1930  038C                     	;# 
  1931  038C                     	;# 
  1932  038D                     	;# 
  1933  038E                     	;# 
  1934  0390                     	;# 
  1935  0390                     	;# 
  1936  0391                     	;# 
  1937  0392                     	;# 
  1938  040C                     	;# 
  1939  040D                     	;# 
  1940  040E                     	;# 
  1941  040F                     	;# 
  1942  0410                     	;# 
  1943  0411                     	;# 
  1944  0416                     	;# 
  1945  0416                     	;# 
  1946  0417                     	;# 
  1947  0418                     	;# 
  1948  0418                     	;# 
  1949  0419                     	;# 
  1950  041A                     	;# 
  1951  041A                     	;# 
  1952  041B                     	;# 
  1953  041C                     	;# 
  1954  041C                     	;# 
  1955  041D                     	;# 
  1956  041E                     	;# 
  1957  041F                     	;# 
  1958  048C                     	;# 
  1959  048C                     	;# 
  1960  048D                     	;# 
  1961  048E                     	;# 
  1962  048F                     	;# 
  1963  048F                     	;# 
  1964  0490                     	;# 
  1965  0491                     	;# 
  1966  0492                     	;# 
  1967  0492                     	;# 
  1968  0493                     	;# 
  1969  0494                     	;# 
  1970  0495                     	;# 
  1971  0495                     	;# 
  1972  0496                     	;# 
  1973  0497                     	;# 
  1974  0498                     	;# 
  1975  0499                     	;# 
  1976  049A                     	;# 
  1977  049B                     	;# 
  1978  049C                     	;# 
  1979  049D                     	;# 
  1980  050C                     	;# 
  1981  050C                     	;# 
  1982  050D                     	;# 
  1983  050E                     	;# 
  1984  050F                     	;# 
  1985  050F                     	;# 
  1986  0510                     	;# 
  1987  0511                     	;# 
  1988  0512                     	;# 
  1989  0512                     	;# 
  1990  0513                     	;# 
  1991  0514                     	;# 
  1992  0515                     	;# 
  1993  0515                     	;# 
  1994  0516                     	;# 
  1995  0517                     	;# 
  1996  0518                     	;# 
  1997  0519                     	;# 
  1998  051A                     	;# 
  1999  051B                     	;# 
  2000  051C                     	;# 
  2001  051D                     	;# 
  2002  058C                     	;# 
  2003  058C                     	;# 
  2004  058D                     	;# 
  2005  058E                     	;# 
  2006  058F                     	;# 
  2007  058F                     	;# 
  2008  0590                     	;# 
  2009  0591                     	;# 
  2010  0592                     	;# 
  2011  0593                     	;# 
  2012  060C                     	;# 
  2013  060D                     	;# 
  2014  060E                     	;# 
  2015  060F                     	;# 
  2016  0610                     	;# 
  2017  0611                     	;# 
  2018  0612                     	;# 
  2019  0613                     	;# 
  2020  0614                     	;# 
  2021  0616                     	;# 
  2022  0617                     	;# 
  2023  0618                     	;# 
  2024  0619                     	;# 
  2025  061A                     	;# 
  2026  061B                     	;# 
  2027  061C                     	;# 
  2028  061D                     	;# 
  2029  061E                     	;# 
  2030  068C                     	;# 
  2031  068D                     	;# 
  2032  068E                     	;# 
  2033  068F                     	;# 
  2034  0690                     	;# 
  2035  0691                     	;# 
  2036  0692                     	;# 
  2037  0693                     	;# 
  2038  0694                     	;# 
  2039  070C                     	;# 
  2040  070D                     	;# 
  2041  070E                     	;# 
  2042  070F                     	;# 
  2043  0710                     	;# 
  2044  0711                     	;# 
  2045  0712                     	;# 
  2046  0713                     	;# 
  2047  0714                     	;# 
  2048  0716                     	;# 
  2049  0717                     	;# 
  2050  0718                     	;# 
  2051  0719                     	;# 
  2052  071A                     	;# 
  2053  071B                     	;# 
  2054  071C                     	;# 
  2055  071D                     	;# 
  2056  071E                     	;# 
  2057  0796                     	;# 
  2058  0797                     	;# 
  2059  0798                     	;# 
  2060  0799                     	;# 
  2061  079A                     	;# 
  2062  079B                     	;# 
  2063  080C                     	;# 
  2064  080D                     	;# 
  2065  080E                     	;# 
  2066  080F                     	;# 
  2067  0810                     	;# 
  2068  0811                     	;# 
  2069  0812                     	;# 
  2070  0813                     	;# 
  2071  0814                     	;# 
  2072  081A                     	;# 
  2073  081B                     	;# 
  2074  081C                     	;# 
  2075  081D                     	;# 
  2076  081E                     	;# 
  2077  081F                     	;# 
  2078  088C                     	;# 
  2079  088D                     	;# 
  2080  088E                     	;# 
  2081  088F                     	;# 
  2082  0890                     	;# 
  2083  0891                     	;# 
  2084  0892                     	;# 
  2085  0893                     	;# 
  2086  0895                     	;# 
  2087  0896                     	;# 
  2088  0897                     	;# 
  2089  0898                     	;# 
  2090  0899                     	;# 
  2091  089A                     	;# 
  2092  089B                     	;# 
  2093  090C                     	;# 
  2094  090E                     	;# 
  2095  090F                     	;# 
  2096  091F                     	;# 
  2097  098F                     	;# 
  2098  098F                     	;# 
  2099  0990                     	;# 
  2100  0991                     	;# 
  2101  0992                     	;# 
  2102  0993                     	;# 
  2103  0994                     	;# 
  2104  0995                     	;# 
  2105  0996                     	;# 
  2106  0997                     	;# 
  2107  0E0F                     	;# 
  2108  0E10                     	;# 
  2109  0E11                     	;# 
  2110  0E12                     	;# 
  2111  0E13                     	;# 
  2112  0E14                     	;# 
  2113  0E15                     	;# 
  2114  0E16                     	;# 
  2115  0E17                     	;# 
  2116  0E18                     	;# 
  2117  0E19                     	;# 
  2118  0E1A                     	;# 
  2119  0E1B                     	;# 
  2120  0E1C                     	;# 
  2121  0E1D                     	;# 
  2122  0E1E                     	;# 
  2123  0E1F                     	;# 
  2124  0E20                     	;# 
  2125  0E21                     	;# 
  2126  0E22                     	;# 
  2127  0E23                     	;# 
  2128  0E24                     	;# 
  2129  0E25                     	;# 
  2130  0E26                     	;# 
  2131  0E27                     	;# 
  2132  0E28                     	;# 
  2133  0E29                     	;# 
  2134  0E2A                     	;# 
  2135  0E2B                     	;# 
  2136  0E2C                     	;# 
  2137  0E2D                     	;# 
  2138  0E2E                     	;# 
  2139  0E2F                     	;# 
  2140  0E30                     	;# 
  2141  0E31                     	;# 
  2142  0E32                     	;# 
  2143  0E33                     	;# 
  2144  0E34                     	;# 
  2145  0E35                     	;# 
  2146  0E36                     	;# 
  2147  0E37                     	;# 
  2148  0E8F                     	;# 
  2149  0E90                     	;# 
  2150  0E91                     	;# 
  2151  0E92                     	;# 
  2152  0E93                     	;# 
  2153  0E94                     	;# 
  2154  0E95                     	;# 
  2155  0E96                     	;# 
  2156  0E97                     	;# 
  2157  0E9C                     	;# 
  2158  0E9D                     	;# 
  2159  0E9E                     	;# 
  2160  0EA1                     	;# 
  2161  0EA2                     	;# 
  2162  0EA3                     	;# 
  2163  0EA4                     	;# 
  2164  0EA5                     	;# 
  2165  0EA9                     	;# 
  2166  0EAA                     	;# 
  2167  0EAB                     	;# 
  2168  0EAC                     	;# 
  2169  0EB1                     	;# 
  2170  0EB2                     	;# 
  2171  0EB3                     	;# 
  2172  0EB8                     	;# 
  2173  0EB9                     	;# 
  2174  0EBA                     	;# 
  2175  0EBB                     	;# 
  2176  0EBC                     	;# 
  2177  0EBD                     	;# 
  2178  0EBE                     	;# 
  2179  0EC3                     	;# 
  2180  0EC5                     	;# 
  2181  0EC6                     	;# 
  2182  0EC7                     	;# 
  2183  0EC8                     	;# 
  2184  0EC9                     	;# 
  2185  0ECA                     	;# 
  2186  0ECB                     	;# 
  2187  0ECC                     	;# 
  2188  0F10                     	;# 
  2189  0F11                     	;# 
  2190  0F12                     	;# 
  2191  0F13                     	;# 
  2192  0F14                     	;# 
  2193  0F15                     	;# 
  2194  0F16                     	;# 
  2195  0F17                     	;# 
  2196  0F18                     	;# 
  2197  0F19                     	;# 
  2198  0F1A                     	;# 
  2199  0F1B                     	;# 
  2200  0F1C                     	;# 
  2201  0F1D                     	;# 
  2202  0F1E                     	;# 
  2203  0F1F                     	;# 
  2204  0F20                     	;# 
  2205  0F21                     	;# 
  2206  0F22                     	;# 
  2207  0F23                     	;# 
  2208  0F24                     	;# 
  2209  0F25                     	;# 
  2210  0F26                     	;# 
  2211  0F27                     	;# 
  2212  0F28                     	;# 
  2213  0F29                     	;# 
  2214  0F2A                     	;# 
  2215  0F2B                     	;# 
  2216  0F2C                     	;# 
  2217  0F2D                     	;# 
  2218  0F2E                     	;# 
  2219  0F2F                     	;# 
  2220  0F30                     	;# 
  2221  0F31                     	;# 
  2222  0F32                     	;# 
  2223  0F38                     	;# 
  2224  0F39                     	;# 
  2225  0F3A                     	;# 
  2226  0F3B                     	;# 
  2227  0F3C                     	;# 
  2228  0F3D                     	;# 
  2229  0F3E                     	;# 
  2230  0F3F                     	;# 
  2231  0F40                     	;# 
  2232  0F41                     	;# 
  2233  0F43                     	;# 
  2234  0F44                     	;# 
  2235  0F45                     	;# 
  2236  0F46                     	;# 
  2237  0F47                     	;# 
  2238  0F48                     	;# 
  2239  0F49                     	;# 
  2240  0F4A                     	;# 
  2241  0F4B                     	;# 
  2242  0F4C                     	;# 
  2243  0F4E                     	;# 
  2244  0F4F                     	;# 
  2245  0F50                     	;# 
  2246  0F51                     	;# 
  2247  0F52                     	;# 
  2248  0F53                     	;# 
  2249  0F54                     	;# 
  2250  0F55                     	;# 
  2251  0F56                     	;# 
  2252  0F57                     	;# 
  2253  0F59                     	;# 
  2254  0F5A                     	;# 
  2255  0F5B                     	;# 
  2256  0F5C                     	;# 
  2257  0F5D                     	;# 
  2258  0F61                     	;# 
  2259  0F62                     	;# 
  2260  0F64                     	;# 
  2261  0F65                     	;# 
  2262  0F66                     	;# 
  2263  0F67                     	;# 
  2264  0F68                     	;# 
  2265  0F69                     	;# 
  2266  0F6A                     	;# 
  2267  0F6B                     	;# 
  2268  0F6C                     	;# 
  2269  0F6D                     	;# 
  2270  0FE4                     	;# 
  2271  0FE5                     	;# 
  2272  0FE6                     	;# 
  2273  0FE7                     	;# 
  2274  0FE8                     	;# 
  2275  0FE9                     	;# 
  2276  0FEA                     	;# 
  2277  0FEB                     	;# 
  2278  0FED                     	;# 
  2279  0FEE                     	;# 
  2280  0FEF                     	;# 
  2281  0000                     	;# 
  2282  0001                     	;# 
  2283  0002                     	;# 
  2284  0003                     	;# 
  2285  0004                     	;# 
  2286  0005                     	;# 
  2287  0006                     	;# 
  2288  0007                     	;# 
  2289  0008                     	;# 
  2290  0009                     	;# 
  2291  000A                     	;# 
  2292  000B                     	;# 
  2293  000C                     	;# 
  2294  000D                     	;# 
  2295  000E                     	;# 
  2296  000F                     	;# 
  2297  0010                     	;# 
  2298  0011                     	;# 
  2299  0012                     	;# 
  2300  0013                     	;# 
  2301  0014                     	;# 
  2302  0015                     	;# 
  2303  0016                     	;# 
  2304  0017                     	;# 
  2305  0018                     	;# 
  2306  0019                     	;# 
  2307  001A                     	;# 
  2308  001C                     	;# 
  2309  001C                     	;# 
  2310  001D                     	;# 
  2311  001D                     	;# 
  2312  001E                     	;# 
  2313  001F                     	;# 
  2314  008C                     	;# 
  2315  008C                     	;# 
  2316  008D                     	;# 
  2317  008E                     	;# 
  2318  008E                     	;# 
  2319  008F                     	;# 
  2320  0090                     	;# 
  2321  0090                     	;# 
  2322  0091                     	;# 
  2323  0093                     	;# 
  2324  0094                     	;# 
  2325  0095                     	;# 
  2326  0096                     	;# 
  2327  0097                     	;# 
  2328  0098                     	;# 
  2329  0099                     	;# 
  2330  009A                     	;# 
  2331  009B                     	;# 
  2332  009C                     	;# 
  2333  009D                     	;# 
  2334  009E                     	;# 
  2335  010C                     	;# 
  2336  010D                     	;# 
  2337  010E                     	;# 
  2338  010E                     	;# 
  2339  010F                     	;# 
  2340  0110                     	;# 
  2341  0110                     	;# 
  2342  0111                     	;# 
  2343  0112                     	;# 
  2344  0112                     	;# 
  2345  0113                     	;# 
  2346  0114                     	;# 
  2347  0114                     	;# 
  2348  0115                     	;# 
  2349  0116                     	;# 
  2350  0116                     	;# 
  2351  0117                     	;# 
  2352  0119                     	;# 
  2353  0119                     	;# 
  2354  0119                     	;# 
  2355  011A                     	;# 
  2356  011A                     	;# 
  2357  011A                     	;# 
  2358  011B                     	;# 
  2359  011B                     	;# 
  2360  011B                     	;# 
  2361  011B                     	;# 
  2362  011B                     	;# 
  2363  011C                     	;# 
  2364  011C                     	;# 
  2365  011C                     	;# 
  2366  011D                     	;# 
  2367  011D                     	;# 
  2368  011D                     	;# 
  2369  011E                     	;# 
  2370  011E                     	;# 
  2371  011E                     	;# 
  2372  011F                     	;# 
  2373  011F                     	;# 
  2374  011F                     	;# 
  2375  011F                     	;# 
  2376  011F                     	;# 
  2377  018C                     	;# 
  2378  018D                     	;# 
  2379  018E                     	;# 
  2380  018F                     	;# 
  2381  0190                     	;# 
  2382  0191                     	;# 
  2383  0192                     	;# 
  2384  0196                     	;# 
  2385  0197                     	;# 
  2386  0198                     	;# 
  2387  0199                     	;# 
  2388  019A                     	;# 
  2389  019B                     	;# 
  2390  019C                     	;# 
  2391  020C                     	;# 
  2392  020C                     	;# 
  2393  020D                     	;# 
  2394  020E                     	;# 
  2395  020F                     	;# 
  2396  020F                     	;# 
  2397  0210                     	;# 
  2398  0210                     	;# 
  2399  0211                     	;# 
  2400  0211                     	;# 
  2401  0212                     	;# 
  2402  0212                     	;# 
  2403  0213                     	;# 
  2404  0214                     	;# 
  2405  0215                     	;# 
  2406  0215                     	;# 
  2407  0216                     	;# 
  2408  0216                     	;# 
  2409  0217                     	;# 
  2410  0217                     	;# 
  2411  0218                     	;# 
  2412  0218                     	;# 
  2413  0219                     	;# 
  2414  021A                     	;# 
  2415  021B                     	;# 
  2416  021B                     	;# 
  2417  021C                     	;# 
  2418  021C                     	;# 
  2419  021D                     	;# 
  2420  021D                     	;# 
  2421  021E                     	;# 
  2422  021F                     	;# 
  2423  028C                     	;# 
  2424  028C                     	;# 
  2425  028D                     	;# 
  2426  028D                     	;# 
  2427  028E                     	;# 
  2428  028F                     	;# 
  2429  0290                     	;# 
  2430  0290                     	;# 
  2431  0291                     	;# 
  2432  0292                     	;# 
  2433  0292                     	;# 
  2434  0293                     	;# 
  2435  0293                     	;# 
  2436  0294                     	;# 
  2437  0295                     	;# 
  2438  0296                     	;# 
  2439  0296                     	;# 
  2440  0297                     	;# 
  2441  0298                     	;# 
  2442  0298                     	;# 
  2443  0299                     	;# 
  2444  0299                     	;# 
  2445  029A                     	;# 
  2446  029B                     	;# 
  2447  029C                     	;# 
  2448  029C                     	;# 
  2449  029D                     	;# 
  2450  030C                     	;# 
  2451  030C                     	;# 
  2452  030D                     	;# 
  2453  030E                     	;# 
  2454  030F                     	;# 
  2455  0310                     	;# 
  2456  0310                     	;# 
  2457  0311                     	;# 
  2458  0312                     	;# 
  2459  0313                     	;# 
  2460  0314                     	;# 
  2461  0314                     	;# 
  2462  0315                     	;# 
  2463  0316                     	;# 
  2464  0317                     	;# 
  2465  0318                     	;# 
  2466  0318                     	;# 
  2467  0319                     	;# 
  2468  031A                     	;# 
  2469  031B                     	;# 
  2470  031C                     	;# 
  2471  031C                     	;# 
  2472  031D                     	;# 
  2473  031E                     	;# 
  2474  031F                     	;# 
  2475  038C                     	;# 
  2476  038C                     	;# 
  2477  038D                     	;# 
  2478  038E                     	;# 
  2479  0390                     	;# 
  2480  0390                     	;# 
  2481  0391                     	;# 
  2482  0392                     	;# 
  2483  040C                     	;# 
  2484  040D                     	;# 
  2485  040E                     	;# 
  2486  040F                     	;# 
  2487  0410                     	;# 
  2488  0411                     	;# 
  2489  0416                     	;# 
  2490  0416                     	;# 
  2491  0417                     	;# 
  2492  0418                     	;# 
  2493  0418                     	;# 
  2494  0419                     	;# 
  2495  041A                     	;# 
  2496  041A                     	;# 
  2497  041B                     	;# 
  2498  041C                     	;# 
  2499  041C                     	;# 
  2500  041D                     	;# 
  2501  041E                     	;# 
  2502  041F                     	;# 
  2503  048C                     	;# 
  2504  048C                     	;# 
  2505  048D                     	;# 
  2506  048E                     	;# 
  2507  048F                     	;# 
  2508  048F                     	;# 
  2509  0490                     	;# 
  2510  0491                     	;# 
  2511  0492                     	;# 
  2512  0492                     	;# 
  2513  0493                     	;# 
  2514  0494                     	;# 
  2515  0495                     	;# 
  2516  0495                     	;# 
  2517  0496                     	;# 
  2518  0497                     	;# 
  2519  0498                     	;# 
  2520  0499                     	;# 
  2521  049A                     	;# 
  2522  049B                     	;# 
  2523  049C                     	;# 
  2524  049D                     	;# 
  2525  050C                     	;# 
  2526  050C                     	;# 
  2527  050D                     	;# 
  2528  050E                     	;# 
  2529  050F                     	;# 
  2530  050F                     	;# 
  2531  0510                     	;# 
  2532  0511                     	;# 
  2533  0512                     	;# 
  2534  0512                     	;# 
  2535  0513                     	;# 
  2536  0514                     	;# 
  2537  0515                     	;# 
  2538  0515                     	;# 
  2539  0516                     	;# 
  2540  0517                     	;# 
  2541  0518                     	;# 
  2542  0519                     	;# 
  2543  051A                     	;# 
  2544  051B                     	;# 
  2545  051C                     	;# 
  2546  051D                     	;# 
  2547  058C                     	;# 
  2548  058C                     	;# 
  2549  058D                     	;# 
  2550  058E                     	;# 
  2551  058F                     	;# 
  2552  058F                     	;# 
  2553  0590                     	;# 
  2554  0591                     	;# 
  2555  0592                     	;# 
  2556  0593                     	;# 
  2557  060C                     	;# 
  2558  060D                     	;# 
  2559  060E                     	;# 
  2560  060F                     	;# 
  2561  0610                     	;# 
  2562  0611                     	;# 
  2563  0612                     	;# 
  2564  0613                     	;# 
  2565  0614                     	;# 
  2566  0616                     	;# 
  2567  0617                     	;# 
  2568  0618                     	;# 
  2569  0619                     	;# 
  2570  061A                     	;# 
  2571  061B                     	;# 
  2572  061C                     	;# 
  2573  061D                     	;# 
  2574  061E                     	;# 
  2575  068C                     	;# 
  2576  068D                     	;# 
  2577  068E                     	;# 
  2578  068F                     	;# 
  2579  0690                     	;# 
  2580  0691                     	;# 
  2581  0692                     	;# 
  2582  0693                     	;# 
  2583  0694                     	;# 
  2584  070C                     	;# 
  2585  070D                     	;# 
  2586  070E                     	;# 
  2587  070F                     	;# 
  2588  0710                     	;# 
  2589  0711                     	;# 
  2590  0712                     	;# 
  2591  0713                     	;# 
  2592  0714                     	;# 
  2593  0716                     	;# 
  2594  0717                     	;# 
  2595  0718                     	;# 
  2596  0719                     	;# 
  2597  071A                     	;# 
  2598  071B                     	;# 
  2599  071C                     	;# 
  2600  071D                     	;# 
  2601  071E                     	;# 
  2602  0796                     	;# 
  2603  0797                     	;# 
  2604  0798                     	;# 
  2605  0799                     	;# 
  2606  079A                     	;# 
  2607  079B                     	;# 
  2608  080C                     	;# 
  2609  080D                     	;# 
  2610  080E                     	;# 
  2611  080F                     	;# 
  2612  0810                     	;# 
  2613  0811                     	;# 
  2614  0812                     	;# 
  2615  0813                     	;# 
  2616  0814                     	;# 
  2617  081A                     	;# 
  2618  081B                     	;# 
  2619  081C                     	;# 
  2620  081D                     	;# 
  2621  081E                     	;# 
  2622  081F                     	;# 
  2623  088C                     	;# 
  2624  088D                     	;# 
  2625  088E                     	;# 
  2626  088F                     	;# 
  2627  0890                     	;# 
  2628  0891                     	;# 
  2629  0892                     	;# 
  2630  0893                     	;# 
  2631  0895                     	;# 
  2632  0896                     	;# 
  2633  0897                     	;# 
  2634  0898                     	;# 
  2635  0899                     	;# 
  2636  089A                     	;# 
  2637  089B                     	;# 
  2638  090C                     	;# 
  2639  090E                     	;# 
  2640  090F                     	;# 
  2641  091F                     	;# 
  2642  098F                     	;# 
  2643  098F                     	;# 
  2644  0990                     	;# 
  2645  0991                     	;# 
  2646  0992                     	;# 
  2647  0993                     	;# 
  2648  0994                     	;# 
  2649  0995                     	;# 
  2650  0996                     	;# 
  2651  0997                     	;# 
  2652  0E0F                     	;# 
  2653  0E10                     	;# 
  2654  0E11                     	;# 
  2655  0E12                     	;# 
  2656  0E13                     	;# 
  2657  0E14                     	;# 
  2658  0E15                     	;# 
  2659  0E16                     	;# 
  2660  0E17                     	;# 
  2661  0E18                     	;# 
  2662  0E19                     	;# 
  2663  0E1A                     	;# 
  2664  0E1B                     	;# 
  2665  0E1C                     	;# 
  2666  0E1D                     	;# 
  2667  0E1E                     	;# 
  2668  0E1F                     	;# 
  2669  0E20                     	;# 
  2670  0E21                     	;# 
  2671  0E22                     	;# 
  2672  0E23                     	;# 
  2673  0E24                     	;# 
  2674  0E25                     	;# 
  2675  0E26                     	;# 
  2676  0E27                     	;# 
  2677  0E28                     	;# 
  2678  0E29                     	;# 
  2679  0E2A                     	;# 
  2680  0E2B                     	;# 
  2681  0E2C                     	;# 
  2682  0E2D                     	;# 
  2683  0E2E                     	;# 
  2684  0E2F                     	;# 
  2685  0E30                     	;# 
  2686  0E31                     	;# 
  2687  0E32                     	;# 
  2688  0E33                     	;# 
  2689  0E34                     	;# 
  2690  0E35                     	;# 
  2691  0E36                     	;# 
  2692  0E37                     	;# 
  2693  0E8F                     	;# 
  2694  0E90                     	;# 
  2695  0E91                     	;# 
  2696  0E92                     	;# 
  2697  0E93                     	;# 
  2698  0E94                     	;# 
  2699  0E95                     	;# 
  2700  0E96                     	;# 
  2701  0E97                     	;# 
  2702  0E9C                     	;# 
  2703  0E9D                     	;# 
  2704  0E9E                     	;# 
  2705  0EA1                     	;# 
  2706  0EA2                     	;# 
  2707  0EA3                     	;# 
  2708  0EA4                     	;# 
  2709  0EA5                     	;# 
  2710  0EA9                     	;# 
  2711  0EAA                     	;# 
  2712  0EAB                     	;# 
  2713  0EAC                     	;# 
  2714  0EB1                     	;# 
  2715  0EB2                     	;# 
  2716  0EB3                     	;# 
  2717  0EB8                     	;# 
  2718  0EB9                     	;# 
  2719  0EBA                     	;# 
  2720  0EBB                     	;# 
  2721  0EBC                     	;# 
  2722  0EBD                     	;# 
  2723  0EBE                     	;# 
  2724  0EC3                     	;# 
  2725  0EC5                     	;# 
  2726  0EC6                     	;# 
  2727  0EC7                     	;# 
  2728  0EC8                     	;# 
  2729  0EC9                     	;# 
  2730  0ECA                     	;# 
  2731  0ECB                     	;# 
  2732  0ECC                     	;# 
  2733  0F10                     	;# 
  2734  0F11                     	;# 
  2735  0F12                     	;# 
  2736  0F13                     	;# 
  2737  0F14                     	;# 
  2738  0F15                     	;# 
  2739  0F16                     	;# 
  2740  0F17                     	;# 
  2741  0F18                     	;# 
  2742  0F19                     	;# 
  2743  0F1A                     	;# 
  2744  0F1B                     	;# 
  2745  0F1C                     	;# 
  2746  0F1D                     	;# 
  2747  0F1E                     	;# 
  2748  0F1F                     	;# 
  2749  0F20                     	;# 
  2750  0F21                     	;# 
  2751  0F22                     	;# 
  2752  0F23                     	;# 
  2753  0F24                     	;# 
  2754  0F25                     	;# 
  2755  0F26                     	;# 
  2756  0F27                     	;# 
  2757  0F28                     	;# 
  2758  0F29                     	;# 
  2759  0F2A                     	;# 
  2760  0F2B                     	;# 
  2761  0F2C                     	;# 
  2762  0F2D                     	;# 
  2763  0F2E                     	;# 
  2764  0F2F                     	;# 
  2765  0F30                     	;# 
  2766  0F31                     	;# 
  2767  0F32                     	;# 
  2768  0F38                     	;# 
  2769  0F39                     	;# 
  2770  0F3A                     	;# 
  2771  0F3B                     	;# 
  2772  0F3C                     	;# 
  2773  0F3D                     	;# 
  2774  0F3E                     	;# 
  2775  0F3F                     	;# 
  2776  0F40                     	;# 
  2777  0F41                     	;# 
  2778  0F43                     	;# 
  2779  0F44                     	;# 
  2780  0F45                     	;# 
  2781  0F46                     	;# 
  2782  0F47                     	;# 
  2783  0F48                     	;# 
  2784  0F49                     	;# 
  2785  0F4A                     	;# 
  2786  0F4B                     	;# 
  2787  0F4C                     	;# 
  2788  0F4E                     	;# 
  2789  0F4F                     	;# 
  2790  0F50                     	;# 
  2791  0F51                     	;# 
  2792  0F52                     	;# 
  2793  0F53                     	;# 
  2794  0F54                     	;# 
  2795  0F55                     	;# 
  2796  0F56                     	;# 
  2797  0F57                     	;# 
  2798  0F59                     	;# 
  2799  0F5A                     	;# 
  2800  0F5B                     	;# 
  2801  0F5C                     	;# 
  2802  0F5D                     	;# 
  2803  0F61                     	;# 
  2804  0F62                     	;# 
  2805  0F64                     	;# 
  2806  0F65                     	;# 
  2807  0F66                     	;# 
  2808  0F67                     	;# 
  2809  0F68                     	;# 
  2810  0F69                     	;# 
  2811  0F6A                     	;# 
  2812  0F6B                     	;# 
  2813  0F6C                     	;# 
  2814  0F6D                     	;# 
  2815  0FE4                     	;# 
  2816  0FE5                     	;# 
  2817  0FE6                     	;# 
  2818  0FE7                     	;# 
  2819  0FE8                     	;# 
  2820  0FE9                     	;# 
  2821  0FEA                     	;# 
  2822  0FEB                     	;# 
  2823  0FED                     	;# 
  2824  0FEE                     	;# 
  2825  0FEF                     	;# 
  2826  0000                     	;# 
  2827  0001                     	;# 
  2828  0002                     	;# 
  2829  0003                     	;# 
  2830  0004                     	;# 
  2831  0005                     	;# 
  2832  0006                     	;# 
  2833  0007                     	;# 
  2834  0008                     	;# 
  2835  0009                     	;# 
  2836  000A                     	;# 
  2837  000B                     	;# 
  2838  000C                     	;# 
  2839  000D                     	;# 
  2840  000E                     	;# 
  2841  000F                     	;# 
  2842  0010                     	;# 
  2843  0011                     	;# 
  2844  0012                     	;# 
  2845  0013                     	;# 
  2846  0014                     	;# 
  2847  0015                     	;# 
  2848  0016                     	;# 
  2849  0017                     	;# 
  2850  0018                     	;# 
  2851  0019                     	;# 
  2852  001A                     	;# 
  2853  001C                     	;# 
  2854  001C                     	;# 
  2855  001D                     	;# 
  2856  001D                     	;# 
  2857  001E                     	;# 
  2858  001F                     	;# 
  2859  008C                     	;# 
  2860  008C                     	;# 
  2861  008D                     	;# 
  2862  008E                     	;# 
  2863  008E                     	;# 
  2864  008F                     	;# 
  2865  0090                     	;# 
  2866  0090                     	;# 
  2867  0091                     	;# 
  2868  0093                     	;# 
  2869  0094                     	;# 
  2870  0095                     	;# 
  2871  0096                     	;# 
  2872  0097                     	;# 
  2873  0098                     	;# 
  2874  0099                     	;# 
  2875  009A                     	;# 
  2876  009B                     	;# 
  2877  009C                     	;# 
  2878  009D                     	;# 
  2879  009E                     	;# 
  2880  010C                     	;# 
  2881  010D                     	;# 
  2882  010E                     	;# 
  2883  010E                     	;# 
  2884  010F                     	;# 
  2885  0110                     	;# 
  2886  0110                     	;# 
  2887  0111                     	;# 
  2888  0112                     	;# 
  2889  0112                     	;# 
  2890  0113                     	;# 
  2891  0114                     	;# 
  2892  0114                     	;# 
  2893  0115                     	;# 
  2894  0116                     	;# 
  2895  0116                     	;# 
  2896  0117                     	;# 
  2897  0119                     	;# 
  2898  0119                     	;# 
  2899  0119                     	;# 
  2900  011A                     	;# 
  2901  011A                     	;# 
  2902  011A                     	;# 
  2903  011B                     	;# 
  2904  011B                     	;# 
  2905  011B                     	;# 
  2906  011B                     	;# 
  2907  011B                     	;# 
  2908  011C                     	;# 
  2909  011C                     	;# 
  2910  011C                     	;# 
  2911  011D                     	;# 
  2912  011D                     	;# 
  2913  011D                     	;# 
  2914  011E                     	;# 
  2915  011E                     	;# 
  2916  011E                     	;# 
  2917  011F                     	;# 
  2918  011F                     	;# 
  2919  011F                     	;# 
  2920  011F                     	;# 
  2921  011F                     	;# 
  2922  018C                     	;# 
  2923  018D                     	;# 
  2924  018E                     	;# 
  2925  018F                     	;# 
  2926  0190                     	;# 
  2927  0191                     	;# 
  2928  0192                     	;# 
  2929  0196                     	;# 
  2930  0197                     	;# 
  2931  0198                     	;# 
  2932  0199                     	;# 
  2933  019A                     	;# 
  2934  019B                     	;# 
  2935  019C                     	;# 
  2936  020C                     	;# 
  2937  020C                     	;# 
  2938  020D                     	;# 
  2939  020E                     	;# 
  2940  020F                     	;# 
  2941  020F                     	;# 
  2942  0210                     	;# 
  2943  0210                     	;# 
  2944  0211                     	;# 
  2945  0211                     	;# 
  2946  0212                     	;# 
  2947  0212                     	;# 
  2948  0213                     	;# 
  2949  0214                     	;# 
  2950  0215                     	;# 
  2951  0215                     	;# 
  2952  0216                     	;# 
  2953  0216                     	;# 
  2954  0217                     	;# 
  2955  0217                     	;# 
  2956  0218                     	;# 
  2957  0218                     	;# 
  2958  0219                     	;# 
  2959  021A                     	;# 
  2960  021B                     	;# 
  2961  021B                     	;# 
  2962  021C                     	;# 
  2963  021C                     	;# 
  2964  021D                     	;# 
  2965  021D                     	;# 
  2966  021E                     	;# 
  2967  021F                     	;# 
  2968  028C                     	;# 
  2969  028C                     	;# 
  2970  028D                     	;# 
  2971  028D                     	;# 
  2972  028E                     	;# 
  2973  028F                     	;# 
  2974  0290                     	;# 
  2975  0290                     	;# 
  2976  0291                     	;# 
  2977  0292                     	;# 
  2978  0292                     	;# 
  2979  0293                     	;# 
  2980  0293                     	;# 
  2981  0294                     	;# 
  2982  0295                     	;# 
  2983  0296                     	;# 
  2984  0296                     	;# 
  2985  0297                     	;# 
  2986  0298                     	;# 
  2987  0298                     	;# 
  2988  0299                     	;# 
  2989  0299                     	;# 
  2990  029A                     	;# 
  2991  029B                     	;# 
  2992  029C                     	;# 
  2993  029C                     	;# 
  2994  029D                     	;# 
  2995  030C                     	;# 
  2996  030C                     	;# 
  2997  030D                     	;# 
  2998  030E                     	;# 
  2999  030F                     	;# 
  3000  0310                     	;# 
  3001  0310                     	;# 
  3002  0311                     	;# 
  3003  0312                     	;# 
  3004  0313                     	;# 
  3005  0314                     	;# 
  3006  0314                     	;# 
  3007  0315                     	;# 
  3008  0316                     	;# 
  3009  0317                     	;# 
  3010  0318                     	;# 
  3011  0318                     	;# 
  3012  0319                     	;# 
  3013  031A                     	;# 
  3014  031B                     	;# 
  3015  031C                     	;# 
  3016  031C                     	;# 
  3017  031D                     	;# 
  3018  031E                     	;# 
  3019  031F                     	;# 
  3020  038C                     	;# 
  3021  038C                     	;# 
  3022  038D                     	;# 
  3023  038E                     	;# 
  3024  0390                     	;# 
  3025  0390                     	;# 
  3026  0391                     	;# 
  3027  0392                     	;# 
  3028  040C                     	;# 
  3029  040D                     	;# 
  3030  040E                     	;# 
  3031  040F                     	;# 
  3032  0410                     	;# 
  3033  0411                     	;# 
  3034  0416                     	;# 
  3035  0416                     	;# 
  3036  0417                     	;# 
  3037  0418                     	;# 
  3038  0418                     	;# 
  3039  0419                     	;# 
  3040  041A                     	;# 
  3041  041A                     	;# 
  3042  041B                     	;# 
  3043  041C                     	;# 
  3044  041C                     	;# 
  3045  041D                     	;# 
  3046  041E                     	;# 
  3047  041F                     	;# 
  3048  048C                     	;# 
  3049  048C                     	;# 
  3050  048D                     	;# 
  3051  048E                     	;# 
  3052  048F                     	;# 
  3053  048F                     	;# 
  3054  0490                     	;# 
  3055  0491                     	;# 
  3056  0492                     	;# 
  3057  0492                     	;# 
  3058  0493                     	;# 
  3059  0494                     	;# 
  3060  0495                     	;# 
  3061  0495                     	;# 
  3062  0496                     	;# 
  3063  0497                     	;# 
  3064  0498                     	;# 
  3065  0499                     	;# 
  3066  049A                     	;# 
  3067  049B                     	;# 
  3068  049C                     	;# 
  3069  049D                     	;# 
  3070  050C                     	;# 
  3071  050C                     	;# 
  3072  050D                     	;# 
  3073  050E                     	;# 
  3074  050F                     	;# 
  3075  050F                     	;# 
  3076  0510                     	;# 
  3077  0511                     	;# 
  3078  0512                     	;# 
  3079  0512                     	;# 
  3080  0513                     	;# 
  3081  0514                     	;# 
  3082  0515                     	;# 
  3083  0515                     	;# 
  3084  0516                     	;# 
  3085  0517                     	;# 
  3086  0518                     	;# 
  3087  0519                     	;# 
  3088  051A                     	;# 
  3089  051B                     	;# 
  3090  051C                     	;# 
  3091  051D                     	;# 
  3092  058C                     	;# 
  3093  058C                     	;# 
  3094  058D                     	;# 
  3095  058E                     	;# 
  3096  058F                     	;# 
  3097  058F                     	;# 
  3098  0590                     	;# 
  3099  0591                     	;# 
  3100  0592                     	;# 
  3101  0593                     	;# 
  3102  060C                     	;# 
  3103  060D                     	;# 
  3104  060E                     	;# 
  3105  060F                     	;# 
  3106  0610                     	;# 
  3107  0611                     	;# 
  3108  0612                     	;# 
  3109  0613                     	;# 
  3110  0614                     	;# 
  3111  0616                     	;# 
  3112  0617                     	;# 
  3113  0618                     	;# 
  3114  0619                     	;# 
  3115  061A                     	;# 
  3116  061B                     	;# 
  3117  061C                     	;# 
  3118  061D                     	;# 
  3119  061E                     	;# 
  3120  068C                     	;# 
  3121  068D                     	;# 
  3122  068E                     	;# 
  3123  068F                     	;# 
  3124  0690                     	;# 
  3125  0691                     	;# 
  3126  0692                     	;# 
  3127  0693                     	;# 
  3128  0694                     	;# 
  3129  070C                     	;# 
  3130  070D                     	;# 
  3131  070E                     	;# 
  3132  070F                     	;# 
  3133  0710                     	;# 
  3134  0711                     	;# 
  3135  0712                     	;# 
  3136  0713                     	;# 
  3137  0714                     	;# 
  3138  0716                     	;# 
  3139  0717                     	;# 
  3140  0718                     	;# 
  3141  0719                     	;# 
  3142  071A                     	;# 
  3143  071B                     	;# 
  3144  071C                     	;# 
  3145  071D                     	;# 
  3146  071E                     	;# 
  3147  0796                     	;# 
  3148  0797                     	;# 
  3149  0798                     	;# 
  3150  0799                     	;# 
  3151  079A                     	;# 
  3152  079B                     	;# 
  3153  080C                     	;# 
  3154  080D                     	;# 
  3155  080E                     	;# 
  3156  080F                     	;# 
  3157  0810                     	;# 
  3158  0811                     	;# 
  3159  0812                     	;# 
  3160  0813                     	;# 
  3161  0814                     	;# 
  3162  081A                     	;# 
  3163  081B                     	;# 
  3164  081C                     	;# 
  3165  081D                     	;# 
  3166  081E                     	;# 
  3167  081F                     	;# 
  3168  088C                     	;# 
  3169  088D                     	;# 
  3170  088E                     	;# 
  3171  088F                     	;# 
  3172  0890                     	;# 
  3173  0891                     	;# 
  3174  0892                     	;# 
  3175  0893                     	;# 
  3176  0895                     	;# 
  3177  0896                     	;# 
  3178  0897                     	;# 
  3179  0898                     	;# 
  3180  0899                     	;# 
  3181  089A                     	;# 
  3182  089B                     	;# 
  3183  090C                     	;# 
  3184  090E                     	;# 
  3185  090F                     	;# 
  3186  091F                     	;# 
  3187  098F                     	;# 
  3188  098F                     	;# 
  3189  0990                     	;# 
  3190  0991                     	;# 
  3191  0992                     	;# 
  3192  0993                     	;# 
  3193  0994                     	;# 
  3194  0995                     	;# 
  3195  0996                     	;# 
  3196  0997                     	;# 
  3197  0E0F                     	;# 
  3198  0E10                     	;# 
  3199  0E11                     	;# 
  3200  0E12                     	;# 
  3201  0E13                     	;# 
  3202  0E14                     	;# 
  3203  0E15                     	;# 
  3204  0E16                     	;# 
  3205  0E17                     	;# 
  3206  0E18                     	;# 
  3207  0E19                     	;# 
  3208  0E1A                     	;# 
  3209  0E1B                     	;# 
  3210  0E1C                     	;# 
  3211  0E1D                     	;# 
  3212  0E1E                     	;# 
  3213  0E1F                     	;# 
  3214  0E20                     	;# 
  3215  0E21                     	;# 
  3216  0E22                     	;# 
  3217  0E23                     	;# 
  3218  0E24                     	;# 
  3219  0E25                     	;# 
  3220  0E26                     	;# 
  3221  0E27                     	;# 
  3222  0E28                     	;# 
  3223  0E29                     	;# 
  3224  0E2A                     	;# 
  3225  0E2B                     	;# 
  3226  0E2C                     	;# 
  3227  0E2D                     	;# 
  3228  0E2E                     	;# 
  3229  0E2F                     	;# 
  3230  0E30                     	;# 
  3231  0E31                     	;# 
  3232  0E32                     	;# 
  3233  0E33                     	;# 
  3234  0E34                     	;# 
  3235  0E35                     	;# 
  3236  0E36                     	;# 
  3237  0E37                     	;# 
  3238  0E8F                     	;# 
  3239  0E90                     	;# 
  3240  0E91                     	;# 
  3241  0E92                     	;# 
  3242  0E93                     	;# 
  3243  0E94                     	;# 
  3244  0E95                     	;# 
  3245  0E96                     	;# 
  3246  0E97                     	;# 
  3247  0E9C                     	;# 
  3248  0E9D                     	;# 
  3249  0E9E                     	;# 
  3250  0EA1                     	;# 
  3251  0EA2                     	;# 
  3252  0EA3                     	;# 
  3253  0EA4                     	;# 
  3254  0EA5                     	;# 
  3255  0EA9                     	;# 
  3256  0EAA                     	;# 
  3257  0EAB                     	;# 
  3258  0EAC                     	;# 
  3259  0EB1                     	;# 
  3260  0EB2                     	;# 
  3261  0EB3                     	;# 
  3262  0EB8                     	;# 
  3263  0EB9                     	;# 
  3264  0EBA                     	;# 
  3265  0EBB                     	;# 
  3266  0EBC                     	;# 
  3267  0EBD                     	;# 
  3268  0EBE                     	;# 
  3269  0EC3                     	;# 
  3270  0EC5                     	;# 
  3271  0EC6                     	;# 
  3272  0EC7                     	;# 
  3273  0EC8                     	;# 
  3274  0EC9                     	;# 
  3275  0ECA                     	;# 
  3276  0ECB                     	;# 
  3277  0ECC                     	;# 
  3278  0F10                     	;# 
  3279  0F11                     	;# 
  3280  0F12                     	;# 
  3281  0F13                     	;# 
  3282  0F14                     	;# 
  3283  0F15                     	;# 
  3284  0F16                     	;# 
  3285  0F17                     	;# 
  3286  0F18                     	;# 
  3287  0F19                     	;# 
  3288  0F1A                     	;# 
  3289  0F1B                     	;# 
  3290  0F1C                     	;# 
  3291  0F1D                     	;# 
  3292  0F1E                     	;# 
  3293  0F1F                     	;# 
  3294  0F20                     	;# 
  3295  0F21                     	;# 
  3296  0F22                     	;# 
  3297  0F23                     	;# 
  3298  0F24                     	;# 
  3299  0F25                     	;# 
  3300  0F26                     	;# 
  3301  0F27                     	;# 
  3302  0F28                     	;# 
  3303  0F29                     	;# 
  3304  0F2A                     	;# 
  3305  0F2B                     	;# 
  3306  0F2C                     	;# 
  3307  0F2D                     	;# 
  3308  0F2E                     	;# 
  3309  0F2F                     	;# 
  3310  0F30                     	;# 
  3311  0F31                     	;# 
  3312  0F32                     	;# 
  3313  0F38                     	;# 
  3314  0F39                     	;# 
  3315  0F3A                     	;# 
  3316  0F3B                     	;# 
  3317  0F3C                     	;# 
  3318  0F3D                     	;# 
  3319  0F3E                     	;# 
  3320  0F3F                     	;# 
  3321  0F40                     	;# 
  3322  0F41                     	;# 
  3323  0F43                     	;# 
  3324  0F44                     	;# 
  3325  0F45                     	;# 
  3326  0F46                     	;# 
  3327  0F47                     	;# 
  3328  0F48                     	;# 
  3329  0F49                     	;# 
  3330  0F4A                     	;# 
  3331  0F4B                     	;# 
  3332  0F4C                     	;# 
  3333  0F4E                     	;# 
  3334  0F4F                     	;# 
  3335  0F50                     	;# 
  3336  0F51                     	;# 
  3337  0F52                     	;# 
  3338  0F53                     	;# 
  3339  0F54                     	;# 
  3340  0F55                     	;# 
  3341  0F56                     	;# 
  3342  0F57                     	;# 
  3343  0F59                     	;# 
  3344  0F5A                     	;# 
  3345  0F5B                     	;# 
  3346  0F5C                     	;# 
  3347  0F5D                     	;# 
  3348  0F61                     	;# 
  3349  0F62                     	;# 
  3350  0F64                     	;# 
  3351  0F65                     	;# 
  3352  0F66                     	;# 
  3353  0F67                     	;# 
  3354  0F68                     	;# 
  3355  0F69                     	;# 
  3356  0F6A                     	;# 
  3357  0F6B                     	;# 
  3358  0F6C                     	;# 
  3359  0F6D                     	;# 
  3360  0FE4                     	;# 
  3361  0FE5                     	;# 
  3362  0FE6                     	;# 
  3363  0FE7                     	;# 
  3364  0FE8                     	;# 
  3365  0FE9                     	;# 
  3366  0FEA                     	;# 
  3367  0FEB                     	;# 
  3368  0FED                     	;# 
  3369  0FEE                     	;# 
  3370  0FEF                     	;# 
  3371  0000                     	;# 
  3372  0001                     	;# 
  3373  0002                     	;# 
  3374  0003                     	;# 
  3375  0004                     	;# 
  3376  0005                     	;# 
  3377  0006                     	;# 
  3378  0007                     	;# 
  3379  0008                     	;# 
  3380  0009                     	;# 
  3381  000A                     	;# 
  3382  000B                     	;# 
  3383  000C                     	;# 
  3384  000D                     	;# 
  3385  000E                     	;# 
  3386  000F                     	;# 
  3387  0010                     	;# 
  3388  0011                     	;# 
  3389  0012                     	;# 
  3390  0013                     	;# 
  3391  0014                     	;# 
  3392  0015                     	;# 
  3393  0016                     	;# 
  3394  0017                     	;# 
  3395  0018                     	;# 
  3396  0019                     	;# 
  3397  001A                     	;# 
  3398  001C                     	;# 
  3399  001C                     	;# 
  3400  001D                     	;# 
  3401  001D                     	;# 
  3402  001E                     	;# 
  3403  001F                     	;# 
  3404  008C                     	;# 
  3405  008C                     	;# 
  3406  008D                     	;# 
  3407  008E                     	;# 
  3408  008E                     	;# 
  3409  008F                     	;# 
  3410  0090                     	;# 
  3411  0090                     	;# 
  3412  0091                     	;# 
  3413  0093                     	;# 
  3414  0094                     	;# 
  3415  0095                     	;# 
  3416  0096                     	;# 
  3417  0097                     	;# 
  3418  0098                     	;# 
  3419  0099                     	;# 
  3420  009A                     	;# 
  3421  009B                     	;# 
  3422  009C                     	;# 
  3423  009D                     	;# 
  3424  009E                     	;# 
  3425  010C                     	;# 
  3426  010D                     	;# 
  3427  010E                     	;# 
  3428  010E                     	;# 
  3429  010F                     	;# 
  3430  0110                     	;# 
  3431  0110                     	;# 
  3432  0111                     	;# 
  3433  0112                     	;# 
  3434  0112                     	;# 
  3435  0113                     	;# 
  3436  0114                     	;# 
  3437  0114                     	;# 
  3438  0115                     	;# 
  3439  0116                     	;# 
  3440  0116                     	;# 
  3441  0117                     	;# 
  3442  0119                     	;# 
  3443  0119                     	;# 
  3444  0119                     	;# 
  3445  011A                     	;# 
  3446  011A                     	;# 
  3447  011A                     	;# 
  3448  011B                     	;# 
  3449  011B                     	;# 
  3450  011B                     	;# 
  3451  011B                     	;# 
  3452  011B                     	;# 
  3453  011C                     	;# 
  3454  011C                     	;# 
  3455  011C                     	;# 
  3456  011D                     	;# 
  3457  011D                     	;# 
  3458  011D                     	;# 
  3459  011E                     	;# 
  3460  011E                     	;# 
  3461  011E                     	;# 
  3462  011F                     	;# 
  3463  011F                     	;# 
  3464  011F                     	;# 
  3465  011F                     	;# 
  3466  011F                     	;# 
  3467  018C                     	;# 
  3468  018D                     	;# 
  3469  018E                     	;# 
  3470  018F                     	;# 
  3471  0190                     	;# 
  3472  0191                     	;# 
  3473  0192                     	;# 
  3474  0196                     	;# 
  3475  0197                     	;# 
  3476  0198                     	;# 
  3477  0199                     	;# 
  3478  019A                     	;# 
  3479  019B                     	;# 
  3480  019C                     	;# 
  3481  020C                     	;# 
  3482  020C                     	;# 
  3483  020D                     	;# 
  3484  020E                     	;# 
  3485  020F                     	;# 
  3486  020F                     	;# 
  3487  0210                     	;# 
  3488  0210                     	;# 
  3489  0211                     	;# 
  3490  0211                     	;# 
  3491  0212                     	;# 
  3492  0212                     	;# 
  3493  0213                     	;# 
  3494  0214                     	;# 
  3495  0215                     	;# 
  3496  0215                     	;# 
  3497  0216                     	;# 
  3498  0216                     	;# 
  3499  0217                     	;# 
  3500  0217                     	;# 
  3501  0218                     	;# 
  3502  0218                     	;# 
  3503  0219                     	;# 
  3504  021A                     	;# 
  3505  021B                     	;# 
  3506  021B                     	;# 
  3507  021C                     	;# 
  3508  021C                     	;# 
  3509  021D                     	;# 
  3510  021D                     	;# 
  3511  021E                     	;# 
  3512  021F                     	;# 
  3513  028C                     	;# 
  3514  028C                     	;# 
  3515  028D                     	;# 
  3516  028D                     	;# 
  3517  028E                     	;# 
  3518  028F                     	;# 
  3519  0290                     	;# 
  3520  0290                     	;# 
  3521  0291                     	;# 
  3522  0292                     	;# 
  3523  0292                     	;# 
  3524  0293                     	;# 
  3525  0293                     	;# 
  3526  0294                     	;# 
  3527  0295                     	;# 
  3528  0296                     	;# 
  3529  0296                     	;# 
  3530  0297                     	;# 
  3531  0298                     	;# 
  3532  0298                     	;# 
  3533  0299                     	;# 
  3534  0299                     	;# 
  3535  029A                     	;# 
  3536  029B                     	;# 
  3537  029C                     	;# 
  3538  029C                     	;# 
  3539  029D                     	;# 
  3540  030C                     	;# 
  3541  030C                     	;# 
  3542  030D                     	;# 
  3543  030E                     	;# 
  3544  030F                     	;# 
  3545  0310                     	;# 
  3546  0310                     	;# 
  3547  0311                     	;# 
  3548  0312                     	;# 
  3549  0313                     	;# 
  3550  0314                     	;# 
  3551  0314                     	;# 
  3552  0315                     	;# 
  3553  0316                     	;# 
  3554  0317                     	;# 
  3555  0318                     	;# 
  3556  0318                     	;# 
  3557  0319                     	;# 
  3558  031A                     	;# 
  3559  031B                     	;# 
  3560  031C                     	;# 
  3561  031C                     	;# 
  3562  031D                     	;# 
  3563  031E                     	;# 
  3564  031F                     	;# 
  3565  038C                     	;# 
  3566  038C                     	;# 
  3567  038D                     	;# 
  3568  038E                     	;# 
  3569  0390                     	;# 
  3570  0390                     	;# 
  3571  0391                     	;# 
  3572  0392                     	;# 
  3573  040C                     	;# 
  3574  040D                     	;# 
  3575  040E                     	;# 
  3576  040F                     	;# 
  3577  0410                     	;# 
  3578  0411                     	;# 
  3579  0416                     	;# 
  3580  0416                     	;# 
  3581  0417                     	;# 
  3582  0418                     	;# 
  3583  0418                     	;# 
  3584  0419                     	;# 
  3585  041A                     	;# 
  3586  041A                     	;# 
  3587  041B                     	;# 
  3588  041C                     	;# 
  3589  041C                     	;# 
  3590  041D                     	;# 
  3591  041E                     	;# 
  3592  041F                     	;# 
  3593  048C                     	;# 
  3594  048C                     	;# 
  3595  048D                     	;# 
  3596  048E                     	;# 
  3597  048F                     	;# 
  3598  048F                     	;# 
  3599  0490                     	;# 
  3600  0491                     	;# 
  3601  0492                     	;# 
  3602  0492                     	;# 
  3603  0493                     	;# 
  3604  0494                     	;# 
  3605  0495                     	;# 
  3606  0495                     	;# 
  3607  0496                     	;# 
  3608  0497                     	;# 
  3609  0498                     	;# 
  3610  0499                     	;# 
  3611  049A                     	;# 
  3612  049B                     	;# 
  3613  049C                     	;# 
  3614  049D                     	;# 
  3615  050C                     	;# 
  3616  050C                     	;# 
  3617  050D                     	;# 
  3618  050E                     	;# 
  3619  050F                     	;# 
  3620  050F                     	;# 
  3621  0510                     	;# 
  3622  0511                     	;# 
  3623  0512                     	;# 
  3624  0512                     	;# 
  3625  0513                     	;# 
  3626  0514                     	;# 
  3627  0515                     	;# 
  3628  0515                     	;# 
  3629  0516                     	;# 
  3630  0517                     	;# 
  3631  0518                     	;# 
  3632  0519                     	;# 
  3633  051A                     	;# 
  3634  051B                     	;# 
  3635  051C                     	;# 
  3636  051D                     	;# 
  3637  058C                     	;# 
  3638  058C                     	;# 
  3639  058D                     	;# 
  3640  058E                     	;# 
  3641  058F                     	;# 
  3642  058F                     	;# 
  3643  0590                     	;# 
  3644  0591                     	;# 
  3645  0592                     	;# 
  3646  0593                     	;# 
  3647  060C                     	;# 
  3648  060D                     	;# 
  3649  060E                     	;# 
  3650  060F                     	;# 
  3651  0610                     	;# 
  3652  0611                     	;# 
  3653  0612                     	;# 
  3654  0613                     	;# 
  3655  0614                     	;# 
  3656  0616                     	;# 
  3657  0617                     	;# 
  3658  0618                     	;# 
  3659  0619                     	;# 
  3660  061A                     	;# 
  3661  061B                     	;# 
  3662  061C                     	;# 
  3663  061D                     	;# 
  3664  061E                     	;# 
  3665  068C                     	;# 
  3666  068D                     	;# 
  3667  068E                     	;# 
  3668  068F                     	;# 
  3669  0690                     	;# 
  3670  0691                     	;# 
  3671  0692                     	;# 
  3672  0693                     	;# 
  3673  0694                     	;# 
  3674  070C                     	;# 
  3675  070D                     	;# 
  3676  070E                     	;# 
  3677  070F                     	;# 
  3678  0710                     	;# 
  3679  0711                     	;# 
  3680  0712                     	;# 
  3681  0713                     	;# 
  3682  0714                     	;# 
  3683  0716                     	;# 
  3684  0717                     	;# 
  3685  0718                     	;# 
  3686  0719                     	;# 
  3687  071A                     	;# 
  3688  071B                     	;# 
  3689  071C                     	;# 
  3690  071D                     	;# 
  3691  071E                     	;# 
  3692  0796                     	;# 
  3693  0797                     	;# 
  3694  0798                     	;# 
  3695  0799                     	;# 
  3696  079A                     	;# 
  3697  079B                     	;# 
  3698  080C                     	;# 
  3699  080D                     	;# 
  3700  080E                     	;# 
  3701  080F                     	;# 
  3702  0810                     	;# 
  3703  0811                     	;# 
  3704  0812                     	;# 
  3705  0813                     	;# 
  3706  0814                     	;# 
  3707  081A                     	;# 
  3708  081B                     	;# 
  3709  081C                     	;# 
  3710  081D                     	;# 
  3711  081E                     	;# 
  3712  081F                     	;# 
  3713  088C                     	;# 
  3714  088D                     	;# 
  3715  088E                     	;# 
  3716  088F                     	;# 
  3717  0890                     	;# 
  3718  0891                     	;# 
  3719  0892                     	;# 
  3720  0893                     	;# 
  3721  0895                     	;# 
  3722  0896                     	;# 
  3723  0897                     	;# 
  3724  0898                     	;# 
  3725  0899                     	;# 
  3726  089A                     	;# 
  3727  089B                     	;# 
  3728  090C                     	;# 
  3729  090E                     	;# 
  3730  090F                     	;# 
  3731  091F                     	;# 
  3732  098F                     	;# 
  3733  098F                     	;# 
  3734  0990                     	;# 
  3735  0991                     	;# 
  3736  0992                     	;# 
  3737  0993                     	;# 
  3738  0994                     	;# 
  3739  0995                     	;# 
  3740  0996                     	;# 
  3741  0997                     	;# 
  3742  0E0F                     	;# 
  3743  0E10                     	;# 
  3744  0E11                     	;# 
  3745  0E12                     	;# 
  3746  0E13                     	;# 
  3747  0E14                     	;# 
  3748  0E15                     	;# 
  3749  0E16                     	;# 
  3750  0E17                     	;# 
  3751  0E18                     	;# 
  3752  0E19                     	;# 
  3753  0E1A                     	;# 
  3754  0E1B                     	;# 
  3755  0E1C                     	;# 
  3756  0E1D                     	;# 
  3757  0E1E                     	;# 
  3758  0E1F                     	;# 
  3759  0E20                     	;# 
  3760  0E21                     	;# 
  3761  0E22                     	;# 
  3762  0E23                     	;# 
  3763  0E24                     	;# 
  3764  0E25                     	;# 
  3765  0E26                     	;# 
  3766  0E27                     	;# 
  3767  0E28                     	;# 
  3768  0E29                     	;# 
  3769  0E2A                     	;# 
  3770  0E2B                     	;# 
  3771  0E2C                     	;# 
  3772  0E2D                     	;# 
  3773  0E2E                     	;# 
  3774  0E2F                     	;# 
  3775  0E30                     	;# 
  3776  0E31                     	;# 
  3777  0E32                     	;# 
  3778  0E33                     	;# 
  3779  0E34                     	;# 
  3780  0E35                     	;# 
  3781  0E36                     	;# 
  3782  0E37                     	;# 
  3783  0E8F                     	;# 
  3784  0E90                     	;# 
  3785  0E91                     	;# 
  3786  0E92                     	;# 
  3787  0E93                     	;# 
  3788  0E94                     	;# 
  3789  0E95                     	;# 
  3790  0E96                     	;# 
  3791  0E97                     	;# 
  3792  0E9C                     	;# 
  3793  0E9D                     	;# 
  3794  0E9E                     	;# 
  3795  0EA1                     	;# 
  3796  0EA2                     	;# 
  3797  0EA3                     	;# 
  3798  0EA4                     	;# 
  3799  0EA5                     	;# 
  3800  0EA9                     	;# 
  3801  0EAA                     	;# 
  3802  0EAB                     	;# 
  3803  0EAC                     	;# 
  3804  0EB1                     	;# 
  3805  0EB2                     	;# 
  3806  0EB3                     	;# 
  3807  0EB8                     	;# 
  3808  0EB9                     	;# 
  3809  0EBA                     	;# 
  3810  0EBB                     	;# 
  3811  0EBC                     	;# 
  3812  0EBD                     	;# 
  3813  0EBE                     	;# 
  3814  0EC3                     	;# 
  3815  0EC5                     	;# 
  3816  0EC6                     	;# 
  3817  0EC7                     	;# 
  3818  0EC8                     	;# 
  3819  0EC9                     	;# 
  3820  0ECA                     	;# 
  3821  0ECB                     	;# 
  3822  0ECC                     	;# 
  3823  0F10                     	;# 
  3824  0F11                     	;# 
  3825  0F12                     	;# 
  3826  0F13                     	;# 
  3827  0F14                     	;# 
  3828  0F15                     	;# 
  3829  0F16                     	;# 
  3830  0F17                     	;# 
  3831  0F18                     	;# 
  3832  0F19                     	;# 
  3833  0F1A                     	;# 
  3834  0F1B                     	;# 
  3835  0F1C                     	;# 
  3836  0F1D                     	;# 
  3837  0F1E                     	;# 
  3838  0F1F                     	;# 
  3839  0F20                     	;# 
  3840  0F21                     	;# 
  3841  0F22                     	;# 
  3842  0F23                     	;# 
  3843  0F24                     	;# 
  3844  0F25                     	;# 
  3845  0F26                     	;# 
  3846  0F27                     	;# 
  3847  0F28                     	;# 
  3848  0F29                     	;# 
  3849  0F2A                     	;# 
  3850  0F2B                     	;# 
  3851  0F2C                     	;# 
  3852  0F2D                     	;# 
  3853  0F2E                     	;# 
  3854  0F2F                     	;# 
  3855  0F30                     	;# 
  3856  0F31                     	;# 
  3857  0F32                     	;# 
  3858  0F38                     	;# 
  3859  0F39                     	;# 
  3860  0F3A                     	;# 
  3861  0F3B                     	;# 
  3862  0F3C                     	;# 
  3863  0F3D                     	;# 
  3864  0F3E                     	;# 
  3865  0F3F                     	;# 
  3866  0F40                     	;# 
  3867  0F41                     	;# 
  3868  0F43                     	;# 
  3869  0F44                     	;# 
  3870  0F45                     	;# 
  3871  0F46                     	;# 
  3872  0F47                     	;# 
  3873  0F48                     	;# 
  3874  0F49                     	;# 
  3875  0F4A                     	;# 
  3876  0F4B                     	;# 
  3877  0F4C                     	;# 
  3878  0F4E                     	;# 
  3879  0F4F                     	;# 
  3880  0F50                     	;# 
  3881  0F51                     	;# 
  3882  0F52                     	;# 
  3883  0F53                     	;# 
  3884  0F54                     	;# 
  3885  0F55                     	;# 
  3886  0F56                     	;# 
  3887  0F57                     	;# 
  3888  0F59                     	;# 
  3889  0F5A                     	;# 
  3890  0F5B                     	;# 
  3891  0F5C                     	;# 
  3892  0F5D                     	;# 
  3893  0F61                     	;# 
  3894  0F62                     	;# 
  3895  0F64                     	;# 
  3896  0F65                     	;# 
  3897  0F66                     	;# 
  3898  0F67                     	;# 
  3899  0F68                     	;# 
  3900  0F69                     	;# 
  3901  0F6A                     	;# 
  3902  0F6B                     	;# 
  3903  0F6C                     	;# 
  3904  0F6D                     	;# 
  3905  0FE4                     	;# 
  3906  0FE5                     	;# 
  3907  0FE6                     	;# 
  3908  0FE7                     	;# 
  3909  0FE8                     	;# 
  3910  0FE9                     	;# 
  3911  0FEA                     	;# 
  3912  0FEB                     	;# 
  3913  0FED                     	;# 
  3914  0FEE                     	;# 
  3915  0FEF                     	;_lutRY
  3916                           
  3917                           	psect	idataCOMMON
  3918  07FC                     __pidataCOMMON:	
  3919                           
  3920                           ;initializer for _AN_temp
  3921  07FC  3401               	retlw	1
  3922                           
  3923                           	psect	idataBANK0
  3924  07F0                     __pidataBANK0:	
  3925                           
  3926                           ;initializer for _AN_prev
  3927  07F0  3401               	retlw	1
  3928                           
  3929                           ;initializer for _MAP_LARGE_MOTOR
  3930  07F1  34FF               	retlw	255
  3931                           
  3932                           ;initializer for _MAP_SMALL_MOTOR
  3933  07F2  34FF               	retlw	255
  3934                           
  3935                           ;initializer for _responseLength
  3936  07F3  3409               	retlw	9
  3937                           
  3938                           ;initializer for _debounceLoops
  3939  07F4  3403               	retlw	3
  3940                           
  3941                           ;initializer for _lyData
  3942  07F5  34F7               	retlw	247
  3943                           
  3944                           ;initializer for _lxData
  3945  07F6  34F7               	retlw	247
  3946                           
  3947                           ;initializer for _ryData
  3948  07F7  34F7               	retlw	247
  3949                           
  3950                           ;initializer for _rxData
  3951  07F8  34F7               	retlw	247
  3952                           
  3953                           ;initializer for _digitalStateSecond
  3954  07F9  34FF               	retlw	255
  3955                           
  3956                           ;initializer for _digitalStateFirst
  3957  07FA  34FF               	retlw	255
  3958                           
  3959                           ;initializer for _AN_btn
  3960  07FB  3401               	retlw	1
  3961                           
  3962                           	psect	idataBANK1
  3963  0D72                     __pidataBANK1:	
  3964                           
  3965                           ;initializer for _response
  3966  0D72  3482               	retlw	130
  3967  0D73  345A               	retlw	90
  3968  0D74  3400               	retlw	0
  3969  0D75  3400               	retlw	0
  3970  0D76  3400               	retlw	0
  3971  0D77  3400               	retlw	0
  3972  0D78  3400               	retlw	0
  3973  0D79  3400               	retlw	0
  3974  0D7A  3400               	retlw	0
  3975  0D7B  3400               	retlw	0
  3976  0D7C  3400               	retlw	0
  3977  0D7D  3400               	retlw	0
  3978  0D7E  3400               	retlw	0
  3979  0D7F  3400               	retlw	0
  3980  0D80  3400               	retlw	0
  3981  0D81  3400               	retlw	0
  3982  0D82  3400               	retlw	0
  3983  0D83  3400               	retlw	0
  3984  0D84  3400               	retlw	0
  3985  0D85  3400               	retlw	0
  3986  0011                     _TRISAbits	set	17
  3987  0013                     _TRISCbits	set	19
  3988  0015                     _TRISE	set	21
  3989  0014                     _TRISD	set	20
  3990  0013                     _TRISC	set	19
  3991  0012                     _TRISB	set	18
  3992  0011                     _TRISA	set	17
  3993  000B                     _INTCONbits	set	11
  3994  006B                     _RB3	set	107
  3995  006A                     _RB2	set	106
  3996  006D                     _RB5	set	109
  3997  006C                     _RB4	set	108
  3998  0061                     _RA1	set	97
  3999  0062                     _RA2	set	98
  4000  0063                     _RA3	set	99
  4001  0060                     _RA0	set	96
  4002  006F                     _RB7	set	111
  4003  006E                     _RB6	set	110
  4004  0072                     _RC2	set	114
  4005  0078                     _RD0	set	120
  4006  0069                     _RB1	set	105
  4007  0068                     _RB0	set	104
  4008  0066                     _RA6	set	102
  4009  0067                     _RA7	set	103
  4010  0065                     _RA5	set	101
  4011  0064                     _RA4	set	100
  4012  007C                     _RD4	set	124
  4013  0098                     _ADCLK	set	152
  4014  009A                     _ADREF	set	154
  4015  0095                     _ADCON2	set	149
  4016  0094                     _ADCON1	set	148
  4017  0093                     _ADCON0	set	147
  4018  008C                     _ADRESL	set	140
  4019  008D                     _ADRESH	set	141
  4020  0093                     _ADCON0bits	set	147
  4021  009D                     _ADACQ	set	157
  4022  009C                     _ADPRE	set	156
  4023  009E                     _ADPCH	set	158
  4024  018F                     _SSP1STATbits	set	399
  4025  0190                     _SSP1CON1	set	400
  4026  018F                     _SSP1STAT	set	399
  4027  018C                     _SSP1BUF	set	396
  4028  38C8                     _SSP1IE	set	14536
  4029  3878                     _SSP1IF	set	14456
  4030  081F                     _NVMCON2	set	2079
  4031  081C                     _NVMDATL	set	2076
  4032  081A                     _NVMADRL	set	2074
  4033  081B                     _NVMADRH	set	2075
  4034  081E                     _NVMCON1bits	set	2078
  4035  0E8F                     _PPSLOCK	set	3727
  4036  0F25                     _RC5PPS	set	3877
  4037  0F65                     _WPUE	set	3941
  4038  0F5A                     _WPUD	set	3930
  4039  0F4F                     _WPUC	set	3919
  4040  0F44                     _WPUB	set	3908
  4041  0F39                     _WPUA	set	3897
  4042  0F64                     _ANSELE	set	3940
  4043  0F59                     _ANSELD	set	3929
  4044  0F4E                     _ANSELC	set	3918
  4045  0F43                     _ANSELB	set	3907
  4046  0F38                     _ANSELA	set	3896
  4047                           
  4048                           ; #config settings
  4049  0000                     
  4050                           	psect	cinit
  4051  0240                     start_initialization:	
  4052  0240                     __initialization:		;BIGRAM
  4053                           
  4054                           ; Initialize objects allocated to COMMON
  4055  0240  3187  27FC  3182   	fcall	__pidataCOMMON	;fetch initializer
  4056  0243  00FB               	movwf	__pdataCOMMON& (0+127)
  4057                           
  4058                           ; Initialize objects allocated to BANK0
  4059  0244  30F0               	movlw	low __pidataBANK0
  4060  0245  0084               	movwf	4
  4061  0246  3087               	movlw	(high __pidataBANK0)| (0+128)
  4062  0247  0085               	movwf	5
  4063  0248  305A               	movlw	low __pdataBANK0
  4064  0249  0086               	movwf	6
  4065  024A  3000               	movlw	high __pdataBANK0
  4066  024B  0087               	movwf	7
  4067  024C  3000               	movlw	0
  4068  024D  00FF               	movwf	btemp+1
  4069  024E  300C               	movlw	12
  4070  024F  318D  252C  3182   	fcall	init_ram
  4071                           
  4072                           ; Initialize objects allocated to BANK1
  4073  0252  3072               	movlw	low __pidataBANK1
  4074  0253  0084               	movwf	4
  4075  0254  308D               	movlw	(high __pidataBANK1)| (0+128)
  4076  0255  0085               	movwf	5
  4077  0256  30D8               	movlw	low __pdataBANK1
  4078  0257  0086               	movwf	6
  4079  0258  3000               	movlw	high __pdataBANK1
  4080  0259  0087               	movwf	7
  4081  025A  3000               	movlw	0
  4082  025B  00FF               	movwf	btemp+1
  4083  025C  3014               	movlw	20
  4084  025D  318D  252C  3182   	fcall	init_ram
  4085                           
  4086                           ; Clear objects allocated to BIGRAM
  4087  0260  30F0               	movlw	low (0+9200)
  4088  0261  0084               	movwf	4
  4089  0262  3023               	movlw	high (0+9200)
  4090  0263  0085               	movwf	5
  4091  0264  3000               	movlw	0
  4092  0265  00FE               	movwf	btemp
  4093  0266  3004               	movlw	4
  4094  0267  00FF               	movwf	btemp+1
  4095  0268  318D  2520  3182   	fcall	clear_ram0
  4096                           
  4097                           ; Clear objects allocated to COMMON
  4098  026B  01F6               	clrf	__pbssCOMMON& (0+127)
  4099  026C  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  4100  026D  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  4101  026E  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  4102  026F  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
  4103                           
  4104                           ; Clear objects allocated to BANK0
  4105  0270  01E6               	clrf	__pbssBANK0& (0+127)
  4106  0271  01E7               	clrf	(__pbssBANK0+1)& (0+127)
  4107  0272  01E8               	clrf	(__pbssBANK0+2)& (0+127)
  4108  0273  01E9               	clrf	(__pbssBANK0+3)& (0+127)
  4109  0274  01EA               	clrf	(__pbssBANK0+4)& (0+127)
  4110  0275  01EB               	clrf	(__pbssBANK0+5)& (0+127)
  4111  0276  01EC               	clrf	(__pbssBANK0+6)& (0+127)
  4112  0277  01ED               	clrf	(__pbssBANK0+7)& (0+127)
  4113                           
  4114                           ; Clear objects allocated to BANK1
  4115  0278  30A0               	movlw	low __pbssBANK1
  4116  0279  0084               	movwf	4
  4117  027A  3000               	movlw	high __pbssBANK1
  4118  027B  0085               	movwf	5
  4119  027C  3038               	movlw	56
  4120  027D  00FE               	movwf	btemp
  4121  027E  3000               	movlw	0
  4122  027F  00FF               	movwf	btemp+1
  4123  0280  318D  2520  3182   	fcall	clear_ram0
  4124                           
  4125                           ; Clear objects allocated to BANK2
  4126  0283  0022               	movlb	2	; select bank2
  4127  0284  01A0               	clrf	__pbssBANK2& (0+127)
  4128  0285  01A1               	clrf	(__pbssBANK2+1)& (0+127)
  4129  0286  01A2               	clrf	(__pbssBANK2+2)& (0+127)
  4130  0287  01A3               	clrf	(__pbssBANK2+3)& (0+127)
  4131  0288  01A4               	clrf	(__pbssBANK2+4)& (0+127)
  4132  0289  01A5               	clrf	(__pbssBANK2+5)& (0+127)
  4133  028A  01A6               	clrf	(__pbssBANK2+6)& (0+127)
  4134  028B  01A7               	clrf	(__pbssBANK2+7)& (0+127)
  4135  028C                     end_of_initialization:	
  4136                           ;End of C runtime variable initialization code
  4137                           
  4138  028C                     __end_of__initialization:	
  4139  028C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4140  028D  0020               	movlb	0
  4141  028E  318F  2F77         	ljmp	_main	;jump to C main() function
  4142                           
  4143                           	psect	bssCOMMON
  4144  0076                     __pbssCOMMON:	
  4145  0076                     _previousCmd:	
  4146  0076                     	ds	1
  4147  0077                     _escapeMode:	
  4148  0077                     	ds	1
  4149  0078                     _analogMode:	
  4150  0078                     	ds	1
  4151  0079                     _cmdCounter:	
  4152  0079                     	ds	1
  4153  007A                     _index:	
  4154  007A                     	ds	1
  4155                           
  4156                           	psect	dataCOMMON
  4157  007B                     __pdataCOMMON:	
  4158  007B                     _AN_temp:	
  4159  007B                     	ds	1
  4160                           
  4161                           	psect	bssBANK0
  4162  0066                     __pbssBANK0:	
  4163  0066                     _AN_timer:	
  4164  0066                     	ds	1
  4165  0067                     _CONTROL_RESPONSE_byte5:	
  4166  0067                     	ds	1
  4167  0068                     _CONTROL_RESPONSE_byte4:	
  4168  0068                     	ds	1
  4169  0069                     _CONTROL_RESPONSE_byte3:	
  4170  0069                     	ds	1
  4171  006A                     _INIT_PRESSURE_SENSOR_byte4:	
  4172  006A                     	ds	1
  4173  006B                     _INIT_PRESSURE_SENSOR_byte3:	
  4174  006B                     	ds	1
  4175  006C                     _AN_latch:	
  4176  006C                     	ds	1
  4177  006D                     _MODE_LOCK:	
  4178  006D                     	ds	1
  4179                           
  4180                           	psect	dataBANK0
  4181  005A                     __pdataBANK0:	
  4182  005A                     _AN_prev:	
  4183  005A                     	ds	1
  4184  005B                     _MAP_LARGE_MOTOR:	
  4185  005B                     	ds	1
  4186  005C                     _MAP_SMALL_MOTOR:	
  4187  005C                     	ds	1
  4188  005D                     _responseLength:	
  4189  005D                     	ds	1
  4190  005E                     _debounceLoops:	
  4191  005E                     	ds	1
  4192  005F                     _lyData:	
  4193  005F                     	ds	1
  4194  0060                     _lxData:	
  4195  0060                     	ds	1
  4196  0061                     _ryData:	
  4197  0061                     	ds	1
  4198  0062                     _rxData:	
  4199  0062                     	ds	1
  4200  0063                     _digitalStateSecond:	
  4201  0063                     	ds	1
  4202  0064                     _digitalStateFirst:	
  4203  0064                     	ds	1
  4204  0065                     _AN_btn:	
  4205  0065                     	ds	1
  4206                           
  4207                           	psect	bssBANK1
  4208  00A0                     __pbssBANK1:	
  4209  00A0                     _IndexDigitalByte2:	
  4210  00A0                     	ds	8
  4211  00A8                     _IndexDigitalByte1:	
  4212  00A8                     	ds	8
  4213  00B0                     _PreviousDigitalByte1:	
  4214  00B0                     	ds	8
  4215  00B8                     _DigitalControllerByte2:	
  4216  00B8                     	ds	8
  4217  00C0                     _DigitalControllerByte1:	
  4218  00C0                     	ds	8
  4219  00C8                     _analogStateSecond:	
  4220  00C8                     	ds	8
  4221  00D0                     _analogStateFirst:	
  4222  00D0                     	ds	8
  4223                           
  4224                           	psect	dataBANK1
  4225  00D8                     __pdataBANK1:	
  4226  00D8                     _response:	
  4227  00D8                     	ds	20
  4228                           
  4229                           	psect	bssBANK2
  4230  0120                     __pbssBANK2:	
  4231  0120                     _PreviousDigitalByte2:	
  4232  0120                     	ds	8
  4233                           
  4234                           	psect	inittext
  4235  0D2C                     init_ram:	
  4236  0D2C  00FE               	movwf	btemp
  4237  0D2D                     initloop:	
  4238  0D2D  0012               	moviw fsr0++
  4239  0D2E  001E               	movwi fsr1++
  4240  0D2F  3001               	movlw	1
  4241  0D30  02FE               	subwf	btemp,f
  4242  0D31  3000               	movlw	0
  4243  0D32  3BFF               	subwfb	btemp+1,f
  4244  0D33  087F               	movf	btemp+1,w
  4245  0D34  047E               	iorwf	btemp,w
  4246  0D35  1D03               	skipz
  4247  0D36  2D2D               	goto	initloop
  4248  0D37  3400               	retlw	0
  4249                           
  4250                           	psect	clrtext
  4251  0D20                     clear_ram0:	
  4252                           ;	Called with FSR0 containing the base address, and
  4253                           ;	btemp/btemp+1 has the size to clear
  4254                           
  4255  0D20  0064               	clrwdt	;clear the watchdog before getting into this loop
  4256  0D21                     clrloop0:	
  4257  0D21  0180               	clrf	0	;clear RAM location pointed to by FSR
  4258  0D22  3101               	addfsr 0,1
  4259  0D23  3001               	movlw	1
  4260  0D24  02FE               	subwf	btemp,f
  4261  0D25  3000               	movlw	0
  4262  0D26  3BFF               	subwfb	btemp+1,f
  4263  0D27  087F               	movf	btemp+1,w
  4264  0D28  047E               	iorwf	btemp,w
  4265  0D29  1D03               	skipz
  4266  0D2A  2D21               	goto	clrloop0	;have we reached the end yet?
  4267  0D2B  3400               	retlw	0	;all done for this memory range, return
  4268                           
  4269                           	psect	cstackBANK1
  4270  00EC                     __pcstackBANK1:	
  4271  00EC                     main@slaveSelectStatePrev:	
  4272                           
  4273                           ; 1 bytes @ 0x0
  4274  00EC                     	ds	1
  4275  00ED                     main@count:	
  4276                           
  4277                           ; 1 bytes @ 0x1
  4278  00ED                     	ds	1
  4279  00EE                     main@slaveSelect:	
  4280                           
  4281                           ; 1 bytes @ 0x2
  4282  00EE                     	ds	1
  4283                           
  4284                           	psect	cstackCOMMON
  4285  0070                     __pcstackCOMMON:	
  4286  0070                     ?_spiRead:	
  4287  0070                     ??_spiRead:	
  4288                           ; 1 bytes @ 0x0
  4289                           
  4290  0070                     ?_reversebyte:	
  4291                           ; 1 bytes @ 0x0
  4292                           
  4293  0070                     ?_spiWrite:	
  4294                           ; 1 bytes @ 0x0
  4295                           
  4296  0070                     ??_spiWrite:	
  4297                           ; 1 bytes @ 0x0
  4298                           
  4299  0070                     ?_picInit:	
  4300                           ; 1 bytes @ 0x0
  4301                           
  4302  0070                     ?_IO_MAPPING:	
  4303                           ; 1 bytes @ 0x0
  4304                           
  4305  0070                     ?_adcInit:	
  4306                           ; 1 bytes @ 0x0
  4307                           
  4308  0070                     ?_lutInit:	
  4309                           ; 1 bytes @ 0x0
  4310                           
  4311  0070                     ?_configureController:	
  4312                           ; 1 bytes @ 0x0
  4313                           
  4314  0070                     ?_readController:	
  4315                           ; 1 bytes @ 0x0
  4316                           
  4317  0070                     ?_readControllerAnalog:	
  4318                           ; 1 bytes @ 0x0
  4319                           
  4320  0070                     ?_eepromRead:	
  4321                           ; 1 bytes @ 0x0
  4322                           
  4323  0070                     ?_nvmUnlock:	
  4324                           ; 1 bytes @ 0x0
  4325                           
  4326  0070                     ?_pollController:	
  4327                           ; 1 bytes @ 0x0
  4328                           
  4329  0070                     ??_pollController:	
  4330                           ; 1 bytes @ 0x0
  4331                           
  4332  0070                     ?_PS2Command:	
  4333                           ; 1 bytes @ 0x0
  4334                           
  4335  0070                     ?_main:	
  4336                           ; 1 bytes @ 0x0
  4337                           
  4338  0070                     ?_ppsUnlock:	
  4339                           ; 1 bytes @ 0x0
  4340                           
  4341  0070                     ?_ppsLock:	
  4342                           ; 1 bytes @ 0x0
  4343                           
  4344  0070                     ?_spiReceiveWait:	
  4345                           ; 1 bytes @ 0x0
  4346                           
  4347  0070                     ??_spiReceiveWait:	
  4348                           ; 1 bytes @ 0x0
  4349                           
  4350  0070                     ?i1_reversebyte:	
  4351                           ; 1 bytes @ 0x0
  4352                           
  4353  0070                     ??i1_reversebyte:	
  4354                           ; 1 bytes @ 0x0
  4355                           
  4356  0070                     spiWrite@dat:	
  4357                           ; 1 bytes @ 0x0
  4358                           
  4359                           
  4360                           ; 1 bytes @ 0x0
  4361  0070                     	ds	1
  4362  0071                     pollController@response:	
  4363                           
  4364                           ; 1 bytes @ 0x1
  4365  0071                     	ds	2
  4366  0073                     i1reversebyte@byte:	
  4367                           
  4368                           ; 1 bytes @ 0x3
  4369  0073                     	ds	1
  4370  0074                     ??_PS2Command:	
  4371                           
  4372                           ; 1 bytes @ 0x4
  4373  0074                     	ds	1
  4374  0075                     PS2Command@cmd:	
  4375                           
  4376                           ; 1 bytes @ 0x5
  4377  0075                     	ds	1
  4378                           
  4379                           	psect	cstackBANK0
  4380  0020                     __pcstackBANK0:	
  4381  0020                     ??_reversebyte:	
  4382  0020                     ??_IO_MAPPING:	
  4383                           ; 1 bytes @ 0x0
  4384                           
  4385  0020                     ??_adcInit:	
  4386                           ; 1 bytes @ 0x0
  4387                           
  4388  0020                     ??_readController:	
  4389                           ; 1 bytes @ 0x0
  4390                           
  4391  0020                     ??_eepromRead:	
  4392                           ; 1 bytes @ 0x0
  4393                           
  4394  0020                     ?_eepromWrite:	
  4395                           ; 1 bytes @ 0x0
  4396                           
  4397  0020                     ?_spiInit:	
  4398                           ; 1 bytes @ 0x0
  4399                           
  4400  0020                     ??_nvmUnlock:	
  4401                           ; 1 bytes @ 0x0
  4402                           
  4403  0020                     ??_ppsUnlock:	
  4404                           ; 1 bytes @ 0x0
  4405                           
  4406  0020                     ??_ppsLock:	
  4407                           ; 1 bytes @ 0x0
  4408                           
  4409  0020                     ?_readADC:	
  4410                           ; 1 bytes @ 0x0
  4411                           
  4412  0020                     ?___wmul:	
  4413                           ; 2 bytes @ 0x0
  4414                           
  4415  0020                     spiInit@sDataSample:	
  4416                           ; 2 bytes @ 0x0
  4417                           
  4418  0020                     eepromWrite@data:	
  4419                           ; 1 bytes @ 0x0
  4420                           
  4421  0020                     readADC@channel:	
  4422                           ; 1 bytes @ 0x0
  4423                           
  4424  0020                     ___wmul@multiplier:	
  4425                           ; 2 bytes @ 0x0
  4426                           
  4427                           
  4428                           ; 2 bytes @ 0x0
  4429  0020                     	ds	1
  4430  0021                     ??_eepromWrite:	
  4431  0021                     spiInit@sClockIdle:	
  4432                           ; 1 bytes @ 0x1
  4433                           
  4434  0021                     eepromWrite@address:	
  4435                           ; 1 bytes @ 0x1
  4436                           
  4437  0021                     eepromRead@address:	
  4438                           ; 1 bytes @ 0x1
  4439                           
  4440                           
  4441                           ; 1 bytes @ 0x1
  4442  0021                     	ds	1
  4443  0022                     ??_readADC:	
  4444  0022                     readController@analogMode:	
  4445                           ; 1 bytes @ 0x2
  4446                           
  4447  0022                     spiInit@sTransmitEdge:	
  4448                           ; 1 bytes @ 0x2
  4449                           
  4450  0022                     eepromWrite@interruptStatus:	
  4451                           ; 1 bytes @ 0x2
  4452                           
  4453  0022                     eepromRead@data:	
  4454                           ; 1 bytes @ 0x2
  4455                           
  4456  0022                     ___wmul@multiplicand:	
  4457                           ; 1 bytes @ 0x2
  4458                           
  4459                           
  4460                           ; 2 bytes @ 0x2
  4461  0022                     	ds	1
  4462  0023                     ??_spiInit:	
  4463  0023                     reversebyte@byte:	
  4464                           ; 1 bytes @ 0x3
  4465                           
  4466  0023                     spiInit@sType:	
  4467                           ; 1 bytes @ 0x3
  4468                           
  4469                           
  4470                           ; 1 bytes @ 0x3
  4471  0023                     	ds	1
  4472  0024                     ??_picInit:	
  4473  0024                     ??___wmul:	
  4474                           ; 1 bytes @ 0x4
  4475                           
  4476  0024                     ___wmul@product:	
  4477                           ; 1 bytes @ 0x4
  4478                           
  4479                           
  4480                           ; 2 bytes @ 0x4
  4481  0024                     	ds	2
  4482  0026                     ?___awdiv:	
  4483  0026                     ___awdiv@divisor:	
  4484                           ; 2 bytes @ 0x6
  4485                           
  4486                           
  4487                           ; 2 bytes @ 0x6
  4488  0026                     	ds	2
  4489  0028                     ___awdiv@dividend:	
  4490                           
  4491                           ; 2 bytes @ 0x8
  4492  0028                     	ds	1
  4493  0029                     ??_readControllerAnalog:	
  4494                           
  4495                           ; 1 bytes @ 0x9
  4496  0029                     	ds	1
  4497  002A                     ??___awdiv:	
  4498                           
  4499                           ; 1 bytes @ 0xA
  4500  002A                     	ds	1
  4501  002B                     ___awdiv@counter:	
  4502                           
  4503                           ; 1 bytes @ 0xB
  4504  002B                     	ds	1
  4505  002C                     ___awdiv@sign:	
  4506                           
  4507                           ; 1 bytes @ 0xC
  4508  002C                     	ds	1
  4509  002D                     ___awdiv@quotient:	
  4510                           
  4511                           ; 2 bytes @ 0xD
  4512  002D                     	ds	2
  4513  002F                     ?_Map:	
  4514  002F                     Map@x:	
  4515                           ; 1 bytes @ 0xF
  4516                           
  4517                           
  4518                           ; 2 bytes @ 0xF
  4519  002F                     	ds	2
  4520  0031                     Map@inMin:	
  4521                           
  4522                           ; 2 bytes @ 0x11
  4523  0031                     	ds	2
  4524  0033                     Map@inMax:	
  4525                           
  4526                           ; 2 bytes @ 0x13
  4527  0033                     	ds	2
  4528  0035                     Map@outMin:	
  4529                           
  4530                           ; 2 bytes @ 0x15
  4531  0035                     	ds	2
  4532  0037                     Map@outMax:	
  4533                           
  4534                           ; 2 bytes @ 0x17
  4535  0037                     	ds	2
  4536  0039                     ??_lutInit:	
  4537  0039                     ??_Map:	
  4538                           ; 1 bytes @ 0x19
  4539                           
  4540                           
  4541                           ; 1 bytes @ 0x19
  4542  0039                     	ds	9
  4543  0042                     lutInit@lxMin:	
  4544                           
  4545                           ; 1 bytes @ 0x22
  4546  0042                     	ds	1
  4547  0043                     lutInit@lxMax:	
  4548                           
  4549                           ; 1 bytes @ 0x23
  4550  0043                     	ds	1
  4551  0044                     lutInit@lyMin:	
  4552                           
  4553                           ; 1 bytes @ 0x24
  4554  0044                     	ds	1
  4555  0045                     lutInit@lyMax:	
  4556                           
  4557                           ; 1 bytes @ 0x25
  4558  0045                     	ds	1
  4559  0046                     lutInit@rxMin:	
  4560                           
  4561                           ; 1 bytes @ 0x26
  4562  0046                     	ds	1
  4563  0047                     lutInit@rxMax:	
  4564                           
  4565                           ; 1 bytes @ 0x27
  4566  0047                     	ds	1
  4567  0048                     lutInit@ryMin:	
  4568                           
  4569                           ; 1 bytes @ 0x28
  4570  0048                     	ds	1
  4571  0049                     lutInit@ryMax:	
  4572                           
  4573                           ; 1 bytes @ 0x29
  4574  0049                     	ds	1
  4575  004A                     lutInit@position:	
  4576                           
  4577                           ; 2 bytes @ 0x2A
  4578  004A                     	ds	2
  4579  004C                     ??_configureController:	
  4580                           
  4581                           ; 1 bytes @ 0x2C
  4582  004C                     	ds	1
  4583  004D                     configureController@lxMin:	
  4584                           
  4585                           ; 1 bytes @ 0x2D
  4586  004D                     	ds	1
  4587  004E                     configureController@lxMax:	
  4588                           
  4589                           ; 1 bytes @ 0x2E
  4590  004E                     	ds	1
  4591  004F                     configureController@lyMin:	
  4592                           
  4593                           ; 1 bytes @ 0x2F
  4594  004F                     	ds	1
  4595  0050                     configureController@lyMax:	
  4596                           
  4597                           ; 1 bytes @ 0x30
  4598  0050                     	ds	1
  4599  0051                     configureController@rxMin:	
  4600                           
  4601                           ; 1 bytes @ 0x31
  4602  0051                     	ds	1
  4603  0052                     configureController@rxMax:	
  4604                           
  4605                           ; 1 bytes @ 0x32
  4606  0052                     	ds	1
  4607  0053                     configureController@ryMin:	
  4608                           
  4609                           ; 1 bytes @ 0x33
  4610  0053                     	ds	1
  4611  0054                     configureController@ryMax:	
  4612                           
  4613                           ; 1 bytes @ 0x34
  4614  0054                     	ds	1
  4615  0055                     configureController@lx:	
  4616                           
  4617                           ; 1 bytes @ 0x35
  4618  0055                     	ds	1
  4619  0056                     configureController@ly:	
  4620                           
  4621                           ; 1 bytes @ 0x36
  4622  0056                     	ds	1
  4623  0057                     configureController@rx:	
  4624                           
  4625                           ; 1 bytes @ 0x37
  4626  0057                     	ds	1
  4627  0058                     configureController@ry:	
  4628                           
  4629                           ; 1 bytes @ 0x38
  4630  0058                     	ds	1
  4631  0059                     ??_main:	
  4632                           
  4633                           ; 1 bytes @ 0x39
  4634  0059                     	ds	1
  4635                           
  4636                           	psect	maintext
  4637  0F77                     __pmaintext:	
  4638 ;;
  4639 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4640 ;;
  4641 ;; *************** function _main *****************
  4642 ;; Defined at:
  4643 ;;		line 349 in file "main.c"
  4644 ;; Parameters:    Size  Location     Type
  4645 ;;		None
  4646 ;; Auto vars:     Size  Location     Type
  4647 ;;  slaveSelect     1    2[BANK1 ] unsigned char 
  4648 ;;  count           1    1[BANK1 ] unsigned char 
  4649 ;;  slaveSelectS    1    0[BANK1 ] unsigned char 
  4650 ;; Return value:  Size  Location     Type
  4651 ;;                  1    wreg      void 
  4652 ;; Registers used:
  4653 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4654 ;; Tracked objects:
  4655 ;;		On entry : B1F/0
  4656 ;;		On exit  : 0/0
  4657 ;;		Unchanged: 0/0
  4658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4660 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4661 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4662 ;;      Totals:         0       1       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4663 ;;Total ram usage:        4 bytes
  4664 ;; Hardware stack levels required when called:    7
  4665 ;; This function calls:
  4666 ;;		_IO_MAPPING
  4667 ;;		_adcInit
  4668 ;;		_configureController
  4669 ;;		_lutInit
  4670 ;;		_picInit
  4671 ;;		_readController
  4672 ;;		_readControllerAnalog
  4673 ;; This function is called by:
  4674 ;;		Startup code after reset
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677                           
  4678                           
  4679                           ;psect for function _main
  4680  0F77                     _main:	
  4681  0F77                     l2909:	
  4682                           ;incstack = 0
  4683                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4684                           
  4685                           
  4686                           ;main.c: 351: picInit();
  4687  0F77  318D  255E  318F   	fcall	_picInit
  4688                           
  4689                           ;main.c: 352: IO_MAPPING();
  4690  0F7A  318D  25ED  318F   	fcall	_IO_MAPPING
  4691                           
  4692                           ;main.c: 353: adcInit();
  4693  0F7D  318D  2516  318F   	fcall	_adcInit
  4694  0F80                     l2911:	
  4695                           
  4696                           ;main.c: 354: lutInit();
  4697  0F80  3182  2290  318F   	fcall	_lutInit
  4698  0F83                     l2913:	
  4699                           
  4700                           ;main.c: 356: response[1] = 0x5A;
  4701  0F83  305A               	movlw	90
  4702  0F84  0020               	movlb	0	; select bank0
  4703  0F85  00D9               	movwf	??_main
  4704  0F86  0859               	movf	??_main,w
  4705  0F87  0021               	movlb	1	; select bank1
  4706  0F88  00D9               	movwf	(_response^(0+128)+1)
  4707  0F89                     l2915:	
  4708                           
  4709                           ;main.c: 358: char slaveSelect;;main.c: 359: char slaveSelectStatePrev = 0;
  4710  0F89  01EC               	clrf	main@slaveSelectStatePrev^(0+128)
  4711  0F8A                     l2917:	
  4712                           
  4713                           ;main.c: 360: char count = 0;
  4714  0F8A  01ED               	clrf	main@count^(0+128)
  4715  0F8B                     l2919:	
  4716                           
  4717                           ;main.c: 361: RA4 = 1;
  4718  0F8B  0020               	movlb	0	; select bank0
  4719  0F8C  160C               	bsf	12,4	;volatile
  4720  0F8D                     l2921:	
  4721                           
  4722                           ;main.c: 365: if(digitalStateFirst == 0x7F && digitalStateSecond == 0x5F){
  4723  0F8D  307F               	movlw	127
  4724  0F8E  0020               	movlb	0	; select bank0
  4725  0F8F  0664               	xorwf	_digitalStateFirst,w
  4726  0F90  1D03               	btfss	3,2
  4727  0F91  2F93               	goto	u2691
  4728  0F92  2F94               	goto	u2690
  4729  0F93                     u2691:	
  4730  0F93  2F9D               	goto	l2927
  4731  0F94                     u2690:	
  4732  0F94                     l2923:	
  4733  0F94  305F               	movlw	95
  4734  0F95  0663               	xorwf	_digitalStateSecond,w
  4735  0F96  1D03               	btfss	3,2
  4736  0F97  2F99               	goto	u2701
  4737  0F98  2F9A               	goto	u2700
  4738  0F99                     u2701:	
  4739  0F99  2F9D               	goto	l2927
  4740  0F9A                     u2700:	
  4741  0F9A                     l2925:	
  4742                           
  4743                           ;main.c: 366: configureController();
  4744  0F9A  3185  25EB  318F   	fcall	_configureController
  4745  0F9D                     l2927:	
  4746                           
  4747                           ;main.c: 367: };main.c: 369: if(analogMode >= 1) RD4 = 1;
  4748  0F9D  0878               	movf	_analogMode,w
  4749  0F9E  1903               	btfsc	3,2
  4750  0F9F  2FA1               	goto	u2711
  4751  0FA0  2FA2               	goto	u2710
  4752  0FA1                     u2711:	
  4753  0FA1  2FA5               	goto	l188
  4754  0FA2                     u2710:	
  4755  0FA2                     l2929:	
  4756  0FA2  0020               	movlb	0	; select bank0
  4757  0FA3  160F               	bsf	15,4	;volatile
  4758  0FA4  2FA7               	goto	l2931
  4759  0FA5                     l188:	
  4760                           
  4761                           ;main.c: 370: else RD4 = 0;
  4762  0FA5  0020               	movlb	0	; select bank0
  4763  0FA6  120F               	bcf	15,4	;volatile
  4764  0FA7                     l2931:	
  4765                           
  4766                           ;main.c: 373: if(!AN_btn){
  4767  0FA7  0865               	movf	_AN_btn,w
  4768  0FA8  1D03               	btfss	3,2
  4769  0FA9  2FAB               	goto	u2721
  4770  0FAA  2FAC               	goto	u2720
  4771  0FAB                     u2721:	
  4772  0FAB  2FC1               	goto	l190
  4773  0FAC                     u2720:	
  4774  0FAC                     l2933:	
  4775                           
  4776                           ;main.c: 374: if(!MODE_LOCK) {
  4777  0FAC  086D               	movf	_MODE_LOCK,w
  4778  0FAD  1D03               	btfss	3,2
  4779  0FAE  2FB0               	goto	u2731
  4780  0FAF  2FB1               	goto	u2730
  4781  0FB0                     u2731:	
  4782  0FB0  2FC3               	goto	l2943
  4783  0FB1                     u2730:	
  4784  0FB1                     l2935:	
  4785                           
  4786                           ;main.c: 375: if(AN_latch) {
  4787  0FB1  086C               	movf	_AN_latch,w
  4788  0FB2  1903               	btfsc	3,2
  4789  0FB3  2FB5               	goto	u2741
  4790  0FB4  2FB6               	goto	u2740
  4791  0FB5                     u2741:	
  4792  0FB5  2FC3               	goto	l2943
  4793  0FB6                     u2740:	
  4794  0FB6                     l2937:	
  4795                           
  4796                           ;main.c: 376: if(analogMode >= 1) analogMode = 0;
  4797  0FB6  0878               	movf	_analogMode,w
  4798  0FB7  1903               	btfsc	3,2
  4799  0FB8  2FBA               	goto	u2751
  4800  0FB9  2FBB               	goto	u2750
  4801  0FBA                     u2751:	
  4802  0FBA  2FBD               	goto	l193
  4803  0FBB                     u2750:	
  4804  0FBB                     l2939:	
  4805  0FBB  01F8               	clrf	_analogMode
  4806  0FBC  2FBF               	goto	l2941
  4807  0FBD                     l193:	
  4808                           
  4809                           ;main.c: 377: else analogMode = 1;
  4810  0FBD  01F8               	clrf	_analogMode
  4811  0FBE  0AF8               	incf	_analogMode,f
  4812  0FBF                     l2941:	
  4813                           
  4814                           ;main.c: 378: AN_latch = 0;
  4815  0FBF  01EC               	clrf	_AN_latch
  4816  0FC0  2FC3               	goto	l2943
  4817  0FC1                     l190:	
  4818                           
  4819                           ;main.c: 382: else AN_latch = 1;
  4820  0FC1  01EC               	clrf	_AN_latch
  4821  0FC2  0AEC               	incf	_AN_latch,f
  4822  0FC3                     l2943:	
  4823                           
  4824                           ;main.c: 384: slaveSelect = RA5;
  4825  0FC3  3000               	movlw	0
  4826  0FC4  1A8C               	btfsc	12,5	;volatile
  4827  0FC5  3001               	movlw	1
  4828  0FC6  0021               	movlb	1	; select bank1
  4829  0FC7  00EE               	movwf	main@slaveSelect^(0+128)
  4830  0FC8                     l2945:	
  4831                           
  4832                           ;main.c: 385: if (slaveSelect) if(count < 3) count++;
  4833  0FC8  086E               	movf	main@slaveSelect^(0+128),w
  4834  0FC9  1903               	btfsc	3,2
  4835  0FCA  2FCC               	goto	u2761
  4836  0FCB  2FCD               	goto	u2760
  4837  0FCC                     u2761:	
  4838  0FCC  2FD9               	goto	l196
  4839  0FCD                     u2760:	
  4840  0FCD                     l2947:	
  4841  0FCD  3003               	movlw	3
  4842  0FCE  026D               	subwf	main@count^(0+128),w
  4843  0FCF  1803               	skipnc
  4844  0FD0  2FD2               	goto	u2771
  4845  0FD1  2FD3               	goto	u2770
  4846  0FD2                     u2771:	
  4847  0FD2  2FD9               	goto	l196
  4848  0FD3                     u2770:	
  4849  0FD3                     l2949:	
  4850  0FD3  3001               	movlw	1
  4851  0FD4  0020               	movlb	0	; select bank0
  4852  0FD5  00D9               	movwf	??_main
  4853  0FD6  0859               	movf	??_main,w
  4854  0FD7  0021               	movlb	1	; select bank1
  4855  0FD8  07ED               	addwf	main@count^(0+128),f
  4856  0FD9                     l196:	
  4857                           
  4858                           ;main.c: 386: if (slaveSelect ^ slaveSelectStatePrev) count = 0;
  4859  0FD9  086E               	movf	main@slaveSelect^(0+128),w
  4860  0FDA  066C               	xorwf	main@slaveSelectStatePrev^(0+128),w
  4861  0FDB  1903               	btfsc	3,2
  4862  0FDC  2FDE               	goto	u2781
  4863  0FDD  2FDF               	goto	u2780
  4864  0FDE                     u2781:	
  4865  0FDE  2FE0               	goto	l2953
  4866  0FDF                     u2780:	
  4867  0FDF                     l2951:	
  4868  0FDF  01ED               	clrf	main@count^(0+128)
  4869  0FE0                     l2953:	
  4870                           
  4871                           ;main.c: 387: slaveSelectStatePrev = slaveSelect;
  4872  0FE0  086E               	movf	main@slaveSelect^(0+128),w
  4873  0FE1  0020               	movlb	0	; select bank0
  4874  0FE2  00D9               	movwf	??_main
  4875  0FE3  0859               	movf	??_main,w
  4876  0FE4  0021               	movlb	1	; select bank1
  4877  0FE5  00EC               	movwf	main@slaveSelectStatePrev^(0+128)
  4878  0FE6                     l2955:	
  4879                           
  4880                           ;main.c: 388: if (count >= 3) {
  4881  0FE6  3003               	movlw	3
  4882  0FE7  026D               	subwf	main@count^(0+128),w
  4883  0FE8  1C03               	skipc
  4884  0FE9  2FEB               	goto	u2791
  4885  0FEA  2FEC               	goto	u2790
  4886  0FEB                     u2791:	
  4887  0FEB  2FF6               	goto	l2963
  4888  0FEC                     u2790:	
  4889  0FEC                     l2957:	
  4890                           
  4891                           ;main.c: 389: cmdCounter = 0;
  4892  0FEC  01F9               	clrf	_cmdCounter
  4893  0FED                     l2959:	
  4894                           
  4895                           ;main.c: 390: responseLength = 9;
  4896  0FED  3009               	movlw	9
  4897  0FEE  0020               	movlb	0	; select bank0
  4898  0FEF  00D9               	movwf	??_main
  4899  0FF0  0859               	movf	??_main,w
  4900  0FF1  00DD               	movwf	_responseLength
  4901  0FF2                     l2961:	
  4902                           
  4903                           ;main.c: 391: SSP1BUF = 0xFF;
  4904  0FF2  30FF               	movlw	255
  4905  0FF3  0023               	movlb	3	; select bank3
  4906  0FF4  008C               	movwf	12	;volatile
  4907                           
  4908                           ;main.c: 392: previousCmd = 0x00;
  4909  0FF5  01F6               	clrf	_previousCmd
  4910  0FF6                     l2963:	
  4911                           
  4912                           ;main.c: 393: };main.c: 395: readController(analogMode);
  4913  0FF6  0878               	movf	_analogMode,w
  4914  0FF7  3184  2481  318F   	fcall	_readController
  4915  0FFA                     l2965:	
  4916                           
  4917                           ;main.c: 396: readControllerAnalog();
  4918  0FFA  318F  270D  318F   	fcall	_readControllerAnalog
  4919  0FFD  2F8D               	goto	l2921
  4920  0FFE  3182  2A3E         	ljmp	start
  4921  1000                     __end_of_main:	
  4922                           
  4923                           	psect	text1
  4924  0F0D                     __ptext1:	
  4925 ;; *************** function _readControllerAnalog *****************
  4926 ;; Defined at:
  4927 ;;		line 184 in file "Controller.c"
  4928 ;; Parameters:    Size  Location     Type
  4929 ;;		None
  4930 ;; Auto vars:     Size  Location     Type
  4931 ;;		None
  4932 ;; Return value:  Size  Location     Type
  4933 ;;                  1    wreg      void 
  4934 ;; Registers used:
  4935 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4936 ;; Tracked objects:
  4937 ;;		On entry : 0/0
  4938 ;;		On exit  : 0/0
  4939 ;;		Unchanged: 0/0
  4940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4943 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4944 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4945 ;;Total ram usage:        3 bytes
  4946 ;; Hardware stack levels used:    1
  4947 ;; Hardware stack levels required when called:    4
  4948 ;; This function calls:
  4949 ;;		_readADC
  4950 ;;		_reversebyte
  4951 ;; This function is called by:
  4952 ;;		_main
  4953 ;; This function uses a non-reentrant model
  4954 ;;
  4955                           
  4956                           
  4957                           ;psect for function _readControllerAnalog
  4958  0F0D                     _readControllerAnalog:	
  4959  0F0D                     l2907:	
  4960                           ;incstack = 0
  4961                           ; Regs used in _readControllerAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4962                           
  4963                           
  4964                           ;Controller.c: 186: lxData = reversebyte(lutLX[readADC(0b10001)]);
  4965  0F0D  3011               	movlw	17
  4966  0F0E  0020               	movlb	0	; select bank0
  4967  0F0F  00A0               	movwf	readADC@channel
  4968  0F10  3000               	movlw	0
  4969  0F11  00A1               	movwf	readADC@channel+1
  4970  0F12  318E  2615  318F   	fcall	_readADC
  4971  0F15  30F0               	movlw	240
  4972  0F16  0020               	movlb	0	; select bank0
  4973  0F17  00A9               	movwf	??_readControllerAnalog
  4974  0F18  3026               	movlw	38
  4975  0F19  00AA               	movwf	??_readControllerAnalog+1
  4976  0F1A  0820               	movf	?_readADC,w
  4977  0F1B  0729               	addwf	??_readControllerAnalog,w
  4978  0F1C  0086               	movwf	6
  4979  0F1D  0821               	movf	?_readADC+1,w
  4980  0F1E  3D2A               	addwfc	??_readControllerAnalog+1,w
  4981  0F1F  0087               	movwf	7
  4982  0F20  0801               	movf	1,w
  4983  0F21  318E  2676  318F   	fcall	_reversebyte
  4984  0F24  0020               	movlb	0	; select bank0
  4985  0F25  00AB               	movwf	??_readControllerAnalog+2
  4986  0F26  082B               	movf	??_readControllerAnalog+2,w
  4987  0F27  00E0               	movwf	_lxData
  4988                           
  4989                           ;Controller.c: 187: lyData = reversebyte(lutLY[readADC(0b010000)]);
  4990  0F28  3010               	movlw	16
  4991  0F29  00A0               	movwf	readADC@channel
  4992  0F2A  3000               	movlw	0
  4993  0F2B  00A1               	movwf	readADC@channel+1
  4994  0F2C  318E  2615  318F   	fcall	_readADC
  4995  0F2F  30F0               	movlw	240
  4996  0F30  0020               	movlb	0	; select bank0
  4997  0F31  00A9               	movwf	??_readControllerAnalog
  4998  0F32  3025               	movlw	37
  4999  0F33  00AA               	movwf	??_readControllerAnalog+1
  5000  0F34  0820               	movf	?_readADC,w
  5001  0F35  0729               	addwf	??_readControllerAnalog,w
  5002  0F36  0086               	movwf	6
  5003  0F37  0821               	movf	?_readADC+1,w
  5004  0F38  3D2A               	addwfc	??_readControllerAnalog+1,w
  5005  0F39  0087               	movwf	7
  5006  0F3A  0801               	movf	1,w
  5007  0F3B  318E  2676  318F   	fcall	_reversebyte
  5008  0F3E  0020               	movlb	0	; select bank0
  5009  0F3F  00AB               	movwf	??_readControllerAnalog+2
  5010  0F40  082B               	movf	??_readControllerAnalog+2,w
  5011  0F41  00DF               	movwf	_lyData
  5012                           
  5013                           ;Controller.c: 189: rxData = reversebyte(lutRX[readADC(0b010110)]);
  5014  0F42  3016               	movlw	22
  5015  0F43  00A0               	movwf	readADC@channel
  5016  0F44  3000               	movlw	0
  5017  0F45  00A1               	movwf	readADC@channel+1
  5018  0F46  318E  2615  318F   	fcall	_readADC
  5019  0F49  30F0               	movlw	240
  5020  0F4A  0020               	movlb	0	; select bank0
  5021  0F4B  00A9               	movwf	??_readControllerAnalog
  5022  0F4C  3024               	movlw	36
  5023  0F4D  00AA               	movwf	??_readControllerAnalog+1
  5024  0F4E  0820               	movf	?_readADC,w
  5025  0F4F  0729               	addwf	??_readControllerAnalog,w
  5026  0F50  0086               	movwf	6
  5027  0F51  0821               	movf	?_readADC+1,w
  5028  0F52  3D2A               	addwfc	??_readControllerAnalog+1,w
  5029  0F53  0087               	movwf	7
  5030  0F54  0801               	movf	1,w
  5031  0F55  318E  2676  318F   	fcall	_reversebyte
  5032  0F58  0020               	movlb	0	; select bank0
  5033  0F59  00AB               	movwf	??_readControllerAnalog+2
  5034  0F5A  082B               	movf	??_readControllerAnalog+2,w
  5035  0F5B  00E2               	movwf	_rxData
  5036                           
  5037                           ;Controller.c: 190: ryData = reversebyte(lutRY[readADC(0b010111)]);
  5038  0F5C  3017               	movlw	23
  5039  0F5D  00A0               	movwf	readADC@channel
  5040  0F5E  3000               	movlw	0
  5041  0F5F  00A1               	movwf	readADC@channel+1
  5042  0F60  318E  2615  318F   	fcall	_readADC
  5043  0F63  30F0               	movlw	240
  5044  0F64  0020               	movlb	0	; select bank0
  5045  0F65  00A9               	movwf	??_readControllerAnalog
  5046  0F66  3023               	movlw	35
  5047  0F67  00AA               	movwf	??_readControllerAnalog+1
  5048  0F68  0820               	movf	?_readADC,w
  5049  0F69  0729               	addwf	??_readControllerAnalog,w
  5050  0F6A  0086               	movwf	6
  5051  0F6B  0821               	movf	?_readADC+1,w
  5052  0F6C  3D2A               	addwfc	??_readControllerAnalog+1,w
  5053  0F6D  0087               	movwf	7
  5054  0F6E  0801               	movf	1,w
  5055  0F6F  318E  2676  318F   	fcall	_reversebyte
  5056  0F72  0020               	movlb	0	; select bank0
  5057  0F73  00AB               	movwf	??_readControllerAnalog+2
  5058  0F74  082B               	movf	??_readControllerAnalog+2,w
  5059  0F75  00E1               	movwf	_ryData
  5060  0F76                     l356:	
  5061  0F76  0008               	return
  5062  0F77                     __end_of_readControllerAnalog:	
  5063                           
  5064                           	psect	text2
  5065  0E76                     __ptext2:	
  5066 ;; *************** function _reversebyte *****************
  5067 ;; Defined at:
  5068 ;;		line 176 in file "Controller.c"
  5069 ;; Parameters:    Size  Location     Type
  5070 ;;  byte            1    wreg     unsigned char 
  5071 ;; Auto vars:     Size  Location     Type
  5072 ;;  byte            1    3[BANK0 ] unsigned char 
  5073 ;; Return value:  Size  Location     Type
  5074 ;;                  1    wreg      unsigned char 
  5075 ;; Registers used:
  5076 ;;		wreg, status,2, status,0
  5077 ;; Tracked objects:
  5078 ;;		On entry : 0/0
  5079 ;;		On exit  : 0/0
  5080 ;;		Unchanged: 0/0
  5081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5083 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5084 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5085 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5086 ;;Total ram usage:        4 bytes
  5087 ;; Hardware stack levels used:    1
  5088 ;; Hardware stack levels required when called:    3
  5089 ;; This function calls:
  5090 ;;		Nothing
  5091 ;; This function is called by:
  5092 ;;		_readControllerAnalog
  5093 ;; This function uses a non-reentrant model
  5094 ;;
  5095                           
  5096                           
  5097                           ;psect for function _reversebyte
  5098  0E76                     _reversebyte:	
  5099                           
  5100                           ;incstack = 0
  5101                           ; Regs used in _reversebyte: [wreg+status,2+status,0]
  5102                           ;reversebyte@byte stored from wreg
  5103  0E76  0020               	movlb	0	; select bank0
  5104  0E77  00A3               	movwf	reversebyte@byte
  5105  0E78                     l2621:	
  5106                           
  5107                           ;Controller.c: 177: byte = (byte & 0xF0) >> 4 | (byte & 0x0F) << 4;
  5108  0E78  0823               	movf	reversebyte@byte,w
  5109  0E79  390F               	andlw	15
  5110  0E7A  00A0               	movwf	??_reversebyte
  5111  0E7B  3004               	movlw	4
  5112  0E7C                     u2195:	
  5113  0E7C  35A0               	lslf	??_reversebyte,f
  5114  0E7D  0B89               	decfsz	9,f
  5115  0E7E  2E7C               	goto	u2195
  5116  0E7F  0823               	movf	reversebyte@byte,w
  5117  0E80  00A1               	movwf	??_reversebyte+1
  5118  0E81  3004               	movlw	4
  5119  0E82                     u2205:	
  5120  0E82  36A1               	lsrf	??_reversebyte+1,f
  5121  0E83  0B89               	decfsz	9,f
  5122  0E84  2E82               	goto	u2205
  5123  0E85  0821               	movf	??_reversebyte+1,w
  5124  0E86  390F               	andlw	15
  5125  0E87  0420               	iorwf	??_reversebyte,w
  5126  0E88  00A2               	movwf	??_reversebyte+2
  5127  0E89  0822               	movf	??_reversebyte+2,w
  5128  0E8A  00A3               	movwf	reversebyte@byte
  5129                           
  5130                           ;Controller.c: 178: byte = (byte & 0xCC) >> 2 | (byte & 0x33) << 2;
  5131  0E8B  0823               	movf	reversebyte@byte,w
  5132  0E8C  3933               	andlw	51
  5133  0E8D  00A0               	movwf	??_reversebyte
  5134  0E8E  3002               	movlw	2
  5135  0E8F                     u2215:	
  5136  0E8F  35A0               	lslf	??_reversebyte,f
  5137  0E90  0B89               	decfsz	9,f
  5138  0E91  2E8F               	goto	u2215
  5139  0E92  0823               	movf	reversebyte@byte,w
  5140  0E93  00A1               	movwf	??_reversebyte+1
  5141  0E94  3002               	movlw	2
  5142  0E95                     u2225:	
  5143  0E95  36A1               	lsrf	??_reversebyte+1,f
  5144  0E96  0B89               	decfsz	9,f
  5145  0E97  2E95               	goto	u2225
  5146  0E98  0821               	movf	??_reversebyte+1,w
  5147  0E99  3933               	andlw	51
  5148  0E9A  0420               	iorwf	??_reversebyte,w
  5149  0E9B  00A2               	movwf	??_reversebyte+2
  5150  0E9C  0822               	movf	??_reversebyte+2,w
  5151  0E9D  00A3               	movwf	reversebyte@byte
  5152                           
  5153                           ;Controller.c: 179: byte = (byte & 0xAA) >> 1 | (byte & 0x55) << 1;
  5154  0E9E  0823               	movf	reversebyte@byte,w
  5155  0E9F  3955               	andlw	85
  5156  0EA0  00A0               	movwf	??_reversebyte
  5157  0EA1  3001               	movlw	1
  5158  0EA2                     u2235:	
  5159  0EA2  35A0               	lslf	??_reversebyte,f
  5160  0EA3  0B89               	decfsz	9,f
  5161  0EA4  2EA2               	goto	u2235
  5162  0EA5  3623               	lsrf	reversebyte@byte,w
  5163  0EA6  3955               	andlw	85
  5164  0EA7  0420               	iorwf	??_reversebyte,w
  5165  0EA8  00A1               	movwf	??_reversebyte+1
  5166  0EA9  0821               	movf	??_reversebyte+1,w
  5167  0EAA  00A3               	movwf	reversebyte@byte
  5168  0EAB                     l2623:	
  5169                           
  5170                           ;Controller.c: 181: return byte;
  5171  0EAB  0823               	movf	reversebyte@byte,w
  5172  0EAC                     l353:	
  5173  0EAC  0008               	return
  5174  0EAD                     __end_of_reversebyte:	
  5175                           
  5176                           	psect	text3
  5177  0D5E                     __ptext3:	
  5178 ;; *************** function _picInit *****************
  5179 ;; Defined at:
  5180 ;;		line 30 in file "PicConfig.c"
  5181 ;; Parameters:    Size  Location     Type
  5182 ;;		None
  5183 ;; Auto vars:     Size  Location     Type
  5184 ;;		None
  5185 ;; Return value:  Size  Location     Type
  5186 ;;                  1    wreg      void 
  5187 ;; Registers used:
  5188 ;;		wreg, status,2, status,0, pclath, cstack
  5189 ;; Tracked objects:
  5190 ;;		On entry : 0/0
  5191 ;;		On exit  : 0/0
  5192 ;;		Unchanged: 0/0
  5193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5196 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5197 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5198 ;;Total ram usage:        2 bytes
  5199 ;; Hardware stack levels used:    1
  5200 ;; Hardware stack levels required when called:    4
  5201 ;; This function calls:
  5202 ;;		_spiInit
  5203 ;; This function is called by:
  5204 ;;		_main
  5205 ;; This function uses a non-reentrant model
  5206 ;;
  5207                           
  5208                           
  5209                           ;psect for function _picInit
  5210  0D5E                     _picInit:	
  5211  0D5E                     l2807:	
  5212                           ;incstack = 0
  5213                           ; Regs used in _picInit: [wreg+status,2+status,0+pclath+cstack]
  5214                           
  5215                           
  5216                           ;PicConfig.c: 32: spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_HIGH, 
      +                          SPI_ACTIVE_2_IDLE);
  5217  0D5E  0020               	movlb	0	; select bank0
  5218  0D5F  01A0               	clrf	spiInit@sDataSample
  5219  0D60  3010               	movlw	16
  5220  0D61  00A4               	movwf	??_picInit
  5221  0D62  0824               	movf	??_picInit,w
  5222  0D63  00A1               	movwf	spiInit@sClockIdle
  5223  0D64  3040               	movlw	64
  5224  0D65  00A5               	movwf	??_picInit+1
  5225  0D66  0825               	movf	??_picInit+1,w
  5226  0D67  00A2               	movwf	spiInit@sTransmitEdge
  5227  0D68  3024               	movlw	36
  5228  0D69  318D  254A  318D   	fcall	_spiInit
  5229  0D6C                     l2809:	
  5230                           
  5231                           ;PicConfig.c: 35: INTCONbits.GIE = 1;
  5232  0D6C  178B               	bsf	11,7	;volatile
  5233  0D6D                     l2811:	
  5234                           
  5235                           ;PicConfig.c: 36: INTCONbits.PEIE = 1;
  5236  0D6D  170B               	bsf	11,6	;volatile
  5237  0D6E                     l2813:	
  5238                           
  5239                           ;PicConfig.c: 37: SSP1IF = 0;
  5240  0D6E  002E               	movlb	14	; select bank14
  5241  0D6F  100F               	bcf	15,0	;volatile
  5242  0D70                     l2815:	
  5243                           
  5244                           ;PicConfig.c: 38: SSP1IE = 1;
  5245  0D70  1419               	bsf	25,0	;volatile
  5246  0D71                     l406:	
  5247  0D71  0008               	return
  5248  0D72                     __end_of_picInit:	
  5249                           
  5250                           	psect	text4
  5251  0D4A                     __ptext4:	
  5252 ;; *************** function _spiInit *****************
  5253 ;; Defined at:
  5254 ;;		line 10 in file "Spi.c"
  5255 ;; Parameters:    Size  Location     Type
  5256 ;;  sType           1    wreg     enum E11980
  5257 ;;  sDataSample     1    0[BANK0 ] enum E11988
  5258 ;;  sClockIdle      1    1[BANK0 ] enum E11992
  5259 ;;  sTransmitEdg    1    2[BANK0 ] enum E11996
  5260 ;; Auto vars:     Size  Location     Type
  5261 ;;  sType           1    3[BANK0 ] enum E11980
  5262 ;; Return value:  Size  Location     Type
  5263 ;;                  1    wreg      void 
  5264 ;; Registers used:
  5265 ;;		wreg, status,2, status,0
  5266 ;; Tracked objects:
  5267 ;;		On entry : 0/0
  5268 ;;		On exit  : 0/0
  5269 ;;		Unchanged: 0/0
  5270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5271 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5272 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5274 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5275 ;;Total ram usage:        4 bytes
  5276 ;; Hardware stack levels used:    1
  5277 ;; Hardware stack levels required when called:    3
  5278 ;; This function calls:
  5279 ;;		Nothing
  5280 ;; This function is called by:
  5281 ;;		_picInit
  5282 ;; This function uses a non-reentrant model
  5283 ;;
  5284                           
  5285                           
  5286                           ;psect for function _spiInit
  5287  0D4A                     _spiInit:	
  5288                           
  5289                           ;incstack = 0
  5290                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  5291                           ;spiInit@sType stored from wreg
  5292  0D4A  0020               	movlb	0	; select bank0
  5293  0D4B  00A3               	movwf	spiInit@sType
  5294  0D4C                     l2801:	
  5295                           
  5296                           ;Spi.c: 13: if(sType & 0b00000100)
  5297  0D4C  1D23               	btfss	spiInit@sType,2
  5298  0D4D  2D4F               	goto	u2561
  5299  0D4E  2D50               	goto	u2560
  5300  0D4F                     u2561:	
  5301  0D4F  2D54               	goto	l2805
  5302  0D50                     u2560:	
  5303  0D50                     l2803:	
  5304                           
  5305                           ;Spi.c: 14: {;Spi.c: 15: SSP1STAT = sTransmitEdge;
  5306  0D50  0822               	movf	spiInit@sTransmitEdge,w
  5307  0D51  0023               	movlb	3	; select bank3
  5308  0D52  008F               	movwf	15	;volatile
  5309                           
  5310                           ;Spi.c: 17: }
  5311  0D53  2D58               	goto	l418
  5312  0D54                     l2805:	
  5313                           
  5314                           ;Spi.c: 18: else;Spi.c: 19: {;Spi.c: 20: SSP1STAT = sDataSample | sTransmitEdge;
  5315  0D54  0820               	movf	spiInit@sDataSample,w
  5316  0D55  0422               	iorwf	spiInit@sTransmitEdge,w
  5317  0D56  0023               	movlb	3	; select bank3
  5318  0D57  008F               	movwf	15	;volatile
  5319  0D58                     l418:	
  5320                           
  5321                           ;Spi.c: 22: };Spi.c: 24: SSP1CON1 = sType | sClockIdle;
  5322  0D58  0020               	movlb	0	; select bank0
  5323  0D59  0823               	movf	spiInit@sType,w
  5324  0D5A  0421               	iorwf	spiInit@sClockIdle,w
  5325  0D5B  0023               	movlb	3	; select bank3
  5326  0D5C  0090               	movwf	16	;volatile
  5327  0D5D                     l419:	
  5328  0D5D  0008               	return
  5329  0D5E                     __end_of_spiInit:	
  5330                           
  5331                           	psect	text5
  5332  05EB                     __ptext5:	
  5333 ;; *************** function _configureController *****************
  5334 ;; Defined at:
  5335 ;;		line 193 in file "Controller.c"
  5336 ;; Parameters:    Size  Location     Type
  5337 ;;		None
  5338 ;; Auto vars:     Size  Location     Type
  5339 ;;  ry              1   56[BANK0 ] unsigned char 
  5340 ;;  rx              1   55[BANK0 ] unsigned char 
  5341 ;;  ly              1   54[BANK0 ] unsigned char 
  5342 ;;  lx              1   53[BANK0 ] unsigned char 
  5343 ;;  ryMax           1   52[BANK0 ] unsigned char 
  5344 ;;  ryMin           1   51[BANK0 ] unsigned char 
  5345 ;;  rxMax           1   50[BANK0 ] unsigned char 
  5346 ;;  rxMin           1   49[BANK0 ] unsigned char 
  5347 ;;  lyMax           1   48[BANK0 ] unsigned char 
  5348 ;;  lyMin           1   47[BANK0 ] unsigned char 
  5349 ;;  lxMax           1   46[BANK0 ] unsigned char 
  5350 ;;  lxMin           1   45[BANK0 ] unsigned char 
  5351 ;; Return value:  Size  Location     Type
  5352 ;;                  1    wreg      void 
  5353 ;; Registers used:
  5354 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5355 ;; Tracked objects:
  5356 ;;		On entry : 0/0
  5357 ;;		On exit  : 0/0
  5358 ;;		Unchanged: 0/0
  5359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5361 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5362 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5363 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5364 ;;Total ram usage:       13 bytes
  5365 ;; Hardware stack levels used:    1
  5366 ;; Hardware stack levels required when called:    6
  5367 ;; This function calls:
  5368 ;;		_eepromWrite
  5369 ;;		_lutInit
  5370 ;;		_readADC
  5371 ;;		_readController
  5372 ;; This function is called by:
  5373 ;;		_main
  5374 ;; This function uses a non-reentrant model
  5375 ;;
  5376                           
  5377                           
  5378                           ;psect for function _configureController
  5379  05EB                     _configureController:	
  5380  05EB                     l2851:	
  5381                           ;incstack = 0
  5382                           ; Regs used in _configureController: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5383                           
  5384                           
  5385                           ;Controller.c: 195: INTCONbits.GIE = 0;
  5386  05EB  138B               	bcf	11,7	;volatile
  5387                           
  5388                           ;Controller.c: 196: INTCONbits.PEIE = 0;
  5389  05EC  130B               	bcf	11,6	;volatile
  5390  05ED                     l2853:	
  5391                           
  5392                           ;Controller.c: 198: char lxMin = readADC(0b10001);
  5393  05ED  3011               	movlw	17
  5394  05EE  0020               	movlb	0	; select bank0
  5395  05EF  00A0               	movwf	readADC@channel
  5396  05F0  3000               	movlw	0
  5397  05F1  00A1               	movwf	readADC@channel+1
  5398  05F2  318E  2615  3185   	fcall	_readADC
  5399  05F5  0020               	movlb	0	; select bank0
  5400  05F6  0820               	movf	?_readADC,w
  5401  05F7  00CC               	movwf	??_configureController
  5402  05F8  084C               	movf	??_configureController,w
  5403  05F9  00CD               	movwf	configureController@lxMin
  5404                           
  5405                           ;Controller.c: 199: char lxMax = readADC(0b10001);
  5406  05FA  3011               	movlw	17
  5407  05FB  00A0               	movwf	readADC@channel
  5408  05FC  3000               	movlw	0
  5409  05FD  00A1               	movwf	readADC@channel+1
  5410  05FE  318E  2615  3185   	fcall	_readADC
  5411  0601  0020               	movlb	0	; select bank0
  5412  0602  0820               	movf	?_readADC,w
  5413  0603  00CC               	movwf	??_configureController
  5414  0604  084C               	movf	??_configureController,w
  5415  0605  00CE               	movwf	configureController@lxMax
  5416                           
  5417                           ;Controller.c: 200: char lyMin = readADC(0b010000);
  5418  0606  3010               	movlw	16
  5419  0607  00A0               	movwf	readADC@channel
  5420  0608  3000               	movlw	0
  5421  0609  00A1               	movwf	readADC@channel+1
  5422  060A  318E  2615  3185   	fcall	_readADC
  5423  060D  0020               	movlb	0	; select bank0
  5424  060E  0820               	movf	?_readADC,w
  5425  060F  00CC               	movwf	??_configureController
  5426  0610  084C               	movf	??_configureController,w
  5427  0611  00CF               	movwf	configureController@lyMin
  5428                           
  5429                           ;Controller.c: 201: char lyMax = readADC(0b010000);
  5430  0612  3010               	movlw	16
  5431  0613  00A0               	movwf	readADC@channel
  5432  0614  3000               	movlw	0
  5433  0615  00A1               	movwf	readADC@channel+1
  5434  0616  318E  2615  3185   	fcall	_readADC
  5435  0619  0020               	movlb	0	; select bank0
  5436  061A  0820               	movf	?_readADC,w
  5437  061B  00CC               	movwf	??_configureController
  5438  061C  084C               	movf	??_configureController,w
  5439  061D  00D0               	movwf	configureController@lyMax
  5440                           
  5441                           ;Controller.c: 203: char rxMin = readADC(0b010110);
  5442  061E  3016               	movlw	22
  5443  061F  00A0               	movwf	readADC@channel
  5444  0620  3000               	movlw	0
  5445  0621  00A1               	movwf	readADC@channel+1
  5446  0622  318E  2615  3185   	fcall	_readADC
  5447  0625  0020               	movlb	0	; select bank0
  5448  0626  0820               	movf	?_readADC,w
  5449  0627  00CC               	movwf	??_configureController
  5450  0628  084C               	movf	??_configureController,w
  5451  0629  00D1               	movwf	configureController@rxMin
  5452                           
  5453                           ;Controller.c: 204: char rxMax = readADC(0b010110);
  5454  062A  3016               	movlw	22
  5455  062B  00A0               	movwf	readADC@channel
  5456  062C  3000               	movlw	0
  5457  062D  00A1               	movwf	readADC@channel+1
  5458  062E  318E  2615  3185   	fcall	_readADC
  5459  0631  0020               	movlb	0	; select bank0
  5460  0632  0820               	movf	?_readADC,w
  5461  0633  00CC               	movwf	??_configureController
  5462  0634  084C               	movf	??_configureController,w
  5463  0635  00D2               	movwf	configureController@rxMax
  5464                           
  5465                           ;Controller.c: 205: char ryMin = readADC(0b010111);
  5466  0636  3017               	movlw	23
  5467  0637  00A0               	movwf	readADC@channel
  5468  0638  3000               	movlw	0
  5469  0639  00A1               	movwf	readADC@channel+1
  5470  063A  318E  2615  3185   	fcall	_readADC
  5471  063D  0020               	movlb	0	; select bank0
  5472  063E  0820               	movf	?_readADC,w
  5473  063F  00CC               	movwf	??_configureController
  5474  0640  084C               	movf	??_configureController,w
  5475  0641  00D3               	movwf	configureController@ryMin
  5476                           
  5477                           ;Controller.c: 206: char ryMax = readADC(0b010111);
  5478  0642  3017               	movlw	23
  5479  0643  00A0               	movwf	readADC@channel
  5480  0644  3000               	movlw	0
  5481  0645  00A1               	movwf	readADC@channel+1
  5482  0646  318E  2615  3185   	fcall	_readADC
  5483  0649  0020               	movlb	0	; select bank0
  5484  064A  0820               	movf	?_readADC,w
  5485  064B  00CC               	movwf	??_configureController
  5486  064C  084C               	movf	??_configureController,w
  5487  064D  00D4               	movwf	configureController@ryMax
  5488  064E                     l2855:	
  5489                           
  5490                           ;Controller.c: 216: readController(0);
  5491  064E  3000               	movlw	0
  5492  064F  3184  2481  3185   	fcall	_readController
  5493  0652                     l2857:	
  5494                           
  5495                           ;Controller.c: 218: if (digitalStateFirst == 0x7F && digitalStateSecond == 0xCF) {
  5496  0652  307F               	movlw	127
  5497  0653  0020               	movlb	0	; select bank0
  5498  0654  0664               	xorwf	_digitalStateFirst,w
  5499  0655  1D03               	btfss	3,2
  5500  0656  2E58               	goto	u2571
  5501  0657  2E59               	goto	u2570
  5502  0658                     u2571:	
  5503  0658  2E60               	goto	l2863
  5504  0659                     u2570:	
  5505  0659                     l2859:	
  5506  0659  30CF               	movlw	207
  5507  065A  0663               	xorwf	_digitalStateSecond,w
  5508  065B  1D03               	btfss	3,2
  5509  065C  2E5E               	goto	u2581
  5510  065D  2E5F               	goto	u2580
  5511  065E                     u2581:	
  5512  065E  2E60               	goto	l2863
  5513  065F                     u2580:	
  5514  065F  2F00               	goto	l2899
  5515  0660                     l2863:	
  5516                           
  5517                           ;Controller.c: 220: };Controller.c: 222: lx = readADC(0b10001);
  5518  0660  3011               	movlw	17
  5519  0661  00A0               	movwf	readADC@channel
  5520  0662  3000               	movlw	0
  5521  0663  00A1               	movwf	readADC@channel+1
  5522  0664  318E  2615  3185   	fcall	_readADC
  5523  0667  0020               	movlb	0	; select bank0
  5524  0668  0820               	movf	?_readADC,w
  5525  0669  00CC               	movwf	??_configureController
  5526  066A  084C               	movf	??_configureController,w
  5527  066B  00D5               	movwf	configureController@lx
  5528                           
  5529                           ;Controller.c: 223: ly = readADC(0b010000);
  5530  066C  3010               	movlw	16
  5531  066D  00A0               	movwf	readADC@channel
  5532  066E  3000               	movlw	0
  5533  066F  00A1               	movwf	readADC@channel+1
  5534  0670  318E  2615  3185   	fcall	_readADC
  5535  0673  0020               	movlb	0	; select bank0
  5536  0674  0820               	movf	?_readADC,w
  5537  0675  00CC               	movwf	??_configureController
  5538  0676  084C               	movf	??_configureController,w
  5539  0677  00D6               	movwf	configureController@ly
  5540                           
  5541                           ;Controller.c: 224: rx = readADC(0b010110);
  5542  0678  3016               	movlw	22
  5543  0679  00A0               	movwf	readADC@channel
  5544  067A  3000               	movlw	0
  5545  067B  00A1               	movwf	readADC@channel+1
  5546  067C  318E  2615  3185   	fcall	_readADC
  5547  067F  0020               	movlb	0	; select bank0
  5548  0680  0820               	movf	?_readADC,w
  5549  0681  00CC               	movwf	??_configureController
  5550  0682  084C               	movf	??_configureController,w
  5551  0683  00D7               	movwf	configureController@rx
  5552                           
  5553                           ;Controller.c: 225: ry = readADC(0b010111);
  5554  0684  3017               	movlw	23
  5555  0685  00A0               	movwf	readADC@channel
  5556  0686  3000               	movlw	0
  5557  0687  00A1               	movwf	readADC@channel+1
  5558  0688  318E  2615  3185   	fcall	_readADC
  5559  068B  0020               	movlb	0	; select bank0
  5560  068C  0820               	movf	?_readADC,w
  5561  068D  00CC               	movwf	??_configureController
  5562  068E  084C               	movf	??_configureController,w
  5563  068F  00D8               	movwf	configureController@ry
  5564  0690                     l2865:	
  5565                           
  5566                           ;Controller.c: 228: if (ly > lyMax) lyMax = ly;
  5567  0690  0856               	movf	configureController@ly,w
  5568  0691  0250               	subwf	configureController@lyMax,w
  5569  0692  1803               	skipnc
  5570  0693  2E95               	goto	u2591
  5571  0694  2E96               	goto	u2590
  5572  0695                     u2591:	
  5573  0695  2E9A               	goto	l362
  5574  0696                     u2590:	
  5575  0696                     l2867:	
  5576  0696  0856               	movf	configureController@ly,w
  5577  0697  00CC               	movwf	??_configureController
  5578  0698  084C               	movf	??_configureController,w
  5579  0699  00D0               	movwf	configureController@lyMax
  5580  069A                     l362:	
  5581                           
  5582                           ;Controller.c: 229: if (ly < lyMin) lyMin = ly;
  5583  069A  084F               	movf	configureController@lyMin,w
  5584  069B  0256               	subwf	configureController@ly,w
  5585  069C  1803               	skipnc
  5586  069D  2E9F               	goto	u2601
  5587  069E  2EA0               	goto	u2600
  5588  069F                     u2601:	
  5589  069F  2EA4               	goto	l363
  5590  06A0                     u2600:	
  5591  06A0                     l2869:	
  5592  06A0  0856               	movf	configureController@ly,w
  5593  06A1  00CC               	movwf	??_configureController
  5594  06A2  084C               	movf	??_configureController,w
  5595  06A3  00CF               	movwf	configureController@lyMin
  5596  06A4                     l363:	
  5597                           
  5598                           ;Controller.c: 230: if (lx > lxMax) lxMax = lx;
  5599  06A4  0855               	movf	configureController@lx,w
  5600  06A5  024E               	subwf	configureController@lxMax,w
  5601  06A6  1803               	skipnc
  5602  06A7  2EA9               	goto	u2611
  5603  06A8  2EAA               	goto	u2610
  5604  06A9                     u2611:	
  5605  06A9  2EAE               	goto	l364
  5606  06AA                     u2610:	
  5607  06AA                     l2871:	
  5608  06AA  0855               	movf	configureController@lx,w
  5609  06AB  00CC               	movwf	??_configureController
  5610  06AC  084C               	movf	??_configureController,w
  5611  06AD  00CE               	movwf	configureController@lxMax
  5612  06AE                     l364:	
  5613                           
  5614                           ;Controller.c: 231: if (lx < lxMin) lxMin = lx;
  5615  06AE  084D               	movf	configureController@lxMin,w
  5616  06AF  0255               	subwf	configureController@lx,w
  5617  06B0  1803               	skipnc
  5618  06B1  2EB3               	goto	u2621
  5619  06B2  2EB4               	goto	u2620
  5620  06B3                     u2621:	
  5621  06B3  2EB8               	goto	l365
  5622  06B4                     u2620:	
  5623  06B4                     l2873:	
  5624  06B4  0855               	movf	configureController@lx,w
  5625  06B5  00CC               	movwf	??_configureController
  5626  06B6  084C               	movf	??_configureController,w
  5627  06B7  00CD               	movwf	configureController@lxMin
  5628  06B8                     l365:	
  5629                           
  5630                           ;Controller.c: 234: if (ry > ryMax) ryMax = ry;
  5631  06B8  0858               	movf	configureController@ry,w
  5632  06B9  0254               	subwf	configureController@ryMax,w
  5633  06BA  1803               	skipnc
  5634  06BB  2EBD               	goto	u2631
  5635  06BC  2EBE               	goto	u2630
  5636  06BD                     u2631:	
  5637  06BD  2EC2               	goto	l366
  5638  06BE                     u2630:	
  5639  06BE                     l2875:	
  5640  06BE  0858               	movf	configureController@ry,w
  5641  06BF  00CC               	movwf	??_configureController
  5642  06C0  084C               	movf	??_configureController,w
  5643  06C1  00D4               	movwf	configureController@ryMax
  5644  06C2                     l366:	
  5645                           
  5646                           ;Controller.c: 235: if (ry < ryMin) ryMin = ry;
  5647  06C2  0853               	movf	configureController@ryMin,w
  5648  06C3  0258               	subwf	configureController@ry,w
  5649  06C4  1803               	skipnc
  5650  06C5  2EC7               	goto	u2641
  5651  06C6  2EC8               	goto	u2640
  5652  06C7                     u2641:	
  5653  06C7  2ECC               	goto	l367
  5654  06C8                     u2640:	
  5655  06C8                     l2877:	
  5656  06C8  0858               	movf	configureController@ry,w
  5657  06C9  00CC               	movwf	??_configureController
  5658  06CA  084C               	movf	??_configureController,w
  5659  06CB  00D3               	movwf	configureController@ryMin
  5660  06CC                     l367:	
  5661                           
  5662                           ;Controller.c: 236: if (rx > rxMax) rxMax = rx;
  5663  06CC  0857               	movf	configureController@rx,w
  5664  06CD  0252               	subwf	configureController@rxMax,w
  5665  06CE  1803               	skipnc
  5666  06CF  2ED1               	goto	u2651
  5667  06D0  2ED2               	goto	u2650
  5668  06D1                     u2651:	
  5669  06D1  2ED6               	goto	l368
  5670  06D2                     u2650:	
  5671  06D2                     l2879:	
  5672  06D2  0857               	movf	configureController@rx,w
  5673  06D3  00CC               	movwf	??_configureController
  5674  06D4  084C               	movf	??_configureController,w
  5675  06D5  00D2               	movwf	configureController@rxMax
  5676  06D6                     l368:	
  5677                           
  5678                           ;Controller.c: 237: if (rx < rxMin) rxMin = rx;
  5679  06D6  0851               	movf	configureController@rxMin,w
  5680  06D7  0257               	subwf	configureController@rx,w
  5681  06D8  1803               	skipnc
  5682  06D9  2EDB               	goto	u2661
  5683  06DA  2EDC               	goto	u2660
  5684  06DB                     u2661:	
  5685  06DB  2EE0               	goto	l2883
  5686  06DC                     u2660:	
  5687  06DC                     l2881:	
  5688  06DC  0857               	movf	configureController@rx,w
  5689  06DD  00CC               	movwf	??_configureController
  5690  06DE  084C               	movf	??_configureController,w
  5691  06DF  00D1               	movwf	configureController@rxMin
  5692  06E0                     l2883:	
  5693                           
  5694                           ;Controller.c: 239: if (digitalStateFirst == 0x6F && digitalStateSecond == 0x3F) {
  5695  06E0  306F               	movlw	111
  5696  06E1  0664               	xorwf	_digitalStateFirst,w
  5697  06E2  1D03               	btfss	3,2
  5698  06E3  2EE5               	goto	u2671
  5699  06E4  2EE6               	goto	u2670
  5700  06E5                     u2671:	
  5701  06E5  2E4E               	goto	l2855
  5702  06E6                     u2670:	
  5703  06E6                     l2885:	
  5704  06E6  303F               	movlw	63
  5705  06E7  0663               	xorwf	_digitalStateSecond,w
  5706  06E8  1D03               	btfss	3,2
  5707  06E9  2EEB               	goto	u2681
  5708  06EA  2EEC               	goto	u2680
  5709  06EB                     u2681:	
  5710  06EB  2E4E               	goto	l2855
  5711  06EC                     u2680:	
  5712  06EC                     l2887:	
  5713                           
  5714                           ;Controller.c: 241: lxMin = 0;
  5715  06EC  01CD               	clrf	configureController@lxMin
  5716  06ED                     l2889:	
  5717                           
  5718                           ;Controller.c: 242: lxMax = 255;
  5719  06ED  30FF               	movlw	255
  5720  06EE  00CC               	movwf	??_configureController
  5721  06EF  084C               	movf	??_configureController,w
  5722  06F0  00CE               	movwf	configureController@lxMax
  5723  06F1                     l2891:	
  5724                           
  5725                           ;Controller.c: 243: lyMin = 0;
  5726  06F1  01CF               	clrf	configureController@lyMin
  5727                           
  5728                           ;Controller.c: 244: lyMax = 255;
  5729  06F2  30FF               	movlw	255
  5730  06F3  00CC               	movwf	??_configureController
  5731  06F4  084C               	movf	??_configureController,w
  5732  06F5  00D0               	movwf	configureController@lyMax
  5733  06F6                     l2893:	
  5734                           
  5735                           ;Controller.c: 245: rxMin = 0;
  5736  06F6  01D1               	clrf	configureController@rxMin
  5737  06F7                     l2895:	
  5738                           
  5739                           ;Controller.c: 246: rxMax = 255;
  5740  06F7  30FF               	movlw	255
  5741  06F8  00CC               	movwf	??_configureController
  5742  06F9  084C               	movf	??_configureController,w
  5743  06FA  00D2               	movwf	configureController@rxMax
  5744                           
  5745                           ;Controller.c: 247: ryMin = 0;
  5746  06FB  01D3               	clrf	configureController@ryMin
  5747  06FC                     l2897:	
  5748                           
  5749                           ;Controller.c: 248: ryMax = 255;
  5750  06FC  30FF               	movlw	255
  5751  06FD  00CC               	movwf	??_configureController
  5752  06FE  084C               	movf	??_configureController,w
  5753  06FF  00D4               	movwf	configureController@ryMax
  5754  0700                     l2899:	
  5755                           ;Controller.c: 249: break;
  5756                           
  5757                           
  5758                           ;Controller.c: 250: };Controller.c: 251: };Controller.c: 253: eepromWrite(0x60, lxMin);
  5759  0700  084D               	movf	configureController@lxMin,w
  5760  0701  00CC               	movwf	??_configureController
  5761  0702  084C               	movf	??_configureController,w
  5762  0703  00A0               	movwf	eepromWrite@data
  5763  0704  3060               	movlw	96
  5764  0705  318D  25C8  3185   	fcall	_eepromWrite
  5765                           
  5766                           ;Controller.c: 254: eepromWrite(0x61, lxMax);
  5767  0708  0020               	movlb	0	; select bank0
  5768  0709  084E               	movf	configureController@lxMax,w
  5769  070A  00CC               	movwf	??_configureController
  5770  070B  084C               	movf	??_configureController,w
  5771  070C  00A0               	movwf	eepromWrite@data
  5772  070D  3061               	movlw	97
  5773  070E  318D  25C8  3185   	fcall	_eepromWrite
  5774                           
  5775                           ;Controller.c: 255: eepromWrite(0x62, lyMin);
  5776  0711  0020               	movlb	0	; select bank0
  5777  0712  084F               	movf	configureController@lyMin,w
  5778  0713  00CC               	movwf	??_configureController
  5779  0714  084C               	movf	??_configureController,w
  5780  0715  00A0               	movwf	eepromWrite@data
  5781  0716  3062               	movlw	98
  5782  0717  318D  25C8  3185   	fcall	_eepromWrite
  5783                           
  5784                           ;Controller.c: 256: eepromWrite(0x63, lyMax);
  5785  071A  0020               	movlb	0	; select bank0
  5786  071B  0850               	movf	configureController@lyMax,w
  5787  071C  00CC               	movwf	??_configureController
  5788  071D  084C               	movf	??_configureController,w
  5789  071E  00A0               	movwf	eepromWrite@data
  5790  071F  3063               	movlw	99
  5791  0720  318D  25C8  3185   	fcall	_eepromWrite
  5792                           
  5793                           ;Controller.c: 257: eepromWrite(0x64, rxMin);
  5794  0723  0020               	movlb	0	; select bank0
  5795  0724  0851               	movf	configureController@rxMin,w
  5796  0725  00CC               	movwf	??_configureController
  5797  0726  084C               	movf	??_configureController,w
  5798  0727  00A0               	movwf	eepromWrite@data
  5799  0728  3064               	movlw	100
  5800  0729  318D  25C8  3185   	fcall	_eepromWrite
  5801                           
  5802                           ;Controller.c: 258: eepromWrite(0x65, rxMax);
  5803  072C  0020               	movlb	0	; select bank0
  5804  072D  0852               	movf	configureController@rxMax,w
  5805  072E  00CC               	movwf	??_configureController
  5806  072F  084C               	movf	??_configureController,w
  5807  0730  00A0               	movwf	eepromWrite@data
  5808  0731  3065               	movlw	101
  5809  0732  318D  25C8  3185   	fcall	_eepromWrite
  5810                           
  5811                           ;Controller.c: 259: eepromWrite(0x66, ryMin);
  5812  0735  0020               	movlb	0	; select bank0
  5813  0736  0853               	movf	configureController@ryMin,w
  5814  0737  00CC               	movwf	??_configureController
  5815  0738  084C               	movf	??_configureController,w
  5816  0739  00A0               	movwf	eepromWrite@data
  5817  073A  3066               	movlw	102
  5818  073B  318D  25C8  3185   	fcall	_eepromWrite
  5819                           
  5820                           ;Controller.c: 260: eepromWrite(0x67, ryMax);
  5821  073E  0020               	movlb	0	; select bank0
  5822  073F  0854               	movf	configureController@ryMax,w
  5823  0740  00CC               	movwf	??_configureController
  5824  0741  084C               	movf	??_configureController,w
  5825  0742  00A0               	movwf	eepromWrite@data
  5826  0743  3067               	movlw	103
  5827  0744  318D  25C8  3185   	fcall	_eepromWrite
  5828  0747                     l2901:	
  5829                           
  5830                           ;Controller.c: 262: lutInit();
  5831  0747  3182  2290  3185   	fcall	_lutInit
  5832  074A                     l2903:	
  5833                           
  5834                           ;Controller.c: 264: INTCONbits.GIE = 1;
  5835  074A  178B               	bsf	11,7	;volatile
  5836  074B                     l2905:	
  5837                           
  5838                           ;Controller.c: 265: INTCONbits.PEIE = 1;
  5839  074B  170B               	bsf	11,6	;volatile
  5840  074C                     l372:	
  5841  074C  0008               	return
  5842  074D                     __end_of_configureController:	
  5843                           
  5844                           	psect	text6
  5845  0481                     __ptext6:	
  5846 ;; *************** function _readController *****************
  5847 ;; Defined at:
  5848 ;;		line 16 in file "Controller.c"
  5849 ;; Parameters:    Size  Location     Type
  5850 ;;  analogMode      1    wreg     unsigned char 
  5851 ;; Auto vars:     Size  Location     Type
  5852 ;;  analogMode      1    2[BANK0 ] unsigned char 
  5853 ;; Return value:  Size  Location     Type
  5854 ;;                  1    wreg      void 
  5855 ;; Registers used:
  5856 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5857 ;; Tracked objects:
  5858 ;;		On entry : 0/0
  5859 ;;		On exit  : 0/0
  5860 ;;		Unchanged: 0/0
  5861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5863 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5864 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5865 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5866 ;;Total ram usage:        3 bytes
  5867 ;; Hardware stack levels used:    1
  5868 ;; Hardware stack levels required when called:    3
  5869 ;; This function calls:
  5870 ;;		Nothing
  5871 ;; This function is called by:
  5872 ;;		_main
  5873 ;;		_configureController
  5874 ;; This function uses a non-reentrant model
  5875 ;;
  5876                           
  5877                           
  5878                           ;psect for function _readController
  5879  0481                     _readController:	
  5880                           
  5881                           ;incstack = 0
  5882                           ; Regs used in _readController: [wreg-fsr1h+status,2+status,0]
  5883                           ;readController@analogMode stored from wreg
  5884  0481  0020               	movlb	0	; select bank0
  5885  0482  00A2               	movwf	readController@analogMode
  5886  0483                     l2679:	
  5887                           
  5888                           ;Controller.c: 19: AN_temp = RD4;
  5889  0483  3000               	movlw	0
  5890  0484  1A0F               	btfsc	15,4	;volatile
  5891  0485  3001               	movlw	1
  5892  0486  00FB               	movwf	_AN_temp
  5893  0487                     l2681:	
  5894                           
  5895                           ;Controller.c: 20: if(AN_temp ^ AN_prev) AN_timer = 0;
  5896  0487  087B               	movf	_AN_temp,w
  5897  0488  065A               	xorwf	_AN_prev,w
  5898  0489  1903               	btfsc	3,2
  5899  048A  2C8C               	goto	u2331
  5900  048B  2C8D               	goto	u2330
  5901  048C                     u2331:	
  5902  048C  2C8F               	goto	l2685
  5903  048D                     u2330:	
  5904  048D                     l2683:	
  5905  048D  01E6               	clrf	_AN_timer
  5906  048E  2C99               	goto	l2689
  5907  048F                     l2685:	
  5908                           
  5909                           ;Controller.c: 21: else if(AN_timer < 4) AN_timer++;
  5910  048F  3004               	movlw	4
  5911  0490  0266               	subwf	_AN_timer,w
  5912  0491  1803               	skipnc
  5913  0492  2C94               	goto	u2341
  5914  0493  2C95               	goto	u2340
  5915  0494                     u2341:	
  5916  0494  2C99               	goto	l2689
  5917  0495                     u2340:	
  5918  0495                     l2687:	
  5919  0495  3001               	movlw	1
  5920  0496  00A0               	movwf	??_readController
  5921  0497  0820               	movf	??_readController,w
  5922  0498  07E6               	addwf	_AN_timer,f
  5923  0499                     l2689:	
  5924                           
  5925                           ;Controller.c: 22: if(AN_timer > 3) AN_btn = AN_temp;
  5926  0499  3004               	movlw	4
  5927  049A  0266               	subwf	_AN_timer,w
  5928  049B  1C03               	skipc
  5929  049C  2C9E               	goto	u2351
  5930  049D  2C9F               	goto	u2350
  5931  049E                     u2351:	
  5932  049E  2CA3               	goto	l308
  5933  049F                     u2350:	
  5934  049F                     l2691:	
  5935  049F  087B               	movf	_AN_temp,w
  5936  04A0  00A0               	movwf	??_readController
  5937  04A1  0820               	movf	??_readController,w
  5938  04A2  00E5               	movwf	_AN_btn
  5939  04A3                     l308:	
  5940                           
  5941                           ;Controller.c: 23: AN_prev = AN_temp;
  5942  04A3  087B               	movf	_AN_temp,w
  5943  04A4  00A0               	movwf	??_readController
  5944  04A5  0820               	movf	??_readController,w
  5945  04A6  00DA               	movwf	_AN_prev
  5946  04A7                     l2693:	
  5947                           
  5948                           ;Controller.c: 26: DigitalControllerByte1[DDown] = RA7;
  5949  04A7  3000               	movlw	0
  5950  04A8  1B8C               	btfsc	12,7	;volatile
  5951  04A9  3001               	movlw	1
  5952  04AA  0021               	movlb	1	; select bank1
  5953  04AB  00C1               	movwf	(_DigitalControllerByte1^(0+128)+1)
  5954  04AC                     l2695:	
  5955                           
  5956                           ;Controller.c: 27: DigitalControllerByte1[DUp] = RA6;
  5957  04AC  3000               	movlw	0
  5958  04AD  0020               	movlb	0	; select bank0
  5959  04AE  1B0C               	btfsc	12,6	;volatile
  5960  04AF  3001               	movlw	1
  5961  04B0  0021               	movlb	1	; select bank1
  5962  04B1  00C3               	movwf	(_DigitalControllerByte1^(0+128)+3)
  5963  04B2                     l2697:	
  5964                           
  5965                           ;Controller.c: 28: DigitalControllerByte1[DLeft] = RB0;
  5966  04B2  3000               	movlw	0
  5967  04B3  0020               	movlb	0	; select bank0
  5968  04B4  180D               	btfsc	13,0	;volatile
  5969  04B5  3001               	movlw	1
  5970  04B6  0021               	movlb	1	; select bank1
  5971  04B7  00C0               	movwf	_DigitalControllerByte1^(0+128)
  5972  04B8                     l2699:	
  5973                           
  5974                           ;Controller.c: 29: DigitalControllerByte1[DRight] = RB1;
  5975  04B8  3000               	movlw	0
  5976  04B9  0020               	movlb	0	; select bank0
  5977  04BA  188D               	btfsc	13,1	;volatile
  5978  04BB  3001               	movlw	1
  5979  04BC  0021               	movlb	1	; select bank1
  5980  04BD  00C2               	movwf	(_DigitalControllerByte1^(0+128)+2)
  5981  04BE                     l2701:	
  5982                           
  5983                           ;Controller.c: 30: DigitalControllerByte1[R3] = RD0;
  5984  04BE  3000               	movlw	0
  5985  04BF  0020               	movlb	0	; select bank0
  5986  04C0  180F               	btfsc	15,0	;volatile
  5987  04C1  3001               	movlw	1
  5988  04C2  0021               	movlb	1	; select bank1
  5989  04C3  00C5               	movwf	(_DigitalControllerByte1^(0+128)+5)
  5990  04C4                     l2703:	
  5991                           
  5992                           ;Controller.c: 31: DigitalControllerByte1[L3] = RC2;
  5993  04C4  3000               	movlw	0
  5994  04C5  0020               	movlb	0	; select bank0
  5995  04C6  190E               	btfsc	14,2	;volatile
  5996  04C7  3001               	movlw	1
  5997  04C8  0021               	movlb	1	; select bank1
  5998  04C9  00C6               	movwf	(_DigitalControllerByte1^(0+128)+6)
  5999  04CA                     l2705:	
  6000                           
  6001                           ;Controller.c: 32: DigitalControllerByte1[Start] = RB6;
  6002  04CA  3000               	movlw	0
  6003  04CB  0020               	movlb	0	; select bank0
  6004  04CC  1B0D               	btfsc	13,6	;volatile
  6005  04CD  3001               	movlw	1
  6006  04CE  0021               	movlb	1	; select bank1
  6007  04CF  00C4               	movwf	(_DigitalControllerByte1^(0+128)+4)
  6008  04D0                     l2707:	
  6009                           
  6010                           ;Controller.c: 33: DigitalControllerByte1[Select] = RB7;
  6011  04D0  3000               	movlw	0
  6012  04D1  0020               	movlb	0	; select bank0
  6013  04D2  1B8D               	btfsc	13,7	;volatile
  6014  04D3  3001               	movlw	1
  6015  04D4  0021               	movlb	1	; select bank1
  6016  04D5  00C7               	movwf	(_DigitalControllerByte1^(0+128)+7)
  6017  04D6                     l2709:	
  6018                           
  6019                           ;Controller.c: 35: DigitalControllerByte2[Square] = RA0;
  6020  04D6  3000               	movlw	0
  6021  04D7  0020               	movlb	0	; select bank0
  6022  04D8  180C               	btfsc	12,0	;volatile
  6023  04D9  3001               	movlw	1
  6024  04DA  0021               	movlb	1	; select bank1
  6025  04DB  00B8               	movwf	_DigitalControllerByte2^(0+128)
  6026  04DC                     l2711:	
  6027                           
  6028                           ;Controller.c: 36: DigitalControllerByte2[Circle] = RA3;
  6029  04DC  3000               	movlw	0
  6030  04DD  0020               	movlb	0	; select bank0
  6031  04DE  198C               	btfsc	12,3	;volatile
  6032  04DF  3001               	movlw	1
  6033  04E0  0021               	movlb	1	; select bank1
  6034  04E1  00BA               	movwf	(_DigitalControllerByte2^(0+128)+2)
  6035  04E2                     l2713:	
  6036                           
  6037                           ;Controller.c: 37: DigitalControllerByte2[X] = RA2;
  6038  04E2  3000               	movlw	0
  6039  04E3  0020               	movlb	0	; select bank0
  6040  04E4  190C               	btfsc	12,2	;volatile
  6041  04E5  3001               	movlw	1
  6042  04E6  0021               	movlb	1	; select bank1
  6043  04E7  00B9               	movwf	(_DigitalControllerByte2^(0+128)+1)
  6044  04E8                     l2715:	
  6045                           
  6046                           ;Controller.c: 38: DigitalControllerByte2[Triangle] = RA1;
  6047  04E8  3000               	movlw	0
  6048  04E9  0020               	movlb	0	; select bank0
  6049  04EA  188C               	btfsc	12,1	;volatile
  6050  04EB  3001               	movlw	1
  6051  04EC  0021               	movlb	1	; select bank1
  6052  04ED  00BB               	movwf	(_DigitalControllerByte2^(0+128)+3)
  6053  04EE                     l2717:	
  6054                           
  6055                           ;Controller.c: 39: DigitalControllerByte2[R1] = RB4;
  6056  04EE  3000               	movlw	0
  6057  04EF  0020               	movlb	0	; select bank0
  6058  04F0  1A0D               	btfsc	13,4	;volatile
  6059  04F1  3001               	movlw	1
  6060  04F2  0021               	movlb	1	; select bank1
  6061  04F3  00BC               	movwf	(_DigitalControllerByte2^(0+128)+4)
  6062  04F4                     l2719:	
  6063                           
  6064                           ;Controller.c: 40: DigitalControllerByte2[R2] = RB5;
  6065  04F4  3000               	movlw	0
  6066  04F5  0020               	movlb	0	; select bank0
  6067  04F6  1A8D               	btfsc	13,5	;volatile
  6068  04F7  3001               	movlw	1
  6069  04F8  0021               	movlb	1	; select bank1
  6070  04F9  00BE               	movwf	(_DigitalControllerByte2^(0+128)+6)
  6071  04FA                     l2721:	
  6072                           
  6073                           ;Controller.c: 41: DigitalControllerByte2[L1] = RB2;
  6074  04FA  3000               	movlw	0
  6075  04FB  0020               	movlb	0	; select bank0
  6076  04FC  190D               	btfsc	13,2	;volatile
  6077  04FD  3001               	movlw	1
  6078  04FE  0021               	movlb	1	; select bank1
  6079  04FF  00BD               	movwf	(_DigitalControllerByte2^(0+128)+5)
  6080  0500                     l2723:	
  6081                           
  6082                           ;Controller.c: 42: DigitalControllerByte2[L2] = RB3;
  6083  0500  3000               	movlw	0
  6084  0501  0020               	movlb	0	; select bank0
  6085  0502  198D               	btfsc	13,3	;volatile
  6086  0503  3001               	movlw	1
  6087  0504  0021               	movlb	1	; select bank1
  6088  0505  00BF               	movwf	(_DigitalControllerByte2^(0+128)+7)
  6089                           
  6090                           ;Controller.c: 45: if (index > Select) {
  6091  0506  3008               	movlw	8
  6092  0507  027A               	subwf	_index,w
  6093  0508  1C03               	skipc
  6094  0509  2D0B               	goto	u2361
  6095  050A  2D0C               	goto	u2360
  6096  050B                     u2361:	
  6097  050B  2D0D               	goto	l2727
  6098  050C                     u2360:	
  6099  050C                     l2725:	
  6100                           
  6101                           ;Controller.c: 46: index = 0;
  6102  050C  01FA               	clrf	_index
  6103  050D                     l2727:	
  6104                           
  6105                           ;Controller.c: 47: };Controller.c: 50: if (!DigitalControllerByte1[index]) {
  6106  050D  087A               	movf	_index,w
  6107  050E  3EC0               	addlw	(low (_DigitalControllerByte1| 0))& (0+255)
  6108  050F  0086               	movwf	6
  6109  0510  0187               	clrf	7
  6110  0511  0801               	movf	1,w
  6111  0512  1D03               	btfss	3,2
  6112  0513  2D15               	goto	u2371
  6113  0514  2D16               	goto	u2370
  6114  0515                     u2371:	
  6115  0515  2D1F               	goto	l310
  6116  0516                     u2370:	
  6117  0516                     l2729:	
  6118                           
  6119                           ;Controller.c: 51: IndexDigitalByte1[index]++;
  6120  0516  3001               	movlw	1
  6121  0517  0020               	movlb	0	; select bank0
  6122  0518  00A0               	movwf	??_readController
  6123  0519  087A               	movf	_index,w
  6124  051A  3EA8               	addlw	(low (_IndexDigitalByte1| 0))& (0+255)
  6125  051B  0086               	movwf	6
  6126  051C  0187               	clrf	7
  6127  051D  0820               	movf	??_readController,w
  6128  051E  0781               	addwf	1,f
  6129  051F                     l310:	
  6130                           
  6131                           ;Controller.c: 52: };Controller.c: 53: if (!DigitalControllerByte2[index]) {
  6132  051F  087A               	movf	_index,w
  6133  0520  3EB8               	addlw	(low (_DigitalControllerByte2| 0))& (0+255)
  6134  0521  0086               	movwf	6
  6135  0522  0187               	clrf	7
  6136  0523  0801               	movf	1,w
  6137  0524  1D03               	btfss	3,2
  6138  0525  2D27               	goto	u2381
  6139  0526  2D28               	goto	u2380
  6140  0527                     u2381:	
  6141  0527  2D31               	goto	l2733
  6142  0528                     u2380:	
  6143  0528                     l2731:	
  6144                           
  6145                           ;Controller.c: 54: IndexDigitalByte2[index]++;
  6146  0528  3001               	movlw	1
  6147  0529  0020               	movlb	0	; select bank0
  6148  052A  00A0               	movwf	??_readController
  6149  052B  087A               	movf	_index,w
  6150  052C  3EA0               	addlw	(low (_IndexDigitalByte2| 0))& (0+255)
  6151  052D  0086               	movwf	6
  6152  052E  0187               	clrf	7
  6153  052F  0820               	movf	??_readController,w
  6154  0530  0781               	addwf	1,f
  6155  0531                     l2733:	
  6156                           
  6157                           ;Controller.c: 55: };Controller.c: 58: if (DigitalControllerByte1[index] ^ PreviousDigit
      +                          alByte1[index]) {
  6158  0531  087A               	movf	_index,w
  6159  0532  3EB0               	addlw	(low (_PreviousDigitalByte1| 0))& (0+255)
  6160  0533  0086               	movwf	6
  6161  0534  0187               	clrf	7
  6162  0535  087A               	movf	_index,w
  6163  0536  3EC0               	addlw	(low (_DigitalControllerByte1| 0))& (0+255)
  6164  0537  0084               	movwf	4
  6165  0538  0185               	clrf	5
  6166  0539  0800               	movf	0,w
  6167  053A  0601               	xorwf	1,w
  6168  053B  1903               	btfsc	3,2
  6169  053C  2D3E               	goto	u2391
  6170  053D  2D3F               	goto	u2390
  6171  053E                     u2391:	
  6172  053E  2D5A               	goto	l2743
  6173  053F                     u2390:	
  6174  053F                     l2735:	
  6175                           
  6176                           ;Controller.c: 59: IndexDigitalByte1[index] = 0;
  6177  053F  087A               	movf	_index,w
  6178  0540  3EA8               	addlw	(low (_IndexDigitalByte1| 0))& (0+255)
  6179  0541  0086               	movwf	6
  6180  0542  0187               	clrf	7
  6181  0543  0181               	clrf	1
  6182  0544                     l2737:	
  6183                           
  6184                           ;Controller.c: 60: digitalStateFirst |= 1 << index;
  6185  0544  3001               	movlw	1
  6186  0545  0020               	movlb	0	; select bank0
  6187  0546  00A0               	movwf	??_readController
  6188  0547  0A7A               	incf	_index,w
  6189  0548  2D4A               	goto	u2404
  6190  0549                     u2405:	
  6191  0549  35A0               	lslf	??_readController,f
  6192  054A                     u2404:	
  6193  054A  0B89               	decfsz	9,f
  6194  054B  2D49               	goto	u2405
  6195  054C  0820               	movf	??_readController,w
  6196  054D  00A1               	movwf	??_readController+1
  6197  054E  0821               	movf	??_readController+1,w
  6198  054F  04E4               	iorwf	_digitalStateFirst,f
  6199  0550                     l2739:	
  6200                           
  6201                           ;Controller.c: 62: if (analogMode >= 1) {
  6202  0550  0822               	movf	readController@analogMode,w
  6203  0551  1903               	btfsc	3,2
  6204  0552  2D54               	goto	u2411
  6205  0553  2D55               	goto	u2410
  6206  0554                     u2411:	
  6207  0554  2D5A               	goto	l2743
  6208  0555                     u2410:	
  6209  0555                     l2741:	
  6210                           
  6211                           ;Controller.c: 63: analogStateFirst[index] = 0x00;
  6212  0555  087A               	movf	_index,w
  6213  0556  3ED0               	addlw	(low (_analogStateFirst| 0))& (0+255)
  6214  0557  0086               	movwf	6
  6215  0558  0187               	clrf	7
  6216  0559  0181               	clrf	1
  6217  055A                     l2743:	
  6218                           
  6219                           ;Controller.c: 64: };Controller.c: 66: };Controller.c: 67: if (DigitalControllerByte2[in
      +                          dex] ^ PreviousDigitalByte2[index]) {
  6220  055A  087A               	movf	_index,w
  6221  055B  3E20               	addlw	(low (_PreviousDigitalByte2| (0+256)))& (0+255)
  6222  055C  0086               	movwf	6
  6223  055D  3001               	movlw	1	; select bank2/3
  6224  055E  0087               	movwf	7
  6225  055F  087A               	movf	_index,w
  6226  0560  3EB8               	addlw	(low (_DigitalControllerByte2| 0))& (0+255)
  6227  0561  0084               	movwf	4
  6228  0562  0185               	clrf	5
  6229  0563  0800               	movf	0,w
  6230  0564  0601               	xorwf	1,w
  6231  0565  1903               	btfsc	3,2
  6232  0566  2D68               	goto	u2421
  6233  0567  2D69               	goto	u2420
  6234  0568                     u2421:	
  6235  0568  2D84               	goto	l314
  6236  0569                     u2420:	
  6237  0569                     l2745:	
  6238                           
  6239                           ;Controller.c: 68: IndexDigitalByte2[index] = 0;
  6240  0569  087A               	movf	_index,w
  6241  056A  3EA0               	addlw	(low (_IndexDigitalByte2| 0))& (0+255)
  6242  056B  0086               	movwf	6
  6243  056C  0187               	clrf	7
  6244  056D  0181               	clrf	1
  6245  056E                     l2747:	
  6246                           
  6247                           ;Controller.c: 69: digitalStateSecond |= 1 << index;
  6248  056E  3001               	movlw	1
  6249  056F  0020               	movlb	0	; select bank0
  6250  0570  00A0               	movwf	??_readController
  6251  0571  0A7A               	incf	_index,w
  6252  0572  2D74               	goto	u2434
  6253  0573                     u2435:	
  6254  0573  35A0               	lslf	??_readController,f
  6255  0574                     u2434:	
  6256  0574  0B89               	decfsz	9,f
  6257  0575  2D73               	goto	u2435
  6258  0576  0820               	movf	??_readController,w
  6259  0577  00A1               	movwf	??_readController+1
  6260  0578  0821               	movf	??_readController+1,w
  6261  0579  04E3               	iorwf	_digitalStateSecond,f
  6262  057A                     l2749:	
  6263                           
  6264                           ;Controller.c: 71: if (analogMode >= 1) {
  6265  057A  0822               	movf	readController@analogMode,w
  6266  057B  1903               	btfsc	3,2
  6267  057C  2D7E               	goto	u2441
  6268  057D  2D7F               	goto	u2440
  6269  057E                     u2441:	
  6270  057E  2D84               	goto	l314
  6271  057F                     u2440:	
  6272  057F                     l2751:	
  6273                           
  6274                           ;Controller.c: 72: analogStateSecond[index] = 0x00;
  6275  057F  087A               	movf	_index,w
  6276  0580  3EC8               	addlw	(low (_analogStateSecond| 0))& (0+255)
  6277  0581  0086               	movwf	6
  6278  0582  0187               	clrf	7
  6279  0583  0181               	clrf	1
  6280  0584                     l314:	
  6281  0584  087A               	movf	_index,w
  6282  0585  3EA8               	addlw	(low (_IndexDigitalByte1| 0))& (0+255)
  6283  0586  0086               	movwf	6
  6284  0587  0187               	clrf	7
  6285  0588  3003               	movlw	3
  6286  0589  0201               	subwf	1,w
  6287  058A  1C03               	skipc
  6288  058B  2D8D               	goto	u2451
  6289  058C  2D8E               	goto	u2450
  6290  058D                     u2451:	
  6291  058D  2DA8               	goto	l316
  6292  058E                     u2450:	
  6293  058E                     l2753:	
  6294                           
  6295                           ;Controller.c: 79: digitalStateFirst &= ~(1 << index);
  6296  058E  3001               	movlw	1
  6297  058F  0020               	movlb	0	; select bank0
  6298  0590  00A0               	movwf	??_readController
  6299  0591  0A7A               	incf	_index,w
  6300  0592  2D94               	goto	u2464
  6301  0593                     u2465:	
  6302  0593  35A0               	lslf	??_readController,f
  6303  0594                     u2464:	
  6304  0594  0B89               	decfsz	9,f
  6305  0595  2D93               	goto	u2465
  6306  0596  0820               	movf	??_readController,w
  6307  0597  3AFF               	xorlw	255
  6308  0598  00A1               	movwf	??_readController+1
  6309  0599  0821               	movf	??_readController+1,w
  6310  059A  05E4               	andwf	_digitalStateFirst,f
  6311                           
  6312                           ;Controller.c: 81: if (analogMode >= 1) {
  6313  059B  0822               	movf	readController@analogMode,w
  6314  059C  1903               	btfsc	3,2
  6315  059D  2D9F               	goto	u2471
  6316  059E  2DA0               	goto	u2470
  6317  059F                     u2471:	
  6318  059F  2DA8               	goto	l316
  6319  05A0                     u2470:	
  6320  05A0                     l2755:	
  6321                           
  6322                           ;Controller.c: 82: analogStateFirst[index] = 0xFF;
  6323  05A0  30FF               	movlw	255
  6324  05A1  00A0               	movwf	??_readController
  6325  05A2  087A               	movf	_index,w
  6326  05A3  3ED0               	addlw	(low (_analogStateFirst| 0))& (0+255)
  6327  05A4  0086               	movwf	6
  6328  05A5  0187               	clrf	7
  6329  05A6  0820               	movf	??_readController,w
  6330  05A7  0081               	movwf	1
  6331  05A8                     l316:	
  6332  05A8  087A               	movf	_index,w
  6333  05A9  3EA0               	addlw	(low (_IndexDigitalByte2| 0))& (0+255)
  6334  05AA  0086               	movwf	6
  6335  05AB  0187               	clrf	7
  6336  05AC  3003               	movlw	3
  6337  05AD  0201               	subwf	1,w
  6338  05AE  1C03               	skipc
  6339  05AF  2DB1               	goto	u2481
  6340  05B0  2DB2               	goto	u2480
  6341  05B1                     u2481:	
  6342  05B1  2DCC               	goto	l318
  6343  05B2                     u2480:	
  6344  05B2                     l2757:	
  6345                           
  6346                           ;Controller.c: 87: digitalStateSecond &= ~(1 << index);
  6347  05B2  3001               	movlw	1
  6348  05B3  0020               	movlb	0	; select bank0
  6349  05B4  00A0               	movwf	??_readController
  6350  05B5  0A7A               	incf	_index,w
  6351  05B6  2DB8               	goto	u2494
  6352  05B7                     u2495:	
  6353  05B7  35A0               	lslf	??_readController,f
  6354  05B8                     u2494:	
  6355  05B8  0B89               	decfsz	9,f
  6356  05B9  2DB7               	goto	u2495
  6357  05BA  0820               	movf	??_readController,w
  6358  05BB  3AFF               	xorlw	255
  6359  05BC  00A1               	movwf	??_readController+1
  6360  05BD  0821               	movf	??_readController+1,w
  6361  05BE  05E3               	andwf	_digitalStateSecond,f
  6362                           
  6363                           ;Controller.c: 89: if (analogMode >= 1) {
  6364  05BF  0822               	movf	readController@analogMode,w
  6365  05C0  1903               	btfsc	3,2
  6366  05C1  2DC3               	goto	u2501
  6367  05C2  2DC4               	goto	u2500
  6368  05C3                     u2501:	
  6369  05C3  2DCC               	goto	l318
  6370  05C4                     u2500:	
  6371  05C4                     l2759:	
  6372                           
  6373                           ;Controller.c: 90: analogStateSecond[index] = 0xFF;
  6374  05C4  30FF               	movlw	255
  6375  05C5  00A0               	movwf	??_readController
  6376  05C6  087A               	movf	_index,w
  6377  05C7  3EC8               	addlw	(low (_analogStateSecond| 0))& (0+255)
  6378  05C8  0086               	movwf	6
  6379  05C9  0187               	clrf	7
  6380  05CA  0820               	movf	??_readController,w
  6381  05CB  0081               	movwf	1
  6382  05CC                     l318:	
  6383                           
  6384                           ;Controller.c: 91: };Controller.c: 93: };Controller.c: 96: PreviousDigitalByte1[index] =
      +                           DigitalControllerByte1[index];
  6385  05CC  087A               	movf	_index,w
  6386  05CD  3EC0               	addlw	(low (_DigitalControllerByte1| 0))& (0+255)
  6387  05CE  0086               	movwf	6
  6388  05CF  0187               	clrf	7
  6389  05D0  0801               	movf	1,w
  6390  05D1  0020               	movlb	0	; select bank0
  6391  05D2  00A0               	movwf	??_readController
  6392  05D3  087A               	movf	_index,w
  6393  05D4  3EB0               	addlw	(low (_PreviousDigitalByte1| 0))& (0+255)
  6394  05D5  0086               	movwf	6
  6395  05D6  0187               	clrf	7
  6396  05D7  0820               	movf	??_readController,w
  6397  05D8  0081               	movwf	1
  6398                           
  6399                           ;Controller.c: 97: PreviousDigitalByte2[index] = DigitalControllerByte2[index];
  6400  05D9  087A               	movf	_index,w
  6401  05DA  3EB8               	addlw	(low (_DigitalControllerByte2| 0))& (0+255)
  6402  05DB  0086               	movwf	6
  6403  05DC  0187               	clrf	7
  6404  05DD  0801               	movf	1,w
  6405  05DE  00A0               	movwf	??_readController
  6406  05DF  087A               	movf	_index,w
  6407  05E0  3E20               	addlw	(low (_PreviousDigitalByte2| (0+256)))& (0+255)
  6408  05E1  0086               	movwf	6
  6409  05E2  3001               	movlw	1	; select bank2/3
  6410  05E3  0087               	movwf	7
  6411  05E4  0820               	movf	??_readController,w
  6412  05E5  0081               	movwf	1
  6413  05E6                     l2761:	
  6414                           
  6415                           ;Controller.c: 99: index++;
  6416  05E6  3001               	movlw	1
  6417  05E7  00A0               	movwf	??_readController
  6418  05E8  0820               	movf	??_readController,w
  6419  05E9  07FA               	addwf	_index,f
  6420  05EA                     l320:	
  6421  05EA  0008               	return
  6422  05EB                     __end_of_readController:	
  6423                           
  6424                           	psect	text7
  6425  0E15                     __ptext7:	
  6426 ;; *************** function _readADC *****************
  6427 ;; Defined at:
  6428 ;;		line 165 in file "Controller.c"
  6429 ;; Parameters:    Size  Location     Type
  6430 ;;  channel         2    0[BANK0 ] int 
  6431 ;; Auto vars:     Size  Location     Type
  6432 ;;		None
  6433 ;; Return value:  Size  Location     Type
  6434 ;;                  2    0[BANK0 ] unsigned int 
  6435 ;; Registers used:
  6436 ;;		wreg, status,2, status,0
  6437 ;; Tracked objects:
  6438 ;;		On entry : 0/0
  6439 ;;		On exit  : 0/0
  6440 ;;		Unchanged: 0/0
  6441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6442 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6444 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6445 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6446 ;;Total ram usage:        9 bytes
  6447 ;; Hardware stack levels used:    1
  6448 ;; Hardware stack levels required when called:    3
  6449 ;; This function calls:
  6450 ;;		Nothing
  6451 ;; This function is called by:
  6452 ;;		_readControllerAnalog
  6453 ;;		_configureController
  6454 ;; This function uses a non-reentrant model
  6455 ;;
  6456                           
  6457                           
  6458                           ;psect for function _readADC
  6459  0E15                     _readADC:	
  6460  0E15                     l2763:	
  6461                           ;incstack = 0
  6462                           ; Regs used in _readADC: [wreg+status,2+status,0]
  6463                           
  6464                           
  6465                           ;Controller.c: 166: ADPCH = channel;
  6466  0E15  0020               	movlb	0	; select bank0
  6467  0E16  0820               	movf	readADC@channel,w
  6468  0E17  0021               	movlb	1	; select bank1
  6469  0E18  009E               	movwf	30	;volatile
  6470  0E19                     l2765:	
  6471                           
  6472                           ;Controller.c: 167: ADPRE = 0x00;
  6473  0E19  019C               	clrf	28	;volatile
  6474  0E1A                     l2767:	
  6475                           
  6476                           ;Controller.c: 168: ADACQ = 0x3F;
  6477  0E1A  303F               	movlw	63
  6478  0E1B  009D               	movwf	29	;volatile
  6479  0E1C                     l2769:	
  6480                           
  6481                           ;Controller.c: 170: ADCON0bits.ADGO = 1;
  6482  0E1C  1413               	bsf	19,0	;volatile
  6483  0E1D                     l347:	
  6484                           ;Controller.c: 171: while (ADCON0bits.ADGO);
  6485                           
  6486  0E1D  1813               	btfsc	19,0	;volatile
  6487  0E1E  2E20               	goto	u2511
  6488  0E1F  2E21               	goto	u2510
  6489  0E20                     u2511:	
  6490  0E20  2E1D               	goto	l347
  6491  0E21                     u2510:	
  6492  0E21                     l2771:	
  6493                           
  6494                           ;Controller.c: 173: return ((ADRESH << 6) | (ADRESL >> 2));
  6495  0E21  080C               	movf	12,w	;volatile
  6496  0E22  0020               	movlb	0	; select bank0
  6497  0E23  00A2               	movwf	??_readADC
  6498  0E24  3002               	movlw	2
  6499  0E25                     u2525:	
  6500  0E25  36A2               	lsrf	??_readADC,f
  6501  0E26  0B89               	decfsz	9,f
  6502  0E27  2E25               	goto	u2525
  6503  0E28  0822               	movf	??_readADC,w
  6504  0E29  00A3               	movwf	??_readADC+1
  6505  0E2A  01A4               	clrf	??_readADC+2
  6506  0E2B  0021               	movlb	1	; select bank1
  6507  0E2C  080D               	movf	13,w	;volatile
  6508  0E2D  0020               	movlb	0	; select bank0
  6509  0E2E  00A5               	movwf	??_readADC+3
  6510  0E2F  01A6               	clrf	??_readADC+4
  6511  0E30  3006               	movlw	6
  6512  0E31                     u2535:	
  6513  0E31  35A5               	lslf	??_readADC+3,f
  6514  0E32  0DA6               	rlf	??_readADC+4,f
  6515  0E33  0B89               	decfsz	9,f
  6516  0E34  2E31               	goto	u2535
  6517  0E35  0823               	movf	??_readADC+1,w
  6518  0E36  0425               	iorwf	??_readADC+3,w
  6519  0E37  00A7               	movwf	??_readADC+5
  6520  0E38  0824               	movf	??_readADC+2,w
  6521  0E39  0426               	iorwf	??_readADC+4,w
  6522  0E3A  00A8               	movwf	??_readADC+6
  6523  0E3B  0827               	movf	??_readADC+5,w
  6524  0E3C  00A0               	movwf	?_readADC
  6525  0E3D  0828               	movf	??_readADC+6,w
  6526  0E3E  00A1               	movwf	?_readADC+1
  6527  0E3F                     l350:	
  6528  0E3F  0008               	return
  6529  0E40                     __end_of_readADC:	
  6530                           
  6531                           	psect	text8
  6532  0290                     __ptext8:	
  6533 ;; *************** function _lutInit *****************
  6534 ;; Defined at:
  6535 ;;		line 107 in file "Controller.c"
  6536 ;; Parameters:    Size  Location     Type
  6537 ;;		None
  6538 ;; Auto vars:     Size  Location     Type
  6539 ;;  position        2   42[BANK0 ] int 
  6540 ;;  ryMax           1   41[BANK0 ] unsigned char 
  6541 ;;  ryMin           1   40[BANK0 ] unsigned char 
  6542 ;;  rxMax           1   39[BANK0 ] unsigned char 
  6543 ;;  rxMin           1   38[BANK0 ] unsigned char 
  6544 ;;  lyMax           1   37[BANK0 ] unsigned char 
  6545 ;;  lyMin           1   36[BANK0 ] unsigned char 
  6546 ;;  lxMax           1   35[BANK0 ] unsigned char 
  6547 ;;  lxMin           1   34[BANK0 ] unsigned char 
  6548 ;; Return value:  Size  Location     Type
  6549 ;;                  1    wreg      void 
  6550 ;; Registers used:
  6551 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6552 ;; Tracked objects:
  6553 ;;		On entry : 0/0
  6554 ;;		On exit  : 0/0
  6555 ;;		Unchanged: 0/0
  6556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6558 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6559 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6560 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6561 ;;Total ram usage:       19 bytes
  6562 ;; Hardware stack levels used:    1
  6563 ;; Hardware stack levels required when called:    5
  6564 ;; This function calls:
  6565 ;;		_Map
  6566 ;;		_eepromRead
  6567 ;; This function is called by:
  6568 ;;		_main
  6569 ;;		_configureController
  6570 ;; This function uses a non-reentrant model
  6571 ;;
  6572                           
  6573                           
  6574                           ;psect for function _lutInit
  6575  0290                     _lutInit:	
  6576  0290                     l2627:	
  6577                           ;incstack = 0
  6578                           ; Regs used in _lutInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6579                           
  6580                           
  6581                           ;Controller.c: 109: char lxMin = eepromRead(0x60);
  6582  0290  3060               	movlw	96
  6583  0291  318D  2538  3182   	fcall	_eepromRead
  6584  0294  0020               	movlb	0	; select bank0
  6585  0295  00B9               	movwf	??_lutInit
  6586  0296  0839               	movf	??_lutInit,w
  6587  0297  00C2               	movwf	lutInit@lxMin
  6588                           
  6589                           ;Controller.c: 110: char lxMax = eepromRead(0x61);
  6590  0298  3061               	movlw	97
  6591  0299  318D  2538  3182   	fcall	_eepromRead
  6592  029C  0020               	movlb	0	; select bank0
  6593  029D  00B9               	movwf	??_lutInit
  6594  029E  0839               	movf	??_lutInit,w
  6595  029F  00C3               	movwf	lutInit@lxMax
  6596                           
  6597                           ;Controller.c: 111: char lyMin = eepromRead(0x62);
  6598  02A0  3062               	movlw	98
  6599  02A1  318D  2538  3182   	fcall	_eepromRead
  6600  02A4  0020               	movlb	0	; select bank0
  6601  02A5  00B9               	movwf	??_lutInit
  6602  02A6  0839               	movf	??_lutInit,w
  6603  02A7  00C4               	movwf	lutInit@lyMin
  6604                           
  6605                           ;Controller.c: 112: char lyMax = eepromRead(0x63);
  6606  02A8  3063               	movlw	99
  6607  02A9  318D  2538  3182   	fcall	_eepromRead
  6608  02AC  0020               	movlb	0	; select bank0
  6609  02AD  00B9               	movwf	??_lutInit
  6610  02AE  0839               	movf	??_lutInit,w
  6611  02AF  00C5               	movwf	lutInit@lyMax
  6612                           
  6613                           ;Controller.c: 114: char rxMin = eepromRead(0x64);
  6614  02B0  3064               	movlw	100
  6615  02B1  318D  2538  3182   	fcall	_eepromRead
  6616  02B4  0020               	movlb	0	; select bank0
  6617  02B5  00B9               	movwf	??_lutInit
  6618  02B6  0839               	movf	??_lutInit,w
  6619  02B7  00C6               	movwf	lutInit@rxMin
  6620                           
  6621                           ;Controller.c: 115: char rxMax = eepromRead(0x65);
  6622  02B8  3065               	movlw	101
  6623  02B9  318D  2538  3182   	fcall	_eepromRead
  6624  02BC  0020               	movlb	0	; select bank0
  6625  02BD  00B9               	movwf	??_lutInit
  6626  02BE  0839               	movf	??_lutInit,w
  6627  02BF  00C7               	movwf	lutInit@rxMax
  6628                           
  6629                           ;Controller.c: 116: char ryMin = eepromRead(0x66);
  6630  02C0  3066               	movlw	102
  6631  02C1  318D  2538  3182   	fcall	_eepromRead
  6632  02C4  0020               	movlb	0	; select bank0
  6633  02C5  00B9               	movwf	??_lutInit
  6634  02C6  0839               	movf	??_lutInit,w
  6635  02C7  00C8               	movwf	lutInit@ryMin
  6636                           
  6637                           ;Controller.c: 117: char ryMax = eepromRead(0x67);
  6638  02C8  3067               	movlw	103
  6639  02C9  318D  2538  3182   	fcall	_eepromRead
  6640  02CC  0020               	movlb	0	; select bank0
  6641  02CD  00B9               	movwf	??_lutInit
  6642  02CE  0839               	movf	??_lutInit,w
  6643  02CF  00C9               	movwf	lutInit@ryMax
  6644  02D0                     l2629:	
  6645                           
  6646                           ;Controller.c: 119: for (int position = 0; position < 256; position++) {
  6647  02D0  01CA               	clrf	lutInit@position
  6648  02D1  01CB               	clrf	lutInit@position+1
  6649  02D2                     l2635:	
  6650                           
  6651                           ;Controller.c: 122: if (position < lxMin) {
  6652  02D2  0020               	movlb	0	; select bank0
  6653  02D3  084B               	movf	lutInit@position+1,w
  6654  02D4  3A80               	xorlw	128
  6655  02D5  00B9               	movwf	??_lutInit
  6656  02D6  3080               	movlw	128
  6657  02D7  0239               	subwf	??_lutInit,w
  6658  02D8  1D03               	skipz
  6659  02D9  2ADC               	goto	u2245
  6660  02DA  0842               	movf	lutInit@lxMin,w
  6661  02DB  024A               	subwf	lutInit@position,w
  6662  02DC                     u2245:	
  6663  02DC  1803               	skipnc
  6664  02DD  2ADF               	goto	u2241
  6665  02DE  2AE0               	goto	u2240
  6666  02DF                     u2241:	
  6667  02DF  2AED               	goto	l2639
  6668  02E0                     u2240:	
  6669  02E0                     l2637:	
  6670                           
  6671                           ;Controller.c: 124: lutLX[position] = 0;
  6672  02E0  30F0               	movlw	240
  6673  02E1  0020               	movlb	0	; select bank0
  6674  02E2  00B9               	movwf	??_lutInit
  6675  02E3  3026               	movlw	38
  6676  02E4  00BA               	movwf	??_lutInit+1
  6677  02E5  084A               	movf	lutInit@position,w
  6678  02E6  0739               	addwf	??_lutInit,w
  6679  02E7  0086               	movwf	6
  6680  02E8  084B               	movf	lutInit@position+1,w
  6681  02E9  3D3A               	addwfc	??_lutInit+1,w
  6682  02EA  0087               	movwf	7
  6683  02EB  0181               	clrf	1
  6684                           
  6685                           ;Controller.c: 125: } else if (position > lxMax) {
  6686  02EC  2B3A               	goto	l2645
  6687  02ED                     l2639:	
  6688  02ED  0020               	movlb	0	; select bank0
  6689  02EE  084B               	movf	lutInit@position+1,w
  6690  02EF  3A80               	xorlw	128
  6691  02F0  3C80               	sublw	128
  6692  02F1  1D03               	skipz
  6693  02F2  2AF5               	goto	u2255
  6694  02F3  084A               	movf	lutInit@position,w
  6695  02F4  0243               	subwf	lutInit@lxMax,w
  6696  02F5                     u2255:	
  6697  02F5  1803               	skipnc
  6698  02F6  2AF8               	goto	u2251
  6699  02F7  2AF9               	goto	u2250
  6700  02F8                     u2251:	
  6701  02F8  2B0B               	goto	l2643
  6702  02F9                     u2250:	
  6703  02F9                     l2641:	
  6704                           
  6705                           ;Controller.c: 126: lutLX[position] = 255;
  6706  02F9  30F0               	movlw	240
  6707  02FA  0020               	movlb	0	; select bank0
  6708  02FB  00B9               	movwf	??_lutInit
  6709  02FC  3026               	movlw	38
  6710  02FD  00BA               	movwf	??_lutInit+1
  6711  02FE  084A               	movf	lutInit@position,w
  6712  02FF  0739               	addwf	??_lutInit,w
  6713  0300  00BB               	movwf	??_lutInit+2
  6714  0301  084B               	movf	lutInit@position+1,w
  6715  0302  3D3A               	addwfc	??_lutInit+1,w
  6716  0303  00BC               	movwf	??_lutInit+3
  6717  0304  083B               	movf	??_lutInit+2,w
  6718  0305  0086               	movwf	6
  6719  0306  083C               	movf	??_lutInit+3,w
  6720  0307  0087               	movwf	7
  6721  0308  30FF               	movlw	255
  6722  0309  0081               	movwf	1
  6723                           
  6724                           ;Controller.c: 128: } else {
  6725  030A  2B3A               	goto	l2645
  6726  030B                     l2643:	
  6727                           
  6728                           ;Controller.c: 129: lutLX[position] = Map(position, lxMin, lxMax, 0, 255);
  6729  030B  0020               	movlb	0	; select bank0
  6730  030C  084B               	movf	lutInit@position+1,w
  6731  030D  00B0               	movwf	Map@x+1
  6732  030E  084A               	movf	lutInit@position,w
  6733  030F  00AF               	movwf	Map@x
  6734  0310  0842               	movf	lutInit@lxMin,w
  6735  0311  00B9               	movwf	??_lutInit
  6736  0312  01BA               	clrf	??_lutInit+1
  6737  0313  0839               	movf	??_lutInit,w
  6738  0314  00B1               	movwf	Map@inMin
  6739  0315  083A               	movf	??_lutInit+1,w
  6740  0316  00B2               	movwf	Map@inMin+1
  6741  0317  0843               	movf	lutInit@lxMax,w
  6742  0318  00BB               	movwf	??_lutInit+2
  6743  0319  01BC               	clrf	??_lutInit+3
  6744  031A  083B               	movf	??_lutInit+2,w
  6745  031B  00B3               	movwf	Map@inMax
  6746  031C  083C               	movf	??_lutInit+3,w
  6747  031D  00B4               	movwf	Map@inMax+1
  6748  031E  3000               	movlw	0
  6749  031F  00B5               	movwf	Map@outMin
  6750  0320  00B6               	movwf	Map@outMin+1
  6751  0321  30FF               	movlw	255
  6752  0322  00B7               	movwf	Map@outMax
  6753  0323  3000               	movlw	0
  6754  0324  00B8               	movwf	Map@outMax+1
  6755  0325  318D  25A6  3182   	fcall	_Map
  6756  0328  0020               	movlb	0	; select bank0
  6757  0329  00BD               	movwf	??_lutInit+4
  6758  032A  30F0               	movlw	240
  6759  032B  00BE               	movwf	??_lutInit+5
  6760  032C  3026               	movlw	38
  6761  032D  00BF               	movwf	??_lutInit+6
  6762  032E  084A               	movf	lutInit@position,w
  6763  032F  073E               	addwf	??_lutInit+5,w
  6764  0330  00C0               	movwf	??_lutInit+7
  6765  0331  084B               	movf	lutInit@position+1,w
  6766  0332  3D3F               	addwfc	??_lutInit+6,w
  6767  0333  00C1               	movwf	??_lutInit+8
  6768  0334  0840               	movf	??_lutInit+7,w
  6769  0335  0086               	movwf	6
  6770  0336  0841               	movf	??_lutInit+8,w
  6771  0337  0087               	movwf	7
  6772  0338  083D               	movf	??_lutInit+4,w
  6773  0339  0081               	movwf	1
  6774  033A                     l2645:	
  6775                           
  6776                           ;Controller.c: 130: };Controller.c: 133: if (position < lyMin) {
  6777  033A  084B               	movf	lutInit@position+1,w
  6778  033B  3A80               	xorlw	128
  6779  033C  00B9               	movwf	??_lutInit
  6780  033D  3080               	movlw	128
  6781  033E  0239               	subwf	??_lutInit,w
  6782  033F  1D03               	skipz
  6783  0340  2B43               	goto	u2265
  6784  0341  0844               	movf	lutInit@lyMin,w
  6785  0342  024A               	subwf	lutInit@position,w
  6786  0343                     u2265:	
  6787  0343  1803               	skipnc
  6788  0344  2B46               	goto	u2261
  6789  0345  2B47               	goto	u2260
  6790  0346                     u2261:	
  6791  0346  2B54               	goto	l2649
  6792  0347                     u2260:	
  6793  0347                     l2647:	
  6794                           
  6795                           ;Controller.c: 134: lutLY[position] = 0;
  6796  0347  30F0               	movlw	240
  6797  0348  0020               	movlb	0	; select bank0
  6798  0349  00B9               	movwf	??_lutInit
  6799  034A  3025               	movlw	37
  6800  034B  00BA               	movwf	??_lutInit+1
  6801  034C  084A               	movf	lutInit@position,w
  6802  034D  0739               	addwf	??_lutInit,w
  6803  034E  0086               	movwf	6
  6804  034F  084B               	movf	lutInit@position+1,w
  6805  0350  3D3A               	addwfc	??_lutInit+1,w
  6806  0351  0087               	movwf	7
  6807  0352  0181               	clrf	1
  6808                           
  6809                           ;Controller.c: 135: } else if (position > lyMax) {
  6810  0353  2BA1               	goto	l2655
  6811  0354                     l2649:	
  6812  0354  0020               	movlb	0	; select bank0
  6813  0355  084B               	movf	lutInit@position+1,w
  6814  0356  3A80               	xorlw	128
  6815  0357  3C80               	sublw	128
  6816  0358  1D03               	skipz
  6817  0359  2B5C               	goto	u2275
  6818  035A  084A               	movf	lutInit@position,w
  6819  035B  0245               	subwf	lutInit@lyMax,w
  6820  035C                     u2275:	
  6821  035C  1803               	skipnc
  6822  035D  2B5F               	goto	u2271
  6823  035E  2B60               	goto	u2270
  6824  035F                     u2271:	
  6825  035F  2B72               	goto	l2653
  6826  0360                     u2270:	
  6827  0360                     l2651:	
  6828                           
  6829                           ;Controller.c: 136: lutLY[position] = 255;
  6830  0360  30F0               	movlw	240
  6831  0361  0020               	movlb	0	; select bank0
  6832  0362  00B9               	movwf	??_lutInit
  6833  0363  3025               	movlw	37
  6834  0364  00BA               	movwf	??_lutInit+1
  6835  0365  084A               	movf	lutInit@position,w
  6836  0366  0739               	addwf	??_lutInit,w
  6837  0367  00BB               	movwf	??_lutInit+2
  6838  0368  084B               	movf	lutInit@position+1,w
  6839  0369  3D3A               	addwfc	??_lutInit+1,w
  6840  036A  00BC               	movwf	??_lutInit+3
  6841  036B  083B               	movf	??_lutInit+2,w
  6842  036C  0086               	movwf	6
  6843  036D  083C               	movf	??_lutInit+3,w
  6844  036E  0087               	movwf	7
  6845  036F  30FF               	movlw	255
  6846  0370  0081               	movwf	1
  6847                           
  6848                           ;Controller.c: 138: } else {
  6849  0371  2BA1               	goto	l2655
  6850  0372                     l2653:	
  6851                           
  6852                           ;Controller.c: 139: lutLY[position] = Map(position, lyMin, lyMax, 0, 255);
  6853  0372  0020               	movlb	0	; select bank0
  6854  0373  084B               	movf	lutInit@position+1,w
  6855  0374  00B0               	movwf	Map@x+1
  6856  0375  084A               	movf	lutInit@position,w
  6857  0376  00AF               	movwf	Map@x
  6858  0377  0844               	movf	lutInit@lyMin,w
  6859  0378  00B9               	movwf	??_lutInit
  6860  0379  01BA               	clrf	??_lutInit+1
  6861  037A  0839               	movf	??_lutInit,w
  6862  037B  00B1               	movwf	Map@inMin
  6863  037C  083A               	movf	??_lutInit+1,w
  6864  037D  00B2               	movwf	Map@inMin+1
  6865  037E  0845               	movf	lutInit@lyMax,w
  6866  037F  00BB               	movwf	??_lutInit+2
  6867  0380  01BC               	clrf	??_lutInit+3
  6868  0381  083B               	movf	??_lutInit+2,w
  6869  0382  00B3               	movwf	Map@inMax
  6870  0383  083C               	movf	??_lutInit+3,w
  6871  0384  00B4               	movwf	Map@inMax+1
  6872  0385  3000               	movlw	0
  6873  0386  00B5               	movwf	Map@outMin
  6874  0387  00B6               	movwf	Map@outMin+1
  6875  0388  30FF               	movlw	255
  6876  0389  00B7               	movwf	Map@outMax
  6877  038A  3000               	movlw	0
  6878  038B  00B8               	movwf	Map@outMax+1
  6879  038C  318D  25A6  3182   	fcall	_Map
  6880  038F  0020               	movlb	0	; select bank0
  6881  0390  00BD               	movwf	??_lutInit+4
  6882  0391  30F0               	movlw	240
  6883  0392  00BE               	movwf	??_lutInit+5
  6884  0393  3025               	movlw	37
  6885  0394  00BF               	movwf	??_lutInit+6
  6886  0395  084A               	movf	lutInit@position,w
  6887  0396  073E               	addwf	??_lutInit+5,w
  6888  0397  00C0               	movwf	??_lutInit+7
  6889  0398  084B               	movf	lutInit@position+1,w
  6890  0399  3D3F               	addwfc	??_lutInit+6,w
  6891  039A  00C1               	movwf	??_lutInit+8
  6892  039B  0840               	movf	??_lutInit+7,w
  6893  039C  0086               	movwf	6
  6894  039D  0841               	movf	??_lutInit+8,w
  6895  039E  0087               	movwf	7
  6896  039F  083D               	movf	??_lutInit+4,w
  6897  03A0  0081               	movwf	1
  6898  03A1                     l2655:	
  6899                           
  6900                           ;Controller.c: 140: };Controller.c: 143: if (position < rxMin) {
  6901  03A1  084B               	movf	lutInit@position+1,w
  6902  03A2  3A80               	xorlw	128
  6903  03A3  00B9               	movwf	??_lutInit
  6904  03A4  3080               	movlw	128
  6905  03A5  0239               	subwf	??_lutInit,w
  6906  03A6  1D03               	skipz
  6907  03A7  2BAA               	goto	u2285
  6908  03A8  0846               	movf	lutInit@rxMin,w
  6909  03A9  024A               	subwf	lutInit@position,w
  6910  03AA                     u2285:	
  6911  03AA  1803               	skipnc
  6912  03AB  2BAD               	goto	u2281
  6913  03AC  2BAE               	goto	u2280
  6914  03AD                     u2281:	
  6915  03AD  2BBB               	goto	l2659
  6916  03AE                     u2280:	
  6917  03AE                     l2657:	
  6918                           
  6919                           ;Controller.c: 144: lutRX[position] = 0;
  6920  03AE  30F0               	movlw	240
  6921  03AF  0020               	movlb	0	; select bank0
  6922  03B0  00B9               	movwf	??_lutInit
  6923  03B1  3024               	movlw	36
  6924  03B2  00BA               	movwf	??_lutInit+1
  6925  03B3  084A               	movf	lutInit@position,w
  6926  03B4  0739               	addwf	??_lutInit,w
  6927  03B5  0086               	movwf	6
  6928  03B6  084B               	movf	lutInit@position+1,w
  6929  03B7  3D3A               	addwfc	??_lutInit+1,w
  6930  03B8  0087               	movwf	7
  6931  03B9  0181               	clrf	1
  6932                           
  6933                           ;Controller.c: 145: } else if (position > rxMax) {
  6934  03BA  2C08               	goto	l2665
  6935  03BB                     l2659:	
  6936  03BB  0020               	movlb	0	; select bank0
  6937  03BC  084B               	movf	lutInit@position+1,w
  6938  03BD  3A80               	xorlw	128
  6939  03BE  3C80               	sublw	128
  6940  03BF  1D03               	skipz
  6941  03C0  2BC3               	goto	u2295
  6942  03C1  084A               	movf	lutInit@position,w
  6943  03C2  0247               	subwf	lutInit@rxMax,w
  6944  03C3                     u2295:	
  6945  03C3  1803               	skipnc
  6946  03C4  2BC6               	goto	u2291
  6947  03C5  2BC7               	goto	u2290
  6948  03C6                     u2291:	
  6949  03C6  2BD9               	goto	l2663
  6950  03C7                     u2290:	
  6951  03C7                     l2661:	
  6952                           
  6953                           ;Controller.c: 146: lutRX[position] = 255;
  6954  03C7  30F0               	movlw	240
  6955  03C8  0020               	movlb	0	; select bank0
  6956  03C9  00B9               	movwf	??_lutInit
  6957  03CA  3024               	movlw	36
  6958  03CB  00BA               	movwf	??_lutInit+1
  6959  03CC  084A               	movf	lutInit@position,w
  6960  03CD  0739               	addwf	??_lutInit,w
  6961  03CE  00BB               	movwf	??_lutInit+2
  6962  03CF  084B               	movf	lutInit@position+1,w
  6963  03D0  3D3A               	addwfc	??_lutInit+1,w
  6964  03D1  00BC               	movwf	??_lutInit+3
  6965  03D2  083B               	movf	??_lutInit+2,w
  6966  03D3  0086               	movwf	6
  6967  03D4  083C               	movf	??_lutInit+3,w
  6968  03D5  0087               	movwf	7
  6969  03D6  30FF               	movlw	255
  6970  03D7  0081               	movwf	1
  6971                           
  6972                           ;Controller.c: 148: } else {
  6973  03D8  2C08               	goto	l2665
  6974  03D9                     l2663:	
  6975                           
  6976                           ;Controller.c: 149: lutRX[position] = Map(position, rxMin, rxMax, 0, 255);
  6977  03D9  0020               	movlb	0	; select bank0
  6978  03DA  084B               	movf	lutInit@position+1,w
  6979  03DB  00B0               	movwf	Map@x+1
  6980  03DC  084A               	movf	lutInit@position,w
  6981  03DD  00AF               	movwf	Map@x
  6982  03DE  0846               	movf	lutInit@rxMin,w
  6983  03DF  00B9               	movwf	??_lutInit
  6984  03E0  01BA               	clrf	??_lutInit+1
  6985  03E1  0839               	movf	??_lutInit,w
  6986  03E2  00B1               	movwf	Map@inMin
  6987  03E3  083A               	movf	??_lutInit+1,w
  6988  03E4  00B2               	movwf	Map@inMin+1
  6989  03E5  0847               	movf	lutInit@rxMax,w
  6990  03E6  00BB               	movwf	??_lutInit+2
  6991  03E7  01BC               	clrf	??_lutInit+3
  6992  03E8  083B               	movf	??_lutInit+2,w
  6993  03E9  00B3               	movwf	Map@inMax
  6994  03EA  083C               	movf	??_lutInit+3,w
  6995  03EB  00B4               	movwf	Map@inMax+1
  6996  03EC  3000               	movlw	0
  6997  03ED  00B5               	movwf	Map@outMin
  6998  03EE  00B6               	movwf	Map@outMin+1
  6999  03EF  30FF               	movlw	255
  7000  03F0  00B7               	movwf	Map@outMax
  7001  03F1  3000               	movlw	0
  7002  03F2  00B8               	movwf	Map@outMax+1
  7003  03F3  318D  25A6  3182   	fcall	_Map
  7004  03F6  0020               	movlb	0	; select bank0
  7005  03F7  00BD               	movwf	??_lutInit+4
  7006  03F8  30F0               	movlw	240
  7007  03F9  00BE               	movwf	??_lutInit+5
  7008  03FA  3024               	movlw	36
  7009  03FB  00BF               	movwf	??_lutInit+6
  7010  03FC  084A               	movf	lutInit@position,w
  7011  03FD  073E               	addwf	??_lutInit+5,w
  7012  03FE  00C0               	movwf	??_lutInit+7
  7013  03FF  084B               	movf	lutInit@position+1,w
  7014  0400  3D3F               	addwfc	??_lutInit+6,w
  7015  0401  00C1               	movwf	??_lutInit+8
  7016  0402  0840               	movf	??_lutInit+7,w
  7017  0403  0086               	movwf	6
  7018  0404  0841               	movf	??_lutInit+8,w
  7019  0405  0087               	movwf	7
  7020  0406  083D               	movf	??_lutInit+4,w
  7021  0407  0081               	movwf	1
  7022  0408                     l2665:	
  7023                           
  7024                           ;Controller.c: 150: };Controller.c: 153: if (position < ryMin) {
  7025  0408  084B               	movf	lutInit@position+1,w
  7026  0409  3A80               	xorlw	128
  7027  040A  00B9               	movwf	??_lutInit
  7028  040B  3080               	movlw	128
  7029  040C  0239               	subwf	??_lutInit,w
  7030  040D  1D03               	skipz
  7031  040E  2C11               	goto	u2305
  7032  040F  0848               	movf	lutInit@ryMin,w
  7033  0410  024A               	subwf	lutInit@position,w
  7034  0411                     u2305:	
  7035  0411  1803               	skipnc
  7036  0412  2C14               	goto	u2301
  7037  0413  2C15               	goto	u2300
  7038  0414                     u2301:	
  7039  0414  2C22               	goto	l2669
  7040  0415                     u2300:	
  7041  0415                     l2667:	
  7042                           
  7043                           ;Controller.c: 154: lutRY[position] = 0;
  7044  0415  30F0               	movlw	240
  7045  0416  0020               	movlb	0	; select bank0
  7046  0417  00B9               	movwf	??_lutInit
  7047  0418  3023               	movlw	35
  7048  0419  00BA               	movwf	??_lutInit+1
  7049  041A  084A               	movf	lutInit@position,w
  7050  041B  0739               	addwf	??_lutInit,w
  7051  041C  0086               	movwf	6
  7052  041D  084B               	movf	lutInit@position+1,w
  7053  041E  3D3A               	addwfc	??_lutInit+1,w
  7054  041F  0087               	movwf	7
  7055  0420  0181               	clrf	1
  7056                           
  7057                           ;Controller.c: 155: } else if (position > ryMax) {
  7058  0421  2C6F               	goto	l2675
  7059  0422                     l2669:	
  7060  0422  0020               	movlb	0	; select bank0
  7061  0423  084B               	movf	lutInit@position+1,w
  7062  0424  3A80               	xorlw	128
  7063  0425  3C80               	sublw	128
  7064  0426  1D03               	skipz
  7065  0427  2C2A               	goto	u2315
  7066  0428  084A               	movf	lutInit@position,w
  7067  0429  0249               	subwf	lutInit@ryMax,w
  7068  042A                     u2315:	
  7069  042A  1803               	skipnc
  7070  042B  2C2D               	goto	u2311
  7071  042C  2C2E               	goto	u2310
  7072  042D                     u2311:	
  7073  042D  2C40               	goto	l2673
  7074  042E                     u2310:	
  7075  042E                     l2671:	
  7076                           
  7077                           ;Controller.c: 156: lutRY[position] = 255;
  7078  042E  30F0               	movlw	240
  7079  042F  0020               	movlb	0	; select bank0
  7080  0430  00B9               	movwf	??_lutInit
  7081  0431  3023               	movlw	35
  7082  0432  00BA               	movwf	??_lutInit+1
  7083  0433  084A               	movf	lutInit@position,w
  7084  0434  0739               	addwf	??_lutInit,w
  7085  0435  00BB               	movwf	??_lutInit+2
  7086  0436  084B               	movf	lutInit@position+1,w
  7087  0437  3D3A               	addwfc	??_lutInit+1,w
  7088  0438  00BC               	movwf	??_lutInit+3
  7089  0439  083B               	movf	??_lutInit+2,w
  7090  043A  0086               	movwf	6
  7091  043B  083C               	movf	??_lutInit+3,w
  7092  043C  0087               	movwf	7
  7093  043D  30FF               	movlw	255
  7094  043E  0081               	movwf	1
  7095                           
  7096                           ;Controller.c: 158: } else {
  7097  043F  2C6F               	goto	l2675
  7098  0440                     l2673:	
  7099                           
  7100                           ;Controller.c: 159: lutRY[position] = Map(position, ryMin, ryMax, 0, 255);
  7101  0440  0020               	movlb	0	; select bank0
  7102  0441  084B               	movf	lutInit@position+1,w
  7103  0442  00B0               	movwf	Map@x+1
  7104  0443  084A               	movf	lutInit@position,w
  7105  0444  00AF               	movwf	Map@x
  7106  0445  0848               	movf	lutInit@ryMin,w
  7107  0446  00B9               	movwf	??_lutInit
  7108  0447  01BA               	clrf	??_lutInit+1
  7109  0448  0839               	movf	??_lutInit,w
  7110  0449  00B1               	movwf	Map@inMin
  7111  044A  083A               	movf	??_lutInit+1,w
  7112  044B  00B2               	movwf	Map@inMin+1
  7113  044C  0849               	movf	lutInit@ryMax,w
  7114  044D  00BB               	movwf	??_lutInit+2
  7115  044E  01BC               	clrf	??_lutInit+3
  7116  044F  083B               	movf	??_lutInit+2,w
  7117  0450  00B3               	movwf	Map@inMax
  7118  0451  083C               	movf	??_lutInit+3,w
  7119  0452  00B4               	movwf	Map@inMax+1
  7120  0453  3000               	movlw	0
  7121  0454  00B5               	movwf	Map@outMin
  7122  0455  00B6               	movwf	Map@outMin+1
  7123  0456  30FF               	movlw	255
  7124  0457  00B7               	movwf	Map@outMax
  7125  0458  3000               	movlw	0
  7126  0459  00B8               	movwf	Map@outMax+1
  7127  045A  318D  25A6  3182   	fcall	_Map
  7128  045D  0020               	movlb	0	; select bank0
  7129  045E  00BD               	movwf	??_lutInit+4
  7130  045F  30F0               	movlw	240
  7131  0460  00BE               	movwf	??_lutInit+5
  7132  0461  3023               	movlw	35
  7133  0462  00BF               	movwf	??_lutInit+6
  7134  0463  084A               	movf	lutInit@position,w
  7135  0464  073E               	addwf	??_lutInit+5,w
  7136  0465  00C0               	movwf	??_lutInit+7
  7137  0466  084B               	movf	lutInit@position+1,w
  7138  0467  3D3F               	addwfc	??_lutInit+6,w
  7139  0468  00C1               	movwf	??_lutInit+8
  7140  0469  0840               	movf	??_lutInit+7,w
  7141  046A  0086               	movwf	6
  7142  046B  0841               	movf	??_lutInit+8,w
  7143  046C  0087               	movwf	7
  7144  046D  083D               	movf	??_lutInit+4,w
  7145  046E  0081               	movwf	1
  7146  046F                     l2675:	
  7147  046F  3001               	movlw	1
  7148  0470  07CA               	addwf	lutInit@position,f
  7149  0471  3000               	movlw	0
  7150  0472  3DCB               	addwfc	lutInit@position+1,f
  7151  0473                     l2677:	
  7152  0473  084B               	movf	lutInit@position+1,w
  7153  0474  3A80               	xorlw	128
  7154  0475  00B9               	movwf	??_lutInit
  7155  0476  3081               	movlw	129
  7156  0477  0239               	subwf	??_lutInit,w
  7157  0478  1D03               	skipz
  7158  0479  2C7C               	goto	u2325
  7159  047A  3000               	movlw	0
  7160  047B  024A               	subwf	lutInit@position,w
  7161  047C                     u2325:	
  7162  047C  1C03               	skipc
  7163  047D  2C7F               	goto	u2321
  7164  047E  2C80               	goto	u2320
  7165  047F                     u2321:	
  7166  047F  2AD2               	goto	l2635
  7167  0480                     u2320:	
  7168  0480                     l344:	
  7169  0480  0008               	return
  7170  0481                     __end_of_lutInit:	
  7171                           
  7172                           	psect	text9
  7173  0D38                     __ptext9:	
  7174 ;; *************** function _eepromRead *****************
  7175 ;; Defined at:
  7176 ;;		line 31 in file "Nvm.c"
  7177 ;; Parameters:    Size  Location     Type
  7178 ;;  address         1    wreg     unsigned char 
  7179 ;; Auto vars:     Size  Location     Type
  7180 ;;  address         1    1[BANK0 ] unsigned char 
  7181 ;;  data            1    2[BANK0 ] unsigned char 
  7182 ;; Return value:  Size  Location     Type
  7183 ;;                  1    wreg      unsigned char 
  7184 ;; Registers used:
  7185 ;;		wreg
  7186 ;; Tracked objects:
  7187 ;;		On entry : 0/0
  7188 ;;		On exit  : 0/0
  7189 ;;		Unchanged: 0/0
  7190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7192 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7193 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7194 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7195 ;;Total ram usage:        3 bytes
  7196 ;; Hardware stack levels used:    1
  7197 ;; Hardware stack levels required when called:    3
  7198 ;; This function calls:
  7199 ;;		Nothing
  7200 ;; This function is called by:
  7201 ;;		_lutInit
  7202 ;; This function uses a non-reentrant model
  7203 ;;
  7204                           
  7205                           
  7206                           ;psect for function _eepromRead
  7207  0D38                     _eepromRead:	
  7208                           
  7209                           ;incstack = 0
  7210                           ; Regs used in _eepromRead: [wreg]
  7211                           ;eepromRead@address stored from wreg
  7212  0D38  0020               	movlb	0	; select bank0
  7213  0D39  00A1               	movwf	eepromRead@address
  7214  0D3A                     l2609:	
  7215                           
  7216                           ;Nvm.c: 33: char data;;Nvm.c: 35: NVMCON1bits.NVMREGS = 1;
  7217  0D3A  0030               	movlb	16	; select bank16
  7218  0D3B  171E               	bsf	30,6	;volsfr
  7219  0D3C                     l2611:	
  7220                           
  7221                           ;Nvm.c: 36: NVMADRH = 0xF0;
  7222  0D3C  30F0               	movlw	240
  7223  0D3D  009B               	movwf	27	;volatile
  7224                           
  7225                           ;Nvm.c: 37: NVMADRL = address;
  7226  0D3E  0020               	movlb	0	; select bank0
  7227  0D3F  0821               	movf	eepromRead@address,w
  7228  0D40  0030               	movlb	16	; select bank16
  7229  0D41  009A               	movwf	26	;volatile
  7230  0D42                     l2613:	
  7231                           
  7232                           ;Nvm.c: 38: NVMCON1bits.RD = 1;
  7233  0D42  141E               	bsf	30,0	;volsfr
  7234                           
  7235                           ;Nvm.c: 40: data = NVMDATL;
  7236  0D43  081C               	movf	28,w	;volatile
  7237  0D44  0020               	movlb	0	; select bank0
  7238  0D45  00A0               	movwf	??_eepromRead
  7239  0D46  0820               	movf	??_eepromRead,w
  7240  0D47  00A2               	movwf	eepromRead@data
  7241                           
  7242                           ;Nvm.c: 42: return data;
  7243  0D48  0822               	movf	eepromRead@data,w
  7244  0D49                     l455:	
  7245  0D49  0008               	return
  7246  0D4A                     __end_of_eepromRead:	
  7247                           
  7248                           	psect	text10
  7249  0DA6                     __ptext10:	
  7250 ;; *************** function _Map *****************
  7251 ;; Defined at:
  7252 ;;		line 102 in file "Controller.c"
  7253 ;; Parameters:    Size  Location     Type
  7254 ;;  x               2   15[BANK0 ] int 
  7255 ;;  inMin           2   17[BANK0 ] int 
  7256 ;;  inMax           2   19[BANK0 ] int 
  7257 ;;  outMin          2   21[BANK0 ] int 
  7258 ;;  outMax          2   23[BANK0 ] int 
  7259 ;; Auto vars:     Size  Location     Type
  7260 ;;		None
  7261 ;; Return value:  Size  Location     Type
  7262 ;;                  1    wreg      unsigned char 
  7263 ;; Registers used:
  7264 ;;		wreg, status,2, status,0, pclath, cstack
  7265 ;; Tracked objects:
  7266 ;;		On entry : 0/0
  7267 ;;		On exit  : 0/0
  7268 ;;		Unchanged: 0/0
  7269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7270 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7273 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7274 ;;Total ram usage:       10 bytes
  7275 ;; Hardware stack levels used:    1
  7276 ;; Hardware stack levels required when called:    4
  7277 ;; This function calls:
  7278 ;;		___awdiv
  7279 ;;		___wmul
  7280 ;; This function is called by:
  7281 ;;		_lutInit
  7282 ;; This function uses a non-reentrant model
  7283 ;;
  7284                           
  7285                           
  7286                           ;psect for function _Map
  7287  0DA6                     _Map:	
  7288  0DA6                     l2605:	
  7289                           ;incstack = 0
  7290                           ; Regs used in _Map: [wreg+status,2+status,0+pclath+cstack]
  7291                           
  7292                           
  7293                           ;Controller.c: 104: return (((x - inMin) * (outMax - outMin)) / (inMax - inMin)) + outMi
      +                          n;
  7294  0DA6  0020               	movlb	0	; select bank0
  7295  0DA7  0831               	movf	Map@inMin,w
  7296  0DA8  0233               	subwf	Map@inMax,w
  7297  0DA9  00A6               	movwf	___awdiv@divisor
  7298  0DAA  0832               	movf	Map@inMin+1,w
  7299  0DAB  3B34               	subwfb	Map@inMax+1,w
  7300  0DAC  00A7               	movwf	___awdiv@divisor+1
  7301  0DAD  0831               	movf	Map@inMin,w
  7302  0DAE  022F               	subwf	Map@x,w
  7303  0DAF  00A0               	movwf	___wmul@multiplier
  7304  0DB0  0832               	movf	Map@inMin+1,w
  7305  0DB1  3B30               	subwfb	Map@x+1,w
  7306  0DB2  00A1               	movwf	___wmul@multiplier+1
  7307  0DB3  0835               	movf	Map@outMin,w
  7308  0DB4  0237               	subwf	Map@outMax,w
  7309  0DB5  00A2               	movwf	___wmul@multiplicand
  7310  0DB6  0836               	movf	Map@outMin+1,w
  7311  0DB7  3B38               	subwfb	Map@outMax+1,w
  7312  0DB8  00A3               	movwf	___wmul@multiplicand+1
  7313  0DB9  318D  2586  318D   	fcall	___wmul
  7314  0DBC  0020               	movlb	0	; select bank0
  7315  0DBD  0821               	movf	?___wmul+1,w
  7316  0DBE  00A9               	movwf	___awdiv@dividend+1
  7317  0DBF  0820               	movf	?___wmul,w
  7318  0DC0  00A8               	movwf	___awdiv@dividend
  7319  0DC1  318E  26AD  318D   	fcall	___awdiv
  7320  0DC4  0020               	movlb	0	; select bank0
  7321  0DC5  0826               	movf	?___awdiv,w
  7322  0DC6  0735               	addwf	Map@outMin,w
  7323  0DC7                     l323:	
  7324  0DC7  0008               	return
  7325  0DC8                     __end_of_Map:	
  7326                           
  7327                           	psect	text11
  7328  0D86                     __ptext11:	
  7329 ;; *************** function ___wmul *****************
  7330 ;; Defined at:
  7331 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  7332 ;; Parameters:    Size  Location     Type
  7333 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7334 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7335 ;; Auto vars:     Size  Location     Type
  7336 ;;  product         2    4[BANK0 ] unsigned int 
  7337 ;; Return value:  Size  Location     Type
  7338 ;;                  2    0[BANK0 ] unsigned int 
  7339 ;; Registers used:
  7340 ;;		wreg, status,2, status,0
  7341 ;; Tracked objects:
  7342 ;;		On entry : 0/0
  7343 ;;		On exit  : 0/0
  7344 ;;		Unchanged: 0/0
  7345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7346 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7347 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7349 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7350 ;;Total ram usage:        6 bytes
  7351 ;; Hardware stack levels used:    1
  7352 ;; Hardware stack levels required when called:    3
  7353 ;; This function calls:
  7354 ;;		Nothing
  7355 ;; This function is called by:
  7356 ;;		_Map
  7357 ;; This function uses a non-reentrant model
  7358 ;;
  7359                           
  7360                           
  7361                           ;psect for function ___wmul
  7362  0D86                     ___wmul:	
  7363  0D86                     l2547:	
  7364                           ;incstack = 0
  7365                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7366                           
  7367  0D86  0020               	movlb	0	; select bank0
  7368  0D87  01A4               	clrf	___wmul@product
  7369  0D88  01A5               	clrf	___wmul@product+1
  7370  0D89                     l2549:	
  7371  0D89  1C20               	btfss	___wmul@multiplier,0
  7372  0D8A  2D8C               	goto	u2051
  7373  0D8B  2D8D               	goto	u2050
  7374  0D8C                     u2051:	
  7375  0D8C  2D91               	goto	l653
  7376  0D8D                     u2050:	
  7377  0D8D                     l2551:	
  7378  0D8D  0822               	movf	___wmul@multiplicand,w
  7379  0D8E  07A4               	addwf	___wmul@product,f
  7380  0D8F  0823               	movf	___wmul@multiplicand+1,w
  7381  0D90  3DA5               	addwfc	___wmul@product+1,f
  7382  0D91                     l653:	
  7383  0D91  3001               	movlw	1
  7384  0D92                     u2065:	
  7385  0D92  35A2               	lslf	___wmul@multiplicand,f
  7386  0D93  0DA3               	rlf	___wmul@multiplicand+1,f
  7387  0D94  0B89               	decfsz	9,f
  7388  0D95  2D92               	goto	u2065
  7389  0D96                     l2553:	
  7390  0D96  3001               	movlw	1
  7391  0D97                     u2075:	
  7392  0D97  36A1               	lsrf	___wmul@multiplier+1,f
  7393  0D98  0CA0               	rrf	___wmul@multiplier,f
  7394  0D99  0B89               	decfsz	9,f
  7395  0D9A  2D97               	goto	u2075
  7396  0D9B                     l2555:	
  7397  0D9B  0820               	movf	___wmul@multiplier,w
  7398  0D9C  0421               	iorwf	___wmul@multiplier+1,w
  7399  0D9D  1D03               	btfss	3,2
  7400  0D9E  2DA0               	goto	u2081
  7401  0D9F  2DA1               	goto	u2080
  7402  0DA0                     u2081:	
  7403  0DA0  2D89               	goto	l2549
  7404  0DA1                     u2080:	
  7405  0DA1                     l2557:	
  7406  0DA1  0825               	movf	___wmul@product+1,w
  7407  0DA2  00A1               	movwf	?___wmul+1
  7408  0DA3  0824               	movf	___wmul@product,w
  7409  0DA4  00A0               	movwf	?___wmul
  7410  0DA5                     l655:	
  7411  0DA5  0008               	return
  7412  0DA6                     __end_of___wmul:	
  7413                           
  7414                           	psect	text12
  7415  0EAD                     __ptext12:	
  7416 ;; *************** function ___awdiv *****************
  7417 ;; Defined at:
  7418 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  7419 ;; Parameters:    Size  Location     Type
  7420 ;;  divisor         2    6[BANK0 ] int 
  7421 ;;  dividend        2    8[BANK0 ] int 
  7422 ;; Auto vars:     Size  Location     Type
  7423 ;;  quotient        2   13[BANK0 ] int 
  7424 ;;  sign            1   12[BANK0 ] unsigned char 
  7425 ;;  counter         1   11[BANK0 ] unsigned char 
  7426 ;; Return value:  Size  Location     Type
  7427 ;;                  2    6[BANK0 ] int 
  7428 ;; Registers used:
  7429 ;;		wreg, status,2, status,0
  7430 ;; Tracked objects:
  7431 ;;		On entry : 0/0
  7432 ;;		On exit  : 0/0
  7433 ;;		Unchanged: 0/0
  7434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7435 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7436 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7437 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7438 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7439 ;;Total ram usage:        9 bytes
  7440 ;; Hardware stack levels used:    1
  7441 ;; Hardware stack levels required when called:    3
  7442 ;; This function calls:
  7443 ;;		Nothing
  7444 ;; This function is called by:
  7445 ;;		_Map
  7446 ;; This function uses a non-reentrant model
  7447 ;;
  7448                           
  7449                           
  7450                           ;psect for function ___awdiv
  7451  0EAD                     ___awdiv:	
  7452  0EAD                     l2561:	
  7453                           ;incstack = 0
  7454                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7455                           
  7456  0EAD  0020               	movlb	0	; select bank0
  7457  0EAE  01AC               	clrf	___awdiv@sign
  7458  0EAF                     l2563:	
  7459  0EAF  1FA7               	btfss	___awdiv@divisor+1,7
  7460  0EB0  2EB2               	goto	u2091
  7461  0EB1  2EB3               	goto	u2090
  7462  0EB2                     u2091:	
  7463  0EB2  2EBA               	goto	l2569
  7464  0EB3                     u2090:	
  7465  0EB3                     l2565:	
  7466  0EB3  09A6               	comf	___awdiv@divisor,f
  7467  0EB4  09A7               	comf	___awdiv@divisor+1,f
  7468  0EB5  0AA6               	incf	___awdiv@divisor,f
  7469  0EB6  1903               	skipnz
  7470  0EB7  0AA7               	incf	___awdiv@divisor+1,f
  7471  0EB8                     l2567:	
  7472  0EB8  01AC               	clrf	___awdiv@sign
  7473  0EB9  0AAC               	incf	___awdiv@sign,f
  7474  0EBA                     l2569:	
  7475  0EBA  1FA9               	btfss	___awdiv@dividend+1,7
  7476  0EBB  2EBD               	goto	u2101
  7477  0EBC  2EBE               	goto	u2100
  7478  0EBD                     u2101:	
  7479  0EBD  2EC7               	goto	l2575
  7480  0EBE                     u2100:	
  7481  0EBE                     l2571:	
  7482  0EBE  09A8               	comf	___awdiv@dividend,f
  7483  0EBF  09A9               	comf	___awdiv@dividend+1,f
  7484  0EC0  0AA8               	incf	___awdiv@dividend,f
  7485  0EC1  1903               	skipnz
  7486  0EC2  0AA9               	incf	___awdiv@dividend+1,f
  7487  0EC3                     l2573:	
  7488  0EC3  3001               	movlw	1
  7489  0EC4  00AA               	movwf	??___awdiv
  7490  0EC5  082A               	movf	??___awdiv,w
  7491  0EC6  06AC               	xorwf	___awdiv@sign,f
  7492  0EC7                     l2575:	
  7493  0EC7  01AD               	clrf	___awdiv@quotient
  7494  0EC8  01AE               	clrf	___awdiv@quotient+1
  7495  0EC9                     l2577:	
  7496  0EC9  0826               	movf	___awdiv@divisor,w
  7497  0ECA  0427               	iorwf	___awdiv@divisor+1,w
  7498  0ECB  1903               	btfsc	3,2
  7499  0ECC  2ECE               	goto	u2111
  7500  0ECD  2ECF               	goto	u2110
  7501  0ECE                     u2111:	
  7502  0ECE  2EFE               	goto	l2597
  7503  0ECF                     u2110:	
  7504  0ECF                     l2579:	
  7505  0ECF  01AB               	clrf	___awdiv@counter
  7506  0ED0  0AAB               	incf	___awdiv@counter,f
  7507  0ED1  2EDB               	goto	l2585
  7508  0ED2                     l2581:	
  7509  0ED2  3001               	movlw	1
  7510  0ED3                     u2125:	
  7511  0ED3  35A6               	lslf	___awdiv@divisor,f
  7512  0ED4  0DA7               	rlf	___awdiv@divisor+1,f
  7513  0ED5  0B89               	decfsz	9,f
  7514  0ED6  2ED3               	goto	u2125
  7515  0ED7                     l2583:	
  7516  0ED7  3001               	movlw	1
  7517  0ED8  00AA               	movwf	??___awdiv
  7518  0ED9  082A               	movf	??___awdiv,w
  7519  0EDA  07AB               	addwf	___awdiv@counter,f
  7520  0EDB                     l2585:	
  7521  0EDB  1FA7               	btfss	___awdiv@divisor+1,7
  7522  0EDC  2EDE               	goto	u2131
  7523  0EDD  2EDF               	goto	u2130
  7524  0EDE                     u2131:	
  7525  0EDE  2ED2               	goto	l2581
  7526  0EDF                     u2130:	
  7527  0EDF                     l2587:	
  7528  0EDF  3001               	movlw	1
  7529  0EE0                     u2145:	
  7530  0EE0  35AD               	lslf	___awdiv@quotient,f
  7531  0EE1  0DAE               	rlf	___awdiv@quotient+1,f
  7532  0EE2  0B89               	decfsz	9,f
  7533  0EE3  2EE0               	goto	u2145
  7534  0EE4  0827               	movf	___awdiv@divisor+1,w
  7535  0EE5  0229               	subwf	___awdiv@dividend+1,w
  7536  0EE6  1D03               	skipz
  7537  0EE7  2EEA               	goto	u2155
  7538  0EE8  0826               	movf	___awdiv@divisor,w
  7539  0EE9  0228               	subwf	___awdiv@dividend,w
  7540  0EEA                     u2155:	
  7541  0EEA  1C03               	skipc
  7542  0EEB  2EED               	goto	u2151
  7543  0EEC  2EEE               	goto	u2150
  7544  0EED                     u2151:	
  7545  0EED  2EF3               	goto	l2593
  7546  0EEE                     u2150:	
  7547  0EEE                     l2589:	
  7548  0EEE  0826               	movf	___awdiv@divisor,w
  7549  0EEF  02A8               	subwf	___awdiv@dividend,f
  7550  0EF0  0827               	movf	___awdiv@divisor+1,w
  7551  0EF1  3BA9               	subwfb	___awdiv@dividend+1,f
  7552  0EF2                     l2591:	
  7553  0EF2  142D               	bsf	___awdiv@quotient,0
  7554  0EF3                     l2593:	
  7555  0EF3  3001               	movlw	1
  7556  0EF4                     u2165:	
  7557  0EF4  36A7               	lsrf	___awdiv@divisor+1,f
  7558  0EF5  0CA6               	rrf	___awdiv@divisor,f
  7559  0EF6  0B89               	decfsz	9,f
  7560  0EF7  2EF4               	goto	u2165
  7561  0EF8                     l2595:	
  7562  0EF8  3001               	movlw	1
  7563  0EF9  02AB               	subwf	___awdiv@counter,f
  7564  0EFA  1D03               	btfss	3,2
  7565  0EFB  2EFD               	goto	u2171
  7566  0EFC  2EFE               	goto	u2170
  7567  0EFD                     u2171:	
  7568  0EFD  2EDF               	goto	l2587
  7569  0EFE                     u2170:	
  7570  0EFE                     l2597:	
  7571  0EFE  082C               	movf	___awdiv@sign,w
  7572  0EFF  1903               	btfsc	3,2
  7573  0F00  2F02               	goto	u2181
  7574  0F01  2F03               	goto	u2180
  7575  0F02                     u2181:	
  7576  0F02  2F08               	goto	l2601
  7577  0F03                     u2180:	
  7578  0F03                     l2599:	
  7579  0F03  09AD               	comf	___awdiv@quotient,f
  7580  0F04  09AE               	comf	___awdiv@quotient+1,f
  7581  0F05  0AAD               	incf	___awdiv@quotient,f
  7582  0F06  1903               	skipnz
  7583  0F07  0AAE               	incf	___awdiv@quotient+1,f
  7584  0F08                     l2601:	
  7585  0F08  082E               	movf	___awdiv@quotient+1,w
  7586  0F09  00A7               	movwf	?___awdiv+1
  7587  0F0A  082D               	movf	___awdiv@quotient,w
  7588  0F0B  00A6               	movwf	?___awdiv
  7589  0F0C                     l806:	
  7590  0F0C  0008               	return
  7591  0F0D                     __end_of___awdiv:	
  7592                           
  7593                           	psect	text13
  7594  0DC8                     __ptext13:	
  7595 ;; *************** function _eepromWrite *****************
  7596 ;; Defined at:
  7597 ;;		line 8 in file "Nvm.c"
  7598 ;; Parameters:    Size  Location     Type
  7599 ;;  address         1    wreg     unsigned char 
  7600 ;;  data            1    0[BANK0 ] unsigned char 
  7601 ;; Auto vars:     Size  Location     Type
  7602 ;;  address         1    1[BANK0 ] unsigned char 
  7603 ;;  interruptSta    1    2[BANK0 ] unsigned char 
  7604 ;; Return value:  Size  Location     Type
  7605 ;;                  1    wreg      void 
  7606 ;; Registers used:
  7607 ;;		wreg, status,2, status,0, pclath, cstack
  7608 ;; Tracked objects:
  7609 ;;		On entry : 0/0
  7610 ;;		On exit  : 0/0
  7611 ;;		Unchanged: 0/0
  7612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7613 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7614 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7616 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7617 ;;Total ram usage:        3 bytes
  7618 ;; Hardware stack levels used:    1
  7619 ;; Hardware stack levels required when called:    4
  7620 ;; This function calls:
  7621 ;;		_nvmUnlock
  7622 ;; This function is called by:
  7623 ;;		_configureController
  7624 ;; This function uses a non-reentrant model
  7625 ;;
  7626                           
  7627                           
  7628                           ;psect for function _eepromWrite
  7629  0DC8                     _eepromWrite:	
  7630                           
  7631                           ;incstack = 0
  7632                           ; Regs used in _eepromWrite: [wreg+status,2+status,0+pclath+cstack]
  7633                           ;eepromWrite@address stored from wreg
  7634  0DC8  0020               	movlb	0	; select bank0
  7635  0DC9  00A1               	movwf	eepromWrite@address
  7636  0DCA                     l2775:	
  7637                           
  7638                           ;Nvm.c: 10: unsigned char interruptStatus = INTCONbits.GIE;
  7639  0DCA  3000               	movlw	0
  7640  0DCB  1B8B               	btfsc	11,7	;volatile
  7641  0DCC  3001               	movlw	1
  7642  0DCD  00A2               	movwf	eepromWrite@interruptStatus
  7643  0DCE                     l2777:	
  7644                           
  7645                           ;Nvm.c: 12: INTCONbits.GIE = 0;
  7646  0DCE  138B               	bcf	11,7	;volatile
  7647  0DCF                     l2779:	
  7648                           
  7649                           ;Nvm.c: 14: NVMCON1bits.NVMREGS = 1;
  7650  0DCF  0030               	movlb	16	; select bank16
  7651  0DD0  171E               	bsf	30,6	;volsfr
  7652  0DD1                     l2781:	
  7653                           
  7654                           ;Nvm.c: 15: NVMCON1bits.WREN = 1;
  7655  0DD1  151E               	bsf	30,2	;volsfr
  7656  0DD2                     l2783:	
  7657                           
  7658                           ;Nvm.c: 17: NVMADRH = 0xF0;
  7659  0DD2  30F0               	movlw	240
  7660  0DD3  009B               	movwf	27	;volatile
  7661  0DD4                     l2785:	
  7662                           
  7663                           ;Nvm.c: 18: NVMADRL = address;
  7664  0DD4  0020               	movlb	0	; select bank0
  7665  0DD5  0821               	movf	eepromWrite@address,w
  7666  0DD6  0030               	movlb	16	; select bank16
  7667  0DD7  009A               	movwf	26	;volatile
  7668  0DD8                     l2787:	
  7669                           
  7670                           ;Nvm.c: 20: NVMDATL = data;
  7671  0DD8  0020               	movlb	0	; select bank0
  7672  0DD9  0820               	movf	eepromWrite@data,w
  7673  0DDA  0030               	movlb	16	; select bank16
  7674  0DDB  009C               	movwf	28	;volatile
  7675  0DDC                     l2789:	
  7676                           
  7677                           ;Nvm.c: 22: nvmUnlock();
  7678  0DDC  318D  2507  318D   	fcall	_nvmUnlock
  7679  0DDF                     l448:	
  7680                           ;Nvm.c: 24: while (NVMCON1bits.WR);
  7681                           
  7682  0DDF  0030               	movlb	16	; select bank16
  7683  0DE0  189E               	btfsc	30,1	;volsfr
  7684  0DE1  2DE3               	goto	u2541
  7685  0DE2  2DE4               	goto	u2540
  7686  0DE3                     u2541:	
  7687  0DE3  2DDF               	goto	l448
  7688  0DE4                     u2540:	
  7689  0DE4                     l450:	
  7690                           
  7691                           ;Nvm.c: 26: NVMCON1bits.WREN = 0;
  7692  0DE4  111E               	bcf	30,2	;volsfr
  7693  0DE5                     l2791:	
  7694                           
  7695                           ;Nvm.c: 28: if (interruptStatus) INTCONbits.GIE = 1;
  7696  0DE5  0020               	movlb	0	; select bank0
  7697  0DE6  0822               	movf	eepromWrite@interruptStatus,w
  7698  0DE7  1903               	btfsc	3,2
  7699  0DE8  2DEA               	goto	u2551
  7700  0DE9  2DEB               	goto	u2550
  7701  0DEA                     u2551:	
  7702  0DEA  2DEC               	goto	l452
  7703  0DEB                     u2550:	
  7704  0DEB                     l2793:	
  7705  0DEB  178B               	bsf	11,7	;volatile
  7706  0DEC                     l452:	
  7707  0DEC  0008               	return
  7708  0DED                     __end_of_eepromWrite:	
  7709                           
  7710                           	psect	text14
  7711  0D07                     __ptext14:	
  7712 ;; *************** function _nvmUnlock *****************
  7713 ;; Defined at:
  7714 ;;		line 45 in file "Nvm.c"
  7715 ;; Parameters:    Size  Location     Type
  7716 ;;		None
  7717 ;; Auto vars:     Size  Location     Type
  7718 ;;		None
  7719 ;; Return value:  Size  Location     Type
  7720 ;;                  1    wreg      void 
  7721 ;; Registers used:
  7722 ;;		wreg
  7723 ;; Tracked objects:
  7724 ;;		On entry : 0/0
  7725 ;;		On exit  : 0/0
  7726 ;;		Unchanged: 0/0
  7727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7732 ;;Total ram usage:        0 bytes
  7733 ;; Hardware stack levels used:    1
  7734 ;; Hardware stack levels required when called:    3
  7735 ;; This function calls:
  7736 ;;		Nothing
  7737 ;; This function is called by:
  7738 ;;		_eepromWrite
  7739 ;; This function uses a non-reentrant model
  7740 ;;
  7741                           
  7742                           
  7743                           ;psect for function _nvmUnlock
  7744  0D07                     _nvmUnlock:	
  7745  0D07                     l2617:	
  7746                           ;incstack = 0
  7747                           ; Regs used in _nvmUnlock: [wreg]
  7748                           
  7749                           
  7750                           ;Nvm.c: 47: NVMCON2 = 0x55;
  7751  0D07  3055               	movlw	85
  7752  0D08  0030               	movlb	16	; select bank16
  7753  0D09  009F               	movwf	31	;volsfr
  7754                           
  7755                           ;Nvm.c: 48: NVMCON2 = 0xAA;
  7756  0D0A  30AA               	movlw	170
  7757  0D0B  009F               	movwf	31	;volsfr
  7758  0D0C                     l2619:	
  7759                           
  7760                           ;Nvm.c: 49: NVMCON1bits.WR = 1;
  7761  0D0C  149E               	bsf	30,1	;volsfr
  7762  0D0D                     l458:	
  7763  0D0D  0008               	return
  7764  0D0E                     __end_of_nvmUnlock:	
  7765                           
  7766                           	psect	text15
  7767  0D16                     __ptext15:	
  7768 ;; *************** function _adcInit *****************
  7769 ;; Defined at:
  7770 ;;		line 21 in file "PicConfig.c"
  7771 ;; Parameters:    Size  Location     Type
  7772 ;;		None
  7773 ;; Auto vars:     Size  Location     Type
  7774 ;;		None
  7775 ;; Return value:  Size  Location     Type
  7776 ;;                  1    wreg      void 
  7777 ;; Registers used:
  7778 ;;		wreg, status,2
  7779 ;; Tracked objects:
  7780 ;;		On entry : 0/0
  7781 ;;		On exit  : 0/0
  7782 ;;		Unchanged: 0/0
  7783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7788 ;;Total ram usage:        0 bytes
  7789 ;; Hardware stack levels used:    1
  7790 ;; Hardware stack levels required when called:    3
  7791 ;; This function calls:
  7792 ;;		Nothing
  7793 ;; This function is called by:
  7794 ;;		_main
  7795 ;; This function uses a non-reentrant model
  7796 ;;
  7797                           
  7798                           
  7799                           ;psect for function _adcInit
  7800  0D16                     _adcInit:	
  7801  0D16                     l2839:	
  7802                           ;incstack = 0
  7803                           ; Regs used in _adcInit: [wreg+status,2]
  7804                           
  7805                           
  7806                           ;PicConfig.c: 22: ADCON0 = 0x04;
  7807  0D16  3004               	movlw	4
  7808  0D17  0021               	movlb	1	; select bank1
  7809  0D18  0093               	movwf	19	;volatile
  7810  0D19                     l2841:	
  7811                           
  7812                           ;PicConfig.c: 23: ADCON1 = 0;
  7813  0D19  0194               	clrf	20	;volatile
  7814  0D1A                     l2843:	
  7815                           
  7816                           ;PicConfig.c: 24: ADCON2 = 0;
  7817  0D1A  0195               	clrf	21	;volatile
  7818  0D1B                     l2845:	
  7819                           
  7820                           ;PicConfig.c: 25: ADREF = 0;
  7821  0D1B  019A               	clrf	26	;volatile
  7822  0D1C                     l2847:	
  7823                           
  7824                           ;PicConfig.c: 26: ADCLK = 0x3F;
  7825  0D1C  303F               	movlw	63
  7826  0D1D  0098               	movwf	24	;volatile
  7827  0D1E                     l2849:	
  7828                           
  7829                           ;PicConfig.c: 27: ADCON0bits.ADON = 1;
  7830  0D1E  1793               	bsf	19,7	;volatile
  7831  0D1F                     l403:	
  7832  0D1F  0008               	return
  7833  0D20                     __end_of_adcInit:	
  7834                           
  7835                           	psect	text16
  7836  0DED                     __ptext16:	
  7837 ;; *************** function _IO_MAPPING *****************
  7838 ;; Defined at:
  7839 ;;		line 88 in file "MAPPING.c"
  7840 ;; Parameters:    Size  Location     Type
  7841 ;;		None
  7842 ;; Auto vars:     Size  Location     Type
  7843 ;;		None
  7844 ;; Return value:  Size  Location     Type
  7845 ;;                  1    wreg      void 
  7846 ;; Registers used:
  7847 ;;		wreg, status,2, status,0, pclath, cstack
  7848 ;; Tracked objects:
  7849 ;;		On entry : 0/0
  7850 ;;		On exit  : 0/0
  7851 ;;		Unchanged: 0/0
  7852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7857 ;;Total ram usage:        0 bytes
  7858 ;; Hardware stack levels used:    1
  7859 ;; Hardware stack levels required when called:    4
  7860 ;; This function calls:
  7861 ;;		_ppsLock
  7862 ;;		_ppsUnlock
  7863 ;; This function is called by:
  7864 ;;		_main
  7865 ;; This function uses a non-reentrant model
  7866 ;;
  7867                           
  7868                           
  7869                           ;psect for function _IO_MAPPING
  7870  0DED                     _IO_MAPPING:	
  7871  0DED                     l2817:	
  7872                           ;incstack = 0
  7873                           ; Regs used in _IO_MAPPING: [wreg+status,2+status,0+pclath+cstack]
  7874                           
  7875                           
  7876                           ;MAPPING.c: 90: TRISA = 0xFF;
  7877  0DED  30FF               	movlw	255
  7878  0DEE  0020               	movlb	0	; select bank0
  7879  0DEF  0091               	movwf	17	;volatile
  7880                           
  7881                           ;MAPPING.c: 91: TRISB = 0xFF;
  7882  0DF0  30FF               	movlw	255
  7883  0DF1  0092               	movwf	18	;volatile
  7884                           
  7885                           ;MAPPING.c: 92: TRISC = 0xFF;
  7886  0DF2  30FF               	movlw	255
  7887  0DF3  0093               	movwf	19	;volatile
  7888                           
  7889                           ;MAPPING.c: 93: TRISD = 0xEF;
  7890  0DF4  30EF               	movlw	239
  7891  0DF5  0094               	movwf	20	;volatile
  7892                           
  7893                           ;MAPPING.c: 94: TRISE = 0xFF;
  7894  0DF6  30FF               	movlw	255
  7895  0DF7  0095               	movwf	21	;volatile
  7896  0DF8                     l2819:	
  7897                           
  7898                           ;MAPPING.c: 97: ANSELA = 0;
  7899  0DF8  003E               	movlb	30	; select bank30
  7900  0DF9  01B8               	clrf	56	;volatile
  7901  0DFA                     l2821:	
  7902                           
  7903                           ;MAPPING.c: 98: ANSELB = 0;
  7904  0DFA  01C3               	clrf	67	;volatile
  7905                           
  7906                           ;MAPPING.c: 99: ANSELC = 0xC3;
  7907  0DFB  30C3               	movlw	195
  7908  0DFC  00CE               	movwf	78	;volatile
  7909  0DFD                     l2823:	
  7910                           
  7911                           ;MAPPING.c: 100: ANSELD = 0;
  7912  0DFD  01D9               	clrf	89	;volatile
  7913  0DFE                     l2825:	
  7914                           
  7915                           ;MAPPING.c: 101: ANSELE = 0;
  7916  0DFE  01E4               	clrf	100	;volatile
  7917                           
  7918                           ;MAPPING.c: 104: WPUA = 0xCF;
  7919  0DFF  30CF               	movlw	207
  7920  0E00  00B9               	movwf	57	;volatile
  7921                           
  7922                           ;MAPPING.c: 105: WPUB = 0xFF;
  7923  0E01  30FF               	movlw	255
  7924  0E02  00C4               	movwf	68	;volatile
  7925                           
  7926                           ;MAPPING.c: 106: WPUC = 0x04;
  7927  0E03  3004               	movlw	4
  7928  0E04  00CF               	movwf	79	;volatile
  7929                           
  7930                           ;MAPPING.c: 107: WPUD = 0x01;
  7931  0E05  3001               	movlw	1
  7932  0E06  00DA               	movwf	90	;volatile
  7933  0E07                     l2827:	
  7934                           
  7935                           ;MAPPING.c: 108: WPUE = 0;
  7936  0E07  01E5               	clrf	101	;volatile
  7937  0E08                     l2829:	
  7938                           
  7939                           ;MAPPING.c: 110: TRISCbits.TRISC5 = 0;
  7940  0E08  0020               	movlb	0	; select bank0
  7941  0E09  1293               	bcf	19,5	;volatile
  7942  0E0A                     l2831:	
  7943                           
  7944                           ;MAPPING.c: 111: TRISAbits.TRISA4 = 0;
  7945  0E0A  1211               	bcf	17,4	;volatile
  7946  0E0B                     l2833:	
  7947                           
  7948                           ;MAPPING.c: 112: ppsUnlock();
  7949  0E0B  318D  2500  318D   	fcall	_ppsUnlock
  7950  0E0E                     l2835:	
  7951                           
  7952                           ;MAPPING.c: 113: RC5PPS = 0x15;
  7953  0E0E  3015               	movlw	21
  7954  0E0F  003E               	movlb	30	; select bank30
  7955  0E10  00A5               	movwf	37	;volatile
  7956  0E11                     l2837:	
  7957                           
  7958                           ;MAPPING.c: 114: ppsLock();
  7959  0E11  318D  250E  318D   	fcall	_ppsLock
  7960  0E14                     l501:	
  7961  0E14  0008               	return
  7962  0E15                     __end_of_IO_MAPPING:	
  7963                           
  7964                           	psect	text17
  7965  0D00                     __ptext17:	
  7966 ;; *************** function _ppsUnlock *****************
  7967 ;; Defined at:
  7968 ;;		line 9 in file "PicConfig.c"
  7969 ;; Parameters:    Size  Location     Type
  7970 ;;		None
  7971 ;; Auto vars:     Size  Location     Type
  7972 ;;		None
  7973 ;; Return value:  Size  Location     Type
  7974 ;;                  1    wreg      void 
  7975 ;; Registers used:
  7976 ;;		wreg, status,2
  7977 ;; Tracked objects:
  7978 ;;		On entry : 0/0
  7979 ;;		On exit  : 0/0
  7980 ;;		Unchanged: 0/0
  7981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7986 ;;Total ram usage:        0 bytes
  7987 ;; Hardware stack levels used:    1
  7988 ;; Hardware stack levels required when called:    3
  7989 ;; This function calls:
  7990 ;;		Nothing
  7991 ;; This function is called by:
  7992 ;;		_IO_MAPPING
  7993 ;; This function uses a non-reentrant model
  7994 ;;
  7995                           
  7996                           
  7997                           ;psect for function _ppsUnlock
  7998  0D00                     _ppsUnlock:	
  7999  0D00                     l2795:	
  8000                           ;incstack = 0
  8001                           ; Regs used in _ppsUnlock: [wreg+status,2]
  8002                           
  8003                           
  8004                           ;PicConfig.c: 10: PPSLOCK = 0x55;
  8005  0D00  3055               	movlw	85
  8006  0D01  003D               	movlb	29	; select bank29
  8007  0D02  008F               	movwf	15	;volsfr
  8008                           
  8009                           ;PicConfig.c: 11: PPSLOCK = 0xAA;
  8010  0D03  30AA               	movlw	170
  8011  0D04  008F               	movwf	15	;volsfr
  8012  0D05                     l2797:	
  8013                           
  8014                           ;PicConfig.c: 12: PPSLOCK = 0;
  8015  0D05  018F               	clrf	15	;volsfr
  8016  0D06                     l397:	
  8017  0D06  0008               	return
  8018  0D07                     __end_of_ppsUnlock:	
  8019                           
  8020                           	psect	text18
  8021  0D0E                     __ptext18:	
  8022 ;; *************** function _ppsLock *****************
  8023 ;; Defined at:
  8024 ;;		line 15 in file "PicConfig.c"
  8025 ;; Parameters:    Size  Location     Type
  8026 ;;		None
  8027 ;; Auto vars:     Size  Location     Type
  8028 ;;		None
  8029 ;; Return value:  Size  Location     Type
  8030 ;;                  1    wreg      void 
  8031 ;; Registers used:
  8032 ;;		wreg
  8033 ;; Tracked objects:
  8034 ;;		On entry : 0/0
  8035 ;;		On exit  : 0/0
  8036 ;;		Unchanged: 0/0
  8037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8042 ;;Total ram usage:        0 bytes
  8043 ;; Hardware stack levels used:    1
  8044 ;; Hardware stack levels required when called:    3
  8045 ;; This function calls:
  8046 ;;		Nothing
  8047 ;; This function is called by:
  8048 ;;		_IO_MAPPING
  8049 ;; This function uses a non-reentrant model
  8050 ;;
  8051                           
  8052                           
  8053                           ;psect for function _ppsLock
  8054  0D0E                     _ppsLock:	
  8055  0D0E                     l2799:	
  8056                           ;incstack = 0
  8057                           ; Regs used in _ppsLock: [wreg]
  8058                           
  8059                           
  8060                           ;PicConfig.c: 16: PPSLOCK = 0x55;
  8061  0D0E  3055               	movlw	85
  8062  0D0F  003D               	movlb	29	; select bank29
  8063  0D10  008F               	movwf	15	;volsfr
  8064                           
  8065                           ;PicConfig.c: 17: PPSLOCK = 0xAA;
  8066  0D11  30AA               	movlw	170
  8067  0D12  008F               	movwf	15	;volsfr
  8068                           
  8069                           ;PicConfig.c: 18: PPSLOCK = 1;
  8070  0D13  3001               	movlw	1
  8071  0D14  008F               	movwf	15	;volsfr
  8072  0D15                     l400:	
  8073  0D15  0008               	return
  8074  0D16                     __end_of_ppsLock:	
  8075                           
  8076                           	psect	intentry
  8077  0004                     __pintentry:	
  8078 ;; *************** function _PS2Command *****************
  8079 ;; Defined at:
  8080 ;;		line 61 in file "main.c"
  8081 ;; Parameters:    Size  Location     Type
  8082 ;;		None
  8083 ;; Auto vars:     Size  Location     Type
  8084 ;;  cmd             1    5[COMMON] unsigned char 
  8085 ;; Return value:  Size  Location     Type
  8086 ;;                  1    wreg      void 
  8087 ;; Registers used:
  8088 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8089 ;; Tracked objects:
  8090 ;;		On entry : 0/0
  8091 ;;		On exit  : 0/0
  8092 ;;		Unchanged: 0/0
  8093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8095 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8096 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8097 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8098 ;;Total ram usage:        2 bytes
  8099 ;; Hardware stack levels used:    1
  8100 ;; Hardware stack levels required when called:    2
  8101 ;; This function calls:
  8102 ;;		_pollController
  8103 ;;		_spiRead
  8104 ;;		_spiWrite
  8105 ;;		i1_reversebyte
  8106 ;; This function is called by:
  8107 ;;		Interrupt level 1
  8108 ;; This function uses a non-reentrant model
  8109 ;;
  8110                           
  8111  0004                     _PS2Command:	
  8112                           
  8113                           ;incstack = 0
  8114  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  8115                           
  8116                           ; Regs used in _PS2Command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8117  0005  3180               	pagesel	$
  8118  0006                     i1l2263:	
  8119                           
  8120                           ;main.c: 63: if (SSP1IF) {
  8121  0006  002E               	movlb	14	; select bank14
  8122  0007  1C0F               	btfss	15,0	;volatile
  8123  0008  280A               	goto	u174_21
  8124  0009  280B               	goto	u174_20
  8125  000A                     u174_21:	
  8126  000A  2A3C               	goto	i1l181
  8127  000B                     u174_20:	
  8128  000B                     i1l2265:	
  8129                           
  8130                           ;main.c: 64: char cmd = spiRead();
  8131  000B  318C  24FA  3180   	fcall	_spiRead
  8132  000E  00F4               	movwf	??_PS2Command
  8133  000F  0874               	movf	??_PS2Command,w
  8134  0010  00F5               	movwf	PS2Command@cmd
  8135                           
  8136                           ;main.c: 66: switch (cmdCounter) {
  8137  0011  29EB               	goto	i1l2461
  8138  0012                     i1l2267:	
  8139                           
  8140                           ;main.c: 70: INIT_PRESSURE_SENSOR_byte3 = cmd;
  8141  0012  0875               	movf	PS2Command@cmd,w
  8142  0013  00F4               	movwf	??_PS2Command
  8143  0014  0874               	movf	??_PS2Command,w
  8144  0015  0020               	movlb	0	; select bank0
  8145  0016  00EB               	movwf	_INIT_PRESSURE_SENSOR_byte3
  8146                           
  8147                           ;main.c: 71: break;
  8148  0017  29F6               	goto	i1l2463
  8149  0018                     i1l2269:	
  8150                           
  8151                           ;main.c: 73: if(MAP_SMALL_MOTOR == 0 && cmd == 0xFF) RD4 = 1;
  8152  0018  0020               	movlb	0	; select bank0
  8153  0019  085C               	movf	_MAP_SMALL_MOTOR,w
  8154  001A  1D03               	btfss	3,2
  8155  001B  281D               	goto	u175_21
  8156  001C  281E               	goto	u175_20
  8157  001D                     u175_21:	
  8158  001D  2826               	goto	i1l121
  8159  001E                     u175_20:	
  8160  001E                     i1l2271:	
  8161  001E  0A75               	incf	PS2Command@cmd,w
  8162  001F  1D03               	btfss	3,2
  8163  0020  2822               	goto	u176_21
  8164  0021  2823               	goto	u176_20
  8165  0022                     u176_21:	
  8166  0022  2826               	goto	i1l121
  8167  0023                     u176_20:	
  8168  0023                     i1l2273:	
  8169  0023  0020               	movlb	0	; select bank0
  8170  0024  160F               	bsf	15,4	;volatile
  8171  0025  29F6               	goto	i1l2463
  8172  0026                     i1l121:	
  8173                           
  8174                           ;main.c: 74: else RD4 = 0;
  8175  0026  0020               	movlb	0	; select bank0
  8176  0027  120F               	bcf	15,4	;volatile
  8177  0028  29F6               	goto	i1l2463
  8178  0029                     i1l2275:	
  8179                           
  8180                           ;main.c: 77: if (cmd == 0x80) escapeMode = 1;
  8181  0029  3080               	movlw	128
  8182  002A  0675               	xorwf	PS2Command@cmd,w
  8183  002B  1D03               	btfss	3,2
  8184  002C  282E               	goto	u177_21
  8185  002D  282F               	goto	u177_20
  8186  002E                     u177_21:	
  8187  002E  2832               	goto	i1l2279
  8188  002F                     u177_20:	
  8189  002F                     i1l2277:	
  8190  002F  01F7               	clrf	_escapeMode
  8191  0030  0AF7               	incf	_escapeMode,f
  8192  0031  29F6               	goto	i1l2463
  8193  0032                     i1l2279:	
  8194                           
  8195                           ;main.c: 78: else escapeMode = 0;
  8196  0032  01F7               	clrf	_escapeMode
  8197  0033  29F6               	goto	i1l2463
  8198  0034                     i1l2281:	
  8199                           
  8200                           ;main.c: 81: if (cmd == 0x80) analogMode = 1;
  8201  0034  3080               	movlw	128
  8202  0035  0675               	xorwf	PS2Command@cmd,w
  8203  0036  1D03               	btfss	3,2
  8204  0037  2839               	goto	u178_21
  8205  0038  283A               	goto	u178_20
  8206  0039                     u178_21:	
  8207  0039  283D               	goto	i1l2285
  8208  003A                     u178_20:	
  8209  003A                     i1l2283:	
  8210  003A  01F8               	clrf	_analogMode
  8211  003B  0AF8               	incf	_analogMode,f
  8212  003C  29F6               	goto	i1l2463
  8213  003D                     i1l2285:	
  8214                           
  8215                           ;main.c: 82: else analogMode = 0;
  8216  003D  01F8               	clrf	_analogMode
  8217  003E  29F6               	goto	i1l2463
  8218  003F                     i1l2287:	
  8219                           
  8220                           ;main.c: 85: if (cmd == 0x80) {
  8221  003F  3080               	movlw	128
  8222  0040  0675               	xorwf	PS2Command@cmd,w
  8223  0041  1D03               	btfss	3,2
  8224  0042  2844               	goto	u179_21
  8225  0043  2845               	goto	u179_20
  8226  0044                     u179_21:	
  8227  0044  2859               	goto	i1l2299
  8228  0045                     u179_20:	
  8229  0045                     i1l2289:	
  8230                           
  8231                           ;main.c: 86: response[2] = 0x00;
  8232  0045  0021               	movlb	1	; select bank1
  8233  0046  01DA               	clrf	(_response^(0+128)+2)
  8234                           
  8235                           ;main.c: 87: response[3] = 0x00;
  8236  0047  01DB               	clrf	(_response^(0+128)+3)
  8237  0048                     i1l2291:	
  8238                           
  8239                           ;main.c: 88: response[4] = 0x80;
  8240  0048  3080               	movlw	128
  8241  0049  00F4               	movwf	??_PS2Command
  8242  004A  0874               	movf	??_PS2Command,w
  8243  004B  00DC               	movwf	(_response^(0+128)+4)
  8244  004C                     i1l2293:	
  8245                           
  8246                           ;main.c: 89: response[5] = 0x80;
  8247  004C  3080               	movlw	128
  8248  004D  00F4               	movwf	??_PS2Command
  8249  004E  0874               	movf	??_PS2Command,w
  8250  004F  00DD               	movwf	(_response^(0+128)+5)
  8251  0050                     i1l2295:	
  8252                           
  8253                           ;main.c: 90: response[6] = 0x80;
  8254  0050  3080               	movlw	128
  8255  0051  00F4               	movwf	??_PS2Command
  8256  0052  0874               	movf	??_PS2Command,w
  8257  0053  00DE               	movwf	(_response^(0+128)+6)
  8258  0054                     i1l2297:	
  8259                           
  8260                           ;main.c: 91: response[7] = 0x28;
  8261  0054  3028               	movlw	40
  8262  0055  00F4               	movwf	??_PS2Command
  8263  0056  0874               	movf	??_PS2Command,w
  8264  0057  00DF               	movwf	(_response^(0+128)+7)
  8265                           
  8266                           ;main.c: 92: } else {
  8267  0058  29F6               	goto	i1l2463
  8268  0059                     i1l2299:	
  8269                           
  8270                           ;main.c: 93: response[2] = 0x00;
  8271  0059  0021               	movlb	1	; select bank1
  8272  005A  01DA               	clrf	(_response^(0+128)+2)
  8273                           
  8274                           ;main.c: 94: response[3] = 0x00;
  8275  005B  01DB               	clrf	(_response^(0+128)+3)
  8276  005C                     i1l2301:	
  8277                           
  8278                           ;main.c: 95: response[4] = 0x80;
  8279  005C  3080               	movlw	128
  8280  005D  00F4               	movwf	??_PS2Command
  8281  005E  0874               	movf	??_PS2Command,w
  8282  005F  00DC               	movwf	(_response^(0+128)+4)
  8283  0060                     i1l2303:	
  8284                           
  8285                           ;main.c: 96: response[5] = 0x40;
  8286  0060  3040               	movlw	64
  8287  0061  00F4               	movwf	??_PS2Command
  8288  0062  0874               	movf	??_PS2Command,w
  8289  0063  00DD               	movwf	(_response^(0+128)+5)
  8290                           
  8291                           ;main.c: 97: response[6] = 0x00;
  8292  0064  01DE               	clrf	(_response^(0+128)+6)
  8293  0065                     i1l2305:	
  8294                           
  8295                           ;main.c: 98: response[7] = 0x50;
  8296  0065  3050               	movlw	80
  8297  0066  00F4               	movwf	??_PS2Command
  8298  0067  0874               	movf	??_PS2Command,w
  8299  0068  00DF               	movwf	(_response^(0+128)+7)
  8300  0069  29F6               	goto	i1l2463
  8301  006A                     i1l2307:	
  8302                           
  8303                           ;main.c: 102: if (cmd == 0x80) {
  8304  006A  3080               	movlw	128
  8305  006B  0675               	xorwf	PS2Command@cmd,w
  8306  006C  1D03               	btfss	3,2
  8307  006D  286F               	goto	u180_21
  8308  006E  2870               	goto	u180_20
  8309  006F                     u180_21:	
  8310  006F  287B               	goto	i1l2317
  8311  0070                     u180_20:	
  8312  0070                     i1l2309:	
  8313                           
  8314                           ;main.c: 103: response[2] = 0x00;
  8315  0070  0021               	movlb	1	; select bank1
  8316  0071  01DA               	clrf	(_response^(0+128)+2)
  8317                           
  8318                           ;main.c: 104: response[3] = 0x00;
  8319  0072  01DB               	clrf	(_response^(0+128)+3)
  8320                           
  8321                           ;main.c: 105: response[4] = 0x00;
  8322  0073  01DC               	clrf	(_response^(0+128)+4)
  8323  0074                     i1l2311:	
  8324                           
  8325                           ;main.c: 106: response[5] = 0xE0;
  8326  0074  30E0               	movlw	224
  8327  0075  00F4               	movwf	??_PS2Command
  8328  0076  0874               	movf	??_PS2Command,w
  8329  0077  00DD               	movwf	(_response^(0+128)+5)
  8330  0078                     i1l2313:	
  8331                           
  8332                           ;main.c: 107: response[6] = 0x00;
  8333  0078  01DE               	clrf	(_response^(0+128)+6)
  8334  0079                     i1l2315:	
  8335                           
  8336                           ;main.c: 108: response[7] = 0x00;
  8337  0079  01DF               	clrf	(_response^(0+128)+7)
  8338                           
  8339                           ;main.c: 109: } else {
  8340  007A  29F6               	goto	i1l2463
  8341  007B                     i1l2317:	
  8342                           
  8343                           ;main.c: 110: response[2] = 0x00;
  8344  007B  0021               	movlb	1	; select bank1
  8345  007C  01DA               	clrf	(_response^(0+128)+2)
  8346                           
  8347                           ;main.c: 111: response[3] = 0x00;
  8348  007D  01DB               	clrf	(_response^(0+128)+3)
  8349                           
  8350                           ;main.c: 112: response[4] = 0x00;
  8351  007E  01DC               	clrf	(_response^(0+128)+4)
  8352  007F                     i1l2319:	
  8353                           
  8354                           ;main.c: 113: response[5] = 0x20;
  8355  007F  3020               	movlw	32
  8356  0080  00F4               	movwf	??_PS2Command
  8357  0081  0874               	movf	??_PS2Command,w
  8358  0082  00DD               	movwf	(_response^(0+128)+5)
  8359  0083  2878               	goto	i1l2313
  8360  0084                     i1l2325:	
  8361                           
  8362                           ;main.c: 120: CONTROL_RESPONSE_byte3 = cmd;
  8363  0084  0875               	movf	PS2Command@cmd,w
  8364  0085  00F4               	movwf	??_PS2Command
  8365  0086  0874               	movf	??_PS2Command,w
  8366  0087  0020               	movlb	0	; select bank0
  8367  0088  00E9               	movwf	_CONTROL_RESPONSE_byte3
  8368                           
  8369                           ;main.c: 121: break;
  8370  0089  29F6               	goto	i1l2463
  8371  008A                     i1l2327:	
  8372                           
  8373                           ;main.c: 123: MAP_SMALL_MOTOR = cmd;
  8374  008A  0875               	movf	PS2Command@cmd,w
  8375  008B  00F4               	movwf	??_PS2Command
  8376  008C  0874               	movf	??_PS2Command,w
  8377  008D  0020               	movlb	0	; select bank0
  8378  008E  00DC               	movwf	_MAP_SMALL_MOTOR
  8379                           
  8380                           ;main.c: 124: break;
  8381  008F  29F6               	goto	i1l2463
  8382  0090                     i1l2331:	
  8383  0090  0876               	movf	_previousCmd,w
  8384                           
  8385                           ; Switch size 1, requested type "simple"
  8386                           ; Number of cases is 8, Range of values is 2 to 242
  8387                           ; switch strategies available:
  8388                           ; Name         Instructions Cycles
  8389                           ; simple_byte           25    13 (average)
  8390                           ; jumptable            263     9 (fixed)
  8391                           ;	Chosen strategy is simple_byte
  8392  0091  3A02               	xorlw	2	; case 2
  8393  0092  1903               	skipnz
  8394  0093  2812               	goto	i1l2267
  8395  0094  3A20               	xorlw	32	; case 34
  8396  0095  1903               	skipnz
  8397  0096  2834               	goto	i1l2281
  8398  0097  3A10               	xorlw	16	; case 50
  8399  0098  1903               	skipnz
  8400  0099  286A               	goto	i1l2307
  8401  009A  3A70               	xorlw	112	; case 66
  8402  009B  1903               	skipnz
  8403  009C  2818               	goto	i1l2269
  8404  009D  3A20               	xorlw	32	; case 98
  8405  009E  1903               	skipnz
  8406  009F  283F               	goto	i1l2287
  8407  00A0  3AD0               	xorlw	208	; case 178
  8408  00A1  1903               	skipnz
  8409  00A2  288A               	goto	i1l2327
  8410  00A3  3A70               	xorlw	112	; case 194
  8411  00A4  1903               	skipnz
  8412  00A5  2829               	goto	i1l2275
  8413  00A6  3A30               	xorlw	48	; case 242
  8414  00A7  1903               	skipnz
  8415  00A8  2884               	goto	i1l2325
  8416  00A9  29F6               	goto	i1l2463
  8417  00AA                     i1l2333:	
  8418                           
  8419                           ;main.c: 130: INIT_PRESSURE_SENSOR_byte4 = cmd;
  8420  00AA  0875               	movf	PS2Command@cmd,w
  8421  00AB  00F4               	movwf	??_PS2Command
  8422  00AC  0874               	movf	??_PS2Command,w
  8423  00AD  0020               	movlb	0	; select bank0
  8424  00AE  00EA               	movwf	_INIT_PRESSURE_SENSOR_byte4
  8425                           
  8426                           ;main.c: 131: break;
  8427  00AF  29F6               	goto	i1l2463
  8428  00B0                     i1l2335:	
  8429                           
  8430                           ;main.c: 133: if(MAP_LARGE_MOTOR == 0x80 && reversebyte(cmd) >= 0x40) RD4 = 1;
  8431  00B0  3080               	movlw	128
  8432  00B1  0020               	movlb	0	; select bank0
  8433  00B2  065B               	xorwf	_MAP_LARGE_MOTOR,w
  8434  00B3  1D03               	btfss	3,2
  8435  00B4  28B6               	goto	u181_21
  8436  00B5  28B7               	goto	u181_20
  8437  00B6                     u181_21:	
  8438  00B6  2826               	goto	i1l121
  8439  00B7                     u181_20:	
  8440  00B7                     i1l2337:	
  8441  00B7  0875               	movf	PS2Command@cmd,w
  8442  00B8  318E  2640  3180   	fcall	i1_reversebyte
  8443  00BB  00F4               	movwf	??_PS2Command
  8444  00BC  3040               	movlw	64
  8445  00BD  0274               	subwf	??_PS2Command,w
  8446  00BE  1C03               	skipc
  8447  00BF  28C1               	goto	u182_21
  8448  00C0  28C2               	goto	u182_20
  8449  00C1                     u182_21:	
  8450  00C1  2826               	goto	i1l121
  8451  00C2                     u182_20:	
  8452  00C2  2823               	goto	i1l2273
  8453  00C3                     i1l2341:	
  8454                           
  8455                           ;main.c: 137: if(cmd == 0xC0) MODE_LOCK = 1;
  8456  00C3  30C0               	movlw	192
  8457  00C4  0675               	xorwf	PS2Command@cmd,w
  8458  00C5  1D03               	btfss	3,2
  8459  00C6  28C8               	goto	u183_21
  8460  00C7  28C9               	goto	u183_20
  8461  00C8                     u183_21:	
  8462  00C8  28CD               	goto	i1l2345
  8463  00C9                     u183_20:	
  8464  00C9                     i1l2343:	
  8465  00C9  0020               	movlb	0	; select bank0
  8466  00CA  01ED               	clrf	_MODE_LOCK
  8467  00CB  0AED               	incf	_MODE_LOCK,f
  8468  00CC  29F6               	goto	i1l2463
  8469  00CD                     i1l2345:	
  8470                           
  8471                           ;main.c: 138: else MODE_LOCK = 0;
  8472  00CD  0020               	movlb	0	; select bank0
  8473  00CE  01ED               	clrf	_MODE_LOCK
  8474  00CF  29F6               	goto	i1l2463
  8475  00D0                     i1l2347:	
  8476                           
  8477                           ;main.c: 142: CONTROL_RESPONSE_byte4 = cmd;
  8478  00D0  0875               	movf	PS2Command@cmd,w
  8479  00D1  00F4               	movwf	??_PS2Command
  8480  00D2  0874               	movf	??_PS2Command,w
  8481  00D3  0020               	movlb	0	; select bank0
  8482  00D4  00E8               	movwf	_CONTROL_RESPONSE_byte4
  8483                           
  8484                           ;main.c: 143: break;
  8485  00D5  29F6               	goto	i1l2463
  8486  00D6                     i1l2349:	
  8487                           
  8488                           ;main.c: 145: MAP_LARGE_MOTOR = cmd;
  8489  00D6  0875               	movf	PS2Command@cmd,w
  8490  00D7  00F4               	movwf	??_PS2Command
  8491  00D8  0874               	movf	??_PS2Command,w
  8492  00D9  0020               	movlb	0	; select bank0
  8493  00DA  00DB               	movwf	_MAP_LARGE_MOTOR
  8494                           
  8495                           ;main.c: 146: break;
  8496  00DB  29F6               	goto	i1l2463
  8497  00DC                     i1l2353:	
  8498  00DC  0876               	movf	_previousCmd,w
  8499                           
  8500                           ; Switch size 1, requested type "simple"
  8501                           ; Number of cases is 5, Range of values is 2 to 242
  8502                           ; switch strategies available:
  8503                           ; Name         Instructions Cycles
  8504                           ; simple_byte           16     9 (average)
  8505                           ; jumptable            263     9 (fixed)
  8506                           ;	Chosen strategy is simple_byte
  8507  00DD  3A02               	xorlw	2	; case 2
  8508  00DE  1903               	skipnz
  8509  00DF  28AA               	goto	i1l2333
  8510  00E0  3A20               	xorlw	32	; case 34
  8511  00E1  1903               	skipnz
  8512  00E2  28C3               	goto	i1l2341
  8513  00E3  3A60               	xorlw	96	; case 66
  8514  00E4  1903               	skipnz
  8515  00E5  28B0               	goto	i1l2335
  8516  00E6  3AF0               	xorlw	240	; case 178
  8517  00E7  1903               	skipnz
  8518  00E8  28D6               	goto	i1l2349
  8519  00E9  3A40               	xorlw	64	; case 242
  8520  00EA  1903               	skipnz
  8521  00EB  28D0               	goto	i1l2347
  8522  00EC  29F6               	goto	i1l2463
  8523  00ED                     i1l2355:	
  8524                           
  8525                           ;main.c: 153: CONTROL_RESPONSE_byte5 = cmd;
  8526  00ED  0875               	movf	PS2Command@cmd,w
  8527  00EE  00F4               	movwf	??_PS2Command
  8528  00EF  0874               	movf	??_PS2Command,w
  8529  00F0  0020               	movlb	0	; select bank0
  8530  00F1  00E7               	movwf	_CONTROL_RESPONSE_byte5
  8531                           
  8532                           ;main.c: 154: break;
  8533  00F2  29F6               	goto	i1l2463
  8534  00F3                     i1l2359:	
  8535  00F3  0876               	movf	_previousCmd,w
  8536                           
  8537                           ; Switch size 1, requested type "simple"
  8538                           ; Number of cases is 1, Range of values is 242 to 242
  8539                           ; switch strategies available:
  8540                           ; Name         Instructions Cycles
  8541                           ; simple_byte            4     3 (average)
  8542                           ; direct_byte           11     9 (fixed)
  8543                           ; jumptable            263     9 (fixed)
  8544                           ;	Chosen strategy is simple_byte
  8545  00F4  3AF2               	xorlw	242	; case 242
  8546  00F5  1903               	skipnz
  8547  00F6  28ED               	goto	i1l2355
  8548  00F7  29F6               	goto	i1l2463
  8549  00F8                     i1l2361:	
  8550                           
  8551                           ;main.c: 163: response[2] = 0x00;
  8552  00F8  0021               	movlb	1	; select bank1
  8553  00F9  01DA               	clrf	(_response^(0+128)+2)
  8554                           
  8555                           ;main.c: 164: response[3] = 0x00;
  8556  00FA  01DB               	clrf	(_response^(0+128)+3)
  8557  00FB                     i1l2363:	
  8558                           
  8559                           ;main.c: 165: response[4] = 0x40;
  8560  00FB  3040               	movlw	64
  8561  00FC  00F4               	movwf	??_PS2Command
  8562  00FD  0874               	movf	??_PS2Command,w
  8563  00FE  00DC               	movwf	(_response^(0+128)+4)
  8564  00FF                     i1l2365:	
  8565                           
  8566                           ;main.c: 166: response[5] = 0x00;
  8567  00FF  01DD               	clrf	(_response^(0+128)+5)
  8568  0100                     i1l2367:	
  8569                           
  8570                           ;main.c: 167: response[6] = 0x00;
  8571  0100  01DE               	clrf	(_response^(0+128)+6)
  8572  0101                     i1l2369:	
  8573                           
  8574                           ;main.c: 168: response[7] = 0x5A;
  8575  0101  305A               	movlw	90
  8576  0102  00F4               	movwf	??_PS2Command
  8577  0103  0874               	movf	??_PS2Command,w
  8578  0104  00DF               	movwf	(_response^(0+128)+7)
  8579  0105                     i1l2371:	
  8580                           
  8581                           ;main.c: 169: previousCmd = cmd;
  8582  0105  0875               	movf	PS2Command@cmd,w
  8583  0106  00F4               	movwf	??_PS2Command
  8584  0107  0874               	movf	??_PS2Command,w
  8585  0108  00F6               	movwf	_previousCmd
  8586                           
  8587                           ;main.c: 170: break;
  8588  0109  29F6               	goto	i1l2463
  8589  010A                     i1l2373:	
  8590                           
  8591                           ;main.c: 177: if(analogMode == 0) {
  8592  010A  0878               	movf	_analogMode,w
  8593  010B  1D03               	btfss	3,2
  8594  010C  290E               	goto	u184_21
  8595  010D  290F               	goto	u184_20
  8596  010E                     u184_21:	
  8597  010E  2914               	goto	i1l2377
  8598  010F                     u184_20:	
  8599  010F                     i1l2375:	
  8600                           
  8601                           ;main.c: 178: response[2] = 0x00;
  8602  010F  0021               	movlb	1	; select bank1
  8603  0110  01DA               	clrf	(_response^(0+128)+2)
  8604                           
  8605                           ;main.c: 179: response[3] = 0x00;
  8606  0111  01DB               	clrf	(_response^(0+128)+3)
  8607                           
  8608                           ;main.c: 180: response[4] = 0x00;
  8609  0112  01DC               	clrf	(_response^(0+128)+4)
  8610                           
  8611                           ;main.c: 181: response[7] = 0x00;
  8612  0113  01DF               	clrf	(_response^(0+128)+7)
  8613  0114                     i1l2377:	
  8614                           
  8615                           ;main.c: 182: };main.c: 183: if(analogMode >= 1) {
  8616  0114  0878               	movf	_analogMode,w
  8617  0115  1903               	btfsc	3,2
  8618  0116  2918               	goto	u185_21
  8619  0117  2919               	goto	u185_20
  8620  0118                     u185_21:	
  8621  0118  292A               	goto	i1l2381
  8622  0119                     u185_20:	
  8623  0119                     i1l2379:	
  8624                           
  8625                           ;main.c: 188: response[2] = 0xFF;
  8626  0119  30FF               	movlw	255
  8627  011A  00F4               	movwf	??_PS2Command
  8628  011B  0874               	movf	??_PS2Command,w
  8629  011C  0021               	movlb	1	; select bank1
  8630  011D  00DA               	movwf	(_response^(0+128)+2)
  8631                           
  8632                           ;main.c: 189: response[3] = 0xFF;
  8633  011E  30FF               	movlw	255
  8634  011F  00F4               	movwf	??_PS2Command
  8635  0120  0874               	movf	??_PS2Command,w
  8636  0121  00DB               	movwf	(_response^(0+128)+3)
  8637                           
  8638                           ;main.c: 190: response[4] = 0xC0;
  8639  0122  30C0               	movlw	192
  8640  0123  00F4               	movwf	??_PS2Command
  8641  0124  0874               	movf	??_PS2Command,w
  8642  0125  00DC               	movwf	(_response^(0+128)+4)
  8643                           
  8644                           ;main.c: 191: response[7] = 0x5A;
  8645  0126  305A               	movlw	90
  8646  0127  00F4               	movwf	??_PS2Command
  8647  0128  0874               	movf	??_PS2Command,w
  8648  0129  00DF               	movwf	(_response^(0+128)+7)
  8649  012A                     i1l2381:	
  8650                           
  8651                           ;main.c: 192: };main.c: 193: response[5] = 0x00;
  8652  012A  0021               	movlb	1	; select bank1
  8653  012B  01DD               	clrf	(_response^(0+128)+5)
  8654  012C                     i1l2383:	
  8655                           
  8656                           ;main.c: 194: response[6] = 0x00;
  8657  012C  01DE               	clrf	(_response^(0+128)+6)
  8658                           
  8659                           ;main.c: 195: break;
  8660  012D  29F6               	goto	i1l2463
  8661  012E                     i1l2385:	
  8662                           
  8663                           ;main.c: 201: pollController(response);
  8664  012E  30D8               	movlw	(low (_response| 0))& (0+255)
  8665  012F  3187  274D  3180   	fcall	_pollController
  8666  0132  2905               	goto	i1l2371
  8667  0133                     i1l2389:	
  8668                           
  8669                           ;main.c: 210: if(escapeMode) {
  8670  0133  0877               	movf	_escapeMode,w
  8671  0134  1903               	btfsc	3,2
  8672  0135  2937               	goto	u186_21
  8673  0136  2938               	goto	u186_20
  8674  0137                     u186_21:	
  8675  0137  2940               	goto	i1l2393
  8676  0138                     u186_20:	
  8677  0138                     i1l2391:	
  8678                           
  8679                           ;main.c: 211: response[2] = 0x00;
  8680  0138  0021               	movlb	1	; select bank1
  8681  0139  01DA               	clrf	(_response^(0+128)+2)
  8682                           
  8683                           ;main.c: 212: response[3] = 0x00;
  8684  013A  01DB               	clrf	(_response^(0+128)+3)
  8685                           
  8686                           ;main.c: 213: response[4] = 0x00;
  8687  013B  01DC               	clrf	(_response^(0+128)+4)
  8688                           
  8689                           ;main.c: 214: response[5] = 0x00;
  8690  013C  01DD               	clrf	(_response^(0+128)+5)
  8691                           
  8692                           ;main.c: 215: response[6] = 0x00;
  8693  013D  01DE               	clrf	(_response^(0+128)+6)
  8694                           
  8695                           ;main.c: 216: response[7] = 0x00;
  8696  013E  01DF               	clrf	(_response^(0+128)+7)
  8697                           
  8698                           ;main.c: 217: }
  8699  013F  2905               	goto	i1l2371
  8700  0140                     i1l2393:	
  8701                           
  8702                           ;main.c: 218: else {;main.c: 219: pollController(response);
  8703  0140  30D8               	movlw	(low (_response| 0))& (0+255)
  8704  0141  3187  274D  3180   	fcall	_pollController
  8705  0144  2905               	goto	i1l2371
  8706  0145                     i1l2401:	
  8707                           
  8708                           ;main.c: 243: response[2] = 0xC0;
  8709  0145  30C0               	movlw	192
  8710  0146  00F4               	movwf	??_PS2Command
  8711  0147  0874               	movf	??_PS2Command,w
  8712  0148  0021               	movlb	1	; select bank1
  8713  0149  00DA               	movwf	(_response^(0+128)+2)
  8714                           
  8715                           ;main.c: 244: response[3] = 0x40;
  8716  014A  3040               	movlw	64
  8717  014B  00F4               	movwf	??_PS2Command
  8718  014C  0874               	movf	??_PS2Command,w
  8719  014D  00DB               	movwf	(_response^(0+128)+3)
  8720  014E                     i1l2403:	
  8721                           
  8722                           ;main.c: 245: if (analogMode >= 1) response[4] = 0x80;
  8723  014E  0878               	movf	_analogMode,w
  8724  014F  1903               	btfsc	3,2
  8725  0150  2952               	goto	u187_21
  8726  0151  2953               	goto	u187_20
  8727  0152                     u187_21:	
  8728  0152  2958               	goto	i1l2407
  8729  0153                     u187_20:	
  8730  0153                     i1l2405:	
  8731  0153  3080               	movlw	128
  8732  0154  00F4               	movwf	??_PS2Command
  8733  0155  0874               	movf	??_PS2Command,w
  8734  0156  00DC               	movwf	(_response^(0+128)+4)
  8735  0157  2959               	goto	i1l2409
  8736  0158                     i1l2407:	
  8737                           
  8738                           ;main.c: 246: else response[4] = 0x00;
  8739  0158  01DC               	clrf	(_response^(0+128)+4)
  8740  0159                     i1l2409:	
  8741                           
  8742                           ;main.c: 247: response[5] = 0x40;
  8743  0159  3040               	movlw	64
  8744  015A  00F4               	movwf	??_PS2Command
  8745  015B  0874               	movf	??_PS2Command,w
  8746  015C  00DD               	movwf	(_response^(0+128)+5)
  8747  015D                     i1l2411:	
  8748                           
  8749                           ;main.c: 248: response[6] = 0x80;
  8750  015D  3080               	movlw	128
  8751  015E  00F4               	movwf	??_PS2Command
  8752  015F  0874               	movf	??_PS2Command,w
  8753  0160  00DE               	movwf	(_response^(0+128)+6)
  8754                           
  8755                           ;main.c: 249: response[7] = 0x00;
  8756  0161  01DF               	clrf	(_response^(0+128)+7)
  8757                           
  8758                           ;main.c: 250: break;
  8759  0162  29F6               	goto	i1l2463
  8760  0163                     i1l2413:	
  8761                           
  8762                           ;main.c: 257: response[2] = 0x00;
  8763  0163  0021               	movlb	1	; select bank1
  8764  0164  01DA               	clrf	(_response^(0+128)+2)
  8765                           
  8766                           ;main.c: 258: response[3] = 0x00;
  8767  0165  01DB               	clrf	(_response^(0+128)+3)
  8768  0166                     i1l2415:	
  8769                           
  8770                           ;main.c: 259: response[4] = 0x80;
  8771  0166  3080               	movlw	128
  8772  0167  00F4               	movwf	??_PS2Command
  8773  0168  0874               	movf	??_PS2Command,w
  8774  0169  00DC               	movwf	(_response^(0+128)+4)
  8775  016A                     i1l2417:	
  8776                           
  8777                           ;main.c: 260: response[5] = 0x80;
  8778  016A  3080               	movlw	128
  8779  016B  00F4               	movwf	??_PS2Command
  8780  016C  0874               	movf	??_PS2Command,w
  8781  016D  00DD               	movwf	(_response^(0+128)+5)
  8782  016E                     i1l2419:	
  8783                           
  8784                           ;main.c: 261: response[6] = 0x80;
  8785  016E  3080               	movlw	128
  8786  016F  00F4               	movwf	??_PS2Command
  8787  0170  0874               	movf	??_PS2Command,w
  8788  0171  00DE               	movwf	(_response^(0+128)+6)
  8789  0172                     i1l2421:	
  8790                           
  8791                           ;main.c: 262: response[7] = 0x50;
  8792  0172  3050               	movlw	80
  8793  0173  00F4               	movwf	??_PS2Command
  8794  0174  0874               	movf	??_PS2Command,w
  8795  0175  00DF               	movwf	(_response^(0+128)+7)
  8796  0176  2905               	goto	i1l2371
  8797  0177                     i1l2425:	
  8798                           
  8799                           ;main.c: 271: response[2] = 0x00;
  8800  0177  0021               	movlb	1	; select bank1
  8801  0178  01DA               	clrf	(_response^(0+128)+2)
  8802                           
  8803                           ;main.c: 272: response[3] = 0x00;
  8804  0179  01DB               	clrf	(_response^(0+128)+3)
  8805  017A                     i1l2427:	
  8806                           
  8807                           ;main.c: 273: response[4] = 0x40;
  8808  017A  3040               	movlw	64
  8809  017B  00F4               	movwf	??_PS2Command
  8810  017C  0874               	movf	??_PS2Command,w
  8811  017D  00DC               	movwf	(_response^(0+128)+4)
  8812  017E                     i1l2429:	
  8813                           
  8814                           ;main.c: 274: response[5] = 0x00;
  8815  017E  01DD               	clrf	(_response^(0+128)+5)
  8816                           
  8817                           ;main.c: 275: response[6] = 0x80;
  8818  017F  3080               	movlw	128
  8819  0180  00F4               	movwf	??_PS2Command
  8820  0181  0874               	movf	??_PS2Command,w
  8821  0182  00DE               	movwf	(_response^(0+128)+6)
  8822  0183  2879               	goto	i1l2315
  8823  0184                     i1l2433:	
  8824                           
  8825                           ;main.c: 284: response[2] = 0x00;
  8826  0184  0021               	movlb	1	; select bank1
  8827  0185  01DA               	clrf	(_response^(0+128)+2)
  8828                           
  8829                           ;main.c: 285: response[3] = 0x00;
  8830  0186  01DB               	clrf	(_response^(0+128)+3)
  8831                           
  8832                           ;main.c: 286: response[4] = 0x00;
  8833  0187  01DC               	clrf	(_response^(0+128)+4)
  8834  0188                     i1l2435:	
  8835                           
  8836                           ;main.c: 287: response[5] = 0x20;
  8837  0188  3020               	movlw	32
  8838  0189  00F4               	movwf	??_PS2Command
  8839  018A  0874               	movf	??_PS2Command,w
  8840  018B  00DD               	movwf	(_response^(0+128)+5)
  8841  018C                     i1l2437:	
  8842                           
  8843                           ;main.c: 288: response[6] = 0x00;
  8844  018C  01DE               	clrf	(_response^(0+128)+6)
  8845  018D                     i1l2439:	
  8846                           
  8847                           ;main.c: 289: response[7] = 0x00;
  8848  018D  01DF               	clrf	(_response^(0+128)+7)
  8849  018E  2905               	goto	i1l2371
  8850  018F                     i1l2443:	
  8851                           
  8852                           ;main.c: 297: response[2] = MAP_SMALL_MOTOR;
  8853  018F  0020               	movlb	0	; select bank0
  8854  0190  085C               	movf	_MAP_SMALL_MOTOR,w
  8855  0191  00F4               	movwf	??_PS2Command
  8856  0192  0874               	movf	??_PS2Command,w
  8857  0193  0021               	movlb	1	; select bank1
  8858  0194  00DA               	movwf	(_response^(0+128)+2)
  8859                           
  8860                           ;main.c: 298: response[3] = MAP_LARGE_MOTOR;
  8861  0195  0020               	movlb	0	; select bank0
  8862  0196  085B               	movf	_MAP_LARGE_MOTOR,w
  8863  0197  00F4               	movwf	??_PS2Command
  8864  0198  0874               	movf	??_PS2Command,w
  8865  0199  0021               	movlb	1	; select bank1
  8866  019A  00DB               	movwf	(_response^(0+128)+3)
  8867                           
  8868                           ;main.c: 299: response[4] = 0xFF;
  8869  019B  30FF               	movlw	255
  8870  019C  00F4               	movwf	??_PS2Command
  8871  019D  0874               	movf	??_PS2Command,w
  8872  019E  00DC               	movwf	(_response^(0+128)+4)
  8873                           
  8874                           ;main.c: 300: response[5] = 0xFF;
  8875  019F  30FF               	movlw	255
  8876  01A0  00F4               	movwf	??_PS2Command
  8877  01A1  0874               	movf	??_PS2Command,w
  8878  01A2  00DD               	movwf	(_response^(0+128)+5)
  8879                           
  8880                           ;main.c: 301: response[6] = 0xFF;
  8881  01A3  30FF               	movlw	255
  8882  01A4  00F4               	movwf	??_PS2Command
  8883  01A5  0874               	movf	??_PS2Command,w
  8884  01A6  00DE               	movwf	(_response^(0+128)+6)
  8885                           
  8886                           ;main.c: 302: response[7] = 0xFF;
  8887  01A7  30FF               	movlw	255
  8888  01A8  00F4               	movwf	??_PS2Command
  8889  01A9  0874               	movf	??_PS2Command,w
  8890  01AA  00DF               	movwf	(_response^(0+128)+7)
  8891                           
  8892                           ;main.c: 303: previousCmd = cmd;
  8893  01AB  0875               	movf	PS2Command@cmd,w
  8894  01AC  00F4               	movwf	??_PS2Command
  8895  01AD  0874               	movf	??_PS2Command,w
  8896  01AE  00F6               	movwf	_previousCmd
  8897                           
  8898                           ;main.c: 304: break;
  8899  01AF  29F6               	goto	i1l2463
  8900  01B0                     i1l2445:	
  8901                           
  8902                           ;main.c: 309: response[2] = 0x00;
  8903  01B0  0021               	movlb	1	; select bank1
  8904  01B1  01DA               	clrf	(_response^(0+128)+2)
  8905                           
  8906                           ;main.c: 310: response[3] = 0x00;
  8907  01B2  01DB               	clrf	(_response^(0+128)+3)
  8908                           
  8909                           ;main.c: 311: response[4] = 0x00;
  8910  01B3  01DC               	clrf	(_response^(0+128)+4)
  8911                           
  8912                           ;main.c: 312: response[5] = 0x00;
  8913  01B4  01DD               	clrf	(_response^(0+128)+5)
  8914                           
  8915                           ;main.c: 313: response[6] = 0x00;
  8916  01B5  01DE               	clrf	(_response^(0+128)+6)
  8917  01B6                     i1l2447:	
  8918                           
  8919                           ;main.c: 314: response[7] = 0x5A;
  8920  01B6  305A               	movlw	90
  8921  01B7  00F4               	movwf	??_PS2Command
  8922  01B8  0874               	movf	??_PS2Command,w
  8923  01B9  00DF               	movwf	(_response^(0+128)+7)
  8924  01BA                     i1l2449:	
  8925                           
  8926                           ;main.c: 315: previousCmd = cmd;
  8927  01BA  0875               	movf	PS2Command@cmd,w
  8928  01BB  00F4               	movwf	??_PS2Command
  8929  01BC  0874               	movf	??_PS2Command,w
  8930  01BD  00F6               	movwf	_previousCmd
  8931  01BE                     i1l2451:	
  8932                           
  8933                           ;main.c: 316: if(analogMode == 1) analogMode = 2;
  8934  01BE  0378               	decf	_analogMode,w
  8935  01BF  1D03               	btfss	3,2
  8936  01C0  29C2               	goto	u188_21
  8937  01C1  29C3               	goto	u188_20
  8938  01C2                     u188_21:	
  8939  01C2  29F6               	goto	i1l2463
  8940  01C3                     u188_20:	
  8941  01C3                     i1l2453:	
  8942  01C3  3002               	movlw	2
  8943  01C4  00F4               	movwf	??_PS2Command
  8944  01C5  0874               	movf	??_PS2Command,w
  8945  01C6  00F8               	movwf	_analogMode
  8946  01C7  29F6               	goto	i1l2463
  8947  01C8                     i1l2457:	
  8948  01C8  0875               	movf	PS2Command@cmd,w
  8949                           
  8950                           ; Switch size 1, requested type "simple"
  8951                           ; Number of cases is 11, Range of values is 2 to 242
  8952                           ; switch strategies available:
  8953                           ; Name         Instructions Cycles
  8954                           ; simple_byte           34    18 (average)
  8955                           ; jumptable            263     9 (fixed)
  8956                           ;	Chosen strategy is simple_byte
  8957  01C9  3A02               	xorlw	2	; case 2
  8958  01CA  1903               	skipnz
  8959  01CB  28F8               	goto	i1l2361
  8960  01CC  3A20               	xorlw	32	; case 34
  8961  01CD  1903               	skipnz
  8962  01CE  2938               	goto	i1l2391
  8963  01CF  3A10               	xorlw	16	; case 50
  8964  01D0  1903               	skipnz
  8965  01D1  2984               	goto	i1l2433
  8966  01D2  3A70               	xorlw	112	; case 66
  8967  01D3  1903               	skipnz
  8968  01D4  292E               	goto	i1l2385
  8969  01D5  3A20               	xorlw	32	; case 98
  8970  01D6  1903               	skipnz
  8971  01D7  2963               	goto	i1l2413
  8972  01D8  3AE0               	xorlw	224	; case 130
  8973  01D9  1903               	skipnz
  8974  01DA  290A               	goto	i1l2373
  8975  01DB  3A20               	xorlw	32	; case 162
  8976  01DC  1903               	skipnz
  8977  01DD  2945               	goto	i1l2401
  8978  01DE  3A10               	xorlw	16	; case 178
  8979  01DF  1903               	skipnz
  8980  01E0  298F               	goto	i1l2443
  8981  01E1  3A70               	xorlw	112	; case 194
  8982  01E2  1903               	skipnz
  8983  01E3  2933               	goto	i1l2389
  8984  01E4  3A20               	xorlw	32	; case 226
  8985  01E5  1903               	skipnz
  8986  01E6  2977               	goto	i1l2425
  8987  01E7  3A10               	xorlw	16	; case 242
  8988  01E8  1903               	skipnz
  8989  01E9  29B0               	goto	i1l2445
  8990  01EA  29F6               	goto	i1l2463
  8991  01EB                     i1l2461:	
  8992  01EB  0879               	movf	_cmdCounter,w
  8993                           
  8994                           ; Switch size 1, requested type "simple"
  8995                           ; Number of cases is 3, Range of values is 3 to 5
  8996                           ; switch strategies available:
  8997                           ; Name         Instructions Cycles
  8998                           ; simple_byte           10     6 (average)
  8999                           ; direct_byte           15     9 (fixed)
  9000                           ; jumptable            263     9 (fixed)
  9001                           ;	Chosen strategy is simple_byte
  9002  01EC  3A03               	xorlw	3	; case 3
  9003  01ED  1903               	skipnz
  9004  01EE  2890               	goto	i1l2331
  9005  01EF  3A07               	xorlw	7	; case 4
  9006  01F0  1903               	skipnz
  9007  01F1  28DC               	goto	i1l2353
  9008  01F2  3A01               	xorlw	1	; case 5
  9009  01F3  1903               	skipnz
  9010  01F4  28F3               	goto	i1l2359
  9011  01F5  29C8               	goto	i1l2457
  9012  01F6                     i1l2463:	
  9013                           
  9014                           ;main.c: 323: spiWrite(response[cmdCounter]);
  9015  01F6  0879               	movf	_cmdCounter,w
  9016  01F7  3ED8               	addlw	(low (_response| 0))& (0+255)
  9017  01F8  0086               	movwf	6
  9018  01F9  0187               	clrf	7
  9019  01FA  0801               	movf	1,w
  9020  01FB  318C  24EF  3180   	fcall	_spiWrite
  9021  01FE                     i1l2465:	
  9022                           
  9023                           ;main.c: 325: RA4 = 0;
  9024  01FE  0020               	movlb	0	; select bank0
  9025  01FF  120C               	bcf	12,4	;volatile
  9026  0200                     i1l2467:	
  9027                           
  9028                           ;main.c: 326: _delay((unsigned long)((1)*(32000000/4000000.0)));
  9029  0200  3200               	nop2	;2 cycle nop
  9030  0201  3200               	nop2	;2 cycle nop
  9031  0202  3200               	nop2	;2 cycle nop
  9032  0203  3200               	nop2	;2 cycle nop
  9033  0204                     i1l2469:	
  9034                           
  9035                           ;main.c: 327: RA4 = 1;
  9036  0204  0020               	movlb	0	; select bank0
  9037  0205  160C               	bsf	12,4	;volatile
  9038  0206                     i1l2471:	
  9039                           
  9040                           ;main.c: 330: if (cmdCounter < responseLength) {
  9041  0206  085D               	movf	_responseLength,w
  9042  0207  0279               	subwf	_cmdCounter,w
  9043  0208  1803               	skipnc
  9044  0209  2A0B               	goto	u189_21
  9045  020A  2A0C               	goto	u189_20
  9046  020B                     u189_21:	
  9047  020B  2A10               	goto	i1l175
  9048  020C                     u189_20:	
  9049  020C                     i1l2473:	
  9050                           
  9051                           ;main.c: 331: cmdCounter++;
  9052  020C  3001               	movlw	1
  9053  020D  00F4               	movwf	??_PS2Command
  9054  020E  0874               	movf	??_PS2Command,w
  9055  020F  07F9               	addwf	_cmdCounter,f
  9056  0210                     i1l175:	
  9057                           
  9058                           ;main.c: 332: };main.c: 335: if (escapeMode) {
  9059  0210  0877               	movf	_escapeMode,w
  9060  0211  1903               	btfsc	3,2
  9061  0212  2A14               	goto	u190_21
  9062  0213  2A15               	goto	u190_20
  9063  0214                     u190_21:	
  9064  0214  2A1B               	goto	i1l2477
  9065  0215                     u190_20:	
  9066  0215                     i1l2475:	
  9067                           
  9068                           ;main.c: 336: response[0] = 0xCF;
  9069  0215  30CF               	movlw	207
  9070  0216  00F4               	movwf	??_PS2Command
  9071  0217  0874               	movf	??_PS2Command,w
  9072  0218  0021               	movlb	1	; select bank1
  9073  0219  00D8               	movwf	_response^(0+128)
  9074                           
  9075                           ;main.c: 337: }
  9076  021A  2A3A               	goto	i1l2487
  9077  021B                     i1l2477:	
  9078                           
  9079                           ;main.c: 338: else {;main.c: 339: if(analogMode == 0) response[0] = 0x82;
  9080  021B  0878               	movf	_analogMode,w
  9081  021C  1D03               	btfss	3,2
  9082  021D  2A1F               	goto	u191_21
  9083  021E  2A20               	goto	u191_20
  9084  021F                     u191_21:	
  9085  021F  2A25               	goto	i1l2481
  9086  0220                     u191_20:	
  9087  0220                     i1l2479:	
  9088  0220  3082               	movlw	130
  9089  0221  00F4               	movwf	??_PS2Command
  9090  0222  0874               	movf	??_PS2Command,w
  9091  0223  0021               	movlb	1	; select bank1
  9092  0224  00D8               	movwf	_response^(0+128)
  9093  0225                     i1l2481:	
  9094                           
  9095                           ;main.c: 340: if(analogMode == 1) response[0] = 0xCE;
  9096  0225  0378               	decf	_analogMode,w
  9097  0226  1D03               	btfss	3,2
  9098  0227  2A29               	goto	u192_21
  9099  0228  2A2A               	goto	u192_20
  9100  0229                     u192_21:	
  9101  0229  2A2F               	goto	i1l179
  9102  022A                     u192_20:	
  9103  022A                     i1l2483:	
  9104  022A  30CE               	movlw	206
  9105  022B  00F4               	movwf	??_PS2Command
  9106  022C  0874               	movf	??_PS2Command,w
  9107  022D  0021               	movlb	1	; select bank1
  9108  022E  00D8               	movwf	_response^(0+128)
  9109  022F                     i1l179:	
  9110                           
  9111                           ;main.c: 341: if(analogMode > 1) response[0] = 0x9E;
  9112  022F  3002               	movlw	2
  9113  0230  0278               	subwf	_analogMode,w
  9114  0231  1C03               	skipc
  9115  0232  2A34               	goto	u193_21
  9116  0233  2A35               	goto	u193_20
  9117  0234                     u193_21:	
  9118  0234  2A3A               	goto	i1l2487
  9119  0235                     u193_20:	
  9120  0235                     i1l2485:	
  9121  0235  309E               	movlw	158
  9122  0236  00F4               	movwf	??_PS2Command
  9123  0237  0874               	movf	??_PS2Command,w
  9124  0238  0021               	movlb	1	; select bank1
  9125  0239  00D8               	movwf	_response^(0+128)
  9126  023A                     i1l2487:	
  9127                           
  9128                           ;main.c: 342: };main.c: 344: SSP1IF = 0;
  9129  023A  002E               	movlb	14	; select bank14
  9130  023B  100F               	bcf	15,0	;volatile
  9131  023C                     i1l181:	
  9132  023C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9133  023D  0009               	retfie
  9134  023E                     __end_of_PS2Command:	
  9135                           
  9136                           	psect	text20
  9137  0E40                     __ptext20:	
  9138 ;; *************** function i1_reversebyte *****************
  9139 ;; Defined at:
  9140 ;;		line 176 in file "Controller.c"
  9141 ;; Parameters:    Size  Location     Type
  9142 ;;  byte            1    wreg     unsigned char 
  9143 ;; Auto vars:     Size  Location     Type
  9144 ;;  byte            1    3[COMMON] unsigned char 
  9145 ;; Return value:  Size  Location     Type
  9146 ;;                  1    wreg      unsigned char 
  9147 ;; Registers used:
  9148 ;;		wreg, status,2, status,0
  9149 ;; Tracked objects:
  9150 ;;		On entry : 0/0
  9151 ;;		On exit  : 0/0
  9152 ;;		Unchanged: 0/0
  9153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9155 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9156 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9157 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9158 ;;Total ram usage:        4 bytes
  9159 ;; Hardware stack levels used:    1
  9160 ;; This function calls:
  9161 ;;		Nothing
  9162 ;; This function is called by:
  9163 ;;		_PS2Command
  9164 ;; This function uses a non-reentrant model
  9165 ;;
  9166                           
  9167                           
  9168                           ;psect for function i1_reversebyte
  9169  0E40                     i1_reversebyte:	
  9170                           
  9171                           ;incstack = 0
  9172                           ; Regs used in i1_reversebyte: [wreg+status,2+status,0]
  9173                           ;i1reversebyte@byte stored from wreg
  9174  0E40  00F3               	movwf	i1reversebyte@byte
  9175  0E41                     i1l2257:	
  9176                           
  9177                           ;Controller.c: 177: byte = (byte & 0xF0) >> 4 | (byte & 0x0F) << 4;
  9178  0E41  0873               	movf	i1reversebyte@byte,w
  9179  0E42  390F               	andlw	15
  9180  0E43  00F0               	movwf	??i1_reversebyte
  9181  0E44  3004               	movlw	4
  9182  0E45                     u169_25:	
  9183  0E45  35F0               	lslf	??i1_reversebyte,f
  9184  0E46  0B89               	decfsz	9,f
  9185  0E47  2E45               	goto	u169_25
  9186  0E48  0873               	movf	i1reversebyte@byte,w
  9187  0E49  00F1               	movwf	??i1_reversebyte+1
  9188  0E4A  3004               	movlw	4
  9189  0E4B                     u170_25:	
  9190  0E4B  36F1               	lsrf	??i1_reversebyte+1,f
  9191  0E4C  0B89               	decfsz	9,f
  9192  0E4D  2E4B               	goto	u170_25
  9193  0E4E  0871               	movf	??i1_reversebyte+1,w
  9194  0E4F  390F               	andlw	15
  9195  0E50  0470               	iorwf	??i1_reversebyte,w
  9196  0E51  00F2               	movwf	??i1_reversebyte+2
  9197  0E52  0872               	movf	??i1_reversebyte+2,w
  9198  0E53  00F3               	movwf	i1reversebyte@byte
  9199                           
  9200                           ;Controller.c: 178: byte = (byte & 0xCC) >> 2 | (byte & 0x33) << 2;
  9201  0E54  0873               	movf	i1reversebyte@byte,w
  9202  0E55  3933               	andlw	51
  9203  0E56  00F0               	movwf	??i1_reversebyte
  9204  0E57  3002               	movlw	2
  9205  0E58                     u171_25:	
  9206  0E58  35F0               	lslf	??i1_reversebyte,f
  9207  0E59  0B89               	decfsz	9,f
  9208  0E5A  2E58               	goto	u171_25
  9209  0E5B  0873               	movf	i1reversebyte@byte,w
  9210  0E5C  00F1               	movwf	??i1_reversebyte+1
  9211  0E5D  3002               	movlw	2
  9212  0E5E                     u172_25:	
  9213  0E5E  36F1               	lsrf	??i1_reversebyte+1,f
  9214  0E5F  0B89               	decfsz	9,f
  9215  0E60  2E5E               	goto	u172_25
  9216  0E61  0871               	movf	??i1_reversebyte+1,w
  9217  0E62  3933               	andlw	51
  9218  0E63  0470               	iorwf	??i1_reversebyte,w
  9219  0E64  00F2               	movwf	??i1_reversebyte+2
  9220  0E65  0872               	movf	??i1_reversebyte+2,w
  9221  0E66  00F3               	movwf	i1reversebyte@byte
  9222                           
  9223                           ;Controller.c: 179: byte = (byte & 0xAA) >> 1 | (byte & 0x55) << 1;
  9224  0E67  0873               	movf	i1reversebyte@byte,w
  9225  0E68  3955               	andlw	85
  9226  0E69  00F0               	movwf	??i1_reversebyte
  9227  0E6A  3001               	movlw	1
  9228  0E6B                     u173_25:	
  9229  0E6B  35F0               	lslf	??i1_reversebyte,f
  9230  0E6C  0B89               	decfsz	9,f
  9231  0E6D  2E6B               	goto	u173_25
  9232  0E6E  3673               	lsrf	i1reversebyte@byte,w
  9233  0E6F  3955               	andlw	85
  9234  0E70  0470               	iorwf	??i1_reversebyte,w
  9235  0E71  00F1               	movwf	??i1_reversebyte+1
  9236  0E72  0871               	movf	??i1_reversebyte+1,w
  9237  0E73  00F3               	movwf	i1reversebyte@byte
  9238  0E74                     i1l2259:	
  9239                           
  9240                           ;Controller.c: 181: return byte;
  9241  0E74  0873               	movf	i1reversebyte@byte,w
  9242  0E75                     i1l353:	
  9243  0E75  0008               	return
  9244  0E76                     __end_ofi1_reversebyte:	
  9245                           
  9246                           	psect	text21
  9247  0CEF                     __ptext21:	
  9248 ;; *************** function _spiWrite *****************
  9249 ;; Defined at:
  9250 ;;		line 32 in file "Spi.c"
  9251 ;; Parameters:    Size  Location     Type
  9252 ;;  dat             1    wreg     unsigned char 
  9253 ;; Auto vars:     Size  Location     Type
  9254 ;;  dat             1    0[COMMON] unsigned char 
  9255 ;; Return value:  Size  Location     Type
  9256 ;;                  1    wreg      void 
  9257 ;; Registers used:
  9258 ;;		wreg
  9259 ;; Tracked objects:
  9260 ;;		On entry : 0/0
  9261 ;;		On exit  : 0/0
  9262 ;;		Unchanged: 0/0
  9263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9265 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9267 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9268 ;;Total ram usage:        1 bytes
  9269 ;; Hardware stack levels used:    1
  9270 ;; This function calls:
  9271 ;;		Nothing
  9272 ;; This function is called by:
  9273 ;;		_PS2Command
  9274 ;; This function uses a non-reentrant model
  9275 ;;
  9276                           
  9277                           
  9278                           ;psect for function _spiWrite
  9279  0CEF                     _spiWrite:	
  9280                           
  9281                           ;incstack = 0
  9282                           ; Regs used in _spiWrite: [wreg]
  9283                           ;spiWrite@dat stored from wreg
  9284  0CEF  00F0               	movwf	spiWrite@dat
  9285  0CF0                     i1l2153:	
  9286                           
  9287                           ;Spi.c: 34: SSP1BUF = dat;
  9288  0CF0  0870               	movf	spiWrite@dat,w
  9289  0CF1  0023               	movlb	3	; select bank3
  9290  0CF2  008C               	movwf	12	;volatile
  9291  0CF3                     i1l428:	
  9292  0CF3  0008               	return
  9293  0CF4                     __end_of_spiWrite:	
  9294                           
  9295                           	psect	text22
  9296  0CFA                     __ptext22:	
  9297 ;; *************** function _spiRead *****************
  9298 ;; Defined at:
  9299 ;;		line 37 in file "Spi.c"
  9300 ;; Parameters:    Size  Location     Type
  9301 ;;		None
  9302 ;; Auto vars:     Size  Location     Type
  9303 ;;		None
  9304 ;; Return value:  Size  Location     Type
  9305 ;;                  1    wreg      unsigned char 
  9306 ;; Registers used:
  9307 ;;		wreg, status,2, status,0, pclath, cstack
  9308 ;; Tracked objects:
  9309 ;;		On entry : 0/0
  9310 ;;		On exit  : 0/0
  9311 ;;		Unchanged: 0/0
  9312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9317 ;;Total ram usage:        0 bytes
  9318 ;; Hardware stack levels used:    1
  9319 ;; Hardware stack levels required when called:    1
  9320 ;; This function calls:
  9321 ;;		_spiReceiveWait
  9322 ;; This function is called by:
  9323 ;;		_PS2Command
  9324 ;; This function uses a non-reentrant model
  9325 ;;
  9326                           
  9327                           
  9328                           ;psect for function _spiRead
  9329  0CFA                     _spiRead:	
  9330  0CFA                     i1l2147:	
  9331                           ;incstack = 0
  9332                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  9333                           
  9334                           
  9335                           ;Spi.c: 39: spiReceiveWait();
  9336  0CFA  318C  24F4  318C   	fcall	_spiReceiveWait
  9337  0CFD                     i1l2149:	
  9338                           
  9339                           ;Spi.c: 40: return(SSP1BUF);
  9340  0CFD  0023               	movlb	3	; select bank3
  9341  0CFE  080C               	movf	12,w	;volatile
  9342  0CFF                     i1l431:	
  9343  0CFF  0008               	return
  9344  0D00                     __end_of_spiRead:	
  9345                           
  9346                           	psect	text23
  9347  0CF4                     __ptext23:	
  9348 ;; *************** function _spiReceiveWait *****************
  9349 ;; Defined at:
  9350 ;;		line 27 in file "Spi.c"
  9351 ;; Parameters:    Size  Location     Type
  9352 ;;		None
  9353 ;; Auto vars:     Size  Location     Type
  9354 ;;		None
  9355 ;; Return value:  Size  Location     Type
  9356 ;;                  1    wreg      void 
  9357 ;; Registers used:
  9358 ;;		None
  9359 ;; Tracked objects:
  9360 ;;		On entry : 0/0
  9361 ;;		On exit  : 0/0
  9362 ;;		Unchanged: 0/0
  9363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9368 ;;Total ram usage:        0 bytes
  9369 ;; Hardware stack levels used:    1
  9370 ;; This function calls:
  9371 ;;		Nothing
  9372 ;; This function is called by:
  9373 ;;		_spiRead
  9374 ;; This function uses a non-reentrant model
  9375 ;;
  9376                           
  9377                           
  9378                           ;psect for function _spiReceiveWait
  9379  0CF4                     _spiReceiveWait:	
  9380  0CF4                     i1l2113:	
  9381                           ;incstack = 0
  9382                           ; Regs used in _spiReceiveWait: []
  9383                           
  9384  0CF4                     i1l422:	
  9385                           ;Spi.c: 29: while ( !SSP1STATbits.BF );
  9386                           
  9387  0CF4  0023               	movlb	3	; select bank3
  9388  0CF5  1C0F               	btfss	15,0	;volatile
  9389  0CF6  2CF8               	goto	u155_21
  9390  0CF7  2CF9               	goto	u155_20
  9391  0CF8                     u155_21:	
  9392  0CF8  2CF4               	goto	i1l422
  9393  0CF9                     u155_20:	
  9394  0CF9                     i1l425:	
  9395  0CF9  0008               	return
  9396  0CFA                     __end_of_spiReceiveWait:	
  9397                           
  9398                           	psect	text24
  9399  074D                     __ptext24:	
  9400 ;; *************** function _pollController *****************
  9401 ;; Defined at:
  9402 ;;		line 34 in file "main.c"
  9403 ;; Parameters:    Size  Location     Type
  9404 ;;  response        1    wreg     PTR unsigned char 
  9405 ;;		 -> response(20), 
  9406 ;; Auto vars:     Size  Location     Type
  9407 ;;  response        1    1[COMMON] PTR unsigned char 
  9408 ;;		 -> response(20), 
  9409 ;; Return value:  Size  Location     Type
  9410 ;;                  1    wreg      void 
  9411 ;; Registers used:
  9412 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9413 ;; Tracked objects:
  9414 ;;		On entry : 0/0
  9415 ;;		On exit  : 0/0
  9416 ;;		Unchanged: 0/0
  9417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9419 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9420 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9421 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9422 ;;Total ram usage:        2 bytes
  9423 ;; Hardware stack levels used:    1
  9424 ;; This function calls:
  9425 ;;		Nothing
  9426 ;; This function is called by:
  9427 ;;		_PS2Command
  9428 ;; This function uses a non-reentrant model
  9429 ;;
  9430                           
  9431                           
  9432                           ;psect for function _pollController
  9433  074D                     _pollController:	
  9434                           
  9435                           ;incstack = 0
  9436                           ; Regs used in _pollController: [wreg+fsr1l+fsr1h+status,2+status,0]
  9437                           ;pollController@response stored from wreg
  9438  074D  00F1               	movwf	pollController@response
  9439  074E                     i1l2115:	
  9440                           
  9441                           ;main.c: 35: response[2] = digitalStateFirst;
  9442  074E  0020               	movlb	0	; select bank0
  9443  074F  0864               	movf	_digitalStateFirst,w
  9444  0750  00F0               	movwf	??_pollController
  9445  0751  0871               	movf	pollController@response,w
  9446  0752  3E02               	addlw	2
  9447  0753  0086               	movwf	6
  9448  0754  0187               	clrf	7
  9449  0755  0870               	movf	??_pollController,w
  9450  0756  0081               	movwf	1
  9451                           
  9452                           ;main.c: 36: response[3] = digitalStateSecond;
  9453  0757  0863               	movf	_digitalStateSecond,w
  9454  0758  00F0               	movwf	??_pollController
  9455  0759  0871               	movf	pollController@response,w
  9456  075A  3E03               	addlw	3
  9457  075B  0086               	movwf	6
  9458  075C  0187               	clrf	7
  9459  075D  0870               	movf	??_pollController,w
  9460  075E  0081               	movwf	1
  9461                           
  9462                           ;main.c: 37: response[4] = rxData;
  9463  075F  0862               	movf	_rxData,w
  9464  0760  00F0               	movwf	??_pollController
  9465  0761  0871               	movf	pollController@response,w
  9466  0762  3E04               	addlw	4
  9467  0763  0086               	movwf	6
  9468  0764  0187               	clrf	7
  9469  0765  0870               	movf	??_pollController,w
  9470  0766  0081               	movwf	1
  9471                           
  9472                           ;main.c: 38: response[5] = ryData;
  9473  0767  0861               	movf	_ryData,w
  9474  0768  00F0               	movwf	??_pollController
  9475  0769  0871               	movf	pollController@response,w
  9476  076A  3E05               	addlw	5
  9477  076B  0086               	movwf	6
  9478  076C  0187               	clrf	7
  9479  076D  0870               	movf	??_pollController,w
  9480  076E  0081               	movwf	1
  9481                           
  9482                           ;main.c: 39: response[6] = lxData;
  9483  076F  0860               	movf	_lxData,w
  9484  0770  00F0               	movwf	??_pollController
  9485  0771  0871               	movf	pollController@response,w
  9486  0772  3E06               	addlw	6
  9487  0773  0086               	movwf	6
  9488  0774  0187               	clrf	7
  9489  0775  0870               	movf	??_pollController,w
  9490  0776  0081               	movwf	1
  9491                           
  9492                           ;main.c: 40: response[7] = lyData;
  9493  0777  085F               	movf	_lyData,w
  9494  0778  00F0               	movwf	??_pollController
  9495  0779  0871               	movf	pollController@response,w
  9496  077A  3E07               	addlw	7
  9497  077B  0086               	movwf	6
  9498  077C  0187               	clrf	7
  9499  077D  0870               	movf	??_pollController,w
  9500  077E  0081               	movwf	1
  9501  077F                     i1l2117:	
  9502                           
  9503                           ;main.c: 41: if(analogMode == 2) {
  9504  077F  3002               	movlw	2
  9505  0780  0678               	xorwf	_analogMode,w
  9506  0781  1D03               	btfss	3,2
  9507  0782  2F84               	goto	u156_21
  9508  0783  2F85               	goto	u156_20
  9509  0784                     u156_21:	
  9510  0784  2FEB               	goto	i1l2145
  9511  0785                     u156_20:	
  9512  0785                     i1l2119:	
  9513                           
  9514                           ;main.c: 42: responseLength = 20;
  9515  0785  3014               	movlw	20
  9516  0786  00F0               	movwf	??_pollController
  9517  0787  0870               	movf	??_pollController,w
  9518  0788  00DD               	movwf	_responseLength
  9519  0789                     i1l2121:	
  9520                           
  9521                           ;main.c: 43: response[8] = analogStateFirst[2];
  9522  0789  0021               	movlb	1	; select bank1
  9523  078A  0852               	movf	(_analogStateFirst^(0+128)+2),w
  9524  078B  00F0               	movwf	??_pollController
  9525  078C  0871               	movf	pollController@response,w
  9526  078D  3E08               	addlw	8
  9527  078E  0086               	movwf	6
  9528  078F  0187               	clrf	7
  9529  0790  0870               	movf	??_pollController,w
  9530  0791  0081               	movwf	1
  9531  0792                     i1l2123:	
  9532                           
  9533                           ;main.c: 44: response[9] = analogStateFirst[0];
  9534  0792  0850               	movf	_analogStateFirst^(0+128),w
  9535  0793  00F0               	movwf	??_pollController
  9536  0794  0871               	movf	pollController@response,w
  9537  0795  3E09               	addlw	9
  9538  0796  0086               	movwf	6
  9539  0797  0187               	clrf	7
  9540  0798  0870               	movf	??_pollController,w
  9541  0799  0081               	movwf	1
  9542  079A                     i1l2125:	
  9543                           
  9544                           ;main.c: 45: response[10] = analogStateFirst[3];
  9545  079A  0853               	movf	(_analogStateFirst^(0+128)+3),w
  9546  079B  00F0               	movwf	??_pollController
  9547  079C  0871               	movf	pollController@response,w
  9548  079D  3E0A               	addlw	10
  9549  079E  0086               	movwf	6
  9550  079F  0187               	clrf	7
  9551  07A0  0870               	movf	??_pollController,w
  9552  07A1  0081               	movwf	1
  9553  07A2                     i1l2127:	
  9554                           
  9555                           ;main.c: 46: response[11] = analogStateFirst[1];
  9556  07A2  0851               	movf	(_analogStateFirst^(0+128)+1),w
  9557  07A3  00F0               	movwf	??_pollController
  9558  07A4  0871               	movf	pollController@response,w
  9559  07A5  3E0B               	addlw	11
  9560  07A6  0086               	movwf	6
  9561  07A7  0187               	clrf	7
  9562  07A8  0870               	movf	??_pollController,w
  9563  07A9  0081               	movwf	1
  9564  07AA                     i1l2129:	
  9565                           
  9566                           ;main.c: 47: response[12] = analogStateSecond[3];
  9567  07AA  084B               	movf	(_analogStateSecond^(0+128)+3),w
  9568  07AB  00F0               	movwf	??_pollController
  9569  07AC  0871               	movf	pollController@response,w
  9570  07AD  3E0C               	addlw	12
  9571  07AE  0086               	movwf	6
  9572  07AF  0187               	clrf	7
  9573  07B0  0870               	movf	??_pollController,w
  9574  07B1  0081               	movwf	1
  9575  07B2                     i1l2131:	
  9576                           
  9577                           ;main.c: 48: response[13] = analogStateSecond[2];
  9578  07B2  084A               	movf	(_analogStateSecond^(0+128)+2),w
  9579  07B3  00F0               	movwf	??_pollController
  9580  07B4  0871               	movf	pollController@response,w
  9581  07B5  3E0D               	addlw	13
  9582  07B6  0086               	movwf	6
  9583  07B7  0187               	clrf	7
  9584  07B8  0870               	movf	??_pollController,w
  9585  07B9  0081               	movwf	1
  9586  07BA                     i1l2133:	
  9587                           
  9588                           ;main.c: 49: response[14] = analogStateSecond[1];
  9589  07BA  0849               	movf	(_analogStateSecond^(0+128)+1),w
  9590  07BB  00F0               	movwf	??_pollController
  9591  07BC  0871               	movf	pollController@response,w
  9592  07BD  3E0E               	addlw	14
  9593  07BE  0086               	movwf	6
  9594  07BF  0187               	clrf	7
  9595  07C0  0870               	movf	??_pollController,w
  9596  07C1  0081               	movwf	1
  9597  07C2                     i1l2135:	
  9598                           
  9599                           ;main.c: 50: response[15] = analogStateSecond[0];
  9600  07C2  0848               	movf	_analogStateSecond^(0+128),w
  9601  07C3  00F0               	movwf	??_pollController
  9602  07C4  0871               	movf	pollController@response,w
  9603  07C5  3E0F               	addlw	15
  9604  07C6  0086               	movwf	6
  9605  07C7  0187               	clrf	7
  9606  07C8  0870               	movf	??_pollController,w
  9607  07C9  0081               	movwf	1
  9608  07CA                     i1l2137:	
  9609                           
  9610                           ;main.c: 51: response[16] = analogStateSecond[5];
  9611  07CA  084D               	movf	(_analogStateSecond^(0+128)+5),w
  9612  07CB  00F0               	movwf	??_pollController
  9613  07CC  0871               	movf	pollController@response,w
  9614  07CD  3E10               	addlw	16
  9615  07CE  0086               	movwf	6
  9616  07CF  0187               	clrf	7
  9617  07D0  0870               	movf	??_pollController,w
  9618  07D1  0081               	movwf	1
  9619  07D2                     i1l2139:	
  9620                           
  9621                           ;main.c: 52: response[17] = analogStateSecond[4];
  9622  07D2  084C               	movf	(_analogStateSecond^(0+128)+4),w
  9623  07D3  00F0               	movwf	??_pollController
  9624  07D4  0871               	movf	pollController@response,w
  9625  07D5  3E11               	addlw	17
  9626  07D6  0086               	movwf	6
  9627  07D7  0187               	clrf	7
  9628  07D8  0870               	movf	??_pollController,w
  9629  07D9  0081               	movwf	1
  9630  07DA                     i1l2141:	
  9631                           
  9632                           ;main.c: 53: response[18] = analogStateSecond[7];
  9633  07DA  084F               	movf	(_analogStateSecond^(0+128)+7),w
  9634  07DB  00F0               	movwf	??_pollController
  9635  07DC  0871               	movf	pollController@response,w
  9636  07DD  3E12               	addlw	18
  9637  07DE  0086               	movwf	6
  9638  07DF  0187               	clrf	7
  9639  07E0  0870               	movf	??_pollController,w
  9640  07E1  0081               	movwf	1
  9641  07E2                     i1l2143:	
  9642                           
  9643                           ;main.c: 54: response[19] = analogStateSecond[6];
  9644  07E2  084E               	movf	(_analogStateSecond^(0+128)+6),w
  9645  07E3  00F0               	movwf	??_pollController
  9646  07E4  0871               	movf	pollController@response,w
  9647  07E5  3E13               	addlw	19
  9648  07E6  0086               	movwf	6
  9649  07E7  0187               	clrf	7
  9650  07E8  0870               	movf	??_pollController,w
  9651  07E9  0081               	movwf	1
  9652                           
  9653                           ;main.c: 55: }
  9654  07EA  2FEF               	goto	i1l109
  9655  07EB                     i1l2145:	
  9656                           
  9657                           ;main.c: 56: else {;main.c: 57: responseLength = 5;
  9658  07EB  3005               	movlw	5
  9659  07EC  00F0               	movwf	??_pollController
  9660  07ED  0870               	movf	??_pollController,w
  9661  07EE  00DD               	movwf	_responseLength
  9662  07EF                     i1l109:	
  9663  07EF  0008               	return
  9664  07F0                     __end_of_pollController:	
  9665  007E                     btemp	set	126	;btemp
  9666  007E                     int$flags	set	126
  9667  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        33
    BSS         77
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     58      78
    BANK1            80      3      79
    BANK2            80      0       8
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    pollController@response	PTR unsigned char  size(1) Largest target is 20
		 -> response(BANK1[20]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _PS2Command in COMMON

    _PS2Command->i1_reversebyte

Critical Paths under _main in BANK0

    _main->_configureController
    _readControllerAnalog->_readADC
    _picInit->_spiInit
    _configureController->_lutInit
    _lutInit->_Map
    _Map->___awdiv
    ___awdiv->___wmul

Critical Paths under _PS2Command in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _PS2Command in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _PS2Command in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _PS2Command in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _PS2Command in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _PS2Command in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _PS2Command in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _PS2Command in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _PS2Command in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _PS2Command in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _PS2Command in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _PS2Command in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _PS2Command in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _PS2Command in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _PS2Command in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _PS2Command in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _PS2Command in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _PS2Command in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _PS2Command in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _PS2Command in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _PS2Command in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _PS2Command in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _PS2Command in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _PS2Command in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _PS2Command in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _PS2Command in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   14678
                                             57 BANK0      1     1      0
                                              0 BANK1      3     3      0
                         _IO_MAPPING
                            _adcInit
                _configureController
                            _lutInit
                            _picInit
                     _readController
               _readControllerAnalog
 ---------------------------------------------------------------------------------
 (1) _readControllerAnalog                                 3     3      0    1697
                                              9 BANK0      3     3      0
                            _readADC
                        _reversebyte
 ---------------------------------------------------------------------------------
 (2) _reversebyte                                          4     4      0     226
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _picInit                                              2     2      0     456
                                              4 BANK0      2     2      0
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _configureController                                 13    13      0    7842
                                             44 BANK0     13    13      0
                        _eepromWrite
                            _lutInit
                            _readADC
                     _readController
 ---------------------------------------------------------------------------------
 (1) _readController                                       3     3      0     124
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _readADC                                              9     7      2    1471
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _lutInit                                             19    19      0    4355
                                             25 BANK0     19    19      0
                                _Map
                         _eepromRead
 ---------------------------------------------------------------------------------
 (2) _eepromRead                                           3     3      0      65
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _Map                                                 10     0     10    2958
                                             15 BANK0     10     0     10
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     625
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _eepromWrite                                          3     2      1     816
                                              0 BANK0      3     2      1
                          _nvmUnlock
 ---------------------------------------------------------------------------------
 (3) _nvmUnlock                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IO_MAPPING                                           0     0      0       0
                            _ppsLock
                          _ppsUnlock
 ---------------------------------------------------------------------------------
 (2) _ppsUnlock                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ppsLock                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _PS2Command                                           2     2      0    1148
                                              4 COMMON     2     2      0
                     _pollController
                            _spiRead
                           _spiWrite
                      i1_reversebyte
 ---------------------------------------------------------------------------------
 (6) i1_reversebyte                                        4     4      0     157
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (6) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (7) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _pollController                                       2     2      0     462
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IO_MAPPING
     _ppsLock
     _ppsUnlock
   _adcInit
   _configureController
     _eepromWrite
       _nvmUnlock
     _lutInit
       _Map
         ___awdiv
           ___wmul (ARG)
         ___wmul
       _eepromRead
     _readADC
     _readController
   _lutInit
     _Map
       ___awdiv
         ___wmul (ARG)
       ___wmul
     _eepromRead
   _picInit
     _spiInit
   _readController
   _readControllerAnalog
     _readADC
     _reversebyte

 _PS2Command (ROOT)
   _pollController
   _spiRead
     _spiReceiveWait
   _spiWrite
   i1_reversebyte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3A      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      3      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       8       9       10.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      B1      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      B1      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              30      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14               0      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15               0      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16               0      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17               0      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18               0      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19               0      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20               0      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21               0      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22               0      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23               0      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Dec 05 09:54:20 2021

                  __CFG_CP$OFF 0000                   ___awdiv@sign 002C            ___wmul@multiplicand 0022  
        __end_ofi1_reversebyte 0E76                            l310 051F                            l400 0D15  
                          l320 05EA                            l314 0584                            l403 0D1F  
                          l323 0DC7                            l316 05A8                            l308 04A3  
                          l501 0E14                            l350 0E3F                            l318 05CC  
                          l406 0D71                            l190 0FC1                            l344 0480  
                          l353 0EAC                            l193 0FBD                            l450 0DE4  
                          l362 069A                            l418 0D58                            l347 0E1D  
                          l363 06A4                            l419 0D5D                            l452 0DEC  
                          l372 074C                            l364 06AE                            l356 0F76  
                          l196 0FD9                            l188 0FA5                            l365 06B8  
                          l366 06C2                            l455 0D49                            l367 06CC  
                          l448 0DDF                            l368 06D6                            l458 0D0D  
                          l397 0D06                            l653 0D91                            l806 0F0C  
                          l655 0DA5                            _RA0 0060                            _RA1 0061  
                          _RB0 0068                            _RA2 0062                            _RB1 0069  
                          _RA3 0063                            _RA4 0064                            _RB2 006A  
                          _RA5 0065                            _RB3 006B                            _RA6 0066  
                          _RD0 0078                            _RC2 0072                            _RB4 006C  
                          _RA7 0067                            _RB5 006D                            _RB6 006E  
                          _RB7 006F                            _RD4 007C                   __CFG_CPD$OFF 0000  
                          _Map 0DA6                   __CFG_BORV$LO 0000                            wreg 0009  
               eepromRead@data 0022                   __CFG_LVP$OFF 0000                   __CFG_ZCD$OFF 0000  
                         ?_Map 002F                           l2601 0F08                           l2611 0D3C  
                         l2605 0DA6                           l2613 0D42                           l2701 04BE  
                         l2621 0E78                           l2551 0D8D                           l2711 04DC  
                         l2703 04C4                           l2623 0EAB                           l2617 0D07  
                         l2561 0EAD                           l2553 0D96                           l2609 0D3A  
                         l2641 02F9                           l2721 04FA                           l2713 04E2  
                         l2705 04CA                           l2801 0D4C                           l2619 0D0C  
                         l2571 0EBE                           l2563 0EAF                           l2555 0D9B  
                         l2547 0D86                           l2651 0360                           l2643 030B  
                         l2635 02D2                           l2627 0290                           l2731 0528  
                         l2723 0500                           l2715 04E8                           l2707 04D0  
                         l2803 0D50                           l2811 0D6D                           l2821 0DFA  
                         l2581 0ED2                           l2573 0EC3                           l2565 0EB3  
                         l2557 0DA1                           l2549 0D89                           l2661 03C7  
                         l2653 0372                           l2645 033A                           l2637 02E0  
                         l2629 02D0                           l2741 0555                           l2733 0531  
                         l2725 050C                           l2717 04EE                           l2709 04D6  
                         l2901 0747                           l2805 0D54                           l2813 0D6E  
                         l2831 0E0A                           l2823 0DFD                           l2591 0EF2  
                         l2583 0ED7                           l2575 0EC7                           l2567 0EB8  
                         l2671 042E                           l2663 03D9                           l2655 03A1  
                         l2647 0347                           l2639 02ED                           l2751 057F  
                         l2735 053F                           l2743 055A                           l2727 050D  
                         l2719 04F4                           l2903 074A                           l2815 0D70  
                         l2807 0D5E                           l2911 0F80                           l2833 0E0B  
                         l2825 0DFE                           l2817 0DED                           l2841 0D19  
                         l2593 0EF3                           l2585 0EDB                           l2577 0EC9  
                         l2569 0EBA                           l2673 0440                           l2665 0408  
                         l2657 03AE                           l2649 0354                           l2761 05E6  
                         l2753 058E                           l2745 0569                           l2737 0544  
                         l2729 0516                           l2681 0487                           l2905 074B  
                         l2809 0D6C                           l2921 0F8D                           l2913 0F83  
                         l2835 0E0E                           l2827 0E07                           l2819 0DF8  
                         l2843 0D1A                           l2595 0EF8                           l2587 0EDF  
                         l2579 0ECF                           l2675 046F                           l2667 0415  
                         l2659 03BB                           l2771 0E21                           l2763 0E15  
                         l2755 05A0                           l2747 056E                           l2739 0550  
                         l2691 049F                           l2683 048D                           l2851 05EB  
                         l2907 0F0D                           l2931 0FA7                           l2923 0F94  
                         l2915 0F89                           l2837 0E11                           l2829 0E08  
                         l2845 0D1B                           l2781 0DD1                           l2589 0EEE  
                         l2597 0EFE                           l2677 0473                           l2669 0422  
                         l2765 0E19                           l2757 05B2                           l2749 057A  
                         l2693 04A7                           l2685 048F                           l2853 05ED  
                         l2941 0FBF                           l2933 0FAC                           l2925 0F9A  
                         l2917 0F8A                           l2909 0F77                           l2847 0D1C  
                         l2839 0D16                           l2791 0DE5                           l2783 0DD2  
                         l2775 0DCA                           l2599 0F03                           l2767 0E1A  
                         l2759 05C4                           l2695 04AC                           l2687 0495  
                         l2679 0483                           l2871 06AA                           l2863 0660  
                         l2855 064E                           l2951 0FDF                           l2935 0FB1  
                         l2943 0FC3                           l2927 0F9D                           l2919 0F8B  
                         l2849 0D1E                           l2793 0DEB                           l2785 0DD4  
                         l2777 0DCE                           l2769 0E1C                           l2697 04B2  
                         l2689 0499                           l2881 06DC                           l2873 06B4  
                         l2865 0690                           l2857 0652                           l2961 0FF2  
                         l2953 0FE0                           l2945 0FC8                           l2937 0FB6  
                         l2929 0FA2                           l2795 0D00                           l2787 0DD8  
                         l2779 0DCF                           l2699 04B8                           l2891 06F1  
                         l2883 06E0                           l2875 06BE                           l2867 0696  
                         l2859 0659                           l2963 0FF6                           l2955 0FE6  
                         l2947 0FCD                           l2939 0FBB                           l2797 0D05  
                         l2789 0DDC                           l2893 06F6                           l2885 06E6  
                         l2877 06C8                           l2869 06A0                           l2965 0FFA  
                         l2957 0FEC                           l2949 0FD3                           l2799 0D0E  
                         l2895 06F7                           l2887 06EC                           l2879 06D2  
                         l2959 0FED                           l2897 06FC                           l2889 06ED  
                         l2899 0700                           u2100 0EBE                           u2101 0EBD  
                         u2110 0ECF                           u2111 0ECE                           u2130 0EDF  
                         u2050 0D8D                           u2131 0EDE                           u2051 0D8C  
                         u2300 0415                           u2125 0ED3                           u2301 0414  
                         u2205 0E82                           u2150 0EEE                           u2310 042E  
                         u2151 0EED                           u2311 042D                           u2215 0E8F  
                         u2080 0DA1                           u2320 0480                           u2240 02E0  
                         u2145 0EE0                           u2081 0DA0                           u2065 0D92  
                         u2321 047F                           u2305 0411                           u2241 02DF  
                         u2225 0E95                           u2170 0EFE                           u2090 0EB3  
                         u2250 02F9                           u2410 0555                           u2330 048D  
                         u2171 0EFD                           u2155 0EEA                           u2091 0EB2  
                         u2075 0D97                           u2315 042A                           u2251 02F8  
                         u2411 0554                           u2331 048C                           u2235 0EA2  
                         u2180 0F03                           u2260 0347                           u2500 05C4  
                         u2420 0569                           u2404 054A                           u2340 0495  
                         u2181 0F02                           u2165 0EF4                           u2325 047C  
                         u2261 0346                           u2245 02DC                           u2501 05C3  
                         u2421 0568                           u2405 0549                           u2341 0494  
                         u2270 0360                           u2510 0E21                           u2350 049F  
                         u2271 035F                           u2255 02F5                           u2511 0E20  
                         u2351 049E                           u2280 03AE                           u2440 057F  
                         u2360 050C                           u2600 06A0                           u2281 03AD  
                         u2265 0343                           u2441 057E                           u2361 050B  
                         u2601 069F                           u2290 03C7                           u2450 058E  
                         u2434 0574                           u2370 0516                           u2610 06AA  
                         u2291 03C6                           u2275 035C                           u2451 058D  
                         u2435 0573                           u2371 0515                           u2611 06A9  
                         u2195 0E7C                           u2540 0DE4                           u2380 0528  
                         u2620 06B4                           u2700 0F9A                           u2541 0DE3  
                         u2285 03AA                           u2525 0E25                           u2381 0527  
                         u2621 06B3                           u2701 0F99                           u2550 0DEB  
                         u2470 05A0                           u2390 053F                           u2630 06BE  
                         u2710 0FA2                           u2551 0DEA                           u2295 03C3  
                         u2535 0E31                           u2471 059F                           u2391 053E  
                         u2631 06BD                           u2711 0FA1                           u2480 05B2  
                         u2464 0594                           u2640 06C8                           u2560 0D50  
                         u2720 0FAC                           u2481 05B1                           u2465 0593  
                         u2641 06C7                           u2561 0D4F                           u2721 0FAB  
                         u2650 06D2                           u2570 0659                           u2730 0FB1  
                         u2651 06D1                           u2571 0658                           u2731 0FB0  
                         u2660 06DC                           u2580 065F                           u2740 0FB6  
                         u2661 06DB                           u2581 065E                           u2741 0FB5  
                         u2494 05B8                           u2670 06E6                           u2590 0696  
                         u2750 0FBB                           u2495 05B7                           u2671 06E5  
                         u2591 0695                           u2751 0FBA                           u2680 06EC  
                         u2760 0FCD                           u2681 06EB                           u2761 0FCC  
                         u2770 0FD3                           u2690 0F94                           u2771 0FD2  
                         u2691 0F93                           u2780 0FDF                           u2781 0FDE  
                         u2790 0FEC                           u2791 0FEB                           Map@x 002F  
                         _WPUA 0F39                           _WPUB 0F44                           _WPUC 0F4F  
                         _WPUD 0F5A                           _WPUE 0F65                   __CFG_WRT$OFF 0000  
                __CFG_FCMEN$ON 0000                    ?_IO_MAPPING 0070                           _main 0F77  
                         fsr0h 0005                           fsr1h 0007                           indf0 0000  
                         fsr0l 0004                           indf1 0001                           fsr1l 0006  
                         btemp 007E                  __CFG_BOREN$ON 0000                           start 023E  
                  ?_PS2Command 0070                  __CFG_CSWEN$ON 0000                lutInit@position 004A  
            i1reversebyte@byte 0073                          ??_Map 0039       configureController@lxMax 004E  
     configureController@lxMin 004D       configureController@lyMax 0050       configureController@lyMin 004F  
     configureController@rxMax 0052       configureController@rxMin 0051       configureController@ryMax 0054  
     configureController@ryMin 0053                          _ADACQ 009D                          ?_main 0070  
                        _ADCLK 0098                          _ADPCH 009E                __end_of_adcInit 0D20  
                        _ADREF 009A                __end_of___awdiv 0F0D                          _ADPRE 009C  
                __CFG_WDTE$OFF 0000                ___awdiv@divisor 0026       main@slaveSelectStatePrev 00EC  
                        i1l121 0026                          i1l109 07EF                          i1l181 023C  
                        i1l422 0CF4                          i1l431 0CFF                          i1l175 0210  
                        i1l425 0CF9                          i1l353 0E75                          i1l179 022F  
                        i1l428 0CF3                ___awdiv@counter 002B                          _TRISA 0011  
                        _TRISB 0012                          _TRISC 0013                          _TRISD 0014  
                        _TRISE 0015    __end_of_configureController 074D                __end_of_readADC 0E40  
              __end_of_picInit 0D72                          _index 007A  __size_of_readControllerAnalog 006A  
                        _lutLX 26F0                          _lutLY 25F0                          _lutRX 24F0  
                        _lutRY 23F0                __end_of_lutInit 0481                __end_of_ppsLock 0D16  
              __end_of_spiInit 0D5E                __end_of_spiRead 0D00                          status 0003  
                        wtemp0 007E                  PS2Command@cmd 0075                 __CFG_MCLRE$OFF 0000  
              __initialization 0240                   __end_of_main 1000                         ??_main 0059  
          __size_of_IO_MAPPING 0028            __size_of_PS2Command 023A                         _ADCON0 0093  
                       _ADCON1 0094                         _ADCON2 0095                         _ADRESH 008D  
                       _ADRESL 008C               ___awdiv@dividend 0028                         _ANSELA 0F38  
                       _ANSELB 0F43                         _ANSELC 0F4E                         _ANSELD 0F59  
                       _ANSELE 0F64           _PreviousDigitalByte1 00B0           _PreviousDigitalByte2 0120  
                       i1l2121 0789                         i1l2113 0CF4                         i1l2131 07B2  
                       i1l2123 0792                         i1l2115 074E                         _RC5PPS 0F25  
                       i1l2141 07DA                         i1l2133 07BA                         i1l2125 079A  
                       i1l2117 077F                         i1l2301 005C                         i1l2143 07E2  
                       i1l2135 07C2                         i1l2127 07A2                         i1l2119 0785  
                       i1l2311 0074                         i1l2303 0060                         i1l2137 07CA  
                       i1l2129 07AA                         i1l2145 07EB                         i1l2153 0CF0  
                       i1l2401 0145                         i1l2313 0078                         i1l2305 0065  
                       i1l2139 07D2                         i1l2147 0CFA                         i1l2411 015D  
                       i1l2403 014E                         i1l2331 0090                         i1l2315 0079  
                       i1l2307 006A                         i1l2149 0CFD                         i1l2421 0172  
                       i1l2413 0163                         i1l2405 0153                         i1l2341 00C3  
                       i1l2333 00AA                         i1l2325 0084                         i1l2309 0070  
                       i1l2317 007B                         i1l2415 0166                         i1l2407 0158  
                       i1l2343 00C9                         i1l2335 00B0                         i1l2327 008A  
                       i1l2319 007F                         i1l2271 001E                         i1l2263 0006  
                       i1l2257 0E41                         i1l2433 0184                         i1l2425 0177  
                       i1l2417 016A                         i1l2409 0159                         i1l2361 00F8  
                       i1l2353 00DC                         i1l2345 00CD                         i1l2337 00B7  
                       i1l2281 0034                         i1l2273 0023                         i1l2265 000B  
                       i1l2259 0E74                         i1l2451 01BE                         i1l2443 018F  
                       i1l2435 0188                         i1l2427 017A                         i1l2419 016E  
                       i1l2371 0105                         i1l2363 00FB                         i1l2355 00ED  
                       i1l2347 00D0                         i1l2291 0048                         i1l2283 003A  
                       i1l2275 0029                         i1l2267 0012                         i1l2453 01C3  
                       i1l2445 01B0                         i1l2437 018C                         i1l2429 017E  
                       i1l2381 012A                         i1l2373 010A                         i1l2365 00FF  
                       i1l2349 00D6                         i1l2293 004C                         i1l2285 003D  
                       i1l2277 002F                         i1l2269 0018                         i1l2461 01EB  
                       i1l2471 0206                         i1l2447 01B6                         i1l2439 018D  
                       i1l2391 0138                         i1l2383 012C                         i1l2375 010F  
                       i1l2367 0100                         i1l2359 00F3                         i1l2295 0050  
                       i1l2287 003F                         i1l2279 0032                         i1l2463 01F6  
                       i1l2481 0225                         i1l2473 020C                         i1l2465 01FE  
                       i1l2457 01C8                         i1l2449 01BA                         i1l2393 0140  
                       i1l2385 012E                         i1l2377 0114                         i1l2369 0101  
                       i1l2297 0054                         i1l2289 0045                         i1l2483 022A  
                       i1l2475 0215                         i1l2467 0200                         i1l2379 0119  
                       i1l2299 0059                         i1l2485 0235                         i1l2477 021B  
                       i1l2469 0204                         i1l2389 0133                         i1l2479 0220  
                       i1l2487 023A                 __CFG_WDTCCS$SC 0000                         u170_25 0E4B  
                       u155_20 0CF9                         u155_21 0CF8                         u171_25 0E58  
                       u156_20 0785                         u180_20 0070                         u156_21 0784  
                       u180_21 006F                         u172_25 0E5E                         u181_20 00B7  
                       u181_21 00B6                         u173_25 0E6B                         u190_20 0215  
                       u182_20 00C2                         u174_20 000B                         u190_21 0214  
                       u182_21 00C1                         u174_21 000A                         u191_20 0220  
                       u183_20 00C9                         u175_20 001E                         u191_21 021F  
                       u183_21 00C8                         u175_21 001D                         u192_20 022A  
                       u184_20 010F                         u176_20 0023                         u192_21 0229  
                       u184_21 010E                         u176_21 0022                         _AN_btn 0065  
                       u193_20 0235                         u185_20 0119                         u177_20 002F  
                       u193_21 0234                         u185_21 0118                         u177_21 002E  
                       u169_25 0E45                         u186_20 0138                         u178_20 003A  
                       u186_21 0137                         u178_21 0039                         u187_20 0153  
                       u179_20 0045                         u187_21 0152                         u179_21 0044  
                       u188_20 01C3                         u188_21 01C2                         u189_20 020C  
                       u189_21 020B                         _SSP1IE 38C8                         _SSP1IF 3878  
               __CFG_PWRTE$OFF 0000           __size_of_eepromWrite 0025                         ___wmul 0D86  
                    ??_adcInit 0020                      ??___awdiv 002A                 __CFG_STVREN$ON 0000  
      __size_of_pollController 00A3                         _lxData 0060                         _lyData 005F  
              eepromWrite@data 0020                         _rxData 0062               ___awdiv@quotient 002D  
                       _ryData 0061                   ?_reversebyte 0070                      ??_readADC 0022  
                    ??_picInit 0024                   __pdataCOMMON 007B                      ??_lutInit 0039  
             __end_of_spiWrite 0CF4                      ??_ppsLock 0020                      ??_spiInit 0023  
                    ??_spiRead 0070              _IndexDigitalByte1 00A8              _IndexDigitalByte2 00A0  
              _MAP_LARGE_MOTOR 005B        __end_of__initialization 028C                 __pcstackCOMMON 0070  
                 __pidataBANK0 07F0                   __pidataBANK1 0D72         _DigitalControllerByte1 00C0  
       _DigitalControllerByte2 00B8              eepromRead@address 0021        __size_of_readController 016A  
                   _cmdCounter 0079                     __pbssBANK0 0066                     __pbssBANK1 00A0  
                   __pbssBANK2 0120                   ??_IO_MAPPING 0020                     _analogMode 0078  
                 ??_PS2Command 0074                     __pmaintext 0F77                        ?___wmul 0020  
                   __pintentry 0004        __size_of_spiReceiveWait 0006            __CFG_RSTOSC$HFINT32 0000  
           __size_of_nvmUnlock 0007             __size_of_ppsUnlock 0007                     _eepromRead 0D38  
           __end_of_IO_MAPPING 0E15                        _AN_temp 007B                        _AN_prev 005A  
   eepromWrite@interruptStatus 0022                        _NVMADRH 081B                        _NVMADRL 081A  
                      _NVMDATL 081C                        _NVMCON2 081F             __end_of_PS2Command 023E  
                      _PPSLOCK 0E8F                        _SSP1BUF 018C                     _escapeMode 0077  
     readController@analogMode 0022         __size_ofi1_reversebyte 0036   __end_of_readControllerAnalog 0F77  
         __CFG_SCANE$available 0000                      ?_spiWrite 0070                        _adcInit 0D16  
                      ___awdiv 0EAD                 _pollController 074D                __size_of___wmul 0020  
              _MAP_SMALL_MOTOR 005C                        __ptext1 0F0D                        __ptext2 0E76  
                      __ptext3 0D5E                        __ptext4 0D4A                        __ptext5 05EB  
                      __ptext6 0481                        __ptext7 0E15                        __ptext8 0290  
                      __ptext9 0D38                        _readADC 0E15                   __size_of_Map 0022  
                      _picInit 0D5E           __size_of_reversebyte 0037                        _lutInit 0290  
                      _ppsLock 0D0E                        _spiInit 0D4A                        _spiRead 0CFA  
                      clrloop0 0D21           end_of_initialization 028C         _CONTROL_RESPONSE_byte3 0069  
       _CONTROL_RESPONSE_byte4 0068         _CONTROL_RESPONSE_byte5 0067                      _MODE_LOCK 006D  
                      init_ram 0D2C   __size_of_configureController 0162                        initloop 0D2D  
            __end_of_nvmUnlock 0D0E              __end_of_ppsUnlock 0D07         __end_of_pollController 07F0  
                   ??_spiWrite 0070                reversebyte@byte 0023          __CFG_WDTCPS$WDTCPS_31 0000  
                    Map@outMax 0037                      Map@outMin 0035                  i1_reversebyte 0E40  
                  ?_eepromRead 0070                 _readController 0481                      _TRISAbits 0011  
                    _TRISCbits 0013                    spiWrite@dat 0070               __CFG_FEXTOSC$OFF 0000  
   _INIT_PRESSURE_SENSOR_byte3 006B     _INIT_PRESSURE_SENSOR_byte4 006A             _digitalStateSecond 0063  
                ??_eepromWrite 0021                ?_pollController 0070                 _spiReceiveWait 0CF4  
               __end_of___wmul 0DA6                  __pidataCOMMON 07FC                 ?i1_reversebyte 0070  
       __end_of_readController 05EB            start_initialization 0240                    __end_of_Map 0DC8  
         _readControllerAnalog 0F0D                  _debounceLoops 005E            __size_of_eepromRead 0012  
             __CFG_LPBOREN$OFF 0000         __end_of_spiReceiveWait 0CFA            __end_of_eepromWrite 0DED  
                     ??___wmul 0024                    __pdataBANK0 005A                    __pdataBANK1 00D8  
              ?_readController 0070                    __pbssBIGRAM 23F0                    __pbssCOMMON 0076  
                    ___latbits 0003                  __pcstackBANK0 0020                  __pcstackBANK1 00EC  
        configureController@lx 0055          configureController@ly 0056          configureController@rx 0057  
        configureController@ry 0058          ?_readControllerAnalog 0070                 _responseLength 005D  
            _analogStateSecond 00C8                ?_spiReceiveWait 0070                       ?_adcInit 0070  
                     ?___awdiv 0026                ??i1_reversebyte 0070               __CFG_PPS1WAY$OFF 0000  
            __size_of_spiWrite 0005            _configureController 05EB                       ?_readADC 0020  
                     ?_picInit 0070                       ?_lutInit 0070                       ?_ppsLock 0070  
                     ?_spiInit 0020                       ?_spiRead 0070             eepromWrite@address 0021  
         spiInit@sTransmitEdge 0022           ?_configureController 0070                 ___wmul@product 0024  
                  _eepromWrite 0DC8                      clear_ram0 0D20                       _AN_latch 006C  
           spiInit@sDataSample 0020                       _AN_timer 0066                      _nvmUnlock 0D07  
                     Map@inMax 0033                       Map@inMin 0031                      _ppsUnlock 0D00  
                     _SSP1CON1 0190                       _SSP1STAT 018F                  ??_reversebyte 0020  
                   _ADCON0bits 0093              ___wmul@multiplier 0020                   lutInit@lxMax 0043  
                 lutInit@lxMin 0042                   lutInit@lyMax 0045                   lutInit@lyMin 0044  
            _digitalStateFirst 0064                   lutInit@rxMax 0047                   lutInit@rxMin 0046  
                 lutInit@ryMax 0049                   lutInit@ryMin 0048                   ??_eepromRead 0020  
                    main@count 00ED         ??_readControllerAnalog 0029          ??_configureController 004C  
             ??_pollController 0070             __end_of_eepromRead 0D4A                     ?_nvmUnlock 0070  
                   ?_ppsUnlock 0070               __size_of_adcInit 000A               __size_of___awdiv 0060  
               readADC@channel 0020               _analogStateFirst 00D0               __size_of_readADC 002B  
             __size_of_picInit 0014            __end_of_reversebyte 0EAD               __size_of_lutInit 01F1  
                     __ptext10 0DA6                       __ptext11 0D86                       __ptext20 0E40  
                     __ptext12 0EAD                       __ptext21 0CEF                       __ptext13 0DC8  
                     __ptext22 0CFA                       __ptext14 0D07                       __ptext23 0CF4  
                     __ptext15 0D16                       __ptext24 074D                       __ptext16 0DED  
                     __ptext17 0D00                       __ptext18 0D0E               __size_of_ppsLock 0008  
             __size_of_spiInit 0014               __size_of_spiRead 0006                  __size_of_main 0089  
         __CFG_WDTCWS$WDTCWS_7 0000                       _response 00D8               ??_readController 0020  
                     _spiWrite 0CEF                       int$flags 007E                   spiInit@sType 0023  
              main@slaveSelect 00EE                   _SSP1STATbits 018F              spiInit@sClockIdle 0021  
                   _INTCONbits 000B                    _NVMCON1bits 081E         pollController@response 0071  
                     intlevel1 0000                     _IO_MAPPING 0DED               ??_spiReceiveWait 0070  
            __CFG_CLKOUTEN$OFF 0000                     _PS2Command 0004                    ??_nvmUnlock 0020  
                  ??_ppsUnlock 0020                    _reversebyte 0E76                    _previousCmd 0076  
                 ?_eepromWrite 0020  
