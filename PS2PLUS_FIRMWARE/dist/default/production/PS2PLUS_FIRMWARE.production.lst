

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Dec 06 12:08:03 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18876
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	dabs	1,0xCA0,32
    45                           	dabs	1,0xC20,80
    46                           	dabs	1,0xBA0,80
    47                           	dabs	1,0xB30,64
    48                           	dabs	1,0xB20,16
    49                           	dabs	1,0xAA0,80
    50                           	dabs	1,0xA20,80
    51                           	dabs	1,0x9A0,80
    52                           	dabs	1,0x920,80
    53                           	dabs	1,0x8A0,80
    54                           	dabs	1,0x820,80
    55                           	dabs	1,0x7E0,16
    56                           	dabs	1,0x7A0,64
    57                           	dabs	1,0x720,80
    58                           	dabs	1,0x6A0,80
    59                           	dabs	1,0x650,32
    60                           	dabs	1,0x23F0,0,_lutRY
    61                           	dabs	1,0x24F0,0,_lutRX
    62                           	dabs	1,0x25F0,0,_lutLY
    63                           	dabs	1,0x26F0,0,_lutLX
    64                           	dabs	1,0x7E,2
    65  0000                     
    66                           ; Version 2.10
    67                           ; Generated 31/07/2019 GMT
    68                           ; 
    69                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC16F18876 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100  0000                     	;# 
   101  0001                     	;# 
   102  0002                     	;# 
   103  0003                     	;# 
   104  0004                     	;# 
   105  0005                     	;# 
   106  0006                     	;# 
   107  0007                     	;# 
   108  0008                     	;# 
   109  0009                     	;# 
   110  000A                     	;# 
   111  000B                     	;# 
   112  000C                     	;# 
   113  000D                     	;# 
   114  000E                     	;# 
   115  000F                     	;# 
   116  0010                     	;# 
   117  0011                     	;# 
   118  0012                     	;# 
   119  0013                     	;# 
   120  0014                     	;# 
   121  0015                     	;# 
   122  0016                     	;# 
   123  0017                     	;# 
   124  0018                     	;# 
   125  0019                     	;# 
   126  001A                     	;# 
   127  001C                     	;# 
   128  001C                     	;# 
   129  001D                     	;# 
   130  001D                     	;# 
   131  001E                     	;# 
   132  001F                     	;# 
   133  008C                     	;# 
   134  008C                     	;# 
   135  008D                     	;# 
   136  008E                     	;# 
   137  008E                     	;# 
   138  008F                     	;# 
   139  0090                     	;# 
   140  0090                     	;# 
   141  0091                     	;# 
   142  0093                     	;# 
   143  0094                     	;# 
   144  0095                     	;# 
   145  0096                     	;# 
   146  0097                     	;# 
   147  0098                     	;# 
   148  0099                     	;# 
   149  009A                     	;# 
   150  009B                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  010C                     	;# 
   155  010D                     	;# 
   156  010E                     	;# 
   157  010E                     	;# 
   158  010F                     	;# 
   159  0110                     	;# 
   160  0110                     	;# 
   161  0111                     	;# 
   162  0112                     	;# 
   163  0112                     	;# 
   164  0113                     	;# 
   165  0114                     	;# 
   166  0114                     	;# 
   167  0115                     	;# 
   168  0116                     	;# 
   169  0116                     	;# 
   170  0117                     	;# 
   171  0119                     	;# 
   172  0119                     	;# 
   173  0119                     	;# 
   174  011A                     	;# 
   175  011A                     	;# 
   176  011A                     	;# 
   177  011B                     	;# 
   178  011B                     	;# 
   179  011B                     	;# 
   180  011B                     	;# 
   181  011B                     	;# 
   182  011C                     	;# 
   183  011C                     	;# 
   184  011C                     	;# 
   185  011D                     	;# 
   186  011D                     	;# 
   187  011D                     	;# 
   188  011E                     	;# 
   189  011E                     	;# 
   190  011E                     	;# 
   191  011F                     	;# 
   192  011F                     	;# 
   193  011F                     	;# 
   194  011F                     	;# 
   195  011F                     	;# 
   196  018C                     	;# 
   197  018D                     	;# 
   198  018E                     	;# 
   199  018F                     	;# 
   200  0190                     	;# 
   201  0191                     	;# 
   202  0192                     	;# 
   203  0196                     	;# 
   204  0197                     	;# 
   205  0198                     	;# 
   206  0199                     	;# 
   207  019A                     	;# 
   208  019B                     	;# 
   209  019C                     	;# 
   210  020C                     	;# 
   211  020C                     	;# 
   212  020D                     	;# 
   213  020E                     	;# 
   214  020F                     	;# 
   215  020F                     	;# 
   216  0210                     	;# 
   217  0210                     	;# 
   218  0211                     	;# 
   219  0211                     	;# 
   220  0212                     	;# 
   221  0212                     	;# 
   222  0213                     	;# 
   223  0214                     	;# 
   224  0215                     	;# 
   225  0215                     	;# 
   226  0216                     	;# 
   227  0216                     	;# 
   228  0217                     	;# 
   229  0217                     	;# 
   230  0218                     	;# 
   231  0218                     	;# 
   232  0219                     	;# 
   233  021A                     	;# 
   234  021B                     	;# 
   235  021B                     	;# 
   236  021C                     	;# 
   237  021C                     	;# 
   238  021D                     	;# 
   239  021D                     	;# 
   240  021E                     	;# 
   241  021F                     	;# 
   242  028C                     	;# 
   243  028C                     	;# 
   244  028D                     	;# 
   245  028D                     	;# 
   246  028E                     	;# 
   247  028F                     	;# 
   248  0290                     	;# 
   249  0290                     	;# 
   250  0291                     	;# 
   251  0292                     	;# 
   252  0292                     	;# 
   253  0293                     	;# 
   254  0293                     	;# 
   255  0294                     	;# 
   256  0295                     	;# 
   257  0296                     	;# 
   258  0296                     	;# 
   259  0297                     	;# 
   260  0298                     	;# 
   261  0298                     	;# 
   262  0299                     	;# 
   263  0299                     	;# 
   264  029A                     	;# 
   265  029B                     	;# 
   266  029C                     	;# 
   267  029C                     	;# 
   268  029D                     	;# 
   269  030C                     	;# 
   270  030C                     	;# 
   271  030D                     	;# 
   272  030E                     	;# 
   273  030F                     	;# 
   274  0310                     	;# 
   275  0310                     	;# 
   276  0311                     	;# 
   277  0312                     	;# 
   278  0313                     	;# 
   279  0314                     	;# 
   280  0314                     	;# 
   281  0315                     	;# 
   282  0316                     	;# 
   283  0317                     	;# 
   284  0318                     	;# 
   285  0318                     	;# 
   286  0319                     	;# 
   287  031A                     	;# 
   288  031B                     	;# 
   289  031C                     	;# 
   290  031C                     	;# 
   291  031D                     	;# 
   292  031E                     	;# 
   293  031F                     	;# 
   294  038C                     	;# 
   295  038C                     	;# 
   296  038D                     	;# 
   297  038E                     	;# 
   298  0390                     	;# 
   299  0390                     	;# 
   300  0391                     	;# 
   301  0392                     	;# 
   302  040C                     	;# 
   303  040D                     	;# 
   304  040E                     	;# 
   305  040F                     	;# 
   306  0410                     	;# 
   307  0411                     	;# 
   308  0416                     	;# 
   309  0416                     	;# 
   310  0417                     	;# 
   311  0418                     	;# 
   312  0418                     	;# 
   313  0419                     	;# 
   314  041A                     	;# 
   315  041A                     	;# 
   316  041B                     	;# 
   317  041C                     	;# 
   318  041C                     	;# 
   319  041D                     	;# 
   320  041E                     	;# 
   321  041F                     	;# 
   322  048C                     	;# 
   323  048C                     	;# 
   324  048D                     	;# 
   325  048E                     	;# 
   326  048F                     	;# 
   327  048F                     	;# 
   328  0490                     	;# 
   329  0491                     	;# 
   330  0492                     	;# 
   331  0492                     	;# 
   332  0493                     	;# 
   333  0494                     	;# 
   334  0495                     	;# 
   335  0495                     	;# 
   336  0496                     	;# 
   337  0497                     	;# 
   338  0498                     	;# 
   339  0499                     	;# 
   340  049A                     	;# 
   341  049B                     	;# 
   342  049C                     	;# 
   343  049D                     	;# 
   344  050C                     	;# 
   345  050C                     	;# 
   346  050D                     	;# 
   347  050E                     	;# 
   348  050F                     	;# 
   349  050F                     	;# 
   350  0510                     	;# 
   351  0511                     	;# 
   352  0512                     	;# 
   353  0512                     	;# 
   354  0513                     	;# 
   355  0514                     	;# 
   356  0515                     	;# 
   357  0515                     	;# 
   358  0516                     	;# 
   359  0517                     	;# 
   360  0518                     	;# 
   361  0519                     	;# 
   362  051A                     	;# 
   363  051B                     	;# 
   364  051C                     	;# 
   365  051D                     	;# 
   366  058C                     	;# 
   367  058C                     	;# 
   368  058D                     	;# 
   369  058E                     	;# 
   370  058F                     	;# 
   371  058F                     	;# 
   372  0590                     	;# 
   373  0591                     	;# 
   374  0592                     	;# 
   375  0593                     	;# 
   376  060C                     	;# 
   377  060D                     	;# 
   378  060E                     	;# 
   379  060F                     	;# 
   380  0610                     	;# 
   381  0611                     	;# 
   382  0612                     	;# 
   383  0613                     	;# 
   384  0614                     	;# 
   385  0616                     	;# 
   386  0617                     	;# 
   387  0618                     	;# 
   388  0619                     	;# 
   389  061A                     	;# 
   390  061B                     	;# 
   391  061C                     	;# 
   392  061D                     	;# 
   393  061E                     	;# 
   394  068C                     	;# 
   395  068D                     	;# 
   396  068E                     	;# 
   397  068F                     	;# 
   398  0690                     	;# 
   399  0691                     	;# 
   400  0692                     	;# 
   401  0693                     	;# 
   402  0694                     	;# 
   403  070C                     	;# 
   404  070D                     	;# 
   405  070E                     	;# 
   406  070F                     	;# 
   407  0710                     	;# 
   408  0711                     	;# 
   409  0712                     	;# 
   410  0713                     	;# 
   411  0714                     	;# 
   412  0716                     	;# 
   413  0717                     	;# 
   414  0718                     	;# 
   415  0719                     	;# 
   416  071A                     	;# 
   417  071B                     	;# 
   418  071C                     	;# 
   419  071D                     	;# 
   420  071E                     	;# 
   421  0796                     	;# 
   422  0797                     	;# 
   423  0798                     	;# 
   424  0799                     	;# 
   425  079A                     	;# 
   426  079B                     	;# 
   427  080C                     	;# 
   428  080D                     	;# 
   429  080E                     	;# 
   430  080F                     	;# 
   431  0810                     	;# 
   432  0811                     	;# 
   433  0812                     	;# 
   434  0813                     	;# 
   435  0814                     	;# 
   436  081A                     	;# 
   437  081B                     	;# 
   438  081C                     	;# 
   439  081D                     	;# 
   440  081E                     	;# 
   441  081F                     	;# 
   442  088C                     	;# 
   443  088D                     	;# 
   444  088E                     	;# 
   445  088F                     	;# 
   446  0890                     	;# 
   447  0891                     	;# 
   448  0892                     	;# 
   449  0893                     	;# 
   450  0895                     	;# 
   451  0896                     	;# 
   452  0897                     	;# 
   453  0898                     	;# 
   454  0899                     	;# 
   455  089A                     	;# 
   456  089B                     	;# 
   457  090C                     	;# 
   458  090E                     	;# 
   459  090F                     	;# 
   460  091F                     	;# 
   461  098F                     	;# 
   462  098F                     	;# 
   463  0990                     	;# 
   464  0991                     	;# 
   465  0992                     	;# 
   466  0993                     	;# 
   467  0994                     	;# 
   468  0995                     	;# 
   469  0996                     	;# 
   470  0997                     	;# 
   471  0E0F                     	;# 
   472  0E10                     	;# 
   473  0E11                     	;# 
   474  0E12                     	;# 
   475  0E13                     	;# 
   476  0E14                     	;# 
   477  0E15                     	;# 
   478  0E16                     	;# 
   479  0E17                     	;# 
   480  0E18                     	;# 
   481  0E19                     	;# 
   482  0E1A                     	;# 
   483  0E1B                     	;# 
   484  0E1C                     	;# 
   485  0E1D                     	;# 
   486  0E1E                     	;# 
   487  0E1F                     	;# 
   488  0E20                     	;# 
   489  0E21                     	;# 
   490  0E22                     	;# 
   491  0E23                     	;# 
   492  0E24                     	;# 
   493  0E25                     	;# 
   494  0E26                     	;# 
   495  0E27                     	;# 
   496  0E28                     	;# 
   497  0E29                     	;# 
   498  0E2A                     	;# 
   499  0E2B                     	;# 
   500  0E2C                     	;# 
   501  0E2D                     	;# 
   502  0E2E                     	;# 
   503  0E2F                     	;# 
   504  0E30                     	;# 
   505  0E31                     	;# 
   506  0E32                     	;# 
   507  0E33                     	;# 
   508  0E34                     	;# 
   509  0E35                     	;# 
   510  0E36                     	;# 
   511  0E37                     	;# 
   512  0E8F                     	;# 
   513  0E90                     	;# 
   514  0E91                     	;# 
   515  0E92                     	;# 
   516  0E93                     	;# 
   517  0E94                     	;# 
   518  0E95                     	;# 
   519  0E96                     	;# 
   520  0E97                     	;# 
   521  0E9C                     	;# 
   522  0E9D                     	;# 
   523  0E9E                     	;# 
   524  0EA1                     	;# 
   525  0EA2                     	;# 
   526  0EA3                     	;# 
   527  0EA4                     	;# 
   528  0EA5                     	;# 
   529  0EA9                     	;# 
   530  0EAA                     	;# 
   531  0EAB                     	;# 
   532  0EAC                     	;# 
   533  0EB1                     	;# 
   534  0EB2                     	;# 
   535  0EB3                     	;# 
   536  0EB8                     	;# 
   537  0EB9                     	;# 
   538  0EBA                     	;# 
   539  0EBB                     	;# 
   540  0EBC                     	;# 
   541  0EBD                     	;# 
   542  0EBE                     	;# 
   543  0EC3                     	;# 
   544  0EC5                     	;# 
   545  0EC6                     	;# 
   546  0EC7                     	;# 
   547  0EC8                     	;# 
   548  0EC9                     	;# 
   549  0ECA                     	;# 
   550  0ECB                     	;# 
   551  0ECC                     	;# 
   552  0F10                     	;# 
   553  0F11                     	;# 
   554  0F12                     	;# 
   555  0F13                     	;# 
   556  0F14                     	;# 
   557  0F15                     	;# 
   558  0F16                     	;# 
   559  0F17                     	;# 
   560  0F18                     	;# 
   561  0F19                     	;# 
   562  0F1A                     	;# 
   563  0F1B                     	;# 
   564  0F1C                     	;# 
   565  0F1D                     	;# 
   566  0F1E                     	;# 
   567  0F1F                     	;# 
   568  0F20                     	;# 
   569  0F21                     	;# 
   570  0F22                     	;# 
   571  0F23                     	;# 
   572  0F24                     	;# 
   573  0F25                     	;# 
   574  0F26                     	;# 
   575  0F27                     	;# 
   576  0F28                     	;# 
   577  0F29                     	;# 
   578  0F2A                     	;# 
   579  0F2B                     	;# 
   580  0F2C                     	;# 
   581  0F2D                     	;# 
   582  0F2E                     	;# 
   583  0F2F                     	;# 
   584  0F30                     	;# 
   585  0F31                     	;# 
   586  0F32                     	;# 
   587  0F38                     	;# 
   588  0F39                     	;# 
   589  0F3A                     	;# 
   590  0F3B                     	;# 
   591  0F3C                     	;# 
   592  0F3D                     	;# 
   593  0F3E                     	;# 
   594  0F3F                     	;# 
   595  0F40                     	;# 
   596  0F41                     	;# 
   597  0F43                     	;# 
   598  0F44                     	;# 
   599  0F45                     	;# 
   600  0F46                     	;# 
   601  0F47                     	;# 
   602  0F48                     	;# 
   603  0F49                     	;# 
   604  0F4A                     	;# 
   605  0F4B                     	;# 
   606  0F4C                     	;# 
   607  0F4E                     	;# 
   608  0F4F                     	;# 
   609  0F50                     	;# 
   610  0F51                     	;# 
   611  0F52                     	;# 
   612  0F53                     	;# 
   613  0F54                     	;# 
   614  0F55                     	;# 
   615  0F56                     	;# 
   616  0F57                     	;# 
   617  0F59                     	;# 
   618  0F5A                     	;# 
   619  0F5B                     	;# 
   620  0F5C                     	;# 
   621  0F5D                     	;# 
   622  0F61                     	;# 
   623  0F62                     	;# 
   624  0F64                     	;# 
   625  0F65                     	;# 
   626  0F66                     	;# 
   627  0F67                     	;# 
   628  0F68                     	;# 
   629  0F69                     	;# 
   630  0F6A                     	;# 
   631  0F6B                     	;# 
   632  0F6C                     	;# 
   633  0F6D                     	;# 
   634  0FE4                     	;# 
   635  0FE5                     	;# 
   636  0FE6                     	;# 
   637  0FE7                     	;# 
   638  0FE8                     	;# 
   639  0FE9                     	;# 
   640  0FEA                     	;# 
   641  0FEB                     	;# 
   642  0FED                     	;# 
   643  0FEE                     	;# 
   644  0FEF                     	;# 
   645  0000                     	;# 
   646  0001                     	;# 
   647  0002                     	;# 
   648  0003                     	;# 
   649  0004                     	;# 
   650  0005                     	;# 
   651  0006                     	;# 
   652  0007                     	;# 
   653  0008                     	;# 
   654  0009                     	;# 
   655  000A                     	;# 
   656  000B                     	;# 
   657  000C                     	;# 
   658  000D                     	;# 
   659  000E                     	;# 
   660  000F                     	;# 
   661  0010                     	;# 
   662  0011                     	;# 
   663  0012                     	;# 
   664  0013                     	;# 
   665  0014                     	;# 
   666  0015                     	;# 
   667  0016                     	;# 
   668  0017                     	;# 
   669  0018                     	;# 
   670  0019                     	;# 
   671  001A                     	;# 
   672  001C                     	;# 
   673  001C                     	;# 
   674  001D                     	;# 
   675  001D                     	;# 
   676  001E                     	;# 
   677  001F                     	;# 
   678  008C                     	;# 
   679  008C                     	;# 
   680  008D                     	;# 
   681  008E                     	;# 
   682  008E                     	;# 
   683  008F                     	;# 
   684  0090                     	;# 
   685  0090                     	;# 
   686  0091                     	;# 
   687  0093                     	;# 
   688  0094                     	;# 
   689  0095                     	;# 
   690  0096                     	;# 
   691  0097                     	;# 
   692  0098                     	;# 
   693  0099                     	;# 
   694  009A                     	;# 
   695  009B                     	;# 
   696  009C                     	;# 
   697  009D                     	;# 
   698  009E                     	;# 
   699  010C                     	;# 
   700  010D                     	;# 
   701  010E                     	;# 
   702  010E                     	;# 
   703  010F                     	;# 
   704  0110                     	;# 
   705  0110                     	;# 
   706  0111                     	;# 
   707  0112                     	;# 
   708  0112                     	;# 
   709  0113                     	;# 
   710  0114                     	;# 
   711  0114                     	;# 
   712  0115                     	;# 
   713  0116                     	;# 
   714  0116                     	;# 
   715  0117                     	;# 
   716  0119                     	;# 
   717  0119                     	;# 
   718  0119                     	;# 
   719  011A                     	;# 
   720  011A                     	;# 
   721  011A                     	;# 
   722  011B                     	;# 
   723  011B                     	;# 
   724  011B                     	;# 
   725  011B                     	;# 
   726  011B                     	;# 
   727  011C                     	;# 
   728  011C                     	;# 
   729  011C                     	;# 
   730  011D                     	;# 
   731  011D                     	;# 
   732  011D                     	;# 
   733  011E                     	;# 
   734  011E                     	;# 
   735  011E                     	;# 
   736  011F                     	;# 
   737  011F                     	;# 
   738  011F                     	;# 
   739  011F                     	;# 
   740  011F                     	;# 
   741  018C                     	;# 
   742  018D                     	;# 
   743  018E                     	;# 
   744  018F                     	;# 
   745  0190                     	;# 
   746  0191                     	;# 
   747  0192                     	;# 
   748  0196                     	;# 
   749  0197                     	;# 
   750  0198                     	;# 
   751  0199                     	;# 
   752  019A                     	;# 
   753  019B                     	;# 
   754  019C                     	;# 
   755  020C                     	;# 
   756  020C                     	;# 
   757  020D                     	;# 
   758  020E                     	;# 
   759  020F                     	;# 
   760  020F                     	;# 
   761  0210                     	;# 
   762  0210                     	;# 
   763  0211                     	;# 
   764  0211                     	;# 
   765  0212                     	;# 
   766  0212                     	;# 
   767  0213                     	;# 
   768  0214                     	;# 
   769  0215                     	;# 
   770  0215                     	;# 
   771  0216                     	;# 
   772  0216                     	;# 
   773  0217                     	;# 
   774  0217                     	;# 
   775  0218                     	;# 
   776  0218                     	;# 
   777  0219                     	;# 
   778  021A                     	;# 
   779  021B                     	;# 
   780  021B                     	;# 
   781  021C                     	;# 
   782  021C                     	;# 
   783  021D                     	;# 
   784  021D                     	;# 
   785  021E                     	;# 
   786  021F                     	;# 
   787  028C                     	;# 
   788  028C                     	;# 
   789  028D                     	;# 
   790  028D                     	;# 
   791  028E                     	;# 
   792  028F                     	;# 
   793  0290                     	;# 
   794  0290                     	;# 
   795  0291                     	;# 
   796  0292                     	;# 
   797  0292                     	;# 
   798  0293                     	;# 
   799  0293                     	;# 
   800  0294                     	;# 
   801  0295                     	;# 
   802  0296                     	;# 
   803  0296                     	;# 
   804  0297                     	;# 
   805  0298                     	;# 
   806  0298                     	;# 
   807  0299                     	;# 
   808  0299                     	;# 
   809  029A                     	;# 
   810  029B                     	;# 
   811  029C                     	;# 
   812  029C                     	;# 
   813  029D                     	;# 
   814  030C                     	;# 
   815  030C                     	;# 
   816  030D                     	;# 
   817  030E                     	;# 
   818  030F                     	;# 
   819  0310                     	;# 
   820  0310                     	;# 
   821  0311                     	;# 
   822  0312                     	;# 
   823  0313                     	;# 
   824  0314                     	;# 
   825  0314                     	;# 
   826  0315                     	;# 
   827  0316                     	;# 
   828  0317                     	;# 
   829  0318                     	;# 
   830  0318                     	;# 
   831  0319                     	;# 
   832  031A                     	;# 
   833  031B                     	;# 
   834  031C                     	;# 
   835  031C                     	;# 
   836  031D                     	;# 
   837  031E                     	;# 
   838  031F                     	;# 
   839  038C                     	;# 
   840  038C                     	;# 
   841  038D                     	;# 
   842  038E                     	;# 
   843  0390                     	;# 
   844  0390                     	;# 
   845  0391                     	;# 
   846  0392                     	;# 
   847  040C                     	;# 
   848  040D                     	;# 
   849  040E                     	;# 
   850  040F                     	;# 
   851  0410                     	;# 
   852  0411                     	;# 
   853  0416                     	;# 
   854  0416                     	;# 
   855  0417                     	;# 
   856  0418                     	;# 
   857  0418                     	;# 
   858  0419                     	;# 
   859  041A                     	;# 
   860  041A                     	;# 
   861  041B                     	;# 
   862  041C                     	;# 
   863  041C                     	;# 
   864  041D                     	;# 
   865  041E                     	;# 
   866  041F                     	;# 
   867  048C                     	;# 
   868  048C                     	;# 
   869  048D                     	;# 
   870  048E                     	;# 
   871  048F                     	;# 
   872  048F                     	;# 
   873  0490                     	;# 
   874  0491                     	;# 
   875  0492                     	;# 
   876  0492                     	;# 
   877  0493                     	;# 
   878  0494                     	;# 
   879  0495                     	;# 
   880  0495                     	;# 
   881  0496                     	;# 
   882  0497                     	;# 
   883  0498                     	;# 
   884  0499                     	;# 
   885  049A                     	;# 
   886  049B                     	;# 
   887  049C                     	;# 
   888  049D                     	;# 
   889  050C                     	;# 
   890  050C                     	;# 
   891  050D                     	;# 
   892  050E                     	;# 
   893  050F                     	;# 
   894  050F                     	;# 
   895  0510                     	;# 
   896  0511                     	;# 
   897  0512                     	;# 
   898  0512                     	;# 
   899  0513                     	;# 
   900  0514                     	;# 
   901  0515                     	;# 
   902  0515                     	;# 
   903  0516                     	;# 
   904  0517                     	;# 
   905  0518                     	;# 
   906  0519                     	;# 
   907  051A                     	;# 
   908  051B                     	;# 
   909  051C                     	;# 
   910  051D                     	;# 
   911  058C                     	;# 
   912  058C                     	;# 
   913  058D                     	;# 
   914  058E                     	;# 
   915  058F                     	;# 
   916  058F                     	;# 
   917  0590                     	;# 
   918  0591                     	;# 
   919  0592                     	;# 
   920  0593                     	;# 
   921  060C                     	;# 
   922  060D                     	;# 
   923  060E                     	;# 
   924  060F                     	;# 
   925  0610                     	;# 
   926  0611                     	;# 
   927  0612                     	;# 
   928  0613                     	;# 
   929  0614                     	;# 
   930  0616                     	;# 
   931  0617                     	;# 
   932  0618                     	;# 
   933  0619                     	;# 
   934  061A                     	;# 
   935  061B                     	;# 
   936  061C                     	;# 
   937  061D                     	;# 
   938  061E                     	;# 
   939  068C                     	;# 
   940  068D                     	;# 
   941  068E                     	;# 
   942  068F                     	;# 
   943  0690                     	;# 
   944  0691                     	;# 
   945  0692                     	;# 
   946  0693                     	;# 
   947  0694                     	;# 
   948  070C                     	;# 
   949  070D                     	;# 
   950  070E                     	;# 
   951  070F                     	;# 
   952  0710                     	;# 
   953  0711                     	;# 
   954  0712                     	;# 
   955  0713                     	;# 
   956  0714                     	;# 
   957  0716                     	;# 
   958  0717                     	;# 
   959  0718                     	;# 
   960  0719                     	;# 
   961  071A                     	;# 
   962  071B                     	;# 
   963  071C                     	;# 
   964  071D                     	;# 
   965  071E                     	;# 
   966  0796                     	;# 
   967  0797                     	;# 
   968  0798                     	;# 
   969  0799                     	;# 
   970  079A                     	;# 
   971  079B                     	;# 
   972  080C                     	;# 
   973  080D                     	;# 
   974  080E                     	;# 
   975  080F                     	;# 
   976  0810                     	;# 
   977  0811                     	;# 
   978  0812                     	;# 
   979  0813                     	;# 
   980  0814                     	;# 
   981  081A                     	;# 
   982  081B                     	;# 
   983  081C                     	;# 
   984  081D                     	;# 
   985  081E                     	;# 
   986  081F                     	;# 
   987  088C                     	;# 
   988  088D                     	;# 
   989  088E                     	;# 
   990  088F                     	;# 
   991  0890                     	;# 
   992  0891                     	;# 
   993  0892                     	;# 
   994  0893                     	;# 
   995  0895                     	;# 
   996  0896                     	;# 
   997  0897                     	;# 
   998  0898                     	;# 
   999  0899                     	;# 
  1000  089A                     	;# 
  1001  089B                     	;# 
  1002  090C                     	;# 
  1003  090E                     	;# 
  1004  090F                     	;# 
  1005  091F                     	;# 
  1006  098F                     	;# 
  1007  098F                     	;# 
  1008  0990                     	;# 
  1009  0991                     	;# 
  1010  0992                     	;# 
  1011  0993                     	;# 
  1012  0994                     	;# 
  1013  0995                     	;# 
  1014  0996                     	;# 
  1015  0997                     	;# 
  1016  0E0F                     	;# 
  1017  0E10                     	;# 
  1018  0E11                     	;# 
  1019  0E12                     	;# 
  1020  0E13                     	;# 
  1021  0E14                     	;# 
  1022  0E15                     	;# 
  1023  0E16                     	;# 
  1024  0E17                     	;# 
  1025  0E18                     	;# 
  1026  0E19                     	;# 
  1027  0E1A                     	;# 
  1028  0E1B                     	;# 
  1029  0E1C                     	;# 
  1030  0E1D                     	;# 
  1031  0E1E                     	;# 
  1032  0E1F                     	;# 
  1033  0E20                     	;# 
  1034  0E21                     	;# 
  1035  0E22                     	;# 
  1036  0E23                     	;# 
  1037  0E24                     	;# 
  1038  0E25                     	;# 
  1039  0E26                     	;# 
  1040  0E27                     	;# 
  1041  0E28                     	;# 
  1042  0E29                     	;# 
  1043  0E2A                     	;# 
  1044  0E2B                     	;# 
  1045  0E2C                     	;# 
  1046  0E2D                     	;# 
  1047  0E2E                     	;# 
  1048  0E2F                     	;# 
  1049  0E30                     	;# 
  1050  0E31                     	;# 
  1051  0E32                     	;# 
  1052  0E33                     	;# 
  1053  0E34                     	;# 
  1054  0E35                     	;# 
  1055  0E36                     	;# 
  1056  0E37                     	;# 
  1057  0E8F                     	;# 
  1058  0E90                     	;# 
  1059  0E91                     	;# 
  1060  0E92                     	;# 
  1061  0E93                     	;# 
  1062  0E94                     	;# 
  1063  0E95                     	;# 
  1064  0E96                     	;# 
  1065  0E97                     	;# 
  1066  0E9C                     	;# 
  1067  0E9D                     	;# 
  1068  0E9E                     	;# 
  1069  0EA1                     	;# 
  1070  0EA2                     	;# 
  1071  0EA3                     	;# 
  1072  0EA4                     	;# 
  1073  0EA5                     	;# 
  1074  0EA9                     	;# 
  1075  0EAA                     	;# 
  1076  0EAB                     	;# 
  1077  0EAC                     	;# 
  1078  0EB1                     	;# 
  1079  0EB2                     	;# 
  1080  0EB3                     	;# 
  1081  0EB8                     	;# 
  1082  0EB9                     	;# 
  1083  0EBA                     	;# 
  1084  0EBB                     	;# 
  1085  0EBC                     	;# 
  1086  0EBD                     	;# 
  1087  0EBE                     	;# 
  1088  0EC3                     	;# 
  1089  0EC5                     	;# 
  1090  0EC6                     	;# 
  1091  0EC7                     	;# 
  1092  0EC8                     	;# 
  1093  0EC9                     	;# 
  1094  0ECA                     	;# 
  1095  0ECB                     	;# 
  1096  0ECC                     	;# 
  1097  0F10                     	;# 
  1098  0F11                     	;# 
  1099  0F12                     	;# 
  1100  0F13                     	;# 
  1101  0F14                     	;# 
  1102  0F15                     	;# 
  1103  0F16                     	;# 
  1104  0F17                     	;# 
  1105  0F18                     	;# 
  1106  0F19                     	;# 
  1107  0F1A                     	;# 
  1108  0F1B                     	;# 
  1109  0F1C                     	;# 
  1110  0F1D                     	;# 
  1111  0F1E                     	;# 
  1112  0F1F                     	;# 
  1113  0F20                     	;# 
  1114  0F21                     	;# 
  1115  0F22                     	;# 
  1116  0F23                     	;# 
  1117  0F24                     	;# 
  1118  0F25                     	;# 
  1119  0F26                     	;# 
  1120  0F27                     	;# 
  1121  0F28                     	;# 
  1122  0F29                     	;# 
  1123  0F2A                     	;# 
  1124  0F2B                     	;# 
  1125  0F2C                     	;# 
  1126  0F2D                     	;# 
  1127  0F2E                     	;# 
  1128  0F2F                     	;# 
  1129  0F30                     	;# 
  1130  0F31                     	;# 
  1131  0F32                     	;# 
  1132  0F38                     	;# 
  1133  0F39                     	;# 
  1134  0F3A                     	;# 
  1135  0F3B                     	;# 
  1136  0F3C                     	;# 
  1137  0F3D                     	;# 
  1138  0F3E                     	;# 
  1139  0F3F                     	;# 
  1140  0F40                     	;# 
  1141  0F41                     	;# 
  1142  0F43                     	;# 
  1143  0F44                     	;# 
  1144  0F45                     	;# 
  1145  0F46                     	;# 
  1146  0F47                     	;# 
  1147  0F48                     	;# 
  1148  0F49                     	;# 
  1149  0F4A                     	;# 
  1150  0F4B                     	;# 
  1151  0F4C                     	;# 
  1152  0F4E                     	;# 
  1153  0F4F                     	;# 
  1154  0F50                     	;# 
  1155  0F51                     	;# 
  1156  0F52                     	;# 
  1157  0F53                     	;# 
  1158  0F54                     	;# 
  1159  0F55                     	;# 
  1160  0F56                     	;# 
  1161  0F57                     	;# 
  1162  0F59                     	;# 
  1163  0F5A                     	;# 
  1164  0F5B                     	;# 
  1165  0F5C                     	;# 
  1166  0F5D                     	;# 
  1167  0F61                     	;# 
  1168  0F62                     	;# 
  1169  0F64                     	;# 
  1170  0F65                     	;# 
  1171  0F66                     	;# 
  1172  0F67                     	;# 
  1173  0F68                     	;# 
  1174  0F69                     	;# 
  1175  0F6A                     	;# 
  1176  0F6B                     	;# 
  1177  0F6C                     	;# 
  1178  0F6D                     	;# 
  1179  0FE4                     	;# 
  1180  0FE5                     	;# 
  1181  0FE6                     	;# 
  1182  0FE7                     	;# 
  1183  0FE8                     	;# 
  1184  0FE9                     	;# 
  1185  0FEA                     	;# 
  1186  0FEB                     	;# 
  1187  0FED                     	;# 
  1188  0FEE                     	;# 
  1189  0FEF                     	;# 
  1190  0000                     	;# 
  1191  0001                     	;# 
  1192  0002                     	;# 
  1193  0003                     	;# 
  1194  0004                     	;# 
  1195  0005                     	;# 
  1196  0006                     	;# 
  1197  0007                     	;# 
  1198  0008                     	;# 
  1199  0009                     	;# 
  1200  000A                     	;# 
  1201  000B                     	;# 
  1202  000C                     	;# 
  1203  000D                     	;# 
  1204  000E                     	;# 
  1205  000F                     	;# 
  1206  0010                     	;# 
  1207  0011                     	;# 
  1208  0012                     	;# 
  1209  0013                     	;# 
  1210  0014                     	;# 
  1211  0015                     	;# 
  1212  0016                     	;# 
  1213  0017                     	;# 
  1214  0018                     	;# 
  1215  0019                     	;# 
  1216  001A                     	;# 
  1217  001C                     	;# 
  1218  001C                     	;# 
  1219  001D                     	;# 
  1220  001D                     	;# 
  1221  001E                     	;# 
  1222  001F                     	;# 
  1223  008C                     	;# 
  1224  008C                     	;# 
  1225  008D                     	;# 
  1226  008E                     	;# 
  1227  008E                     	;# 
  1228  008F                     	;# 
  1229  0090                     	;# 
  1230  0090                     	;# 
  1231  0091                     	;# 
  1232  0093                     	;# 
  1233  0094                     	;# 
  1234  0095                     	;# 
  1235  0096                     	;# 
  1236  0097                     	;# 
  1237  0098                     	;# 
  1238  0099                     	;# 
  1239  009A                     	;# 
  1240  009B                     	;# 
  1241  009C                     	;# 
  1242  009D                     	;# 
  1243  009E                     	;# 
  1244  010C                     	;# 
  1245  010D                     	;# 
  1246  010E                     	;# 
  1247  010E                     	;# 
  1248  010F                     	;# 
  1249  0110                     	;# 
  1250  0110                     	;# 
  1251  0111                     	;# 
  1252  0112                     	;# 
  1253  0112                     	;# 
  1254  0113                     	;# 
  1255  0114                     	;# 
  1256  0114                     	;# 
  1257  0115                     	;# 
  1258  0116                     	;# 
  1259  0116                     	;# 
  1260  0117                     	;# 
  1261  0119                     	;# 
  1262  0119                     	;# 
  1263  0119                     	;# 
  1264  011A                     	;# 
  1265  011A                     	;# 
  1266  011A                     	;# 
  1267  011B                     	;# 
  1268  011B                     	;# 
  1269  011B                     	;# 
  1270  011B                     	;# 
  1271  011B                     	;# 
  1272  011C                     	;# 
  1273  011C                     	;# 
  1274  011C                     	;# 
  1275  011D                     	;# 
  1276  011D                     	;# 
  1277  011D                     	;# 
  1278  011E                     	;# 
  1279  011E                     	;# 
  1280  011E                     	;# 
  1281  011F                     	;# 
  1282  011F                     	;# 
  1283  011F                     	;# 
  1284  011F                     	;# 
  1285  011F                     	;# 
  1286  018C                     	;# 
  1287  018D                     	;# 
  1288  018E                     	;# 
  1289  018F                     	;# 
  1290  0190                     	;# 
  1291  0191                     	;# 
  1292  0192                     	;# 
  1293  0196                     	;# 
  1294  0197                     	;# 
  1295  0198                     	;# 
  1296  0199                     	;# 
  1297  019A                     	;# 
  1298  019B                     	;# 
  1299  019C                     	;# 
  1300  020C                     	;# 
  1301  020C                     	;# 
  1302  020D                     	;# 
  1303  020E                     	;# 
  1304  020F                     	;# 
  1305  020F                     	;# 
  1306  0210                     	;# 
  1307  0210                     	;# 
  1308  0211                     	;# 
  1309  0211                     	;# 
  1310  0212                     	;# 
  1311  0212                     	;# 
  1312  0213                     	;# 
  1313  0214                     	;# 
  1314  0215                     	;# 
  1315  0215                     	;# 
  1316  0216                     	;# 
  1317  0216                     	;# 
  1318  0217                     	;# 
  1319  0217                     	;# 
  1320  0218                     	;# 
  1321  0218                     	;# 
  1322  0219                     	;# 
  1323  021A                     	;# 
  1324  021B                     	;# 
  1325  021B                     	;# 
  1326  021C                     	;# 
  1327  021C                     	;# 
  1328  021D                     	;# 
  1329  021D                     	;# 
  1330  021E                     	;# 
  1331  021F                     	;# 
  1332  028C                     	;# 
  1333  028C                     	;# 
  1334  028D                     	;# 
  1335  028D                     	;# 
  1336  028E                     	;# 
  1337  028F                     	;# 
  1338  0290                     	;# 
  1339  0290                     	;# 
  1340  0291                     	;# 
  1341  0292                     	;# 
  1342  0292                     	;# 
  1343  0293                     	;# 
  1344  0293                     	;# 
  1345  0294                     	;# 
  1346  0295                     	;# 
  1347  0296                     	;# 
  1348  0296                     	;# 
  1349  0297                     	;# 
  1350  0298                     	;# 
  1351  0298                     	;# 
  1352  0299                     	;# 
  1353  0299                     	;# 
  1354  029A                     	;# 
  1355  029B                     	;# 
  1356  029C                     	;# 
  1357  029C                     	;# 
  1358  029D                     	;# 
  1359  030C                     	;# 
  1360  030C                     	;# 
  1361  030D                     	;# 
  1362  030E                     	;# 
  1363  030F                     	;# 
  1364  0310                     	;# 
  1365  0310                     	;# 
  1366  0311                     	;# 
  1367  0312                     	;# 
  1368  0313                     	;# 
  1369  0314                     	;# 
  1370  0314                     	;# 
  1371  0315                     	;# 
  1372  0316                     	;# 
  1373  0317                     	;# 
  1374  0318                     	;# 
  1375  0318                     	;# 
  1376  0319                     	;# 
  1377  031A                     	;# 
  1378  031B                     	;# 
  1379  031C                     	;# 
  1380  031C                     	;# 
  1381  031D                     	;# 
  1382  031E                     	;# 
  1383  031F                     	;# 
  1384  038C                     	;# 
  1385  038C                     	;# 
  1386  038D                     	;# 
  1387  038E                     	;# 
  1388  0390                     	;# 
  1389  0390                     	;# 
  1390  0391                     	;# 
  1391  0392                     	;# 
  1392  040C                     	;# 
  1393  040D                     	;# 
  1394  040E                     	;# 
  1395  040F                     	;# 
  1396  0410                     	;# 
  1397  0411                     	;# 
  1398  0416                     	;# 
  1399  0416                     	;# 
  1400  0417                     	;# 
  1401  0418                     	;# 
  1402  0418                     	;# 
  1403  0419                     	;# 
  1404  041A                     	;# 
  1405  041A                     	;# 
  1406  041B                     	;# 
  1407  041C                     	;# 
  1408  041C                     	;# 
  1409  041D                     	;# 
  1410  041E                     	;# 
  1411  041F                     	;# 
  1412  048C                     	;# 
  1413  048C                     	;# 
  1414  048D                     	;# 
  1415  048E                     	;# 
  1416  048F                     	;# 
  1417  048F                     	;# 
  1418  0490                     	;# 
  1419  0491                     	;# 
  1420  0492                     	;# 
  1421  0492                     	;# 
  1422  0493                     	;# 
  1423  0494                     	;# 
  1424  0495                     	;# 
  1425  0495                     	;# 
  1426  0496                     	;# 
  1427  0497                     	;# 
  1428  0498                     	;# 
  1429  0499                     	;# 
  1430  049A                     	;# 
  1431  049B                     	;# 
  1432  049C                     	;# 
  1433  049D                     	;# 
  1434  050C                     	;# 
  1435  050C                     	;# 
  1436  050D                     	;# 
  1437  050E                     	;# 
  1438  050F                     	;# 
  1439  050F                     	;# 
  1440  0510                     	;# 
  1441  0511                     	;# 
  1442  0512                     	;# 
  1443  0512                     	;# 
  1444  0513                     	;# 
  1445  0514                     	;# 
  1446  0515                     	;# 
  1447  0515                     	;# 
  1448  0516                     	;# 
  1449  0517                     	;# 
  1450  0518                     	;# 
  1451  0519                     	;# 
  1452  051A                     	;# 
  1453  051B                     	;# 
  1454  051C                     	;# 
  1455  051D                     	;# 
  1456  058C                     	;# 
  1457  058C                     	;# 
  1458  058D                     	;# 
  1459  058E                     	;# 
  1460  058F                     	;# 
  1461  058F                     	;# 
  1462  0590                     	;# 
  1463  0591                     	;# 
  1464  0592                     	;# 
  1465  0593                     	;# 
  1466  060C                     	;# 
  1467  060D                     	;# 
  1468  060E                     	;# 
  1469  060F                     	;# 
  1470  0610                     	;# 
  1471  0611                     	;# 
  1472  0612                     	;# 
  1473  0613                     	;# 
  1474  0614                     	;# 
  1475  0616                     	;# 
  1476  0617                     	;# 
  1477  0618                     	;# 
  1478  0619                     	;# 
  1479  061A                     	;# 
  1480  061B                     	;# 
  1481  061C                     	;# 
  1482  061D                     	;# 
  1483  061E                     	;# 
  1484  068C                     	;# 
  1485  068D                     	;# 
  1486  068E                     	;# 
  1487  068F                     	;# 
  1488  0690                     	;# 
  1489  0691                     	;# 
  1490  0692                     	;# 
  1491  0693                     	;# 
  1492  0694                     	;# 
  1493  070C                     	;# 
  1494  070D                     	;# 
  1495  070E                     	;# 
  1496  070F                     	;# 
  1497  0710                     	;# 
  1498  0711                     	;# 
  1499  0712                     	;# 
  1500  0713                     	;# 
  1501  0714                     	;# 
  1502  0716                     	;# 
  1503  0717                     	;# 
  1504  0718                     	;# 
  1505  0719                     	;# 
  1506  071A                     	;# 
  1507  071B                     	;# 
  1508  071C                     	;# 
  1509  071D                     	;# 
  1510  071E                     	;# 
  1511  0796                     	;# 
  1512  0797                     	;# 
  1513  0798                     	;# 
  1514  0799                     	;# 
  1515  079A                     	;# 
  1516  079B                     	;# 
  1517  080C                     	;# 
  1518  080D                     	;# 
  1519  080E                     	;# 
  1520  080F                     	;# 
  1521  0810                     	;# 
  1522  0811                     	;# 
  1523  0812                     	;# 
  1524  0813                     	;# 
  1525  0814                     	;# 
  1526  081A                     	;# 
  1527  081B                     	;# 
  1528  081C                     	;# 
  1529  081D                     	;# 
  1530  081E                     	;# 
  1531  081F                     	;# 
  1532  088C                     	;# 
  1533  088D                     	;# 
  1534  088E                     	;# 
  1535  088F                     	;# 
  1536  0890                     	;# 
  1537  0891                     	;# 
  1538  0892                     	;# 
  1539  0893                     	;# 
  1540  0895                     	;# 
  1541  0896                     	;# 
  1542  0897                     	;# 
  1543  0898                     	;# 
  1544  0899                     	;# 
  1545  089A                     	;# 
  1546  089B                     	;# 
  1547  090C                     	;# 
  1548  090E                     	;# 
  1549  090F                     	;# 
  1550  091F                     	;# 
  1551  098F                     	;# 
  1552  098F                     	;# 
  1553  0990                     	;# 
  1554  0991                     	;# 
  1555  0992                     	;# 
  1556  0993                     	;# 
  1557  0994                     	;# 
  1558  0995                     	;# 
  1559  0996                     	;# 
  1560  0997                     	;# 
  1561  0E0F                     	;# 
  1562  0E10                     	;# 
  1563  0E11                     	;# 
  1564  0E12                     	;# 
  1565  0E13                     	;# 
  1566  0E14                     	;# 
  1567  0E15                     	;# 
  1568  0E16                     	;# 
  1569  0E17                     	;# 
  1570  0E18                     	;# 
  1571  0E19                     	;# 
  1572  0E1A                     	;# 
  1573  0E1B                     	;# 
  1574  0E1C                     	;# 
  1575  0E1D                     	;# 
  1576  0E1E                     	;# 
  1577  0E1F                     	;# 
  1578  0E20                     	;# 
  1579  0E21                     	;# 
  1580  0E22                     	;# 
  1581  0E23                     	;# 
  1582  0E24                     	;# 
  1583  0E25                     	;# 
  1584  0E26                     	;# 
  1585  0E27                     	;# 
  1586  0E28                     	;# 
  1587  0E29                     	;# 
  1588  0E2A                     	;# 
  1589  0E2B                     	;# 
  1590  0E2C                     	;# 
  1591  0E2D                     	;# 
  1592  0E2E                     	;# 
  1593  0E2F                     	;# 
  1594  0E30                     	;# 
  1595  0E31                     	;# 
  1596  0E32                     	;# 
  1597  0E33                     	;# 
  1598  0E34                     	;# 
  1599  0E35                     	;# 
  1600  0E36                     	;# 
  1601  0E37                     	;# 
  1602  0E8F                     	;# 
  1603  0E90                     	;# 
  1604  0E91                     	;# 
  1605  0E92                     	;# 
  1606  0E93                     	;# 
  1607  0E94                     	;# 
  1608  0E95                     	;# 
  1609  0E96                     	;# 
  1610  0E97                     	;# 
  1611  0E9C                     	;# 
  1612  0E9D                     	;# 
  1613  0E9E                     	;# 
  1614  0EA1                     	;# 
  1615  0EA2                     	;# 
  1616  0EA3                     	;# 
  1617  0EA4                     	;# 
  1618  0EA5                     	;# 
  1619  0EA9                     	;# 
  1620  0EAA                     	;# 
  1621  0EAB                     	;# 
  1622  0EAC                     	;# 
  1623  0EB1                     	;# 
  1624  0EB2                     	;# 
  1625  0EB3                     	;# 
  1626  0EB8                     	;# 
  1627  0EB9                     	;# 
  1628  0EBA                     	;# 
  1629  0EBB                     	;# 
  1630  0EBC                     	;# 
  1631  0EBD                     	;# 
  1632  0EBE                     	;# 
  1633  0EC3                     	;# 
  1634  0EC5                     	;# 
  1635  0EC6                     	;# 
  1636  0EC7                     	;# 
  1637  0EC8                     	;# 
  1638  0EC9                     	;# 
  1639  0ECA                     	;# 
  1640  0ECB                     	;# 
  1641  0ECC                     	;# 
  1642  0F10                     	;# 
  1643  0F11                     	;# 
  1644  0F12                     	;# 
  1645  0F13                     	;# 
  1646  0F14                     	;# 
  1647  0F15                     	;# 
  1648  0F16                     	;# 
  1649  0F17                     	;# 
  1650  0F18                     	;# 
  1651  0F19                     	;# 
  1652  0F1A                     	;# 
  1653  0F1B                     	;# 
  1654  0F1C                     	;# 
  1655  0F1D                     	;# 
  1656  0F1E                     	;# 
  1657  0F1F                     	;# 
  1658  0F20                     	;# 
  1659  0F21                     	;# 
  1660  0F22                     	;# 
  1661  0F23                     	;# 
  1662  0F24                     	;# 
  1663  0F25                     	;# 
  1664  0F26                     	;# 
  1665  0F27                     	;# 
  1666  0F28                     	;# 
  1667  0F29                     	;# 
  1668  0F2A                     	;# 
  1669  0F2B                     	;# 
  1670  0F2C                     	;# 
  1671  0F2D                     	;# 
  1672  0F2E                     	;# 
  1673  0F2F                     	;# 
  1674  0F30                     	;# 
  1675  0F31                     	;# 
  1676  0F32                     	;# 
  1677  0F38                     	;# 
  1678  0F39                     	;# 
  1679  0F3A                     	;# 
  1680  0F3B                     	;# 
  1681  0F3C                     	;# 
  1682  0F3D                     	;# 
  1683  0F3E                     	;# 
  1684  0F3F                     	;# 
  1685  0F40                     	;# 
  1686  0F41                     	;# 
  1687  0F43                     	;# 
  1688  0F44                     	;# 
  1689  0F45                     	;# 
  1690  0F46                     	;# 
  1691  0F47                     	;# 
  1692  0F48                     	;# 
  1693  0F49                     	;# 
  1694  0F4A                     	;# 
  1695  0F4B                     	;# 
  1696  0F4C                     	;# 
  1697  0F4E                     	;# 
  1698  0F4F                     	;# 
  1699  0F50                     	;# 
  1700  0F51                     	;# 
  1701  0F52                     	;# 
  1702  0F53                     	;# 
  1703  0F54                     	;# 
  1704  0F55                     	;# 
  1705  0F56                     	;# 
  1706  0F57                     	;# 
  1707  0F59                     	;# 
  1708  0F5A                     	;# 
  1709  0F5B                     	;# 
  1710  0F5C                     	;# 
  1711  0F5D                     	;# 
  1712  0F61                     	;# 
  1713  0F62                     	;# 
  1714  0F64                     	;# 
  1715  0F65                     	;# 
  1716  0F66                     	;# 
  1717  0F67                     	;# 
  1718  0F68                     	;# 
  1719  0F69                     	;# 
  1720  0F6A                     	;# 
  1721  0F6B                     	;# 
  1722  0F6C                     	;# 
  1723  0F6D                     	;# 
  1724  0FE4                     	;# 
  1725  0FE5                     	;# 
  1726  0FE6                     	;# 
  1727  0FE7                     	;# 
  1728  0FE8                     	;# 
  1729  0FE9                     	;# 
  1730  0FEA                     	;# 
  1731  0FEB                     	;# 
  1732  0FED                     	;# 
  1733  0FEE                     	;# 
  1734  0FEF                     	;# 
  1735  0000                     	;# 
  1736  0001                     	;# 
  1737  0002                     	;# 
  1738  0003                     	;# 
  1739  0004                     	;# 
  1740  0005                     	;# 
  1741  0006                     	;# 
  1742  0007                     	;# 
  1743  0008                     	;# 
  1744  0009                     	;# 
  1745  000A                     	;# 
  1746  000B                     	;# 
  1747  000C                     	;# 
  1748  000D                     	;# 
  1749  000E                     	;# 
  1750  000F                     	;# 
  1751  0010                     	;# 
  1752  0011                     	;# 
  1753  0012                     	;# 
  1754  0013                     	;# 
  1755  0014                     	;# 
  1756  0015                     	;# 
  1757  0016                     	;# 
  1758  0017                     	;# 
  1759  0018                     	;# 
  1760  0019                     	;# 
  1761  001A                     	;# 
  1762  001C                     	;# 
  1763  001C                     	;# 
  1764  001D                     	;# 
  1765  001D                     	;# 
  1766  001E                     	;# 
  1767  001F                     	;# 
  1768  008C                     	;# 
  1769  008C                     	;# 
  1770  008D                     	;# 
  1771  008E                     	;# 
  1772  008E                     	;# 
  1773  008F                     	;# 
  1774  0090                     	;# 
  1775  0090                     	;# 
  1776  0091                     	;# 
  1777  0093                     	;# 
  1778  0094                     	;# 
  1779  0095                     	;# 
  1780  0096                     	;# 
  1781  0097                     	;# 
  1782  0098                     	;# 
  1783  0099                     	;# 
  1784  009A                     	;# 
  1785  009B                     	;# 
  1786  009C                     	;# 
  1787  009D                     	;# 
  1788  009E                     	;# 
  1789  010C                     	;# 
  1790  010D                     	;# 
  1791  010E                     	;# 
  1792  010E                     	;# 
  1793  010F                     	;# 
  1794  0110                     	;# 
  1795  0110                     	;# 
  1796  0111                     	;# 
  1797  0112                     	;# 
  1798  0112                     	;# 
  1799  0113                     	;# 
  1800  0114                     	;# 
  1801  0114                     	;# 
  1802  0115                     	;# 
  1803  0116                     	;# 
  1804  0116                     	;# 
  1805  0117                     	;# 
  1806  0119                     	;# 
  1807  0119                     	;# 
  1808  0119                     	;# 
  1809  011A                     	;# 
  1810  011A                     	;# 
  1811  011A                     	;# 
  1812  011B                     	;# 
  1813  011B                     	;# 
  1814  011B                     	;# 
  1815  011B                     	;# 
  1816  011B                     	;# 
  1817  011C                     	;# 
  1818  011C                     	;# 
  1819  011C                     	;# 
  1820  011D                     	;# 
  1821  011D                     	;# 
  1822  011D                     	;# 
  1823  011E                     	;# 
  1824  011E                     	;# 
  1825  011E                     	;# 
  1826  011F                     	;# 
  1827  011F                     	;# 
  1828  011F                     	;# 
  1829  011F                     	;# 
  1830  011F                     	;# 
  1831  018C                     	;# 
  1832  018D                     	;# 
  1833  018E                     	;# 
  1834  018F                     	;# 
  1835  0190                     	;# 
  1836  0191                     	;# 
  1837  0192                     	;# 
  1838  0196                     	;# 
  1839  0197                     	;# 
  1840  0198                     	;# 
  1841  0199                     	;# 
  1842  019A                     	;# 
  1843  019B                     	;# 
  1844  019C                     	;# 
  1845  020C                     	;# 
  1846  020C                     	;# 
  1847  020D                     	;# 
  1848  020E                     	;# 
  1849  020F                     	;# 
  1850  020F                     	;# 
  1851  0210                     	;# 
  1852  0210                     	;# 
  1853  0211                     	;# 
  1854  0211                     	;# 
  1855  0212                     	;# 
  1856  0212                     	;# 
  1857  0213                     	;# 
  1858  0214                     	;# 
  1859  0215                     	;# 
  1860  0215                     	;# 
  1861  0216                     	;# 
  1862  0216                     	;# 
  1863  0217                     	;# 
  1864  0217                     	;# 
  1865  0218                     	;# 
  1866  0218                     	;# 
  1867  0219                     	;# 
  1868  021A                     	;# 
  1869  021B                     	;# 
  1870  021B                     	;# 
  1871  021C                     	;# 
  1872  021C                     	;# 
  1873  021D                     	;# 
  1874  021D                     	;# 
  1875  021E                     	;# 
  1876  021F                     	;# 
  1877  028C                     	;# 
  1878  028C                     	;# 
  1879  028D                     	;# 
  1880  028D                     	;# 
  1881  028E                     	;# 
  1882  028F                     	;# 
  1883  0290                     	;# 
  1884  0290                     	;# 
  1885  0291                     	;# 
  1886  0292                     	;# 
  1887  0292                     	;# 
  1888  0293                     	;# 
  1889  0293                     	;# 
  1890  0294                     	;# 
  1891  0295                     	;# 
  1892  0296                     	;# 
  1893  0296                     	;# 
  1894  0297                     	;# 
  1895  0298                     	;# 
  1896  0298                     	;# 
  1897  0299                     	;# 
  1898  0299                     	;# 
  1899  029A                     	;# 
  1900  029B                     	;# 
  1901  029C                     	;# 
  1902  029C                     	;# 
  1903  029D                     	;# 
  1904  030C                     	;# 
  1905  030C                     	;# 
  1906  030D                     	;# 
  1907  030E                     	;# 
  1908  030F                     	;# 
  1909  0310                     	;# 
  1910  0310                     	;# 
  1911  0311                     	;# 
  1912  0312                     	;# 
  1913  0313                     	;# 
  1914  0314                     	;# 
  1915  0314                     	;# 
  1916  0315                     	;# 
  1917  0316                     	;# 
  1918  0317                     	;# 
  1919  0318                     	;# 
  1920  0318                     	;# 
  1921  0319                     	;# 
  1922  031A                     	;# 
  1923  031B                     	;# 
  1924  031C                     	;# 
  1925  031C                     	;# 
  1926  031D                     	;# 
  1927  031E                     	;# 
  1928  031F                     	;# 
  1929  038C                     	;# 
  1930  038C                     	;# 
  1931  038D                     	;# 
  1932  038E                     	;# 
  1933  0390                     	;# 
  1934  0390                     	;# 
  1935  0391                     	;# 
  1936  0392                     	;# 
  1937  040C                     	;# 
  1938  040D                     	;# 
  1939  040E                     	;# 
  1940  040F                     	;# 
  1941  0410                     	;# 
  1942  0411                     	;# 
  1943  0416                     	;# 
  1944  0416                     	;# 
  1945  0417                     	;# 
  1946  0418                     	;# 
  1947  0418                     	;# 
  1948  0419                     	;# 
  1949  041A                     	;# 
  1950  041A                     	;# 
  1951  041B                     	;# 
  1952  041C                     	;# 
  1953  041C                     	;# 
  1954  041D                     	;# 
  1955  041E                     	;# 
  1956  041F                     	;# 
  1957  048C                     	;# 
  1958  048C                     	;# 
  1959  048D                     	;# 
  1960  048E                     	;# 
  1961  048F                     	;# 
  1962  048F                     	;# 
  1963  0490                     	;# 
  1964  0491                     	;# 
  1965  0492                     	;# 
  1966  0492                     	;# 
  1967  0493                     	;# 
  1968  0494                     	;# 
  1969  0495                     	;# 
  1970  0495                     	;# 
  1971  0496                     	;# 
  1972  0497                     	;# 
  1973  0498                     	;# 
  1974  0499                     	;# 
  1975  049A                     	;# 
  1976  049B                     	;# 
  1977  049C                     	;# 
  1978  049D                     	;# 
  1979  050C                     	;# 
  1980  050C                     	;# 
  1981  050D                     	;# 
  1982  050E                     	;# 
  1983  050F                     	;# 
  1984  050F                     	;# 
  1985  0510                     	;# 
  1986  0511                     	;# 
  1987  0512                     	;# 
  1988  0512                     	;# 
  1989  0513                     	;# 
  1990  0514                     	;# 
  1991  0515                     	;# 
  1992  0515                     	;# 
  1993  0516                     	;# 
  1994  0517                     	;# 
  1995  0518                     	;# 
  1996  0519                     	;# 
  1997  051A                     	;# 
  1998  051B                     	;# 
  1999  051C                     	;# 
  2000  051D                     	;# 
  2001  058C                     	;# 
  2002  058C                     	;# 
  2003  058D                     	;# 
  2004  058E                     	;# 
  2005  058F                     	;# 
  2006  058F                     	;# 
  2007  0590                     	;# 
  2008  0591                     	;# 
  2009  0592                     	;# 
  2010  0593                     	;# 
  2011  060C                     	;# 
  2012  060D                     	;# 
  2013  060E                     	;# 
  2014  060F                     	;# 
  2015  0610                     	;# 
  2016  0611                     	;# 
  2017  0612                     	;# 
  2018  0613                     	;# 
  2019  0614                     	;# 
  2020  0616                     	;# 
  2021  0617                     	;# 
  2022  0618                     	;# 
  2023  0619                     	;# 
  2024  061A                     	;# 
  2025  061B                     	;# 
  2026  061C                     	;# 
  2027  061D                     	;# 
  2028  061E                     	;# 
  2029  068C                     	;# 
  2030  068D                     	;# 
  2031  068E                     	;# 
  2032  068F                     	;# 
  2033  0690                     	;# 
  2034  0691                     	;# 
  2035  0692                     	;# 
  2036  0693                     	;# 
  2037  0694                     	;# 
  2038  070C                     	;# 
  2039  070D                     	;# 
  2040  070E                     	;# 
  2041  070F                     	;# 
  2042  0710                     	;# 
  2043  0711                     	;# 
  2044  0712                     	;# 
  2045  0713                     	;# 
  2046  0714                     	;# 
  2047  0716                     	;# 
  2048  0717                     	;# 
  2049  0718                     	;# 
  2050  0719                     	;# 
  2051  071A                     	;# 
  2052  071B                     	;# 
  2053  071C                     	;# 
  2054  071D                     	;# 
  2055  071E                     	;# 
  2056  0796                     	;# 
  2057  0797                     	;# 
  2058  0798                     	;# 
  2059  0799                     	;# 
  2060  079A                     	;# 
  2061  079B                     	;# 
  2062  080C                     	;# 
  2063  080D                     	;# 
  2064  080E                     	;# 
  2065  080F                     	;# 
  2066  0810                     	;# 
  2067  0811                     	;# 
  2068  0812                     	;# 
  2069  0813                     	;# 
  2070  0814                     	;# 
  2071  081A                     	;# 
  2072  081B                     	;# 
  2073  081C                     	;# 
  2074  081D                     	;# 
  2075  081E                     	;# 
  2076  081F                     	;# 
  2077  088C                     	;# 
  2078  088D                     	;# 
  2079  088E                     	;# 
  2080  088F                     	;# 
  2081  0890                     	;# 
  2082  0891                     	;# 
  2083  0892                     	;# 
  2084  0893                     	;# 
  2085  0895                     	;# 
  2086  0896                     	;# 
  2087  0897                     	;# 
  2088  0898                     	;# 
  2089  0899                     	;# 
  2090  089A                     	;# 
  2091  089B                     	;# 
  2092  090C                     	;# 
  2093  090E                     	;# 
  2094  090F                     	;# 
  2095  091F                     	;# 
  2096  098F                     	;# 
  2097  098F                     	;# 
  2098  0990                     	;# 
  2099  0991                     	;# 
  2100  0992                     	;# 
  2101  0993                     	;# 
  2102  0994                     	;# 
  2103  0995                     	;# 
  2104  0996                     	;# 
  2105  0997                     	;# 
  2106  0E0F                     	;# 
  2107  0E10                     	;# 
  2108  0E11                     	;# 
  2109  0E12                     	;# 
  2110  0E13                     	;# 
  2111  0E14                     	;# 
  2112  0E15                     	;# 
  2113  0E16                     	;# 
  2114  0E17                     	;# 
  2115  0E18                     	;# 
  2116  0E19                     	;# 
  2117  0E1A                     	;# 
  2118  0E1B                     	;# 
  2119  0E1C                     	;# 
  2120  0E1D                     	;# 
  2121  0E1E                     	;# 
  2122  0E1F                     	;# 
  2123  0E20                     	;# 
  2124  0E21                     	;# 
  2125  0E22                     	;# 
  2126  0E23                     	;# 
  2127  0E24                     	;# 
  2128  0E25                     	;# 
  2129  0E26                     	;# 
  2130  0E27                     	;# 
  2131  0E28                     	;# 
  2132  0E29                     	;# 
  2133  0E2A                     	;# 
  2134  0E2B                     	;# 
  2135  0E2C                     	;# 
  2136  0E2D                     	;# 
  2137  0E2E                     	;# 
  2138  0E2F                     	;# 
  2139  0E30                     	;# 
  2140  0E31                     	;# 
  2141  0E32                     	;# 
  2142  0E33                     	;# 
  2143  0E34                     	;# 
  2144  0E35                     	;# 
  2145  0E36                     	;# 
  2146  0E37                     	;# 
  2147  0E8F                     	;# 
  2148  0E90                     	;# 
  2149  0E91                     	;# 
  2150  0E92                     	;# 
  2151  0E93                     	;# 
  2152  0E94                     	;# 
  2153  0E95                     	;# 
  2154  0E96                     	;# 
  2155  0E97                     	;# 
  2156  0E9C                     	;# 
  2157  0E9D                     	;# 
  2158  0E9E                     	;# 
  2159  0EA1                     	;# 
  2160  0EA2                     	;# 
  2161  0EA3                     	;# 
  2162  0EA4                     	;# 
  2163  0EA5                     	;# 
  2164  0EA9                     	;# 
  2165  0EAA                     	;# 
  2166  0EAB                     	;# 
  2167  0EAC                     	;# 
  2168  0EB1                     	;# 
  2169  0EB2                     	;# 
  2170  0EB3                     	;# 
  2171  0EB8                     	;# 
  2172  0EB9                     	;# 
  2173  0EBA                     	;# 
  2174  0EBB                     	;# 
  2175  0EBC                     	;# 
  2176  0EBD                     	;# 
  2177  0EBE                     	;# 
  2178  0EC3                     	;# 
  2179  0EC5                     	;# 
  2180  0EC6                     	;# 
  2181  0EC7                     	;# 
  2182  0EC8                     	;# 
  2183  0EC9                     	;# 
  2184  0ECA                     	;# 
  2185  0ECB                     	;# 
  2186  0ECC                     	;# 
  2187  0F10                     	;# 
  2188  0F11                     	;# 
  2189  0F12                     	;# 
  2190  0F13                     	;# 
  2191  0F14                     	;# 
  2192  0F15                     	;# 
  2193  0F16                     	;# 
  2194  0F17                     	;# 
  2195  0F18                     	;# 
  2196  0F19                     	;# 
  2197  0F1A                     	;# 
  2198  0F1B                     	;# 
  2199  0F1C                     	;# 
  2200  0F1D                     	;# 
  2201  0F1E                     	;# 
  2202  0F1F                     	;# 
  2203  0F20                     	;# 
  2204  0F21                     	;# 
  2205  0F22                     	;# 
  2206  0F23                     	;# 
  2207  0F24                     	;# 
  2208  0F25                     	;# 
  2209  0F26                     	;# 
  2210  0F27                     	;# 
  2211  0F28                     	;# 
  2212  0F29                     	;# 
  2213  0F2A                     	;# 
  2214  0F2B                     	;# 
  2215  0F2C                     	;# 
  2216  0F2D                     	;# 
  2217  0F2E                     	;# 
  2218  0F2F                     	;# 
  2219  0F30                     	;# 
  2220  0F31                     	;# 
  2221  0F32                     	;# 
  2222  0F38                     	;# 
  2223  0F39                     	;# 
  2224  0F3A                     	;# 
  2225  0F3B                     	;# 
  2226  0F3C                     	;# 
  2227  0F3D                     	;# 
  2228  0F3E                     	;# 
  2229  0F3F                     	;# 
  2230  0F40                     	;# 
  2231  0F41                     	;# 
  2232  0F43                     	;# 
  2233  0F44                     	;# 
  2234  0F45                     	;# 
  2235  0F46                     	;# 
  2236  0F47                     	;# 
  2237  0F48                     	;# 
  2238  0F49                     	;# 
  2239  0F4A                     	;# 
  2240  0F4B                     	;# 
  2241  0F4C                     	;# 
  2242  0F4E                     	;# 
  2243  0F4F                     	;# 
  2244  0F50                     	;# 
  2245  0F51                     	;# 
  2246  0F52                     	;# 
  2247  0F53                     	;# 
  2248  0F54                     	;# 
  2249  0F55                     	;# 
  2250  0F56                     	;# 
  2251  0F57                     	;# 
  2252  0F59                     	;# 
  2253  0F5A                     	;# 
  2254  0F5B                     	;# 
  2255  0F5C                     	;# 
  2256  0F5D                     	;# 
  2257  0F61                     	;# 
  2258  0F62                     	;# 
  2259  0F64                     	;# 
  2260  0F65                     	;# 
  2261  0F66                     	;# 
  2262  0F67                     	;# 
  2263  0F68                     	;# 
  2264  0F69                     	;# 
  2265  0F6A                     	;# 
  2266  0F6B                     	;# 
  2267  0F6C                     	;# 
  2268  0F6D                     	;# 
  2269  0FE4                     	;# 
  2270  0FE5                     	;# 
  2271  0FE6                     	;# 
  2272  0FE7                     	;# 
  2273  0FE8                     	;# 
  2274  0FE9                     	;# 
  2275  0FEA                     	;# 
  2276  0FEB                     	;# 
  2277  0FED                     	;# 
  2278  0FEE                     	;# 
  2279  0FEF                     	;# 
  2280  0000                     	;# 
  2281  0001                     	;# 
  2282  0002                     	;# 
  2283  0003                     	;# 
  2284  0004                     	;# 
  2285  0005                     	;# 
  2286  0006                     	;# 
  2287  0007                     	;# 
  2288  0008                     	;# 
  2289  0009                     	;# 
  2290  000A                     	;# 
  2291  000B                     	;# 
  2292  000C                     	;# 
  2293  000D                     	;# 
  2294  000E                     	;# 
  2295  000F                     	;# 
  2296  0010                     	;# 
  2297  0011                     	;# 
  2298  0012                     	;# 
  2299  0013                     	;# 
  2300  0014                     	;# 
  2301  0015                     	;# 
  2302  0016                     	;# 
  2303  0017                     	;# 
  2304  0018                     	;# 
  2305  0019                     	;# 
  2306  001A                     	;# 
  2307  001C                     	;# 
  2308  001C                     	;# 
  2309  001D                     	;# 
  2310  001D                     	;# 
  2311  001E                     	;# 
  2312  001F                     	;# 
  2313  008C                     	;# 
  2314  008C                     	;# 
  2315  008D                     	;# 
  2316  008E                     	;# 
  2317  008E                     	;# 
  2318  008F                     	;# 
  2319  0090                     	;# 
  2320  0090                     	;# 
  2321  0091                     	;# 
  2322  0093                     	;# 
  2323  0094                     	;# 
  2324  0095                     	;# 
  2325  0096                     	;# 
  2326  0097                     	;# 
  2327  0098                     	;# 
  2328  0099                     	;# 
  2329  009A                     	;# 
  2330  009B                     	;# 
  2331  009C                     	;# 
  2332  009D                     	;# 
  2333  009E                     	;# 
  2334  010C                     	;# 
  2335  010D                     	;# 
  2336  010E                     	;# 
  2337  010E                     	;# 
  2338  010F                     	;# 
  2339  0110                     	;# 
  2340  0110                     	;# 
  2341  0111                     	;# 
  2342  0112                     	;# 
  2343  0112                     	;# 
  2344  0113                     	;# 
  2345  0114                     	;# 
  2346  0114                     	;# 
  2347  0115                     	;# 
  2348  0116                     	;# 
  2349  0116                     	;# 
  2350  0117                     	;# 
  2351  0119                     	;# 
  2352  0119                     	;# 
  2353  0119                     	;# 
  2354  011A                     	;# 
  2355  011A                     	;# 
  2356  011A                     	;# 
  2357  011B                     	;# 
  2358  011B                     	;# 
  2359  011B                     	;# 
  2360  011B                     	;# 
  2361  011B                     	;# 
  2362  011C                     	;# 
  2363  011C                     	;# 
  2364  011C                     	;# 
  2365  011D                     	;# 
  2366  011D                     	;# 
  2367  011D                     	;# 
  2368  011E                     	;# 
  2369  011E                     	;# 
  2370  011E                     	;# 
  2371  011F                     	;# 
  2372  011F                     	;# 
  2373  011F                     	;# 
  2374  011F                     	;# 
  2375  011F                     	;# 
  2376  018C                     	;# 
  2377  018D                     	;# 
  2378  018E                     	;# 
  2379  018F                     	;# 
  2380  0190                     	;# 
  2381  0191                     	;# 
  2382  0192                     	;# 
  2383  0196                     	;# 
  2384  0197                     	;# 
  2385  0198                     	;# 
  2386  0199                     	;# 
  2387  019A                     	;# 
  2388  019B                     	;# 
  2389  019C                     	;# 
  2390  020C                     	;# 
  2391  020C                     	;# 
  2392  020D                     	;# 
  2393  020E                     	;# 
  2394  020F                     	;# 
  2395  020F                     	;# 
  2396  0210                     	;# 
  2397  0210                     	;# 
  2398  0211                     	;# 
  2399  0211                     	;# 
  2400  0212                     	;# 
  2401  0212                     	;# 
  2402  0213                     	;# 
  2403  0214                     	;# 
  2404  0215                     	;# 
  2405  0215                     	;# 
  2406  0216                     	;# 
  2407  0216                     	;# 
  2408  0217                     	;# 
  2409  0217                     	;# 
  2410  0218                     	;# 
  2411  0218                     	;# 
  2412  0219                     	;# 
  2413  021A                     	;# 
  2414  021B                     	;# 
  2415  021B                     	;# 
  2416  021C                     	;# 
  2417  021C                     	;# 
  2418  021D                     	;# 
  2419  021D                     	;# 
  2420  021E                     	;# 
  2421  021F                     	;# 
  2422  028C                     	;# 
  2423  028C                     	;# 
  2424  028D                     	;# 
  2425  028D                     	;# 
  2426  028E                     	;# 
  2427  028F                     	;# 
  2428  0290                     	;# 
  2429  0290                     	;# 
  2430  0291                     	;# 
  2431  0292                     	;# 
  2432  0292                     	;# 
  2433  0293                     	;# 
  2434  0293                     	;# 
  2435  0294                     	;# 
  2436  0295                     	;# 
  2437  0296                     	;# 
  2438  0296                     	;# 
  2439  0297                     	;# 
  2440  0298                     	;# 
  2441  0298                     	;# 
  2442  0299                     	;# 
  2443  0299                     	;# 
  2444  029A                     	;# 
  2445  029B                     	;# 
  2446  029C                     	;# 
  2447  029C                     	;# 
  2448  029D                     	;# 
  2449  030C                     	;# 
  2450  030C                     	;# 
  2451  030D                     	;# 
  2452  030E                     	;# 
  2453  030F                     	;# 
  2454  0310                     	;# 
  2455  0310                     	;# 
  2456  0311                     	;# 
  2457  0312                     	;# 
  2458  0313                     	;# 
  2459  0314                     	;# 
  2460  0314                     	;# 
  2461  0315                     	;# 
  2462  0316                     	;# 
  2463  0317                     	;# 
  2464  0318                     	;# 
  2465  0318                     	;# 
  2466  0319                     	;# 
  2467  031A                     	;# 
  2468  031B                     	;# 
  2469  031C                     	;# 
  2470  031C                     	;# 
  2471  031D                     	;# 
  2472  031E                     	;# 
  2473  031F                     	;# 
  2474  038C                     	;# 
  2475  038C                     	;# 
  2476  038D                     	;# 
  2477  038E                     	;# 
  2478  0390                     	;# 
  2479  0390                     	;# 
  2480  0391                     	;# 
  2481  0392                     	;# 
  2482  040C                     	;# 
  2483  040D                     	;# 
  2484  040E                     	;# 
  2485  040F                     	;# 
  2486  0410                     	;# 
  2487  0411                     	;# 
  2488  0416                     	;# 
  2489  0416                     	;# 
  2490  0417                     	;# 
  2491  0418                     	;# 
  2492  0418                     	;# 
  2493  0419                     	;# 
  2494  041A                     	;# 
  2495  041A                     	;# 
  2496  041B                     	;# 
  2497  041C                     	;# 
  2498  041C                     	;# 
  2499  041D                     	;# 
  2500  041E                     	;# 
  2501  041F                     	;# 
  2502  048C                     	;# 
  2503  048C                     	;# 
  2504  048D                     	;# 
  2505  048E                     	;# 
  2506  048F                     	;# 
  2507  048F                     	;# 
  2508  0490                     	;# 
  2509  0491                     	;# 
  2510  0492                     	;# 
  2511  0492                     	;# 
  2512  0493                     	;# 
  2513  0494                     	;# 
  2514  0495                     	;# 
  2515  0495                     	;# 
  2516  0496                     	;# 
  2517  0497                     	;# 
  2518  0498                     	;# 
  2519  0499                     	;# 
  2520  049A                     	;# 
  2521  049B                     	;# 
  2522  049C                     	;# 
  2523  049D                     	;# 
  2524  050C                     	;# 
  2525  050C                     	;# 
  2526  050D                     	;# 
  2527  050E                     	;# 
  2528  050F                     	;# 
  2529  050F                     	;# 
  2530  0510                     	;# 
  2531  0511                     	;# 
  2532  0512                     	;# 
  2533  0512                     	;# 
  2534  0513                     	;# 
  2535  0514                     	;# 
  2536  0515                     	;# 
  2537  0515                     	;# 
  2538  0516                     	;# 
  2539  0517                     	;# 
  2540  0518                     	;# 
  2541  0519                     	;# 
  2542  051A                     	;# 
  2543  051B                     	;# 
  2544  051C                     	;# 
  2545  051D                     	;# 
  2546  058C                     	;# 
  2547  058C                     	;# 
  2548  058D                     	;# 
  2549  058E                     	;# 
  2550  058F                     	;# 
  2551  058F                     	;# 
  2552  0590                     	;# 
  2553  0591                     	;# 
  2554  0592                     	;# 
  2555  0593                     	;# 
  2556  060C                     	;# 
  2557  060D                     	;# 
  2558  060E                     	;# 
  2559  060F                     	;# 
  2560  0610                     	;# 
  2561  0611                     	;# 
  2562  0612                     	;# 
  2563  0613                     	;# 
  2564  0614                     	;# 
  2565  0616                     	;# 
  2566  0617                     	;# 
  2567  0618                     	;# 
  2568  0619                     	;# 
  2569  061A                     	;# 
  2570  061B                     	;# 
  2571  061C                     	;# 
  2572  061D                     	;# 
  2573  061E                     	;# 
  2574  068C                     	;# 
  2575  068D                     	;# 
  2576  068E                     	;# 
  2577  068F                     	;# 
  2578  0690                     	;# 
  2579  0691                     	;# 
  2580  0692                     	;# 
  2581  0693                     	;# 
  2582  0694                     	;# 
  2583  070C                     	;# 
  2584  070D                     	;# 
  2585  070E                     	;# 
  2586  070F                     	;# 
  2587  0710                     	;# 
  2588  0711                     	;# 
  2589  0712                     	;# 
  2590  0713                     	;# 
  2591  0714                     	;# 
  2592  0716                     	;# 
  2593  0717                     	;# 
  2594  0718                     	;# 
  2595  0719                     	;# 
  2596  071A                     	;# 
  2597  071B                     	;# 
  2598  071C                     	;# 
  2599  071D                     	;# 
  2600  071E                     	;# 
  2601  0796                     	;# 
  2602  0797                     	;# 
  2603  0798                     	;# 
  2604  0799                     	;# 
  2605  079A                     	;# 
  2606  079B                     	;# 
  2607  080C                     	;# 
  2608  080D                     	;# 
  2609  080E                     	;# 
  2610  080F                     	;# 
  2611  0810                     	;# 
  2612  0811                     	;# 
  2613  0812                     	;# 
  2614  0813                     	;# 
  2615  0814                     	;# 
  2616  081A                     	;# 
  2617  081B                     	;# 
  2618  081C                     	;# 
  2619  081D                     	;# 
  2620  081E                     	;# 
  2621  081F                     	;# 
  2622  088C                     	;# 
  2623  088D                     	;# 
  2624  088E                     	;# 
  2625  088F                     	;# 
  2626  0890                     	;# 
  2627  0891                     	;# 
  2628  0892                     	;# 
  2629  0893                     	;# 
  2630  0895                     	;# 
  2631  0896                     	;# 
  2632  0897                     	;# 
  2633  0898                     	;# 
  2634  0899                     	;# 
  2635  089A                     	;# 
  2636  089B                     	;# 
  2637  090C                     	;# 
  2638  090E                     	;# 
  2639  090F                     	;# 
  2640  091F                     	;# 
  2641  098F                     	;# 
  2642  098F                     	;# 
  2643  0990                     	;# 
  2644  0991                     	;# 
  2645  0992                     	;# 
  2646  0993                     	;# 
  2647  0994                     	;# 
  2648  0995                     	;# 
  2649  0996                     	;# 
  2650  0997                     	;# 
  2651  0E0F                     	;# 
  2652  0E10                     	;# 
  2653  0E11                     	;# 
  2654  0E12                     	;# 
  2655  0E13                     	;# 
  2656  0E14                     	;# 
  2657  0E15                     	;# 
  2658  0E16                     	;# 
  2659  0E17                     	;# 
  2660  0E18                     	;# 
  2661  0E19                     	;# 
  2662  0E1A                     	;# 
  2663  0E1B                     	;# 
  2664  0E1C                     	;# 
  2665  0E1D                     	;# 
  2666  0E1E                     	;# 
  2667  0E1F                     	;# 
  2668  0E20                     	;# 
  2669  0E21                     	;# 
  2670  0E22                     	;# 
  2671  0E23                     	;# 
  2672  0E24                     	;# 
  2673  0E25                     	;# 
  2674  0E26                     	;# 
  2675  0E27                     	;# 
  2676  0E28                     	;# 
  2677  0E29                     	;# 
  2678  0E2A                     	;# 
  2679  0E2B                     	;# 
  2680  0E2C                     	;# 
  2681  0E2D                     	;# 
  2682  0E2E                     	;# 
  2683  0E2F                     	;# 
  2684  0E30                     	;# 
  2685  0E31                     	;# 
  2686  0E32                     	;# 
  2687  0E33                     	;# 
  2688  0E34                     	;# 
  2689  0E35                     	;# 
  2690  0E36                     	;# 
  2691  0E37                     	;# 
  2692  0E8F                     	;# 
  2693  0E90                     	;# 
  2694  0E91                     	;# 
  2695  0E92                     	;# 
  2696  0E93                     	;# 
  2697  0E94                     	;# 
  2698  0E95                     	;# 
  2699  0E96                     	;# 
  2700  0E97                     	;# 
  2701  0E9C                     	;# 
  2702  0E9D                     	;# 
  2703  0E9E                     	;# 
  2704  0EA1                     	;# 
  2705  0EA2                     	;# 
  2706  0EA3                     	;# 
  2707  0EA4                     	;# 
  2708  0EA5                     	;# 
  2709  0EA9                     	;# 
  2710  0EAA                     	;# 
  2711  0EAB                     	;# 
  2712  0EAC                     	;# 
  2713  0EB1                     	;# 
  2714  0EB2                     	;# 
  2715  0EB3                     	;# 
  2716  0EB8                     	;# 
  2717  0EB9                     	;# 
  2718  0EBA                     	;# 
  2719  0EBB                     	;# 
  2720  0EBC                     	;# 
  2721  0EBD                     	;# 
  2722  0EBE                     	;# 
  2723  0EC3                     	;# 
  2724  0EC5                     	;# 
  2725  0EC6                     	;# 
  2726  0EC7                     	;# 
  2727  0EC8                     	;# 
  2728  0EC9                     	;# 
  2729  0ECA                     	;# 
  2730  0ECB                     	;# 
  2731  0ECC                     	;# 
  2732  0F10                     	;# 
  2733  0F11                     	;# 
  2734  0F12                     	;# 
  2735  0F13                     	;# 
  2736  0F14                     	;# 
  2737  0F15                     	;# 
  2738  0F16                     	;# 
  2739  0F17                     	;# 
  2740  0F18                     	;# 
  2741  0F19                     	;# 
  2742  0F1A                     	;# 
  2743  0F1B                     	;# 
  2744  0F1C                     	;# 
  2745  0F1D                     	;# 
  2746  0F1E                     	;# 
  2747  0F1F                     	;# 
  2748  0F20                     	;# 
  2749  0F21                     	;# 
  2750  0F22                     	;# 
  2751  0F23                     	;# 
  2752  0F24                     	;# 
  2753  0F25                     	;# 
  2754  0F26                     	;# 
  2755  0F27                     	;# 
  2756  0F28                     	;# 
  2757  0F29                     	;# 
  2758  0F2A                     	;# 
  2759  0F2B                     	;# 
  2760  0F2C                     	;# 
  2761  0F2D                     	;# 
  2762  0F2E                     	;# 
  2763  0F2F                     	;# 
  2764  0F30                     	;# 
  2765  0F31                     	;# 
  2766  0F32                     	;# 
  2767  0F38                     	;# 
  2768  0F39                     	;# 
  2769  0F3A                     	;# 
  2770  0F3B                     	;# 
  2771  0F3C                     	;# 
  2772  0F3D                     	;# 
  2773  0F3E                     	;# 
  2774  0F3F                     	;# 
  2775  0F40                     	;# 
  2776  0F41                     	;# 
  2777  0F43                     	;# 
  2778  0F44                     	;# 
  2779  0F45                     	;# 
  2780  0F46                     	;# 
  2781  0F47                     	;# 
  2782  0F48                     	;# 
  2783  0F49                     	;# 
  2784  0F4A                     	;# 
  2785  0F4B                     	;# 
  2786  0F4C                     	;# 
  2787  0F4E                     	;# 
  2788  0F4F                     	;# 
  2789  0F50                     	;# 
  2790  0F51                     	;# 
  2791  0F52                     	;# 
  2792  0F53                     	;# 
  2793  0F54                     	;# 
  2794  0F55                     	;# 
  2795  0F56                     	;# 
  2796  0F57                     	;# 
  2797  0F59                     	;# 
  2798  0F5A                     	;# 
  2799  0F5B                     	;# 
  2800  0F5C                     	;# 
  2801  0F5D                     	;# 
  2802  0F61                     	;# 
  2803  0F62                     	;# 
  2804  0F64                     	;# 
  2805  0F65                     	;# 
  2806  0F66                     	;# 
  2807  0F67                     	;# 
  2808  0F68                     	;# 
  2809  0F69                     	;# 
  2810  0F6A                     	;# 
  2811  0F6B                     	;# 
  2812  0F6C                     	;# 
  2813  0F6D                     	;# 
  2814  0FE4                     	;# 
  2815  0FE5                     	;# 
  2816  0FE6                     	;# 
  2817  0FE7                     	;# 
  2818  0FE8                     	;# 
  2819  0FE9                     	;# 
  2820  0FEA                     	;# 
  2821  0FEB                     	;# 
  2822  0FED                     	;# 
  2823  0FEE                     	;# 
  2824  0FEF                     	;# 
  2825  0000                     	;# 
  2826  0001                     	;# 
  2827  0002                     	;# 
  2828  0003                     	;# 
  2829  0004                     	;# 
  2830  0005                     	;# 
  2831  0006                     	;# 
  2832  0007                     	;# 
  2833  0008                     	;# 
  2834  0009                     	;# 
  2835  000A                     	;# 
  2836  000B                     	;# 
  2837  000C                     	;# 
  2838  000D                     	;# 
  2839  000E                     	;# 
  2840  000F                     	;# 
  2841  0010                     	;# 
  2842  0011                     	;# 
  2843  0012                     	;# 
  2844  0013                     	;# 
  2845  0014                     	;# 
  2846  0015                     	;# 
  2847  0016                     	;# 
  2848  0017                     	;# 
  2849  0018                     	;# 
  2850  0019                     	;# 
  2851  001A                     	;# 
  2852  001C                     	;# 
  2853  001C                     	;# 
  2854  001D                     	;# 
  2855  001D                     	;# 
  2856  001E                     	;# 
  2857  001F                     	;# 
  2858  008C                     	;# 
  2859  008C                     	;# 
  2860  008D                     	;# 
  2861  008E                     	;# 
  2862  008E                     	;# 
  2863  008F                     	;# 
  2864  0090                     	;# 
  2865  0090                     	;# 
  2866  0091                     	;# 
  2867  0093                     	;# 
  2868  0094                     	;# 
  2869  0095                     	;# 
  2870  0096                     	;# 
  2871  0097                     	;# 
  2872  0098                     	;# 
  2873  0099                     	;# 
  2874  009A                     	;# 
  2875  009B                     	;# 
  2876  009C                     	;# 
  2877  009D                     	;# 
  2878  009E                     	;# 
  2879  010C                     	;# 
  2880  010D                     	;# 
  2881  010E                     	;# 
  2882  010E                     	;# 
  2883  010F                     	;# 
  2884  0110                     	;# 
  2885  0110                     	;# 
  2886  0111                     	;# 
  2887  0112                     	;# 
  2888  0112                     	;# 
  2889  0113                     	;# 
  2890  0114                     	;# 
  2891  0114                     	;# 
  2892  0115                     	;# 
  2893  0116                     	;# 
  2894  0116                     	;# 
  2895  0117                     	;# 
  2896  0119                     	;# 
  2897  0119                     	;# 
  2898  0119                     	;# 
  2899  011A                     	;# 
  2900  011A                     	;# 
  2901  011A                     	;# 
  2902  011B                     	;# 
  2903  011B                     	;# 
  2904  011B                     	;# 
  2905  011B                     	;# 
  2906  011B                     	;# 
  2907  011C                     	;# 
  2908  011C                     	;# 
  2909  011C                     	;# 
  2910  011D                     	;# 
  2911  011D                     	;# 
  2912  011D                     	;# 
  2913  011E                     	;# 
  2914  011E                     	;# 
  2915  011E                     	;# 
  2916  011F                     	;# 
  2917  011F                     	;# 
  2918  011F                     	;# 
  2919  011F                     	;# 
  2920  011F                     	;# 
  2921  018C                     	;# 
  2922  018D                     	;# 
  2923  018E                     	;# 
  2924  018F                     	;# 
  2925  0190                     	;# 
  2926  0191                     	;# 
  2927  0192                     	;# 
  2928  0196                     	;# 
  2929  0197                     	;# 
  2930  0198                     	;# 
  2931  0199                     	;# 
  2932  019A                     	;# 
  2933  019B                     	;# 
  2934  019C                     	;# 
  2935  020C                     	;# 
  2936  020C                     	;# 
  2937  020D                     	;# 
  2938  020E                     	;# 
  2939  020F                     	;# 
  2940  020F                     	;# 
  2941  0210                     	;# 
  2942  0210                     	;# 
  2943  0211                     	;# 
  2944  0211                     	;# 
  2945  0212                     	;# 
  2946  0212                     	;# 
  2947  0213                     	;# 
  2948  0214                     	;# 
  2949  0215                     	;# 
  2950  0215                     	;# 
  2951  0216                     	;# 
  2952  0216                     	;# 
  2953  0217                     	;# 
  2954  0217                     	;# 
  2955  0218                     	;# 
  2956  0218                     	;# 
  2957  0219                     	;# 
  2958  021A                     	;# 
  2959  021B                     	;# 
  2960  021B                     	;# 
  2961  021C                     	;# 
  2962  021C                     	;# 
  2963  021D                     	;# 
  2964  021D                     	;# 
  2965  021E                     	;# 
  2966  021F                     	;# 
  2967  028C                     	;# 
  2968  028C                     	;# 
  2969  028D                     	;# 
  2970  028D                     	;# 
  2971  028E                     	;# 
  2972  028F                     	;# 
  2973  0290                     	;# 
  2974  0290                     	;# 
  2975  0291                     	;# 
  2976  0292                     	;# 
  2977  0292                     	;# 
  2978  0293                     	;# 
  2979  0293                     	;# 
  2980  0294                     	;# 
  2981  0295                     	;# 
  2982  0296                     	;# 
  2983  0296                     	;# 
  2984  0297                     	;# 
  2985  0298                     	;# 
  2986  0298                     	;# 
  2987  0299                     	;# 
  2988  0299                     	;# 
  2989  029A                     	;# 
  2990  029B                     	;# 
  2991  029C                     	;# 
  2992  029C                     	;# 
  2993  029D                     	;# 
  2994  030C                     	;# 
  2995  030C                     	;# 
  2996  030D                     	;# 
  2997  030E                     	;# 
  2998  030F                     	;# 
  2999  0310                     	;# 
  3000  0310                     	;# 
  3001  0311                     	;# 
  3002  0312                     	;# 
  3003  0313                     	;# 
  3004  0314                     	;# 
  3005  0314                     	;# 
  3006  0315                     	;# 
  3007  0316                     	;# 
  3008  0317                     	;# 
  3009  0318                     	;# 
  3010  0318                     	;# 
  3011  0319                     	;# 
  3012  031A                     	;# 
  3013  031B                     	;# 
  3014  031C                     	;# 
  3015  031C                     	;# 
  3016  031D                     	;# 
  3017  031E                     	;# 
  3018  031F                     	;# 
  3019  038C                     	;# 
  3020  038C                     	;# 
  3021  038D                     	;# 
  3022  038E                     	;# 
  3023  0390                     	;# 
  3024  0390                     	;# 
  3025  0391                     	;# 
  3026  0392                     	;# 
  3027  040C                     	;# 
  3028  040D                     	;# 
  3029  040E                     	;# 
  3030  040F                     	;# 
  3031  0410                     	;# 
  3032  0411                     	;# 
  3033  0416                     	;# 
  3034  0416                     	;# 
  3035  0417                     	;# 
  3036  0418                     	;# 
  3037  0418                     	;# 
  3038  0419                     	;# 
  3039  041A                     	;# 
  3040  041A                     	;# 
  3041  041B                     	;# 
  3042  041C                     	;# 
  3043  041C                     	;# 
  3044  041D                     	;# 
  3045  041E                     	;# 
  3046  041F                     	;# 
  3047  048C                     	;# 
  3048  048C                     	;# 
  3049  048D                     	;# 
  3050  048E                     	;# 
  3051  048F                     	;# 
  3052  048F                     	;# 
  3053  0490                     	;# 
  3054  0491                     	;# 
  3055  0492                     	;# 
  3056  0492                     	;# 
  3057  0493                     	;# 
  3058  0494                     	;# 
  3059  0495                     	;# 
  3060  0495                     	;# 
  3061  0496                     	;# 
  3062  0497                     	;# 
  3063  0498                     	;# 
  3064  0499                     	;# 
  3065  049A                     	;# 
  3066  049B                     	;# 
  3067  049C                     	;# 
  3068  049D                     	;# 
  3069  050C                     	;# 
  3070  050C                     	;# 
  3071  050D                     	;# 
  3072  050E                     	;# 
  3073  050F                     	;# 
  3074  050F                     	;# 
  3075  0510                     	;# 
  3076  0511                     	;# 
  3077  0512                     	;# 
  3078  0512                     	;# 
  3079  0513                     	;# 
  3080  0514                     	;# 
  3081  0515                     	;# 
  3082  0515                     	;# 
  3083  0516                     	;# 
  3084  0517                     	;# 
  3085  0518                     	;# 
  3086  0519                     	;# 
  3087  051A                     	;# 
  3088  051B                     	;# 
  3089  051C                     	;# 
  3090  051D                     	;# 
  3091  058C                     	;# 
  3092  058C                     	;# 
  3093  058D                     	;# 
  3094  058E                     	;# 
  3095  058F                     	;# 
  3096  058F                     	;# 
  3097  0590                     	;# 
  3098  0591                     	;# 
  3099  0592                     	;# 
  3100  0593                     	;# 
  3101  060C                     	;# 
  3102  060D                     	;# 
  3103  060E                     	;# 
  3104  060F                     	;# 
  3105  0610                     	;# 
  3106  0611                     	;# 
  3107  0612                     	;# 
  3108  0613                     	;# 
  3109  0614                     	;# 
  3110  0616                     	;# 
  3111  0617                     	;# 
  3112  0618                     	;# 
  3113  0619                     	;# 
  3114  061A                     	;# 
  3115  061B                     	;# 
  3116  061C                     	;# 
  3117  061D                     	;# 
  3118  061E                     	;# 
  3119  068C                     	;# 
  3120  068D                     	;# 
  3121  068E                     	;# 
  3122  068F                     	;# 
  3123  0690                     	;# 
  3124  0691                     	;# 
  3125  0692                     	;# 
  3126  0693                     	;# 
  3127  0694                     	;# 
  3128  070C                     	;# 
  3129  070D                     	;# 
  3130  070E                     	;# 
  3131  070F                     	;# 
  3132  0710                     	;# 
  3133  0711                     	;# 
  3134  0712                     	;# 
  3135  0713                     	;# 
  3136  0714                     	;# 
  3137  0716                     	;# 
  3138  0717                     	;# 
  3139  0718                     	;# 
  3140  0719                     	;# 
  3141  071A                     	;# 
  3142  071B                     	;# 
  3143  071C                     	;# 
  3144  071D                     	;# 
  3145  071E                     	;# 
  3146  0796                     	;# 
  3147  0797                     	;# 
  3148  0798                     	;# 
  3149  0799                     	;# 
  3150  079A                     	;# 
  3151  079B                     	;# 
  3152  080C                     	;# 
  3153  080D                     	;# 
  3154  080E                     	;# 
  3155  080F                     	;# 
  3156  0810                     	;# 
  3157  0811                     	;# 
  3158  0812                     	;# 
  3159  0813                     	;# 
  3160  0814                     	;# 
  3161  081A                     	;# 
  3162  081B                     	;# 
  3163  081C                     	;# 
  3164  081D                     	;# 
  3165  081E                     	;# 
  3166  081F                     	;# 
  3167  088C                     	;# 
  3168  088D                     	;# 
  3169  088E                     	;# 
  3170  088F                     	;# 
  3171  0890                     	;# 
  3172  0891                     	;# 
  3173  0892                     	;# 
  3174  0893                     	;# 
  3175  0895                     	;# 
  3176  0896                     	;# 
  3177  0897                     	;# 
  3178  0898                     	;# 
  3179  0899                     	;# 
  3180  089A                     	;# 
  3181  089B                     	;# 
  3182  090C                     	;# 
  3183  090E                     	;# 
  3184  090F                     	;# 
  3185  091F                     	;# 
  3186  098F                     	;# 
  3187  098F                     	;# 
  3188  0990                     	;# 
  3189  0991                     	;# 
  3190  0992                     	;# 
  3191  0993                     	;# 
  3192  0994                     	;# 
  3193  0995                     	;# 
  3194  0996                     	;# 
  3195  0997                     	;# 
  3196  0E0F                     	;# 
  3197  0E10                     	;# 
  3198  0E11                     	;# 
  3199  0E12                     	;# 
  3200  0E13                     	;# 
  3201  0E14                     	;# 
  3202  0E15                     	;# 
  3203  0E16                     	;# 
  3204  0E17                     	;# 
  3205  0E18                     	;# 
  3206  0E19                     	;# 
  3207  0E1A                     	;# 
  3208  0E1B                     	;# 
  3209  0E1C                     	;# 
  3210  0E1D                     	;# 
  3211  0E1E                     	;# 
  3212  0E1F                     	;# 
  3213  0E20                     	;# 
  3214  0E21                     	;# 
  3215  0E22                     	;# 
  3216  0E23                     	;# 
  3217  0E24                     	;# 
  3218  0E25                     	;# 
  3219  0E26                     	;# 
  3220  0E27                     	;# 
  3221  0E28                     	;# 
  3222  0E29                     	;# 
  3223  0E2A                     	;# 
  3224  0E2B                     	;# 
  3225  0E2C                     	;# 
  3226  0E2D                     	;# 
  3227  0E2E                     	;# 
  3228  0E2F                     	;# 
  3229  0E30                     	;# 
  3230  0E31                     	;# 
  3231  0E32                     	;# 
  3232  0E33                     	;# 
  3233  0E34                     	;# 
  3234  0E35                     	;# 
  3235  0E36                     	;# 
  3236  0E37                     	;# 
  3237  0E8F                     	;# 
  3238  0E90                     	;# 
  3239  0E91                     	;# 
  3240  0E92                     	;# 
  3241  0E93                     	;# 
  3242  0E94                     	;# 
  3243  0E95                     	;# 
  3244  0E96                     	;# 
  3245  0E97                     	;# 
  3246  0E9C                     	;# 
  3247  0E9D                     	;# 
  3248  0E9E                     	;# 
  3249  0EA1                     	;# 
  3250  0EA2                     	;# 
  3251  0EA3                     	;# 
  3252  0EA4                     	;# 
  3253  0EA5                     	;# 
  3254  0EA9                     	;# 
  3255  0EAA                     	;# 
  3256  0EAB                     	;# 
  3257  0EAC                     	;# 
  3258  0EB1                     	;# 
  3259  0EB2                     	;# 
  3260  0EB3                     	;# 
  3261  0EB8                     	;# 
  3262  0EB9                     	;# 
  3263  0EBA                     	;# 
  3264  0EBB                     	;# 
  3265  0EBC                     	;# 
  3266  0EBD                     	;# 
  3267  0EBE                     	;# 
  3268  0EC3                     	;# 
  3269  0EC5                     	;# 
  3270  0EC6                     	;# 
  3271  0EC7                     	;# 
  3272  0EC8                     	;# 
  3273  0EC9                     	;# 
  3274  0ECA                     	;# 
  3275  0ECB                     	;# 
  3276  0ECC                     	;# 
  3277  0F10                     	;# 
  3278  0F11                     	;# 
  3279  0F12                     	;# 
  3280  0F13                     	;# 
  3281  0F14                     	;# 
  3282  0F15                     	;# 
  3283  0F16                     	;# 
  3284  0F17                     	;# 
  3285  0F18                     	;# 
  3286  0F19                     	;# 
  3287  0F1A                     	;# 
  3288  0F1B                     	;# 
  3289  0F1C                     	;# 
  3290  0F1D                     	;# 
  3291  0F1E                     	;# 
  3292  0F1F                     	;# 
  3293  0F20                     	;# 
  3294  0F21                     	;# 
  3295  0F22                     	;# 
  3296  0F23                     	;# 
  3297  0F24                     	;# 
  3298  0F25                     	;# 
  3299  0F26                     	;# 
  3300  0F27                     	;# 
  3301  0F28                     	;# 
  3302  0F29                     	;# 
  3303  0F2A                     	;# 
  3304  0F2B                     	;# 
  3305  0F2C                     	;# 
  3306  0F2D                     	;# 
  3307  0F2E                     	;# 
  3308  0F2F                     	;# 
  3309  0F30                     	;# 
  3310  0F31                     	;# 
  3311  0F32                     	;# 
  3312  0F38                     	;# 
  3313  0F39                     	;# 
  3314  0F3A                     	;# 
  3315  0F3B                     	;# 
  3316  0F3C                     	;# 
  3317  0F3D                     	;# 
  3318  0F3E                     	;# 
  3319  0F3F                     	;# 
  3320  0F40                     	;# 
  3321  0F41                     	;# 
  3322  0F43                     	;# 
  3323  0F44                     	;# 
  3324  0F45                     	;# 
  3325  0F46                     	;# 
  3326  0F47                     	;# 
  3327  0F48                     	;# 
  3328  0F49                     	;# 
  3329  0F4A                     	;# 
  3330  0F4B                     	;# 
  3331  0F4C                     	;# 
  3332  0F4E                     	;# 
  3333  0F4F                     	;# 
  3334  0F50                     	;# 
  3335  0F51                     	;# 
  3336  0F52                     	;# 
  3337  0F53                     	;# 
  3338  0F54                     	;# 
  3339  0F55                     	;# 
  3340  0F56                     	;# 
  3341  0F57                     	;# 
  3342  0F59                     	;# 
  3343  0F5A                     	;# 
  3344  0F5B                     	;# 
  3345  0F5C                     	;# 
  3346  0F5D                     	;# 
  3347  0F61                     	;# 
  3348  0F62                     	;# 
  3349  0F64                     	;# 
  3350  0F65                     	;# 
  3351  0F66                     	;# 
  3352  0F67                     	;# 
  3353  0F68                     	;# 
  3354  0F69                     	;# 
  3355  0F6A                     	;# 
  3356  0F6B                     	;# 
  3357  0F6C                     	;# 
  3358  0F6D                     	;# 
  3359  0FE4                     	;# 
  3360  0FE5                     	;# 
  3361  0FE6                     	;# 
  3362  0FE7                     	;# 
  3363  0FE8                     	;# 
  3364  0FE9                     	;# 
  3365  0FEA                     	;# 
  3366  0FEB                     	;# 
  3367  0FED                     	;# 
  3368  0FEE                     	;# 
  3369  0FEF                     	;# 
  3370  0000                     	;# 
  3371  0001                     	;# 
  3372  0002                     	;# 
  3373  0003                     	;# 
  3374  0004                     	;# 
  3375  0005                     	;# 
  3376  0006                     	;# 
  3377  0007                     	;# 
  3378  0008                     	;# 
  3379  0009                     	;# 
  3380  000A                     	;# 
  3381  000B                     	;# 
  3382  000C                     	;# 
  3383  000D                     	;# 
  3384  000E                     	;# 
  3385  000F                     	;# 
  3386  0010                     	;# 
  3387  0011                     	;# 
  3388  0012                     	;# 
  3389  0013                     	;# 
  3390  0014                     	;# 
  3391  0015                     	;# 
  3392  0016                     	;# 
  3393  0017                     	;# 
  3394  0018                     	;# 
  3395  0019                     	;# 
  3396  001A                     	;# 
  3397  001C                     	;# 
  3398  001C                     	;# 
  3399  001D                     	;# 
  3400  001D                     	;# 
  3401  001E                     	;# 
  3402  001F                     	;# 
  3403  008C                     	;# 
  3404  008C                     	;# 
  3405  008D                     	;# 
  3406  008E                     	;# 
  3407  008E                     	;# 
  3408  008F                     	;# 
  3409  0090                     	;# 
  3410  0090                     	;# 
  3411  0091                     	;# 
  3412  0093                     	;# 
  3413  0094                     	;# 
  3414  0095                     	;# 
  3415  0096                     	;# 
  3416  0097                     	;# 
  3417  0098                     	;# 
  3418  0099                     	;# 
  3419  009A                     	;# 
  3420  009B                     	;# 
  3421  009C                     	;# 
  3422  009D                     	;# 
  3423  009E                     	;# 
  3424  010C                     	;# 
  3425  010D                     	;# 
  3426  010E                     	;# 
  3427  010E                     	;# 
  3428  010F                     	;# 
  3429  0110                     	;# 
  3430  0110                     	;# 
  3431  0111                     	;# 
  3432  0112                     	;# 
  3433  0112                     	;# 
  3434  0113                     	;# 
  3435  0114                     	;# 
  3436  0114                     	;# 
  3437  0115                     	;# 
  3438  0116                     	;# 
  3439  0116                     	;# 
  3440  0117                     	;# 
  3441  0119                     	;# 
  3442  0119                     	;# 
  3443  0119                     	;# 
  3444  011A                     	;# 
  3445  011A                     	;# 
  3446  011A                     	;# 
  3447  011B                     	;# 
  3448  011B                     	;# 
  3449  011B                     	;# 
  3450  011B                     	;# 
  3451  011B                     	;# 
  3452  011C                     	;# 
  3453  011C                     	;# 
  3454  011C                     	;# 
  3455  011D                     	;# 
  3456  011D                     	;# 
  3457  011D                     	;# 
  3458  011E                     	;# 
  3459  011E                     	;# 
  3460  011E                     	;# 
  3461  011F                     	;# 
  3462  011F                     	;# 
  3463  011F                     	;# 
  3464  011F                     	;# 
  3465  011F                     	;# 
  3466  018C                     	;# 
  3467  018D                     	;# 
  3468  018E                     	;# 
  3469  018F                     	;# 
  3470  0190                     	;# 
  3471  0191                     	;# 
  3472  0192                     	;# 
  3473  0196                     	;# 
  3474  0197                     	;# 
  3475  0198                     	;# 
  3476  0199                     	;# 
  3477  019A                     	;# 
  3478  019B                     	;# 
  3479  019C                     	;# 
  3480  020C                     	;# 
  3481  020C                     	;# 
  3482  020D                     	;# 
  3483  020E                     	;# 
  3484  020F                     	;# 
  3485  020F                     	;# 
  3486  0210                     	;# 
  3487  0210                     	;# 
  3488  0211                     	;# 
  3489  0211                     	;# 
  3490  0212                     	;# 
  3491  0212                     	;# 
  3492  0213                     	;# 
  3493  0214                     	;# 
  3494  0215                     	;# 
  3495  0215                     	;# 
  3496  0216                     	;# 
  3497  0216                     	;# 
  3498  0217                     	;# 
  3499  0217                     	;# 
  3500  0218                     	;# 
  3501  0218                     	;# 
  3502  0219                     	;# 
  3503  021A                     	;# 
  3504  021B                     	;# 
  3505  021B                     	;# 
  3506  021C                     	;# 
  3507  021C                     	;# 
  3508  021D                     	;# 
  3509  021D                     	;# 
  3510  021E                     	;# 
  3511  021F                     	;# 
  3512  028C                     	;# 
  3513  028C                     	;# 
  3514  028D                     	;# 
  3515  028D                     	;# 
  3516  028E                     	;# 
  3517  028F                     	;# 
  3518  0290                     	;# 
  3519  0290                     	;# 
  3520  0291                     	;# 
  3521  0292                     	;# 
  3522  0292                     	;# 
  3523  0293                     	;# 
  3524  0293                     	;# 
  3525  0294                     	;# 
  3526  0295                     	;# 
  3527  0296                     	;# 
  3528  0296                     	;# 
  3529  0297                     	;# 
  3530  0298                     	;# 
  3531  0298                     	;# 
  3532  0299                     	;# 
  3533  0299                     	;# 
  3534  029A                     	;# 
  3535  029B                     	;# 
  3536  029C                     	;# 
  3537  029C                     	;# 
  3538  029D                     	;# 
  3539  030C                     	;# 
  3540  030C                     	;# 
  3541  030D                     	;# 
  3542  030E                     	;# 
  3543  030F                     	;# 
  3544  0310                     	;# 
  3545  0310                     	;# 
  3546  0311                     	;# 
  3547  0312                     	;# 
  3548  0313                     	;# 
  3549  0314                     	;# 
  3550  0314                     	;# 
  3551  0315                     	;# 
  3552  0316                     	;# 
  3553  0317                     	;# 
  3554  0318                     	;# 
  3555  0318                     	;# 
  3556  0319                     	;# 
  3557  031A                     	;# 
  3558  031B                     	;# 
  3559  031C                     	;# 
  3560  031C                     	;# 
  3561  031D                     	;# 
  3562  031E                     	;# 
  3563  031F                     	;# 
  3564  038C                     	;# 
  3565  038C                     	;# 
  3566  038D                     	;# 
  3567  038E                     	;# 
  3568  0390                     	;# 
  3569  0390                     	;# 
  3570  0391                     	;# 
  3571  0392                     	;# 
  3572  040C                     	;# 
  3573  040D                     	;# 
  3574  040E                     	;# 
  3575  040F                     	;# 
  3576  0410                     	;# 
  3577  0411                     	;# 
  3578  0416                     	;# 
  3579  0416                     	;# 
  3580  0417                     	;# 
  3581  0418                     	;# 
  3582  0418                     	;# 
  3583  0419                     	;# 
  3584  041A                     	;# 
  3585  041A                     	;# 
  3586  041B                     	;# 
  3587  041C                     	;# 
  3588  041C                     	;# 
  3589  041D                     	;# 
  3590  041E                     	;# 
  3591  041F                     	;# 
  3592  048C                     	;# 
  3593  048C                     	;# 
  3594  048D                     	;# 
  3595  048E                     	;# 
  3596  048F                     	;# 
  3597  048F                     	;# 
  3598  0490                     	;# 
  3599  0491                     	;# 
  3600  0492                     	;# 
  3601  0492                     	;# 
  3602  0493                     	;# 
  3603  0494                     	;# 
  3604  0495                     	;# 
  3605  0495                     	;# 
  3606  0496                     	;# 
  3607  0497                     	;# 
  3608  0498                     	;# 
  3609  0499                     	;# 
  3610  049A                     	;# 
  3611  049B                     	;# 
  3612  049C                     	;# 
  3613  049D                     	;# 
  3614  050C                     	;# 
  3615  050C                     	;# 
  3616  050D                     	;# 
  3617  050E                     	;# 
  3618  050F                     	;# 
  3619  050F                     	;# 
  3620  0510                     	;# 
  3621  0511                     	;# 
  3622  0512                     	;# 
  3623  0512                     	;# 
  3624  0513                     	;# 
  3625  0514                     	;# 
  3626  0515                     	;# 
  3627  0515                     	;# 
  3628  0516                     	;# 
  3629  0517                     	;# 
  3630  0518                     	;# 
  3631  0519                     	;# 
  3632  051A                     	;# 
  3633  051B                     	;# 
  3634  051C                     	;# 
  3635  051D                     	;# 
  3636  058C                     	;# 
  3637  058C                     	;# 
  3638  058D                     	;# 
  3639  058E                     	;# 
  3640  058F                     	;# 
  3641  058F                     	;# 
  3642  0590                     	;# 
  3643  0591                     	;# 
  3644  0592                     	;# 
  3645  0593                     	;# 
  3646  060C                     	;# 
  3647  060D                     	;# 
  3648  060E                     	;# 
  3649  060F                     	;# 
  3650  0610                     	;# 
  3651  0611                     	;# 
  3652  0612                     	;# 
  3653  0613                     	;# 
  3654  0614                     	;# 
  3655  0616                     	;# 
  3656  0617                     	;# 
  3657  0618                     	;# 
  3658  0619                     	;# 
  3659  061A                     	;# 
  3660  061B                     	;# 
  3661  061C                     	;# 
  3662  061D                     	;# 
  3663  061E                     	;# 
  3664  068C                     	;# 
  3665  068D                     	;# 
  3666  068E                     	;# 
  3667  068F                     	;# 
  3668  0690                     	;# 
  3669  0691                     	;# 
  3670  0692                     	;# 
  3671  0693                     	;# 
  3672  0694                     	;# 
  3673  070C                     	;# 
  3674  070D                     	;# 
  3675  070E                     	;# 
  3676  070F                     	;# 
  3677  0710                     	;# 
  3678  0711                     	;# 
  3679  0712                     	;# 
  3680  0713                     	;# 
  3681  0714                     	;# 
  3682  0716                     	;# 
  3683  0717                     	;# 
  3684  0718                     	;# 
  3685  0719                     	;# 
  3686  071A                     	;# 
  3687  071B                     	;# 
  3688  071C                     	;# 
  3689  071D                     	;# 
  3690  071E                     	;# 
  3691  0796                     	;# 
  3692  0797                     	;# 
  3693  0798                     	;# 
  3694  0799                     	;# 
  3695  079A                     	;# 
  3696  079B                     	;# 
  3697  080C                     	;# 
  3698  080D                     	;# 
  3699  080E                     	;# 
  3700  080F                     	;# 
  3701  0810                     	;# 
  3702  0811                     	;# 
  3703  0812                     	;# 
  3704  0813                     	;# 
  3705  0814                     	;# 
  3706  081A                     	;# 
  3707  081B                     	;# 
  3708  081C                     	;# 
  3709  081D                     	;# 
  3710  081E                     	;# 
  3711  081F                     	;# 
  3712  088C                     	;# 
  3713  088D                     	;# 
  3714  088E                     	;# 
  3715  088F                     	;# 
  3716  0890                     	;# 
  3717  0891                     	;# 
  3718  0892                     	;# 
  3719  0893                     	;# 
  3720  0895                     	;# 
  3721  0896                     	;# 
  3722  0897                     	;# 
  3723  0898                     	;# 
  3724  0899                     	;# 
  3725  089A                     	;# 
  3726  089B                     	;# 
  3727  090C                     	;# 
  3728  090E                     	;# 
  3729  090F                     	;# 
  3730  091F                     	;# 
  3731  098F                     	;# 
  3732  098F                     	;# 
  3733  0990                     	;# 
  3734  0991                     	;# 
  3735  0992                     	;# 
  3736  0993                     	;# 
  3737  0994                     	;# 
  3738  0995                     	;# 
  3739  0996                     	;# 
  3740  0997                     	;# 
  3741  0E0F                     	;# 
  3742  0E10                     	;# 
  3743  0E11                     	;# 
  3744  0E12                     	;# 
  3745  0E13                     	;# 
  3746  0E14                     	;# 
  3747  0E15                     	;# 
  3748  0E16                     	;# 
  3749  0E17                     	;# 
  3750  0E18                     	;# 
  3751  0E19                     	;# 
  3752  0E1A                     	;# 
  3753  0E1B                     	;# 
  3754  0E1C                     	;# 
  3755  0E1D                     	;# 
  3756  0E1E                     	;# 
  3757  0E1F                     	;# 
  3758  0E20                     	;# 
  3759  0E21                     	;# 
  3760  0E22                     	;# 
  3761  0E23                     	;# 
  3762  0E24                     	;# 
  3763  0E25                     	;# 
  3764  0E26                     	;# 
  3765  0E27                     	;# 
  3766  0E28                     	;# 
  3767  0E29                     	;# 
  3768  0E2A                     	;# 
  3769  0E2B                     	;# 
  3770  0E2C                     	;# 
  3771  0E2D                     	;# 
  3772  0E2E                     	;# 
  3773  0E2F                     	;# 
  3774  0E30                     	;# 
  3775  0E31                     	;# 
  3776  0E32                     	;# 
  3777  0E33                     	;# 
  3778  0E34                     	;# 
  3779  0E35                     	;# 
  3780  0E36                     	;# 
  3781  0E37                     	;# 
  3782  0E8F                     	;# 
  3783  0E90                     	;# 
  3784  0E91                     	;# 
  3785  0E92                     	;# 
  3786  0E93                     	;# 
  3787  0E94                     	;# 
  3788  0E95                     	;# 
  3789  0E96                     	;# 
  3790  0E97                     	;# 
  3791  0E9C                     	;# 
  3792  0E9D                     	;# 
  3793  0E9E                     	;# 
  3794  0EA1                     	;# 
  3795  0EA2                     	;# 
  3796  0EA3                     	;# 
  3797  0EA4                     	;# 
  3798  0EA5                     	;# 
  3799  0EA9                     	;# 
  3800  0EAA                     	;# 
  3801  0EAB                     	;# 
  3802  0EAC                     	;# 
  3803  0EB1                     	;# 
  3804  0EB2                     	;# 
  3805  0EB3                     	;# 
  3806  0EB8                     	;# 
  3807  0EB9                     	;# 
  3808  0EBA                     	;# 
  3809  0EBB                     	;# 
  3810  0EBC                     	;# 
  3811  0EBD                     	;# 
  3812  0EBE                     	;# 
  3813  0EC3                     	;# 
  3814  0EC5                     	;# 
  3815  0EC6                     	;# 
  3816  0EC7                     	;# 
  3817  0EC8                     	;# 
  3818  0EC9                     	;# 
  3819  0ECA                     	;# 
  3820  0ECB                     	;# 
  3821  0ECC                     	;# 
  3822  0F10                     	;# 
  3823  0F11                     	;# 
  3824  0F12                     	;# 
  3825  0F13                     	;# 
  3826  0F14                     	;# 
  3827  0F15                     	;# 
  3828  0F16                     	;# 
  3829  0F17                     	;# 
  3830  0F18                     	;# 
  3831  0F19                     	;# 
  3832  0F1A                     	;# 
  3833  0F1B                     	;# 
  3834  0F1C                     	;# 
  3835  0F1D                     	;# 
  3836  0F1E                     	;# 
  3837  0F1F                     	;# 
  3838  0F20                     	;# 
  3839  0F21                     	;# 
  3840  0F22                     	;# 
  3841  0F23                     	;# 
  3842  0F24                     	;# 
  3843  0F25                     	;# 
  3844  0F26                     	;# 
  3845  0F27                     	;# 
  3846  0F28                     	;# 
  3847  0F29                     	;# 
  3848  0F2A                     	;# 
  3849  0F2B                     	;# 
  3850  0F2C                     	;# 
  3851  0F2D                     	;# 
  3852  0F2E                     	;# 
  3853  0F2F                     	;# 
  3854  0F30                     	;# 
  3855  0F31                     	;# 
  3856  0F32                     	;# 
  3857  0F38                     	;# 
  3858  0F39                     	;# 
  3859  0F3A                     	;# 
  3860  0F3B                     	;# 
  3861  0F3C                     	;# 
  3862  0F3D                     	;# 
  3863  0F3E                     	;# 
  3864  0F3F                     	;# 
  3865  0F40                     	;# 
  3866  0F41                     	;# 
  3867  0F43                     	;# 
  3868  0F44                     	;# 
  3869  0F45                     	;# 
  3870  0F46                     	;# 
  3871  0F47                     	;# 
  3872  0F48                     	;# 
  3873  0F49                     	;# 
  3874  0F4A                     	;# 
  3875  0F4B                     	;# 
  3876  0F4C                     	;# 
  3877  0F4E                     	;# 
  3878  0F4F                     	;# 
  3879  0F50                     	;# 
  3880  0F51                     	;# 
  3881  0F52                     	;# 
  3882  0F53                     	;# 
  3883  0F54                     	;# 
  3884  0F55                     	;# 
  3885  0F56                     	;# 
  3886  0F57                     	;# 
  3887  0F59                     	;# 
  3888  0F5A                     	;# 
  3889  0F5B                     	;# 
  3890  0F5C                     	;# 
  3891  0F5D                     	;# 
  3892  0F61                     	;# 
  3893  0F62                     	;# 
  3894  0F64                     	;# 
  3895  0F65                     	;# 
  3896  0F66                     	;# 
  3897  0F67                     	;# 
  3898  0F68                     	;# 
  3899  0F69                     	;# 
  3900  0F6A                     	;# 
  3901  0F6B                     	;# 
  3902  0F6C                     	;# 
  3903  0F6D                     	;# 
  3904  0FE4                     	;# 
  3905  0FE5                     	;# 
  3906  0FE6                     	;# 
  3907  0FE7                     	;# 
  3908  0FE8                     	;# 
  3909  0FE9                     	;# 
  3910  0FEA                     	;# 
  3911  0FEB                     	;# 
  3912  0FED                     	;# 
  3913  0FEE                     	;# 
  3914  0FEF                     	;_lutRY
  3915                           
  3916                           	psect	idataCOMMON
  3917  0003                     __pidataCOMMON:	
  3918                           
  3919                           ;initializer for _AN_temp
  3920  0003  3401               	retlw	1
  3921                           
  3922                           	psect	idataBANK0
  3923  0D00                     __pidataBANK0:	
  3924                           
  3925                           ;initializer for _AN_prev
  3926  0D00  3401               	retlw	1
  3927                           
  3928                           ;initializer for _MAP_LARGE_MOTOR
  3929  0D01  34FF               	retlw	255
  3930                           
  3931                           ;initializer for _MAP_SMALL_MOTOR
  3932  0D02  34FF               	retlw	255
  3933                           
  3934                           ;initializer for _debounceLoops
  3935  0D03  3403               	retlw	3
  3936                           
  3937                           ;initializer for _lyData
  3938  0D04  34F7               	retlw	247
  3939                           
  3940                           ;initializer for _lxData
  3941  0D05  34F7               	retlw	247
  3942                           
  3943                           ;initializer for _ryData
  3944  0D06  34F7               	retlw	247
  3945                           
  3946                           ;initializer for _rxData
  3947  0D07  34F7               	retlw	247
  3948                           
  3949                           ;initializer for _digitalStateSecond
  3950  0D08  34FF               	retlw	255
  3951                           
  3952                           ;initializer for _digitalStateFirst
  3953  0D09  34FF               	retlw	255
  3954                           
  3955                           ;initializer for _AN_btn
  3956  0D0A  3401               	retlw	1
  3957                           
  3958                           	psect	idataBANK1
  3959  0D5D                     __pidataBANK1:	
  3960                           
  3961                           ;initializer for _response
  3962  0D5D  3482               	retlw	130
  3963  0D5E  345A               	retlw	90
  3964  0D5F  3400               	retlw	0
  3965  0D60  3400               	retlw	0
  3966  0D61  3400               	retlw	0
  3967  0D62  3400               	retlw	0
  3968  0D63  3400               	retlw	0
  3969  0D64  3400               	retlw	0
  3970  0D65  3400               	retlw	0
  3971  0D66  3400               	retlw	0
  3972  0D67  3400               	retlw	0
  3973  0D68  3400               	retlw	0
  3974  0D69  3400               	retlw	0
  3975  0D6A  3400               	retlw	0
  3976  0D6B  3400               	retlw	0
  3977  0D6C  3400               	retlw	0
  3978  0D6D  3400               	retlw	0
  3979  0D6E  3400               	retlw	0
  3980  0D6F  3400               	retlw	0
  3981  0D70  3400               	retlw	0
  3982  0011                     _TRISAbits	set	17
  3983  0013                     _TRISCbits	set	19
  3984  0014                     _TRISDbits	set	20
  3985  0015                     _TRISE	set	21
  3986  0014                     _TRISD	set	20
  3987  0013                     _TRISC	set	19
  3988  0012                     _TRISB	set	18
  3989  0011                     _TRISA	set	17
  3990  000B                     _INTCONbits	set	11
  3991  006B                     _RB3	set	107
  3992  006A                     _RB2	set	106
  3993  006D                     _RB5	set	109
  3994  006C                     _RB4	set	108
  3995  0061                     _RA1	set	97
  3996  0062                     _RA2	set	98
  3997  0063                     _RA3	set	99
  3998  0060                     _RA0	set	96
  3999  006F                     _RB7	set	111
  4000  006E                     _RB6	set	110
  4001  0072                     _RC2	set	114
  4002  0078                     _RD0	set	120
  4003  0069                     _RB1	set	105
  4004  0068                     _RB0	set	104
  4005  0066                     _RA6	set	102
  4006  0067                     _RA7	set	103
  4007  007C                     _RD4	set	124
  4008  0065                     _RA5	set	101
  4009  007D                     _RD5	set	125
  4010  0064                     _RA4	set	100
  4011  007F                     _RD7	set	127
  4012  007E                     _RD6	set	126
  4013  0098                     _ADCLK	set	152
  4014  009A                     _ADREF	set	154
  4015  0095                     _ADCON2	set	149
  4016  0094                     _ADCON1	set	148
  4017  0093                     _ADCON0	set	147
  4018  008C                     _ADRESL	set	140
  4019  008D                     _ADRESH	set	141
  4020  0093                     _ADCON0bits	set	147
  4021  009D                     _ADACQ	set	157
  4022  009C                     _ADPRE	set	156
  4023  009E                     _ADPCH	set	158
  4024  018F                     _SSP1STATbits	set	399
  4025  0190                     _SSP1CON1	set	400
  4026  018F                     _SSP1STAT	set	399
  4027  018C                     _SSP1BUF	set	396
  4028  38C8                     _SSP1IE	set	14536
  4029  3878                     _SSP1IF	set	14456
  4030  081F                     _NVMCON2	set	2079
  4031  081C                     _NVMDATL	set	2076
  4032  081A                     _NVMADRL	set	2074
  4033  081B                     _NVMADRH	set	2075
  4034  081E                     _NVMCON1bits	set	2078
  4035  0E8F                     _PPSLOCK	set	3727
  4036  0F25                     _RC5PPS	set	3877
  4037  0F5A                     _WPUDbits	set	3930
  4038  0F65                     _WPUE	set	3941
  4039  0F5A                     _WPUD	set	3930
  4040  0F4F                     _WPUC	set	3919
  4041  0F44                     _WPUB	set	3908
  4042  0F39                     _WPUA	set	3897
  4043  0F64                     _ANSELE	set	3940
  4044  0F59                     _ANSELD	set	3929
  4045  0F4E                     _ANSELC	set	3918
  4046  0F43                     _ANSELB	set	3907
  4047  0F38                     _ANSELA	set	3896
  4048                           
  4049                           ; #config settings
  4050  0000                     
  4051                           	psect	cinit
  4052  0223                     start_initialization:	
  4053  0223                     __initialization:		;BIGRAM
  4054                           
  4055                           ; Initialize objects allocated to COMMON
  4056  0223  3180  2003  3182   	fcall	__pidataCOMMON	;fetch initializer
  4057  0226  00FB               	movwf	__pdataCOMMON& (0+127)
  4058                           
  4059                           ; Initialize objects allocated to BANK0
  4060  0227  3000               	movlw	low __pidataBANK0
  4061  0228  0084               	movwf	4
  4062  0229  308D               	movlw	(high __pidataBANK0)| (0+128)
  4063  022A  0085               	movwf	5
  4064  022B  305D               	movlw	low __pdataBANK0
  4065  022C  0086               	movwf	6
  4066  022D  3000               	movlw	high __pdataBANK0
  4067  022E  0087               	movwf	7
  4068  022F  3000               	movlw	0
  4069  0230  00FF               	movwf	btemp+1
  4070  0231  300B               	movlw	11
  4071  0232  318D  2517  3182   	fcall	init_ram
  4072                           
  4073                           ; Initialize objects allocated to BANK1
  4074  0235  305D               	movlw	low __pidataBANK1
  4075  0236  0084               	movwf	4
  4076  0237  308D               	movlw	(high __pidataBANK1)| (0+128)
  4077  0238  0085               	movwf	5
  4078  0239  30D8               	movlw	low __pdataBANK1
  4079  023A  0086               	movwf	6
  4080  023B  3000               	movlw	high __pdataBANK1
  4081  023C  0087               	movwf	7
  4082  023D  3000               	movlw	0
  4083  023E  00FF               	movwf	btemp+1
  4084  023F  3014               	movlw	20
  4085  0240  318D  2517  3182   	fcall	init_ram
  4086                           
  4087                           ; Clear objects allocated to BIGRAM
  4088  0243  30F0               	movlw	low (0+9200)
  4089  0244  0084               	movwf	4
  4090  0245  3023               	movlw	high (0+9200)
  4091  0246  0085               	movwf	5
  4092  0247  3000               	movlw	0
  4093  0248  00FE               	movwf	btemp
  4094  0249  3004               	movlw	4
  4095  024A  00FF               	movwf	btemp+1
  4096  024B  318D  250B  3182   	fcall	clear_ram0
  4097                           
  4098                           ; Clear objects allocated to COMMON
  4099  024E  01F6               	clrf	__pbssCOMMON& (0+127)
  4100  024F  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  4101  0250  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  4102  0251  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  4103  0252  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
  4104                           
  4105                           ; Clear objects allocated to BANK0
  4106  0253  01E8               	clrf	__pbssBANK0& (0+127)
  4107  0254  01E9               	clrf	(__pbssBANK0+1)& (0+127)
  4108  0255  01EA               	clrf	(__pbssBANK0+2)& (0+127)
  4109  0256  01EB               	clrf	(__pbssBANK0+3)& (0+127)
  4110  0257  01EC               	clrf	(__pbssBANK0+4)& (0+127)
  4111  0258  01ED               	clrf	(__pbssBANK0+5)& (0+127)
  4112  0259  01EE               	clrf	(__pbssBANK0+6)& (0+127)
  4113  025A  01EF               	clrf	(__pbssBANK0+7)& (0+127)
  4114                           
  4115                           ; Clear objects allocated to BANK1
  4116  025B  30A0               	movlw	low __pbssBANK1
  4117  025C  0084               	movwf	4
  4118  025D  3000               	movlw	high __pbssBANK1
  4119  025E  0085               	movwf	5
  4120  025F  3038               	movlw	56
  4121  0260  00FE               	movwf	btemp
  4122  0261  3000               	movlw	0
  4123  0262  00FF               	movwf	btemp+1
  4124  0263  318D  250B  3182   	fcall	clear_ram0
  4125                           
  4126                           ; Clear objects allocated to BANK2
  4127  0266  0022               	movlb	2	; select bank2
  4128  0267  01A0               	clrf	__pbssBANK2& (0+127)
  4129  0268  01A1               	clrf	(__pbssBANK2+1)& (0+127)
  4130  0269  01A2               	clrf	(__pbssBANK2+2)& (0+127)
  4131  026A  01A3               	clrf	(__pbssBANK2+3)& (0+127)
  4132  026B  01A4               	clrf	(__pbssBANK2+4)& (0+127)
  4133  026C  01A5               	clrf	(__pbssBANK2+5)& (0+127)
  4134  026D  01A6               	clrf	(__pbssBANK2+6)& (0+127)
  4135  026E  01A7               	clrf	(__pbssBANK2+7)& (0+127)
  4136  026F                     end_of_initialization:	
  4137                           ;End of C runtime variable initialization code
  4138                           
  4139  026F                     __end_of__initialization:	
  4140  026F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4141  0270  0020               	movlb	0
  4142  0271  3187  2F30         	ljmp	_main	;jump to C main() function
  4143                           
  4144                           	psect	bssCOMMON
  4145  0076                     __pbssCOMMON:	
  4146  0076                     _previousCmd:	
  4147  0076                     	ds	1
  4148  0077                     _escapeMode:	
  4149  0077                     	ds	1
  4150  0078                     _analogMode:	
  4151  0078                     	ds	1
  4152  0079                     _cmdCounter:	
  4153  0079                     	ds	1
  4154  007A                     _index:	
  4155  007A                     	ds	1
  4156                           
  4157                           	psect	dataCOMMON
  4158  007B                     __pdataCOMMON:	
  4159  007B                     _AN_temp:	
  4160  007B                     	ds	1
  4161                           
  4162                           	psect	bssBANK0
  4163  0068                     __pbssBANK0:	
  4164  0068                     _AN_timer:	
  4165  0068                     	ds	1
  4166  0069                     _CONTROL_RESPONSE_byte5:	
  4167  0069                     	ds	1
  4168  006A                     _CONTROL_RESPONSE_byte4:	
  4169  006A                     	ds	1
  4170  006B                     _CONTROL_RESPONSE_byte3:	
  4171  006B                     	ds	1
  4172  006C                     _INIT_PRESSURE_SENSOR_byte4:	
  4173  006C                     	ds	1
  4174  006D                     _INIT_PRESSURE_SENSOR_byte3:	
  4175  006D                     	ds	1
  4176  006E                     _AN_latch:	
  4177  006E                     	ds	1
  4178  006F                     _MODE_LOCK:	
  4179  006F                     	ds	1
  4180                           
  4181                           	psect	dataBANK0
  4182  005D                     __pdataBANK0:	
  4183  005D                     _AN_prev:	
  4184  005D                     	ds	1
  4185  005E                     _MAP_LARGE_MOTOR:	
  4186  005E                     	ds	1
  4187  005F                     _MAP_SMALL_MOTOR:	
  4188  005F                     	ds	1
  4189  0060                     _debounceLoops:	
  4190  0060                     	ds	1
  4191  0061                     _lyData:	
  4192  0061                     	ds	1
  4193  0062                     _lxData:	
  4194  0062                     	ds	1
  4195  0063                     _ryData:	
  4196  0063                     	ds	1
  4197  0064                     _rxData:	
  4198  0064                     	ds	1
  4199  0065                     _digitalStateSecond:	
  4200  0065                     	ds	1
  4201  0066                     _digitalStateFirst:	
  4202  0066                     	ds	1
  4203  0067                     _AN_btn:	
  4204  0067                     	ds	1
  4205                           
  4206                           	psect	bssBANK1
  4207  00A0                     __pbssBANK1:	
  4208  00A0                     _IndexDigitalByte2:	
  4209  00A0                     	ds	8
  4210  00A8                     _IndexDigitalByte1:	
  4211  00A8                     	ds	8
  4212  00B0                     _PreviousDigitalByte1:	
  4213  00B0                     	ds	8
  4214  00B8                     _DigitalControllerByte2:	
  4215  00B8                     	ds	8
  4216  00C0                     _DigitalControllerByte1:	
  4217  00C0                     	ds	8
  4218  00C8                     _analogStateSecond:	
  4219  00C8                     	ds	8
  4220  00D0                     _analogStateFirst:	
  4221  00D0                     	ds	8
  4222                           
  4223                           	psect	dataBANK1
  4224  00D8                     __pdataBANK1:	
  4225  00D8                     _response:	
  4226  00D8                     	ds	20
  4227                           
  4228                           	psect	bssBANK2
  4229  0120                     __pbssBANK2:	
  4230  0120                     _PreviousDigitalByte2:	
  4231  0120                     	ds	8
  4232                           
  4233                           	psect	inittext
  4234  0D17                     init_ram:	
  4235  0D17  00FE               	movwf	btemp
  4236  0D18                     initloop:	
  4237  0D18  0012               	moviw fsr0++
  4238  0D19  001E               	movwi fsr1++
  4239  0D1A  3001               	movlw	1
  4240  0D1B  02FE               	subwf	btemp,f
  4241  0D1C  3000               	movlw	0
  4242  0D1D  3BFF               	subwfb	btemp+1,f
  4243  0D1E  087F               	movf	btemp+1,w
  4244  0D1F  047E               	iorwf	btemp,w
  4245  0D20  1D03               	skipz
  4246  0D21  2D18               	goto	initloop
  4247  0D22  3400               	retlw	0
  4248                           
  4249                           	psect	clrtext
  4250  0D0B                     clear_ram0:	
  4251                           ;	Called with FSR0 containing the base address, and
  4252                           ;	btemp/btemp+1 has the size to clear
  4253                           
  4254  0D0B  0064               	clrwdt	;clear the watchdog before getting into this loop
  4255  0D0C                     clrloop0:	
  4256  0D0C  0180               	clrf	0	;clear RAM location pointed to by FSR
  4257  0D0D  3101               	addfsr 0,1
  4258  0D0E  3001               	movlw	1
  4259  0D0F  02FE               	subwf	btemp,f
  4260  0D10  3000               	movlw	0
  4261  0D11  3BFF               	subwfb	btemp+1,f
  4262  0D12  087F               	movf	btemp+1,w
  4263  0D13  047E               	iorwf	btemp,w
  4264  0D14  1D03               	skipz
  4265  0D15  2D0C               	goto	clrloop0	;have we reached the end yet?
  4266  0D16  3400               	retlw	0	;all done for this memory range, return
  4267                           
  4268                           	psect	cstackCOMMON
  4269  0070                     __pcstackCOMMON:	
  4270  0070                     ?_spiRead:	
  4271  0070                     ??_spiRead:	
  4272                           ; 1 bytes @ 0x0
  4273                           
  4274  0070                     ?_reversebyte:	
  4275                           ; 1 bytes @ 0x0
  4276                           
  4277  0070                     ?_spiWrite:	
  4278                           ; 1 bytes @ 0x0
  4279                           
  4280  0070                     ??_spiWrite:	
  4281                           ; 1 bytes @ 0x0
  4282                           
  4283  0070                     ?_picInit:	
  4284                           ; 1 bytes @ 0x0
  4285                           
  4286  0070                     ?_IO_MAPPING:	
  4287                           ; 1 bytes @ 0x0
  4288                           
  4289  0070                     ?_adcInit:	
  4290                           ; 1 bytes @ 0x0
  4291                           
  4292  0070                     ?_eepromRead:	
  4293                           ; 1 bytes @ 0x0
  4294                           
  4295  0070                     ?_lutInit:	
  4296                           ; 1 bytes @ 0x0
  4297                           
  4298  0070                     ?_configureController:	
  4299                           ; 1 bytes @ 0x0
  4300                           
  4301  0070                     ?_readController:	
  4302                           ; 1 bytes @ 0x0
  4303                           
  4304  0070                     ?_readControllerAnalog:	
  4305                           ; 1 bytes @ 0x0
  4306                           
  4307  0070                     ?_nvmUnlock:	
  4308                           ; 1 bytes @ 0x0
  4309                           
  4310  0070                     ?_pollController:	
  4311                           ; 1 bytes @ 0x0
  4312                           
  4313  0070                     ??_pollController:	
  4314                           ; 1 bytes @ 0x0
  4315                           
  4316  0070                     ?_PS2Command:	
  4317                           ; 1 bytes @ 0x0
  4318                           
  4319  0070                     ?_main:	
  4320                           ; 1 bytes @ 0x0
  4321                           
  4322  0070                     ?_ppsUnlock:	
  4323                           ; 1 bytes @ 0x0
  4324                           
  4325  0070                     ?_ppsLock:	
  4326                           ; 1 bytes @ 0x0
  4327                           
  4328  0070                     ?_spiReceiveWait:	
  4329                           ; 1 bytes @ 0x0
  4330                           
  4331  0070                     ??_spiReceiveWait:	
  4332                           ; 1 bytes @ 0x0
  4333                           
  4334  0070                     ?i1_reversebyte:	
  4335                           ; 1 bytes @ 0x0
  4336                           
  4337  0070                     ??i1_reversebyte:	
  4338                           ; 1 bytes @ 0x0
  4339                           
  4340  0070                     spiWrite@dat:	
  4341                           ; 1 bytes @ 0x0
  4342                           
  4343                           
  4344                           ; 1 bytes @ 0x0
  4345  0070                     	ds	1
  4346  0071                     pollController@response:	
  4347                           
  4348                           ; 1 bytes @ 0x1
  4349  0071                     	ds	2
  4350  0073                     i1reversebyte@byte:	
  4351                           
  4352                           ; 1 bytes @ 0x3
  4353  0073                     	ds	1
  4354  0074                     ??_PS2Command:	
  4355                           
  4356                           ; 1 bytes @ 0x4
  4357  0074                     	ds	1
  4358  0075                     PS2Command@cmd:	
  4359                           
  4360                           ; 1 bytes @ 0x5
  4361  0075                     	ds	1
  4362                           
  4363                           	psect	cstackBANK0
  4364  0020                     __pcstackBANK0:	
  4365  0020                     ??_reversebyte:	
  4366  0020                     ??_IO_MAPPING:	
  4367                           ; 1 bytes @ 0x0
  4368                           
  4369  0020                     ??_adcInit:	
  4370                           ; 1 bytes @ 0x0
  4371                           
  4372  0020                     ??_eepromRead:	
  4373                           ; 1 bytes @ 0x0
  4374                           
  4375  0020                     ?_eepromWrite:	
  4376                           ; 1 bytes @ 0x0
  4377                           
  4378  0020                     ??_readController:	
  4379                           ; 1 bytes @ 0x0
  4380                           
  4381  0020                     ?_spiInit:	
  4382                           ; 1 bytes @ 0x0
  4383                           
  4384  0020                     ??_nvmUnlock:	
  4385                           ; 1 bytes @ 0x0
  4386                           
  4387  0020                     ??_ppsUnlock:	
  4388                           ; 1 bytes @ 0x0
  4389                           
  4390  0020                     ??_ppsLock:	
  4391                           ; 1 bytes @ 0x0
  4392                           
  4393  0020                     ?_readADC:	
  4394                           ; 1 bytes @ 0x0
  4395                           
  4396  0020                     ?___wmul:	
  4397                           ; 2 bytes @ 0x0
  4398                           
  4399  0020                     spiInit@sDataSample:	
  4400                           ; 2 bytes @ 0x0
  4401                           
  4402  0020                     eepromWrite@data:	
  4403                           ; 1 bytes @ 0x0
  4404                           
  4405  0020                     readADC@channel:	
  4406                           ; 1 bytes @ 0x0
  4407                           
  4408  0020                     ___wmul@multiplier:	
  4409                           ; 2 bytes @ 0x0
  4410                           
  4411                           
  4412                           ; 2 bytes @ 0x0
  4413  0020                     	ds	1
  4414  0021                     ??_eepromWrite:	
  4415  0021                     spiInit@sClockIdle:	
  4416                           ; 1 bytes @ 0x1
  4417                           
  4418  0021                     eepromWrite@address:	
  4419                           ; 1 bytes @ 0x1
  4420                           
  4421  0021                     eepromRead@address:	
  4422                           ; 1 bytes @ 0x1
  4423                           
  4424                           
  4425                           ; 1 bytes @ 0x1
  4426  0021                     	ds	1
  4427  0022                     ??_readADC:	
  4428  0022                     readController@analogMode:	
  4429                           ; 1 bytes @ 0x2
  4430                           
  4431  0022                     spiInit@sTransmitEdge:	
  4432                           ; 1 bytes @ 0x2
  4433                           
  4434  0022                     eepromWrite@interruptStatus:	
  4435                           ; 1 bytes @ 0x2
  4436                           
  4437  0022                     eepromRead@data:	
  4438                           ; 1 bytes @ 0x2
  4439                           
  4440  0022                     ___wmul@multiplicand:	
  4441                           ; 1 bytes @ 0x2
  4442                           
  4443                           
  4444                           ; 2 bytes @ 0x2
  4445  0022                     	ds	1
  4446  0023                     ??_spiInit:	
  4447  0023                     reversebyte@byte:	
  4448                           ; 1 bytes @ 0x3
  4449                           
  4450  0023                     spiInit@sType:	
  4451                           ; 1 bytes @ 0x3
  4452                           
  4453                           
  4454                           ; 1 bytes @ 0x3
  4455  0023                     	ds	1
  4456  0024                     ??_picInit:	
  4457  0024                     ??___wmul:	
  4458                           ; 1 bytes @ 0x4
  4459                           
  4460  0024                     ___wmul@product:	
  4461                           ; 1 bytes @ 0x4
  4462                           
  4463                           
  4464                           ; 2 bytes @ 0x4
  4465  0024                     	ds	2
  4466  0026                     ?___awdiv:	
  4467  0026                     ___awdiv@divisor:	
  4468                           ; 2 bytes @ 0x6
  4469                           
  4470                           
  4471                           ; 2 bytes @ 0x6
  4472  0026                     	ds	2
  4473  0028                     ___awdiv@dividend:	
  4474                           
  4475                           ; 2 bytes @ 0x8
  4476  0028                     	ds	1
  4477  0029                     ??_readControllerAnalog:	
  4478                           
  4479                           ; 1 bytes @ 0x9
  4480  0029                     	ds	1
  4481  002A                     ??___awdiv:	
  4482                           
  4483                           ; 1 bytes @ 0xA
  4484  002A                     	ds	1
  4485  002B                     ___awdiv@counter:	
  4486                           
  4487                           ; 1 bytes @ 0xB
  4488  002B                     	ds	1
  4489  002C                     ___awdiv@sign:	
  4490                           
  4491                           ; 1 bytes @ 0xC
  4492  002C                     	ds	1
  4493  002D                     ___awdiv@quotient:	
  4494                           
  4495                           ; 2 bytes @ 0xD
  4496  002D                     	ds	2
  4497  002F                     ?_Map:	
  4498  002F                     Map@x:	
  4499                           ; 1 bytes @ 0xF
  4500                           
  4501                           
  4502                           ; 2 bytes @ 0xF
  4503  002F                     	ds	2
  4504  0031                     Map@inMin:	
  4505                           
  4506                           ; 2 bytes @ 0x11
  4507  0031                     	ds	2
  4508  0033                     Map@inMax:	
  4509                           
  4510                           ; 2 bytes @ 0x13
  4511  0033                     	ds	2
  4512  0035                     Map@outMin:	
  4513                           
  4514                           ; 2 bytes @ 0x15
  4515  0035                     	ds	2
  4516  0037                     Map@outMax:	
  4517                           
  4518                           ; 2 bytes @ 0x17
  4519  0037                     	ds	2
  4520  0039                     ??_lutInit:	
  4521  0039                     ??_Map:	
  4522                           ; 1 bytes @ 0x19
  4523                           
  4524                           
  4525                           ; 1 bytes @ 0x19
  4526  0039                     	ds	9
  4527  0042                     lutInit@lxMin:	
  4528                           
  4529                           ; 1 bytes @ 0x22
  4530  0042                     	ds	1
  4531  0043                     lutInit@lxMax:	
  4532                           
  4533                           ; 1 bytes @ 0x23
  4534  0043                     	ds	1
  4535  0044                     lutInit@lyMin:	
  4536                           
  4537                           ; 1 bytes @ 0x24
  4538  0044                     	ds	1
  4539  0045                     lutInit@lyMax:	
  4540                           
  4541                           ; 1 bytes @ 0x25
  4542  0045                     	ds	1
  4543  0046                     lutInit@rxMin:	
  4544                           
  4545                           ; 1 bytes @ 0x26
  4546  0046                     	ds	1
  4547  0047                     lutInit@rxMax:	
  4548                           
  4549                           ; 1 bytes @ 0x27
  4550  0047                     	ds	1
  4551  0048                     lutInit@ryMin:	
  4552                           
  4553                           ; 1 bytes @ 0x28
  4554  0048                     	ds	1
  4555  0049                     lutInit@ryMax:	
  4556                           
  4557                           ; 1 bytes @ 0x29
  4558  0049                     	ds	1
  4559  004A                     lutInit@position:	
  4560                           
  4561                           ; 2 bytes @ 0x2A
  4562  004A                     	ds	2
  4563  004C                     ??_configureController:	
  4564                           
  4565                           ; 1 bytes @ 0x2C
  4566  004C                     	ds	1
  4567  004D                     configureController@lxMin:	
  4568                           
  4569                           ; 1 bytes @ 0x2D
  4570  004D                     	ds	1
  4571  004E                     configureController@lxMax:	
  4572                           
  4573                           ; 1 bytes @ 0x2E
  4574  004E                     	ds	1
  4575  004F                     configureController@lyMin:	
  4576                           
  4577                           ; 1 bytes @ 0x2F
  4578  004F                     	ds	1
  4579  0050                     configureController@lyMax:	
  4580                           
  4581                           ; 1 bytes @ 0x30
  4582  0050                     	ds	1
  4583  0051                     configureController@rxMin:	
  4584                           
  4585                           ; 1 bytes @ 0x31
  4586  0051                     	ds	1
  4587  0052                     configureController@rxMax:	
  4588                           
  4589                           ; 1 bytes @ 0x32
  4590  0052                     	ds	1
  4591  0053                     configureController@ryMin:	
  4592                           
  4593                           ; 1 bytes @ 0x33
  4594  0053                     	ds	1
  4595  0054                     configureController@ryMax:	
  4596                           
  4597                           ; 1 bytes @ 0x34
  4598  0054                     	ds	1
  4599  0055                     configureController@lx:	
  4600                           
  4601                           ; 1 bytes @ 0x35
  4602  0055                     	ds	1
  4603  0056                     configureController@ly:	
  4604                           
  4605                           ; 1 bytes @ 0x36
  4606  0056                     	ds	1
  4607  0057                     configureController@rx:	
  4608                           
  4609                           ; 1 bytes @ 0x37
  4610  0057                     	ds	1
  4611  0058                     configureController@ry:	
  4612                           
  4613                           ; 1 bytes @ 0x38
  4614  0058                     	ds	1
  4615  0059                     ??_main:	
  4616                           
  4617                           ; 1 bytes @ 0x39
  4618  0059                     	ds	1
  4619  005A                     main@slaveSelectStatePrev:	
  4620                           
  4621                           ; 1 bytes @ 0x3A
  4622  005A                     	ds	1
  4623  005B                     main@count:	
  4624                           
  4625                           ; 1 bytes @ 0x3B
  4626  005B                     	ds	1
  4627  005C                     main@slaveSelect:	
  4628                           
  4629                           ; 1 bytes @ 0x3C
  4630  005C                     	ds	1
  4631                           
  4632                           	psect	maintext
  4633  0730                     __pmaintext:	
  4634 ;;
  4635 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4636 ;;
  4637 ;; *************** function _main *****************
  4638 ;; Defined at:
  4639 ;;		line 322 in file "main.c"
  4640 ;; Parameters:    Size  Location     Type
  4641 ;;		None
  4642 ;; Auto vars:     Size  Location     Type
  4643 ;;  slaveSelect     1   60[BANK0 ] unsigned char 
  4644 ;;  count           1   59[BANK0 ] unsigned char 
  4645 ;;  slaveSelectS    1   58[BANK0 ] unsigned char 
  4646 ;; Return value:  Size  Location     Type
  4647 ;;                  1    wreg      void 
  4648 ;; Registers used:
  4649 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4650 ;; Tracked objects:
  4651 ;;		On entry : B1F/0
  4652 ;;		On exit  : 0/0
  4653 ;;		Unchanged: 0/0
  4654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4656 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4657 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4658 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4659 ;;Total ram usage:        4 bytes
  4660 ;; Hardware stack levels required when called:    7
  4661 ;; This function calls:
  4662 ;;		_IO_MAPPING
  4663 ;;		_adcInit
  4664 ;;		_configureController
  4665 ;;		_eepromRead
  4666 ;;		_eepromWrite
  4667 ;;		_lutInit
  4668 ;;		_picInit
  4669 ;;		_readController
  4670 ;;		_readControllerAnalog
  4671 ;; This function is called by:
  4672 ;;		Startup code after reset
  4673 ;; This function uses a non-reentrant model
  4674 ;;
  4675                           
  4676                           
  4677                           ;psect for function _main
  4678  0730                     _main:	
  4679  0730                     l2807:	
  4680                           ;incstack = 0
  4681                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4682                           
  4683                           
  4684                           ;main.c: 324: picInit();
  4685  0730  318D  2549  3187   	fcall	_picInit
  4686                           
  4687                           ;main.c: 325: IO_MAPPING();
  4688  0733  318E  2603  3187   	fcall	_IO_MAPPING
  4689                           
  4690                           ;main.c: 326: adcInit();
  4691  0736  318C  24F6  3187   	fcall	_adcInit
  4692  0739                     l2809:	
  4693                           
  4694                           ;main.c: 328: if(eepromRead(0x68 != 0x69)) {
  4695  0739  3001               	movlw	1
  4696  073A  318D  2523  3187   	fcall	_eepromRead
  4697  073D  3A00               	xorlw	0
  4698  073E  1903               	skipnz
  4699  073F  2F41               	goto	u2611
  4700  0740  2F42               	goto	u2610
  4701  0741                     u2611:	
  4702  0741  2F87               	goto	l2813
  4703  0742                     u2610:	
  4704  0742                     l2811:	
  4705                           
  4706                           ;main.c: 329: eepromWrite(0x68, 0x69);
  4707  0742  3069               	movlw	105
  4708  0743  0020               	movlb	0	; select bank0
  4709  0744  00D9               	movwf	??_main
  4710  0745  0859               	movf	??_main,w
  4711  0746  00A0               	movwf	eepromWrite@data
  4712  0747  3068               	movlw	104
  4713  0748  318D  25B3  3187   	fcall	_eepromWrite
  4714                           
  4715                           ;main.c: 330: eepromWrite(0x60, 0);
  4716  074B  0020               	movlb	0	; select bank0
  4717  074C  01A0               	clrf	eepromWrite@data
  4718  074D  3060               	movlw	96
  4719  074E  318D  25B3  3187   	fcall	_eepromWrite
  4720                           
  4721                           ;main.c: 331: eepromWrite(0x61, 255);
  4722  0751  30FF               	movlw	255
  4723  0752  0020               	movlb	0	; select bank0
  4724  0753  00D9               	movwf	??_main
  4725  0754  0859               	movf	??_main,w
  4726  0755  00A0               	movwf	eepromWrite@data
  4727  0756  3061               	movlw	97
  4728  0757  318D  25B3  3187   	fcall	_eepromWrite
  4729                           
  4730                           ;main.c: 332: eepromWrite(0x62, 0);
  4731  075A  0020               	movlb	0	; select bank0
  4732  075B  01A0               	clrf	eepromWrite@data
  4733  075C  3062               	movlw	98
  4734  075D  318D  25B3  3187   	fcall	_eepromWrite
  4735                           
  4736                           ;main.c: 333: eepromWrite(0x63, 255);
  4737  0760  30FF               	movlw	255
  4738  0761  0020               	movlb	0	; select bank0
  4739  0762  00D9               	movwf	??_main
  4740  0763  0859               	movf	??_main,w
  4741  0764  00A0               	movwf	eepromWrite@data
  4742  0765  3063               	movlw	99
  4743  0766  318D  25B3  3187   	fcall	_eepromWrite
  4744                           
  4745                           ;main.c: 334: eepromWrite(0x64, 0);
  4746  0769  0020               	movlb	0	; select bank0
  4747  076A  01A0               	clrf	eepromWrite@data
  4748  076B  3064               	movlw	100
  4749  076C  318D  25B3  3187   	fcall	_eepromWrite
  4750                           
  4751                           ;main.c: 335: eepromWrite(0x65, 255);
  4752  076F  30FF               	movlw	255
  4753  0770  0020               	movlb	0	; select bank0
  4754  0771  00D9               	movwf	??_main
  4755  0772  0859               	movf	??_main,w
  4756  0773  00A0               	movwf	eepromWrite@data
  4757  0774  3065               	movlw	101
  4758  0775  318D  25B3  3187   	fcall	_eepromWrite
  4759                           
  4760                           ;main.c: 336: eepromWrite(0x66, 0);
  4761  0778  0020               	movlb	0	; select bank0
  4762  0779  01A0               	clrf	eepromWrite@data
  4763  077A  3066               	movlw	102
  4764  077B  318D  25B3  3187   	fcall	_eepromWrite
  4765                           
  4766                           ;main.c: 337: eepromWrite(0x67, 255);
  4767  077E  30FF               	movlw	255
  4768  077F  0020               	movlb	0	; select bank0
  4769  0780  00D9               	movwf	??_main
  4770  0781  0859               	movf	??_main,w
  4771  0782  00A0               	movwf	eepromWrite@data
  4772  0783  3067               	movlw	103
  4773  0784  318D  25B3  3187   	fcall	_eepromWrite
  4774  0787                     l2813:	
  4775                           
  4776                           ;main.c: 338: };main.c: 340: lutInit();
  4777  0787  3182  2273  3187   	fcall	_lutInit
  4778  078A                     l2815:	
  4779                           
  4780                           ;main.c: 342: char slaveSelect;;main.c: 343: char slaveSelectStatePrev = 0;
  4781  078A  0020               	movlb	0	; select bank0
  4782  078B  01DA               	clrf	main@slaveSelectStatePrev
  4783  078C                     l2817:	
  4784                           
  4785                           ;main.c: 344: char count = 0;
  4786  078C  01DB               	clrf	main@count
  4787  078D                     l2819:	
  4788                           
  4789                           ;main.c: 345: RA4 = 1;
  4790  078D  160C               	bsf	12,4	;volatile
  4791  078E                     l2821:	
  4792                           
  4793                           ;main.c: 349: if(digitalStateFirst == 0x7F && digitalStateSecond == 0x5F){
  4794  078E  307F               	movlw	127
  4795  078F  0020               	movlb	0	; select bank0
  4796  0790  0666               	xorwf	_digitalStateFirst,w
  4797  0791  1D03               	btfss	3,2
  4798  0792  2F94               	goto	u2621
  4799  0793  2F95               	goto	u2620
  4800  0794                     u2621:	
  4801  0794  2F9E               	goto	l2827
  4802  0795                     u2620:	
  4803  0795                     l2823:	
  4804  0795  305F               	movlw	95
  4805  0796  0665               	xorwf	_digitalStateSecond,w
  4806  0797  1D03               	btfss	3,2
  4807  0798  2F9A               	goto	u2631
  4808  0799  2F9B               	goto	u2630
  4809  079A                     u2631:	
  4810  079A  2F9E               	goto	l2827
  4811  079B                     u2630:	
  4812  079B                     l2825:	
  4813                           
  4814                           ;main.c: 350: configureController();
  4815  079B  3185  25CE  3187   	fcall	_configureController
  4816  079E                     l2827:	
  4817                           
  4818                           ;main.c: 351: };main.c: 353: if(analogMode >= 1) RD5 = 1;
  4819  079E  0878               	movf	_analogMode,w
  4820  079F  1903               	btfsc	3,2
  4821  07A0  2FA2               	goto	u2641
  4822  07A1  2FA3               	goto	u2640
  4823  07A2                     u2641:	
  4824  07A2  2FA6               	goto	l192
  4825  07A3                     u2640:	
  4826  07A3                     l2829:	
  4827  07A3  0020               	movlb	0	; select bank0
  4828  07A4  168F               	bsf	15,5	;volatile
  4829  07A5  2FA8               	goto	l2831
  4830  07A6                     l192:	
  4831                           
  4832                           ;main.c: 354: else RD5 = 0;
  4833  07A6  0020               	movlb	0	; select bank0
  4834  07A7  128F               	bcf	15,5	;volatile
  4835  07A8                     l2831:	
  4836                           
  4837                           ;main.c: 357: if(!AN_btn && !MODE_LOCK && AN_latch){
  4838  07A8  0867               	movf	_AN_btn,w
  4839  07A9  1D03               	btfss	3,2
  4840  07AA  2FAC               	goto	u2651
  4841  07AB  2FAD               	goto	u2650
  4842  07AC                     u2651:	
  4843  07AC  2FC1               	goto	l2843
  4844  07AD                     u2650:	
  4845  07AD                     l2833:	
  4846  07AD  086F               	movf	_MODE_LOCK,w
  4847  07AE  1D03               	btfss	3,2
  4848  07AF  2FB1               	goto	u2661
  4849  07B0  2FB2               	goto	u2660
  4850  07B1                     u2661:	
  4851  07B1  2FC1               	goto	l2843
  4852  07B2                     u2660:	
  4853  07B2                     l2835:	
  4854  07B2  086E               	movf	_AN_latch,w
  4855  07B3  1903               	btfsc	3,2
  4856  07B4  2FB6               	goto	u2671
  4857  07B5  2FB7               	goto	u2670
  4858  07B6                     u2671:	
  4859  07B6  2FC1               	goto	l2843
  4860  07B7                     u2670:	
  4861  07B7                     l2837:	
  4862                           
  4863                           ;main.c: 358: if(analogMode >= 1) analogMode = 0;
  4864  07B7  0878               	movf	_analogMode,w
  4865  07B8  1903               	btfsc	3,2
  4866  07B9  2FBB               	goto	u2681
  4867  07BA  2FBC               	goto	u2680
  4868  07BB                     u2681:	
  4869  07BB  2FBE               	goto	l195
  4870  07BC                     u2680:	
  4871  07BC                     l2839:	
  4872  07BC  01F8               	clrf	_analogMode
  4873  07BD  2FC0               	goto	l2841
  4874  07BE                     l195:	
  4875                           
  4876                           ;main.c: 359: else analogMode = 1;
  4877  07BE  01F8               	clrf	_analogMode
  4878  07BF  0AF8               	incf	_analogMode,f
  4879  07C0                     l2841:	
  4880                           
  4881                           ;main.c: 360: AN_latch = 0;
  4882  07C0  01EE               	clrf	_AN_latch
  4883  07C1                     l2843:	
  4884                           
  4885                           ;main.c: 361: };main.c: 362: if(AN_btn) AN_latch = 1;
  4886  07C1  0867               	movf	_AN_btn,w
  4887  07C2  1903               	btfsc	3,2
  4888  07C3  2FC5               	goto	u2691
  4889  07C4  2FC6               	goto	u2690
  4890  07C5                     u2691:	
  4891  07C5  2FC8               	goto	l2847
  4892  07C6                     u2690:	
  4893  07C6                     l2845:	
  4894  07C6  01EE               	clrf	_AN_latch
  4895  07C7  0AEE               	incf	_AN_latch,f
  4896  07C8                     l2847:	
  4897                           
  4898                           ;main.c: 364: slaveSelect = RA5;
  4899  07C8  3000               	movlw	0
  4900  07C9  1A8C               	btfsc	12,5	;volatile
  4901  07CA  3001               	movlw	1
  4902  07CB  00DC               	movwf	main@slaveSelect
  4903  07CC                     l2849:	
  4904                           
  4905                           ;main.c: 365: if (slaveSelect) if(count < 3) count++;
  4906  07CC  085C               	movf	main@slaveSelect,w
  4907  07CD  1903               	btfsc	3,2
  4908  07CE  2FD0               	goto	u2701
  4909  07CF  2FD1               	goto	u2700
  4910  07D0                     u2701:	
  4911  07D0  2FDB               	goto	l198
  4912  07D1                     u2700:	
  4913  07D1                     l2851:	
  4914  07D1  3003               	movlw	3
  4915  07D2  025B               	subwf	main@count,w
  4916  07D3  1803               	skipnc
  4917  07D4  2FD6               	goto	u2711
  4918  07D5  2FD7               	goto	u2710
  4919  07D6                     u2711:	
  4920  07D6  2FDB               	goto	l198
  4921  07D7                     u2710:	
  4922  07D7                     l2853:	
  4923  07D7  3001               	movlw	1
  4924  07D8  00D9               	movwf	??_main
  4925  07D9  0859               	movf	??_main,w
  4926  07DA  07DB               	addwf	main@count,f
  4927  07DB                     l198:	
  4928                           
  4929                           ;main.c: 366: if (slaveSelect ^ slaveSelectStatePrev) count = 0;
  4930  07DB  085C               	movf	main@slaveSelect,w
  4931  07DC  065A               	xorwf	main@slaveSelectStatePrev,w
  4932  07DD  1903               	btfsc	3,2
  4933  07DE  2FE0               	goto	u2721
  4934  07DF  2FE1               	goto	u2720
  4935  07E0                     u2721:	
  4936  07E0  2FE2               	goto	l2857
  4937  07E1                     u2720:	
  4938  07E1                     l2855:	
  4939  07E1  01DB               	clrf	main@count
  4940  07E2                     l2857:	
  4941                           
  4942                           ;main.c: 367: slaveSelectStatePrev = slaveSelect;
  4943  07E2  085C               	movf	main@slaveSelect,w
  4944  07E3  00D9               	movwf	??_main
  4945  07E4  0859               	movf	??_main,w
  4946  07E5  00DA               	movwf	main@slaveSelectStatePrev
  4947  07E6                     l2859:	
  4948                           
  4949                           ;main.c: 368: if (count >= 3) {
  4950  07E6  3003               	movlw	3
  4951  07E7  025B               	subwf	main@count,w
  4952  07E8  1C03               	skipc
  4953  07E9  2FEB               	goto	u2731
  4954  07EA  2FEC               	goto	u2730
  4955  07EB                     u2731:	
  4956  07EB  2FF1               	goto	l2867
  4957  07EC                     u2730:	
  4958  07EC                     l2861:	
  4959                           
  4960                           ;main.c: 369: cmdCounter = 0;
  4961  07EC  01F9               	clrf	_cmdCounter
  4962  07ED                     l2863:	
  4963                           
  4964                           ;main.c: 370: SSP1BUF = 0xFF;
  4965  07ED  30FF               	movlw	255
  4966  07EE  0023               	movlb	3	; select bank3
  4967  07EF  008C               	movwf	12	;volatile
  4968  07F0                     l2865:	
  4969                           
  4970                           ;main.c: 371: previousCmd = 0x00;
  4971  07F0  01F6               	clrf	_previousCmd
  4972  07F1                     l2867:	
  4973                           
  4974                           ;main.c: 372: };main.c: 374: readController(analogMode);
  4975  07F1  0878               	movf	_analogMode,w
  4976  07F2  3184  2464  3187   	fcall	_readController
  4977  07F5                     l2869:	
  4978                           
  4979                           ;main.c: 375: readControllerAnalog();
  4980  07F5  318E  26FC  3187   	fcall	_readControllerAnalog
  4981  07F8  2F8E               	goto	l2821
  4982  07F9  3182  2A21         	ljmp	start
  4983  07FB                     __end_of_main:	
  4984                           
  4985                           	psect	text1
  4986  0EFC                     __ptext1:	
  4987 ;; *************** function _readControllerAnalog *****************
  4988 ;; Defined at:
  4989 ;;		line 165 in file "Controller.c"
  4990 ;; Parameters:    Size  Location     Type
  4991 ;;		None
  4992 ;; Auto vars:     Size  Location     Type
  4993 ;;		None
  4994 ;; Return value:  Size  Location     Type
  4995 ;;                  1    wreg      void 
  4996 ;; Registers used:
  4997 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4998 ;; Tracked objects:
  4999 ;;		On entry : 0/0
  5000 ;;		On exit  : 0/0
  5001 ;;		Unchanged: 0/0
  5002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5005 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5006 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5007 ;;Total ram usage:        3 bytes
  5008 ;; Hardware stack levels used:    1
  5009 ;; Hardware stack levels required when called:    4
  5010 ;; This function calls:
  5011 ;;		_readADC
  5012 ;;		_reversebyte
  5013 ;; This function is called by:
  5014 ;;		_main
  5015 ;; This function uses a non-reentrant model
  5016 ;;
  5017                           
  5018                           
  5019                           ;psect for function _readControllerAnalog
  5020  0EFC                     _readControllerAnalog:	
  5021  0EFC                     l2805:	
  5022                           ;incstack = 0
  5023                           ; Regs used in _readControllerAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5024                           
  5025                           
  5026                           ;Controller.c: 167: lxData = reversebyte(lutLX[readADC(0b010000)]);
  5027  0EFC  3010               	movlw	16
  5028  0EFD  0020               	movlb	0	; select bank0
  5029  0EFE  00A0               	movwf	readADC@channel
  5030  0EFF  3000               	movlw	0
  5031  0F00  00A1               	movwf	readADC@channel+1
  5032  0F01  318D  25D8  318E   	fcall	_readADC
  5033  0F04  30F0               	movlw	240
  5034  0F05  0020               	movlb	0	; select bank0
  5035  0F06  00A9               	movwf	??_readControllerAnalog
  5036  0F07  3026               	movlw	38
  5037  0F08  00AA               	movwf	??_readControllerAnalog+1
  5038  0F09  0820               	movf	?_readADC,w
  5039  0F0A  0729               	addwf	??_readControllerAnalog,w
  5040  0F0B  0086               	movwf	6
  5041  0F0C  0821               	movf	?_readADC+1,w
  5042  0F0D  3D2A               	addwfc	??_readControllerAnalog+1,w
  5043  0F0E  0087               	movwf	7
  5044  0F0F  0801               	movf	1,w
  5045  0F10  318E  2665  318E   	fcall	_reversebyte
  5046  0F13  0020               	movlb	0	; select bank0
  5047  0F14  00AB               	movwf	??_readControllerAnalog+2
  5048  0F15  082B               	movf	??_readControllerAnalog+2,w
  5049  0F16  00E2               	movwf	_lxData
  5050                           
  5051                           ;Controller.c: 168: lyData = reversebyte(lutLY[readADC(0b10001)]);
  5052  0F17  3011               	movlw	17
  5053  0F18  00A0               	movwf	readADC@channel
  5054  0F19  3000               	movlw	0
  5055  0F1A  00A1               	movwf	readADC@channel+1
  5056  0F1B  318D  25D8  318E   	fcall	_readADC
  5057  0F1E  30F0               	movlw	240
  5058  0F1F  0020               	movlb	0	; select bank0
  5059  0F20  00A9               	movwf	??_readControllerAnalog
  5060  0F21  3025               	movlw	37
  5061  0F22  00AA               	movwf	??_readControllerAnalog+1
  5062  0F23  0820               	movf	?_readADC,w
  5063  0F24  0729               	addwf	??_readControllerAnalog,w
  5064  0F25  0086               	movwf	6
  5065  0F26  0821               	movf	?_readADC+1,w
  5066  0F27  3D2A               	addwfc	??_readControllerAnalog+1,w
  5067  0F28  0087               	movwf	7
  5068  0F29  0801               	movf	1,w
  5069  0F2A  318E  2665  318E   	fcall	_reversebyte
  5070  0F2D  0020               	movlb	0	; select bank0
  5071  0F2E  00AB               	movwf	??_readControllerAnalog+2
  5072  0F2F  082B               	movf	??_readControllerAnalog+2,w
  5073  0F30  00E1               	movwf	_lyData
  5074                           
  5075                           ;Controller.c: 170: rxData = reversebyte(lutRX[readADC(0b010110)]);
  5076  0F31  3016               	movlw	22
  5077  0F32  00A0               	movwf	readADC@channel
  5078  0F33  3000               	movlw	0
  5079  0F34  00A1               	movwf	readADC@channel+1
  5080  0F35  318D  25D8  318E   	fcall	_readADC
  5081  0F38  30F0               	movlw	240
  5082  0F39  0020               	movlb	0	; select bank0
  5083  0F3A  00A9               	movwf	??_readControllerAnalog
  5084  0F3B  3024               	movlw	36
  5085  0F3C  00AA               	movwf	??_readControllerAnalog+1
  5086  0F3D  0820               	movf	?_readADC,w
  5087  0F3E  0729               	addwf	??_readControllerAnalog,w
  5088  0F3F  0086               	movwf	6
  5089  0F40  0821               	movf	?_readADC+1,w
  5090  0F41  3D2A               	addwfc	??_readControllerAnalog+1,w
  5091  0F42  0087               	movwf	7
  5092  0F43  0801               	movf	1,w
  5093  0F44  318E  2665  318E   	fcall	_reversebyte
  5094  0F47  0020               	movlb	0	; select bank0
  5095  0F48  00AB               	movwf	??_readControllerAnalog+2
  5096  0F49  082B               	movf	??_readControllerAnalog+2,w
  5097  0F4A  00E4               	movwf	_rxData
  5098                           
  5099                           ;Controller.c: 171: ryData = reversebyte(lutRY[readADC(0b010111)]);
  5100  0F4B  3017               	movlw	23
  5101  0F4C  00A0               	movwf	readADC@channel
  5102  0F4D  3000               	movlw	0
  5103  0F4E  00A1               	movwf	readADC@channel+1
  5104  0F4F  318D  25D8  318E   	fcall	_readADC
  5105  0F52  30F0               	movlw	240
  5106  0F53  0020               	movlb	0	; select bank0
  5107  0F54  00A9               	movwf	??_readControllerAnalog
  5108  0F55  3023               	movlw	35
  5109  0F56  00AA               	movwf	??_readControllerAnalog+1
  5110  0F57  0820               	movf	?_readADC,w
  5111  0F58  0729               	addwf	??_readControllerAnalog,w
  5112  0F59  0086               	movwf	6
  5113  0F5A  0821               	movf	?_readADC+1,w
  5114  0F5B  3D2A               	addwfc	??_readControllerAnalog+1,w
  5115  0F5C  0087               	movwf	7
  5116  0F5D  0801               	movf	1,w
  5117  0F5E  318E  2665  318E   	fcall	_reversebyte
  5118  0F61  0020               	movlb	0	; select bank0
  5119  0F62  00AB               	movwf	??_readControllerAnalog+2
  5120  0F63  082B               	movf	??_readControllerAnalog+2,w
  5121  0F64  00E3               	movwf	_ryData
  5122  0F65                     l358:	
  5123  0F65  0008               	return
  5124  0F66                     __end_of_readControllerAnalog:	
  5125                           
  5126                           	psect	text2
  5127  0E65                     __ptext2:	
  5128 ;; *************** function _reversebyte *****************
  5129 ;; Defined at:
  5130 ;;		line 157 in file "Controller.c"
  5131 ;; Parameters:    Size  Location     Type
  5132 ;;  byte            1    wreg     unsigned char 
  5133 ;; Auto vars:     Size  Location     Type
  5134 ;;  byte            1    3[BANK0 ] unsigned char 
  5135 ;; Return value:  Size  Location     Type
  5136 ;;                  1    wreg      unsigned char 
  5137 ;; Registers used:
  5138 ;;		wreg, status,2, status,0
  5139 ;; Tracked objects:
  5140 ;;		On entry : 0/0
  5141 ;;		On exit  : 0/0
  5142 ;;		Unchanged: 0/0
  5143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5145 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5146 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5147 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5148 ;;Total ram usage:        4 bytes
  5149 ;; Hardware stack levels used:    1
  5150 ;; Hardware stack levels required when called:    3
  5151 ;; This function calls:
  5152 ;;		Nothing
  5153 ;; This function is called by:
  5154 ;;		_readControllerAnalog
  5155 ;; This function uses a non-reentrant model
  5156 ;;
  5157                           
  5158                           
  5159                           ;psect for function _reversebyte
  5160  0E65                     _reversebyte:	
  5161                           
  5162                           ;incstack = 0
  5163                           ; Regs used in _reversebyte: [wreg+status,2+status,0]
  5164                           ;reversebyte@byte stored from wreg
  5165  0E65  0020               	movlb	0	; select bank0
  5166  0E66  00A3               	movwf	reversebyte@byte
  5167  0E67                     l2515:	
  5168                           
  5169                           ;Controller.c: 158: byte = (byte & 0xF0) >> 4 | (byte & 0x0F) << 4;
  5170  0E67  0823               	movf	reversebyte@byte,w
  5171  0E68  390F               	andlw	15
  5172  0E69  00A0               	movwf	??_reversebyte
  5173  0E6A  3004               	movlw	4
  5174  0E6B                     u2115:	
  5175  0E6B  35A0               	lslf	??_reversebyte,f
  5176  0E6C  0B89               	decfsz	9,f
  5177  0E6D  2E6B               	goto	u2115
  5178  0E6E  0823               	movf	reversebyte@byte,w
  5179  0E6F  00A1               	movwf	??_reversebyte+1
  5180  0E70  3004               	movlw	4
  5181  0E71                     u2125:	
  5182  0E71  36A1               	lsrf	??_reversebyte+1,f
  5183  0E72  0B89               	decfsz	9,f
  5184  0E73  2E71               	goto	u2125
  5185  0E74  0821               	movf	??_reversebyte+1,w
  5186  0E75  390F               	andlw	15
  5187  0E76  0420               	iorwf	??_reversebyte,w
  5188  0E77  00A2               	movwf	??_reversebyte+2
  5189  0E78  0822               	movf	??_reversebyte+2,w
  5190  0E79  00A3               	movwf	reversebyte@byte
  5191                           
  5192                           ;Controller.c: 159: byte = (byte & 0xCC) >> 2 | (byte & 0x33) << 2;
  5193  0E7A  0823               	movf	reversebyte@byte,w
  5194  0E7B  3933               	andlw	51
  5195  0E7C  00A0               	movwf	??_reversebyte
  5196  0E7D  3002               	movlw	2
  5197  0E7E                     u2135:	
  5198  0E7E  35A0               	lslf	??_reversebyte,f
  5199  0E7F  0B89               	decfsz	9,f
  5200  0E80  2E7E               	goto	u2135
  5201  0E81  0823               	movf	reversebyte@byte,w
  5202  0E82  00A1               	movwf	??_reversebyte+1
  5203  0E83  3002               	movlw	2
  5204  0E84                     u2145:	
  5205  0E84  36A1               	lsrf	??_reversebyte+1,f
  5206  0E85  0B89               	decfsz	9,f
  5207  0E86  2E84               	goto	u2145
  5208  0E87  0821               	movf	??_reversebyte+1,w
  5209  0E88  3933               	andlw	51
  5210  0E89  0420               	iorwf	??_reversebyte,w
  5211  0E8A  00A2               	movwf	??_reversebyte+2
  5212  0E8B  0822               	movf	??_reversebyte+2,w
  5213  0E8C  00A3               	movwf	reversebyte@byte
  5214                           
  5215                           ;Controller.c: 160: byte = (byte & 0xAA) >> 1 | (byte & 0x55) << 1;
  5216  0E8D  0823               	movf	reversebyte@byte,w
  5217  0E8E  3955               	andlw	85
  5218  0E8F  00A0               	movwf	??_reversebyte
  5219  0E90  3001               	movlw	1
  5220  0E91                     u2155:	
  5221  0E91  35A0               	lslf	??_reversebyte,f
  5222  0E92  0B89               	decfsz	9,f
  5223  0E93  2E91               	goto	u2155
  5224  0E94  3623               	lsrf	reversebyte@byte,w
  5225  0E95  3955               	andlw	85
  5226  0E96  0420               	iorwf	??_reversebyte,w
  5227  0E97  00A1               	movwf	??_reversebyte+1
  5228  0E98  0821               	movf	??_reversebyte+1,w
  5229  0E99  00A3               	movwf	reversebyte@byte
  5230  0E9A                     l2517:	
  5231                           
  5232                           ;Controller.c: 162: return byte;
  5233  0E9A  0823               	movf	reversebyte@byte,w
  5234  0E9B                     l355:	
  5235  0E9B  0008               	return
  5236  0E9C                     __end_of_reversebyte:	
  5237                           
  5238                           	psect	text3
  5239  0D49                     __ptext3:	
  5240 ;; *************** function _picInit *****************
  5241 ;; Defined at:
  5242 ;;		line 30 in file "PicConfig.c"
  5243 ;; Parameters:    Size  Location     Type
  5244 ;;		None
  5245 ;; Auto vars:     Size  Location     Type
  5246 ;;		None
  5247 ;; Return value:  Size  Location     Type
  5248 ;;                  1    wreg      void 
  5249 ;; Registers used:
  5250 ;;		wreg, status,2, status,0, pclath, cstack
  5251 ;; Tracked objects:
  5252 ;;		On entry : 0/0
  5253 ;;		On exit  : 0/0
  5254 ;;		Unchanged: 0/0
  5255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5258 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5259 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5260 ;;Total ram usage:        2 bytes
  5261 ;; Hardware stack levels used:    1
  5262 ;; Hardware stack levels required when called:    4
  5263 ;; This function calls:
  5264 ;;		_spiInit
  5265 ;; This function is called by:
  5266 ;;		_main
  5267 ;; This function uses a non-reentrant model
  5268 ;;
  5269                           
  5270                           
  5271                           ;psect for function _picInit
  5272  0D49                     _picInit:	
  5273  0D49                     l2701:	
  5274                           ;incstack = 0
  5275                           ; Regs used in _picInit: [wreg+status,2+status,0+pclath+cstack]
  5276                           
  5277                           
  5278                           ;PicConfig.c: 32: spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_HIGH, 
      +                          SPI_ACTIVE_2_IDLE);
  5279  0D49  0020               	movlb	0	; select bank0
  5280  0D4A  01A0               	clrf	spiInit@sDataSample
  5281  0D4B  3010               	movlw	16
  5282  0D4C  00A4               	movwf	??_picInit
  5283  0D4D  0824               	movf	??_picInit,w
  5284  0D4E  00A1               	movwf	spiInit@sClockIdle
  5285  0D4F  3040               	movlw	64
  5286  0D50  00A5               	movwf	??_picInit+1
  5287  0D51  0825               	movf	??_picInit+1,w
  5288  0D52  00A2               	movwf	spiInit@sTransmitEdge
  5289  0D53  3024               	movlw	36
  5290  0D54  318D  2535  318D   	fcall	_spiInit
  5291  0D57                     l2703:	
  5292                           
  5293                           ;PicConfig.c: 35: INTCONbits.GIE = 1;
  5294  0D57  178B               	bsf	11,7	;volatile
  5295  0D58                     l2705:	
  5296                           
  5297                           ;PicConfig.c: 36: INTCONbits.PEIE = 1;
  5298  0D58  170B               	bsf	11,6	;volatile
  5299  0D59                     l2707:	
  5300                           
  5301                           ;PicConfig.c: 37: SSP1IF = 0;
  5302  0D59  002E               	movlb	14	; select bank14
  5303  0D5A  100F               	bcf	15,0	;volatile
  5304  0D5B                     l2709:	
  5305                           
  5306                           ;PicConfig.c: 38: SSP1IE = 1;
  5307  0D5B  1419               	bsf	25,0	;volatile
  5308  0D5C                     l408:	
  5309  0D5C  0008               	return
  5310  0D5D                     __end_of_picInit:	
  5311                           
  5312                           	psect	text4
  5313  0D35                     __ptext4:	
  5314 ;; *************** function _spiInit *****************
  5315 ;; Defined at:
  5316 ;;		line 10 in file "Spi.c"
  5317 ;; Parameters:    Size  Location     Type
  5318 ;;  sType           1    wreg     enum E11980
  5319 ;;  sDataSample     1    0[BANK0 ] enum E11988
  5320 ;;  sClockIdle      1    1[BANK0 ] enum E11992
  5321 ;;  sTransmitEdg    1    2[BANK0 ] enum E11996
  5322 ;; Auto vars:     Size  Location     Type
  5323 ;;  sType           1    3[BANK0 ] enum E11980
  5324 ;; Return value:  Size  Location     Type
  5325 ;;                  1    wreg      void 
  5326 ;; Registers used:
  5327 ;;		wreg, status,2, status,0
  5328 ;; Tracked objects:
  5329 ;;		On entry : 0/0
  5330 ;;		On exit  : 0/0
  5331 ;;		Unchanged: 0/0
  5332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5333 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5334 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5336 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5337 ;;Total ram usage:        4 bytes
  5338 ;; Hardware stack levels used:    1
  5339 ;; Hardware stack levels required when called:    3
  5340 ;; This function calls:
  5341 ;;		Nothing
  5342 ;; This function is called by:
  5343 ;;		_picInit
  5344 ;; This function uses a non-reentrant model
  5345 ;;
  5346                           
  5347                           
  5348                           ;psect for function _spiInit
  5349  0D35                     _spiInit:	
  5350                           
  5351                           ;incstack = 0
  5352                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  5353                           ;spiInit@sType stored from wreg
  5354  0D35  0020               	movlb	0	; select bank0
  5355  0D36  00A3               	movwf	spiInit@sType
  5356  0D37                     l2695:	
  5357                           
  5358                           ;Spi.c: 13: if(sType & 0b00000100)
  5359  0D37  1D23               	btfss	spiInit@sType,2
  5360  0D38  2D3A               	goto	u2481
  5361  0D39  2D3B               	goto	u2480
  5362  0D3A                     u2481:	
  5363  0D3A  2D3F               	goto	l2699
  5364  0D3B                     u2480:	
  5365  0D3B                     l2697:	
  5366                           
  5367                           ;Spi.c: 14: {;Spi.c: 15: SSP1STAT = sTransmitEdge;
  5368  0D3B  0822               	movf	spiInit@sTransmitEdge,w
  5369  0D3C  0023               	movlb	3	; select bank3
  5370  0D3D  008F               	movwf	15	;volatile
  5371                           
  5372                           ;Spi.c: 17: }
  5373  0D3E  2D43               	goto	l420
  5374  0D3F                     l2699:	
  5375                           
  5376                           ;Spi.c: 18: else;Spi.c: 19: {;Spi.c: 20: SSP1STAT = sDataSample | sTransmitEdge;
  5377  0D3F  0820               	movf	spiInit@sDataSample,w
  5378  0D40  0422               	iorwf	spiInit@sTransmitEdge,w
  5379  0D41  0023               	movlb	3	; select bank3
  5380  0D42  008F               	movwf	15	;volatile
  5381  0D43                     l420:	
  5382                           
  5383                           ;Spi.c: 22: };Spi.c: 24: SSP1CON1 = sType | sClockIdle;
  5384  0D43  0020               	movlb	0	; select bank0
  5385  0D44  0823               	movf	spiInit@sType,w
  5386  0D45  0421               	iorwf	spiInit@sClockIdle,w
  5387  0D46  0023               	movlb	3	; select bank3
  5388  0D47  0090               	movwf	16	;volatile
  5389  0D48                     l421:	
  5390  0D48  0008               	return
  5391  0D49                     __end_of_spiInit:	
  5392                           
  5393                           	psect	text5
  5394  05CE                     __ptext5:	
  5395 ;; *************** function _configureController *****************
  5396 ;; Defined at:
  5397 ;;		line 174 in file "Controller.c"
  5398 ;; Parameters:    Size  Location     Type
  5399 ;;		None
  5400 ;; Auto vars:     Size  Location     Type
  5401 ;;  ry              1   56[BANK0 ] unsigned char 
  5402 ;;  rx              1   55[BANK0 ] unsigned char 
  5403 ;;  ly              1   54[BANK0 ] unsigned char 
  5404 ;;  lx              1   53[BANK0 ] unsigned char 
  5405 ;;  ryMax           1   52[BANK0 ] unsigned char 
  5406 ;;  ryMin           1   51[BANK0 ] unsigned char 
  5407 ;;  rxMax           1   50[BANK0 ] unsigned char 
  5408 ;;  rxMin           1   49[BANK0 ] unsigned char 
  5409 ;;  lyMax           1   48[BANK0 ] unsigned char 
  5410 ;;  lyMin           1   47[BANK0 ] unsigned char 
  5411 ;;  lxMax           1   46[BANK0 ] unsigned char 
  5412 ;;  lxMin           1   45[BANK0 ] unsigned char 
  5413 ;; Return value:  Size  Location     Type
  5414 ;;                  1    wreg      void 
  5415 ;; Registers used:
  5416 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5417 ;; Tracked objects:
  5418 ;;		On entry : 0/0
  5419 ;;		On exit  : 0/0
  5420 ;;		Unchanged: 0/0
  5421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5423 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5424 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5425 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5426 ;;Total ram usage:       13 bytes
  5427 ;; Hardware stack levels used:    1
  5428 ;; Hardware stack levels required when called:    6
  5429 ;; This function calls:
  5430 ;;		_eepromWrite
  5431 ;;		_lutInit
  5432 ;;		_readADC
  5433 ;;		_readController
  5434 ;; This function is called by:
  5435 ;;		_main
  5436 ;; This function uses a non-reentrant model
  5437 ;;
  5438                           
  5439                           
  5440                           ;psect for function _configureController
  5441  05CE                     _configureController:	
  5442  05CE                     l2749:	
  5443                           ;incstack = 0
  5444                           ; Regs used in _configureController: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5445                           
  5446                           
  5447                           ;Controller.c: 176: INTCONbits.GIE = 0;
  5448  05CE  138B               	bcf	11,7	;volatile
  5449                           
  5450                           ;Controller.c: 177: INTCONbits.PEIE = 0;
  5451  05CF  130B               	bcf	11,6	;volatile
  5452  05D0                     l2751:	
  5453                           
  5454                           ;Controller.c: 179: char lxMin = readADC(0b010000);
  5455  05D0  3010               	movlw	16
  5456  05D1  0020               	movlb	0	; select bank0
  5457  05D2  00A0               	movwf	readADC@channel
  5458  05D3  3000               	movlw	0
  5459  05D4  00A1               	movwf	readADC@channel+1
  5460  05D5  318D  25D8  3185   	fcall	_readADC
  5461  05D8  0020               	movlb	0	; select bank0
  5462  05D9  0820               	movf	?_readADC,w
  5463  05DA  00CC               	movwf	??_configureController
  5464  05DB  084C               	movf	??_configureController,w
  5465  05DC  00CD               	movwf	configureController@lxMin
  5466                           
  5467                           ;Controller.c: 180: char lxMax = readADC(0b010000);
  5468  05DD  3010               	movlw	16
  5469  05DE  00A0               	movwf	readADC@channel
  5470  05DF  3000               	movlw	0
  5471  05E0  00A1               	movwf	readADC@channel+1
  5472  05E1  318D  25D8  3185   	fcall	_readADC
  5473  05E4  0020               	movlb	0	; select bank0
  5474  05E5  0820               	movf	?_readADC,w
  5475  05E6  00CC               	movwf	??_configureController
  5476  05E7  084C               	movf	??_configureController,w
  5477  05E8  00CE               	movwf	configureController@lxMax
  5478                           
  5479                           ;Controller.c: 181: char lyMin = readADC(0b10001);
  5480  05E9  3011               	movlw	17
  5481  05EA  00A0               	movwf	readADC@channel
  5482  05EB  3000               	movlw	0
  5483  05EC  00A1               	movwf	readADC@channel+1
  5484  05ED  318D  25D8  3185   	fcall	_readADC
  5485  05F0  0020               	movlb	0	; select bank0
  5486  05F1  0820               	movf	?_readADC,w
  5487  05F2  00CC               	movwf	??_configureController
  5488  05F3  084C               	movf	??_configureController,w
  5489  05F4  00CF               	movwf	configureController@lyMin
  5490                           
  5491                           ;Controller.c: 182: char lyMax = readADC(0b10001);
  5492  05F5  3011               	movlw	17
  5493  05F6  00A0               	movwf	readADC@channel
  5494  05F7  3000               	movlw	0
  5495  05F8  00A1               	movwf	readADC@channel+1
  5496  05F9  318D  25D8  3185   	fcall	_readADC
  5497  05FC  0020               	movlb	0	; select bank0
  5498  05FD  0820               	movf	?_readADC,w
  5499  05FE  00CC               	movwf	??_configureController
  5500  05FF  084C               	movf	??_configureController,w
  5501  0600  00D0               	movwf	configureController@lyMax
  5502                           
  5503                           ;Controller.c: 184: char rxMin = readADC(0b010110);
  5504  0601  3016               	movlw	22
  5505  0602  00A0               	movwf	readADC@channel
  5506  0603  3000               	movlw	0
  5507  0604  00A1               	movwf	readADC@channel+1
  5508  0605  318D  25D8  3185   	fcall	_readADC
  5509  0608  0020               	movlb	0	; select bank0
  5510  0609  0820               	movf	?_readADC,w
  5511  060A  00CC               	movwf	??_configureController
  5512  060B  084C               	movf	??_configureController,w
  5513  060C  00D1               	movwf	configureController@rxMin
  5514                           
  5515                           ;Controller.c: 185: char rxMax = readADC(0b010110);
  5516  060D  3016               	movlw	22
  5517  060E  00A0               	movwf	readADC@channel
  5518  060F  3000               	movlw	0
  5519  0610  00A1               	movwf	readADC@channel+1
  5520  0611  318D  25D8  3185   	fcall	_readADC
  5521  0614  0020               	movlb	0	; select bank0
  5522  0615  0820               	movf	?_readADC,w
  5523  0616  00CC               	movwf	??_configureController
  5524  0617  084C               	movf	??_configureController,w
  5525  0618  00D2               	movwf	configureController@rxMax
  5526                           
  5527                           ;Controller.c: 186: char ryMin = readADC(0b010111);
  5528  0619  3017               	movlw	23
  5529  061A  00A0               	movwf	readADC@channel
  5530  061B  3000               	movlw	0
  5531  061C  00A1               	movwf	readADC@channel+1
  5532  061D  318D  25D8  3185   	fcall	_readADC
  5533  0620  0020               	movlb	0	; select bank0
  5534  0621  0820               	movf	?_readADC,w
  5535  0622  00CC               	movwf	??_configureController
  5536  0623  084C               	movf	??_configureController,w
  5537  0624  00D3               	movwf	configureController@ryMin
  5538                           
  5539                           ;Controller.c: 187: char ryMax = readADC(0b010111);
  5540  0625  3017               	movlw	23
  5541  0626  00A0               	movwf	readADC@channel
  5542  0627  3000               	movlw	0
  5543  0628  00A1               	movwf	readADC@channel+1
  5544  0629  318D  25D8  3185   	fcall	_readADC
  5545  062C  0020               	movlb	0	; select bank0
  5546  062D  0820               	movf	?_readADC,w
  5547  062E  00CC               	movwf	??_configureController
  5548  062F  084C               	movf	??_configureController,w
  5549  0630  00D4               	movwf	configureController@ryMax
  5550  0631                     l2753:	
  5551                           
  5552                           ;Controller.c: 197: readController(0);
  5553  0631  3000               	movlw	0
  5554  0632  3184  2464  3185   	fcall	_readController
  5555  0635                     l2755:	
  5556                           
  5557                           ;Controller.c: 199: if (digitalStateFirst == 0x7F && digitalStateSecond == 0xCF) {
  5558  0635  307F               	movlw	127
  5559  0636  0020               	movlb	0	; select bank0
  5560  0637  0666               	xorwf	_digitalStateFirst,w
  5561  0638  1D03               	btfss	3,2
  5562  0639  2E3B               	goto	u2491
  5563  063A  2E3C               	goto	u2490
  5564  063B                     u2491:	
  5565  063B  2E43               	goto	l2761
  5566  063C                     u2490:	
  5567  063C                     l2757:	
  5568  063C  30CF               	movlw	207
  5569  063D  0665               	xorwf	_digitalStateSecond,w
  5570  063E  1D03               	btfss	3,2
  5571  063F  2E41               	goto	u2501
  5572  0640  2E42               	goto	u2500
  5573  0641                     u2501:	
  5574  0641  2E43               	goto	l2761
  5575  0642                     u2500:	
  5576  0642  2EE3               	goto	l2797
  5577  0643                     l2761:	
  5578                           
  5579                           ;Controller.c: 201: };Controller.c: 203: lx = readADC(0b010000);
  5580  0643  3010               	movlw	16
  5581  0644  00A0               	movwf	readADC@channel
  5582  0645  3000               	movlw	0
  5583  0646  00A1               	movwf	readADC@channel+1
  5584  0647  318D  25D8  3185   	fcall	_readADC
  5585  064A  0020               	movlb	0	; select bank0
  5586  064B  0820               	movf	?_readADC,w
  5587  064C  00CC               	movwf	??_configureController
  5588  064D  084C               	movf	??_configureController,w
  5589  064E  00D5               	movwf	configureController@lx
  5590                           
  5591                           ;Controller.c: 204: ly = readADC(0b10001);
  5592  064F  3011               	movlw	17
  5593  0650  00A0               	movwf	readADC@channel
  5594  0651  3000               	movlw	0
  5595  0652  00A1               	movwf	readADC@channel+1
  5596  0653  318D  25D8  3185   	fcall	_readADC
  5597  0656  0020               	movlb	0	; select bank0
  5598  0657  0820               	movf	?_readADC,w
  5599  0658  00CC               	movwf	??_configureController
  5600  0659  084C               	movf	??_configureController,w
  5601  065A  00D6               	movwf	configureController@ly
  5602                           
  5603                           ;Controller.c: 205: rx = readADC(0b010110);
  5604  065B  3016               	movlw	22
  5605  065C  00A0               	movwf	readADC@channel
  5606  065D  3000               	movlw	0
  5607  065E  00A1               	movwf	readADC@channel+1
  5608  065F  318D  25D8  3185   	fcall	_readADC
  5609  0662  0020               	movlb	0	; select bank0
  5610  0663  0820               	movf	?_readADC,w
  5611  0664  00CC               	movwf	??_configureController
  5612  0665  084C               	movf	??_configureController,w
  5613  0666  00D7               	movwf	configureController@rx
  5614                           
  5615                           ;Controller.c: 206: ry = readADC(0b010111);
  5616  0667  3017               	movlw	23
  5617  0668  00A0               	movwf	readADC@channel
  5618  0669  3000               	movlw	0
  5619  066A  00A1               	movwf	readADC@channel+1
  5620  066B  318D  25D8  3185   	fcall	_readADC
  5621  066E  0020               	movlb	0	; select bank0
  5622  066F  0820               	movf	?_readADC,w
  5623  0670  00CC               	movwf	??_configureController
  5624  0671  084C               	movf	??_configureController,w
  5625  0672  00D8               	movwf	configureController@ry
  5626  0673                     l2763:	
  5627                           
  5628                           ;Controller.c: 209: if (ly > lyMax) lyMax = ly;
  5629  0673  0856               	movf	configureController@ly,w
  5630  0674  0250               	subwf	configureController@lyMax,w
  5631  0675  1803               	skipnc
  5632  0676  2E78               	goto	u2511
  5633  0677  2E79               	goto	u2510
  5634  0678                     u2511:	
  5635  0678  2E7D               	goto	l364
  5636  0679                     u2510:	
  5637  0679                     l2765:	
  5638  0679  0856               	movf	configureController@ly,w
  5639  067A  00CC               	movwf	??_configureController
  5640  067B  084C               	movf	??_configureController,w
  5641  067C  00D0               	movwf	configureController@lyMax
  5642  067D                     l364:	
  5643                           
  5644                           ;Controller.c: 210: if (ly < lyMin) lyMin = ly;
  5645  067D  084F               	movf	configureController@lyMin,w
  5646  067E  0256               	subwf	configureController@ly,w
  5647  067F  1803               	skipnc
  5648  0680  2E82               	goto	u2521
  5649  0681  2E83               	goto	u2520
  5650  0682                     u2521:	
  5651  0682  2E87               	goto	l365
  5652  0683                     u2520:	
  5653  0683                     l2767:	
  5654  0683  0856               	movf	configureController@ly,w
  5655  0684  00CC               	movwf	??_configureController
  5656  0685  084C               	movf	??_configureController,w
  5657  0686  00CF               	movwf	configureController@lyMin
  5658  0687                     l365:	
  5659                           
  5660                           ;Controller.c: 211: if (lx > lxMax) lxMax = lx;
  5661  0687  0855               	movf	configureController@lx,w
  5662  0688  024E               	subwf	configureController@lxMax,w
  5663  0689  1803               	skipnc
  5664  068A  2E8C               	goto	u2531
  5665  068B  2E8D               	goto	u2530
  5666  068C                     u2531:	
  5667  068C  2E91               	goto	l366
  5668  068D                     u2530:	
  5669  068D                     l2769:	
  5670  068D  0855               	movf	configureController@lx,w
  5671  068E  00CC               	movwf	??_configureController
  5672  068F  084C               	movf	??_configureController,w
  5673  0690  00CE               	movwf	configureController@lxMax
  5674  0691                     l366:	
  5675                           
  5676                           ;Controller.c: 212: if (lx < lxMin) lxMin = lx;
  5677  0691  084D               	movf	configureController@lxMin,w
  5678  0692  0255               	subwf	configureController@lx,w
  5679  0693  1803               	skipnc
  5680  0694  2E96               	goto	u2541
  5681  0695  2E97               	goto	u2540
  5682  0696                     u2541:	
  5683  0696  2E9B               	goto	l367
  5684  0697                     u2540:	
  5685  0697                     l2771:	
  5686  0697  0855               	movf	configureController@lx,w
  5687  0698  00CC               	movwf	??_configureController
  5688  0699  084C               	movf	??_configureController,w
  5689  069A  00CD               	movwf	configureController@lxMin
  5690  069B                     l367:	
  5691                           
  5692                           ;Controller.c: 215: if (ry > ryMax) ryMax = ry;
  5693  069B  0858               	movf	configureController@ry,w
  5694  069C  0254               	subwf	configureController@ryMax,w
  5695  069D  1803               	skipnc
  5696  069E  2EA0               	goto	u2551
  5697  069F  2EA1               	goto	u2550
  5698  06A0                     u2551:	
  5699  06A0  2EA5               	goto	l368
  5700  06A1                     u2550:	
  5701  06A1                     l2773:	
  5702  06A1  0858               	movf	configureController@ry,w
  5703  06A2  00CC               	movwf	??_configureController
  5704  06A3  084C               	movf	??_configureController,w
  5705  06A4  00D4               	movwf	configureController@ryMax
  5706  06A5                     l368:	
  5707                           
  5708                           ;Controller.c: 216: if (ry < ryMin) ryMin = ry;
  5709  06A5  0853               	movf	configureController@ryMin,w
  5710  06A6  0258               	subwf	configureController@ry,w
  5711  06A7  1803               	skipnc
  5712  06A8  2EAA               	goto	u2561
  5713  06A9  2EAB               	goto	u2560
  5714  06AA                     u2561:	
  5715  06AA  2EAF               	goto	l369
  5716  06AB                     u2560:	
  5717  06AB                     l2775:	
  5718  06AB  0858               	movf	configureController@ry,w
  5719  06AC  00CC               	movwf	??_configureController
  5720  06AD  084C               	movf	??_configureController,w
  5721  06AE  00D3               	movwf	configureController@ryMin
  5722  06AF                     l369:	
  5723                           
  5724                           ;Controller.c: 217: if (rx > rxMax) rxMax = rx;
  5725  06AF  0857               	movf	configureController@rx,w
  5726  06B0  0252               	subwf	configureController@rxMax,w
  5727  06B1  1803               	skipnc
  5728  06B2  2EB4               	goto	u2571
  5729  06B3  2EB5               	goto	u2570
  5730  06B4                     u2571:	
  5731  06B4  2EB9               	goto	l370
  5732  06B5                     u2570:	
  5733  06B5                     l2777:	
  5734  06B5  0857               	movf	configureController@rx,w
  5735  06B6  00CC               	movwf	??_configureController
  5736  06B7  084C               	movf	??_configureController,w
  5737  06B8  00D2               	movwf	configureController@rxMax
  5738  06B9                     l370:	
  5739                           
  5740                           ;Controller.c: 218: if (rx < rxMin) rxMin = rx;
  5741  06B9  0851               	movf	configureController@rxMin,w
  5742  06BA  0257               	subwf	configureController@rx,w
  5743  06BB  1803               	skipnc
  5744  06BC  2EBE               	goto	u2581
  5745  06BD  2EBF               	goto	u2580
  5746  06BE                     u2581:	
  5747  06BE  2EC3               	goto	l2781
  5748  06BF                     u2580:	
  5749  06BF                     l2779:	
  5750  06BF  0857               	movf	configureController@rx,w
  5751  06C0  00CC               	movwf	??_configureController
  5752  06C1  084C               	movf	??_configureController,w
  5753  06C2  00D1               	movwf	configureController@rxMin
  5754  06C3                     l2781:	
  5755                           
  5756                           ;Controller.c: 220: if (digitalStateFirst == 0x6F && digitalStateSecond == 0x3F) {
  5757  06C3  306F               	movlw	111
  5758  06C4  0666               	xorwf	_digitalStateFirst,w
  5759  06C5  1D03               	btfss	3,2
  5760  06C6  2EC8               	goto	u2591
  5761  06C7  2EC9               	goto	u2590
  5762  06C8                     u2591:	
  5763  06C8  2E31               	goto	l2753
  5764  06C9                     u2590:	
  5765  06C9                     l2783:	
  5766  06C9  303F               	movlw	63
  5767  06CA  0665               	xorwf	_digitalStateSecond,w
  5768  06CB  1D03               	btfss	3,2
  5769  06CC  2ECE               	goto	u2601
  5770  06CD  2ECF               	goto	u2600
  5771  06CE                     u2601:	
  5772  06CE  2E31               	goto	l2753
  5773  06CF                     u2600:	
  5774  06CF                     l2785:	
  5775                           
  5776                           ;Controller.c: 222: lxMin = 0;
  5777  06CF  01CD               	clrf	configureController@lxMin
  5778  06D0                     l2787:	
  5779                           
  5780                           ;Controller.c: 223: lxMax = 255;
  5781  06D0  30FF               	movlw	255
  5782  06D1  00CC               	movwf	??_configureController
  5783  06D2  084C               	movf	??_configureController,w
  5784  06D3  00CE               	movwf	configureController@lxMax
  5785  06D4                     l2789:	
  5786                           
  5787                           ;Controller.c: 224: lyMin = 0;
  5788  06D4  01CF               	clrf	configureController@lyMin
  5789                           
  5790                           ;Controller.c: 225: lyMax = 255;
  5791  06D5  30FF               	movlw	255
  5792  06D6  00CC               	movwf	??_configureController
  5793  06D7  084C               	movf	??_configureController,w
  5794  06D8  00D0               	movwf	configureController@lyMax
  5795  06D9                     l2791:	
  5796                           
  5797                           ;Controller.c: 226: rxMin = 0;
  5798  06D9  01D1               	clrf	configureController@rxMin
  5799  06DA                     l2793:	
  5800                           
  5801                           ;Controller.c: 227: rxMax = 255;
  5802  06DA  30FF               	movlw	255
  5803  06DB  00CC               	movwf	??_configureController
  5804  06DC  084C               	movf	??_configureController,w
  5805  06DD  00D2               	movwf	configureController@rxMax
  5806                           
  5807                           ;Controller.c: 228: ryMin = 0;
  5808  06DE  01D3               	clrf	configureController@ryMin
  5809  06DF                     l2795:	
  5810                           
  5811                           ;Controller.c: 229: ryMax = 255;
  5812  06DF  30FF               	movlw	255
  5813  06E0  00CC               	movwf	??_configureController
  5814  06E1  084C               	movf	??_configureController,w
  5815  06E2  00D4               	movwf	configureController@ryMax
  5816  06E3                     l2797:	
  5817                           ;Controller.c: 230: break;
  5818                           
  5819                           
  5820                           ;Controller.c: 231: };Controller.c: 232: };Controller.c: 234: eepromWrite(0x60, lxMin);
  5821  06E3  084D               	movf	configureController@lxMin,w
  5822  06E4  00CC               	movwf	??_configureController
  5823  06E5  084C               	movf	??_configureController,w
  5824  06E6  00A0               	movwf	eepromWrite@data
  5825  06E7  3060               	movlw	96
  5826  06E8  318D  25B3  3185   	fcall	_eepromWrite
  5827                           
  5828                           ;Controller.c: 235: eepromWrite(0x61, lxMax);
  5829  06EB  0020               	movlb	0	; select bank0
  5830  06EC  084E               	movf	configureController@lxMax,w
  5831  06ED  00CC               	movwf	??_configureController
  5832  06EE  084C               	movf	??_configureController,w
  5833  06EF  00A0               	movwf	eepromWrite@data
  5834  06F0  3061               	movlw	97
  5835  06F1  318D  25B3  3185   	fcall	_eepromWrite
  5836                           
  5837                           ;Controller.c: 236: eepromWrite(0x62, lyMin);
  5838  06F4  0020               	movlb	0	; select bank0
  5839  06F5  084F               	movf	configureController@lyMin,w
  5840  06F6  00CC               	movwf	??_configureController
  5841  06F7  084C               	movf	??_configureController,w
  5842  06F8  00A0               	movwf	eepromWrite@data
  5843  06F9  3062               	movlw	98
  5844  06FA  318D  25B3  3185   	fcall	_eepromWrite
  5845                           
  5846                           ;Controller.c: 237: eepromWrite(0x63, lyMax);
  5847  06FD  0020               	movlb	0	; select bank0
  5848  06FE  0850               	movf	configureController@lyMax,w
  5849  06FF  00CC               	movwf	??_configureController
  5850  0700  084C               	movf	??_configureController,w
  5851  0701  00A0               	movwf	eepromWrite@data
  5852  0702  3063               	movlw	99
  5853  0703  318D  25B3  3185   	fcall	_eepromWrite
  5854                           
  5855                           ;Controller.c: 238: eepromWrite(0x64, rxMin);
  5856  0706  0020               	movlb	0	; select bank0
  5857  0707  0851               	movf	configureController@rxMin,w
  5858  0708  00CC               	movwf	??_configureController
  5859  0709  084C               	movf	??_configureController,w
  5860  070A  00A0               	movwf	eepromWrite@data
  5861  070B  3064               	movlw	100
  5862  070C  318D  25B3  3185   	fcall	_eepromWrite
  5863                           
  5864                           ;Controller.c: 239: eepromWrite(0x65, rxMax);
  5865  070F  0020               	movlb	0	; select bank0
  5866  0710  0852               	movf	configureController@rxMax,w
  5867  0711  00CC               	movwf	??_configureController
  5868  0712  084C               	movf	??_configureController,w
  5869  0713  00A0               	movwf	eepromWrite@data
  5870  0714  3065               	movlw	101
  5871  0715  318D  25B3  3185   	fcall	_eepromWrite
  5872                           
  5873                           ;Controller.c: 240: eepromWrite(0x66, ryMin);
  5874  0718  0020               	movlb	0	; select bank0
  5875  0719  0853               	movf	configureController@ryMin,w
  5876  071A  00CC               	movwf	??_configureController
  5877  071B  084C               	movf	??_configureController,w
  5878  071C  00A0               	movwf	eepromWrite@data
  5879  071D  3066               	movlw	102
  5880  071E  318D  25B3  3185   	fcall	_eepromWrite
  5881                           
  5882                           ;Controller.c: 241: eepromWrite(0x67, ryMax);
  5883  0721  0020               	movlb	0	; select bank0
  5884  0722  0854               	movf	configureController@ryMax,w
  5885  0723  00CC               	movwf	??_configureController
  5886  0724  084C               	movf	??_configureController,w
  5887  0725  00A0               	movwf	eepromWrite@data
  5888  0726  3067               	movlw	103
  5889  0727  318D  25B3  3185   	fcall	_eepromWrite
  5890  072A                     l2799:	
  5891                           
  5892                           ;Controller.c: 243: lutInit();
  5893  072A  3182  2273  3185   	fcall	_lutInit
  5894  072D                     l2801:	
  5895                           
  5896                           ;Controller.c: 245: INTCONbits.GIE = 1;
  5897  072D  178B               	bsf	11,7	;volatile
  5898  072E                     l2803:	
  5899                           
  5900                           ;Controller.c: 246: INTCONbits.PEIE = 1;
  5901  072E  170B               	bsf	11,6	;volatile
  5902  072F                     l374:	
  5903  072F  0008               	return
  5904  0730                     __end_of_configureController:	
  5905                           
  5906                           	psect	text6
  5907  0464                     __ptext6:	
  5908 ;; *************** function _readController *****************
  5909 ;; Defined at:
  5910 ;;		line 16 in file "Controller.c"
  5911 ;; Parameters:    Size  Location     Type
  5912 ;;  analogMode      1    wreg     unsigned char 
  5913 ;; Auto vars:     Size  Location     Type
  5914 ;;  analogMode      1    2[BANK0 ] unsigned char 
  5915 ;; Return value:  Size  Location     Type
  5916 ;;                  1    wreg      void 
  5917 ;; Registers used:
  5918 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5919 ;; Tracked objects:
  5920 ;;		On entry : 0/0
  5921 ;;		On exit  : 0/0
  5922 ;;		Unchanged: 0/0
  5923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5925 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5926 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5927 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5928 ;;Total ram usage:        3 bytes
  5929 ;; Hardware stack levels used:    1
  5930 ;; Hardware stack levels required when called:    3
  5931 ;; This function calls:
  5932 ;;		Nothing
  5933 ;; This function is called by:
  5934 ;;		_main
  5935 ;;		_configureController
  5936 ;; This function uses a non-reentrant model
  5937 ;;
  5938                           
  5939                           
  5940                           ;psect for function _readController
  5941  0464                     _readController:	
  5942                           
  5943                           ;incstack = 0
  5944                           ; Regs used in _readController: [wreg-fsr1h+status,2+status,0]
  5945                           ;readController@analogMode stored from wreg
  5946  0464  0020               	movlb	0	; select bank0
  5947  0465  00A2               	movwf	readController@analogMode
  5948  0466                     l2593:	
  5949                           
  5950                           ;Controller.c: 19: AN_temp = RD4;
  5951  0466  3000               	movlw	0
  5952  0467  1A0F               	btfsc	15,4	;volatile
  5953  0468  3001               	movlw	1
  5954  0469  00FB               	movwf	_AN_temp
  5955  046A                     l2595:	
  5956                           
  5957                           ;Controller.c: 20: if(AN_temp ^ AN_prev) {
  5958  046A  087B               	movf	_AN_temp,w
  5959  046B  065D               	xorwf	_AN_prev,w
  5960  046C  1903               	btfsc	3,2
  5961  046D  2C6F               	goto	u2271
  5962  046E  2C70               	goto	u2270
  5963  046F                     u2271:	
  5964  046F  2C72               	goto	l2599
  5965  0470                     u2270:	
  5966  0470                     l2597:	
  5967                           
  5968                           ;Controller.c: 21: AN_timer = 0;
  5969  0470  01E8               	clrf	_AN_timer
  5970                           
  5971                           ;Controller.c: 22: }
  5972  0471  2C7C               	goto	l2603
  5973  0472                     l2599:	
  5974                           
  5975                           ;Controller.c: 23: else if(AN_timer < 4) {
  5976  0472  3004               	movlw	4
  5977  0473  0268               	subwf	_AN_timer,w
  5978  0474  1803               	skipnc
  5979  0475  2C77               	goto	u2281
  5980  0476  2C78               	goto	u2280
  5981  0477                     u2281:	
  5982  0477  2C7C               	goto	l2603
  5983  0478                     u2280:	
  5984  0478                     l2601:	
  5985                           
  5986                           ;Controller.c: 24: AN_timer++;
  5987  0478  3001               	movlw	1
  5988  0479  00A0               	movwf	??_readController
  5989  047A  0820               	movf	??_readController,w
  5990  047B  07E8               	addwf	_AN_timer,f
  5991  047C                     l2603:	
  5992                           
  5993                           ;Controller.c: 25: };Controller.c: 26: if(AN_timer > 3) AN_btn = AN_temp;
  5994  047C  3004               	movlw	4
  5995  047D  0268               	subwf	_AN_timer,w
  5996  047E  1C03               	skipc
  5997  047F  2C81               	goto	u2291
  5998  0480  2C82               	goto	u2290
  5999  0481                     u2291:	
  6000  0481  2C86               	goto	l310
  6001  0482                     u2290:	
  6002  0482                     l2605:	
  6003  0482  087B               	movf	_AN_temp,w
  6004  0483  00A0               	movwf	??_readController
  6005  0484  0820               	movf	??_readController,w
  6006  0485  00E7               	movwf	_AN_btn
  6007  0486                     l310:	
  6008                           
  6009                           ;Controller.c: 27: AN_prev = AN_temp;
  6010  0486  087B               	movf	_AN_temp,w
  6011  0487  00A0               	movwf	??_readController
  6012  0488  0820               	movf	??_readController,w
  6013  0489  00DD               	movwf	_AN_prev
  6014  048A                     l2607:	
  6015                           
  6016                           ;Controller.c: 30: DigitalControllerByte1[DDown] = RA7;
  6017  048A  3000               	movlw	0
  6018  048B  1B8C               	btfsc	12,7	;volatile
  6019  048C  3001               	movlw	1
  6020  048D  0021               	movlb	1	; select bank1
  6021  048E  00C1               	movwf	(_DigitalControllerByte1^(0+128)+1)
  6022  048F                     l2609:	
  6023                           
  6024                           ;Controller.c: 31: DigitalControllerByte1[DUp] = RA6;
  6025  048F  3000               	movlw	0
  6026  0490  0020               	movlb	0	; select bank0
  6027  0491  1B0C               	btfsc	12,6	;volatile
  6028  0492  3001               	movlw	1
  6029  0493  0021               	movlb	1	; select bank1
  6030  0494  00C3               	movwf	(_DigitalControllerByte1^(0+128)+3)
  6031  0495                     l2611:	
  6032                           
  6033                           ;Controller.c: 32: DigitalControllerByte1[DLeft] = RB0;
  6034  0495  3000               	movlw	0
  6035  0496  0020               	movlb	0	; select bank0
  6036  0497  180D               	btfsc	13,0	;volatile
  6037  0498  3001               	movlw	1
  6038  0499  0021               	movlb	1	; select bank1
  6039  049A  00C0               	movwf	_DigitalControllerByte1^(0+128)
  6040  049B                     l2613:	
  6041                           
  6042                           ;Controller.c: 33: DigitalControllerByte1[DRight] = RB1;
  6043  049B  3000               	movlw	0
  6044  049C  0020               	movlb	0	; select bank0
  6045  049D  188D               	btfsc	13,1	;volatile
  6046  049E  3001               	movlw	1
  6047  049F  0021               	movlb	1	; select bank1
  6048  04A0  00C2               	movwf	(_DigitalControllerByte1^(0+128)+2)
  6049  04A1                     l2615:	
  6050                           
  6051                           ;Controller.c: 34: DigitalControllerByte1[R3] = RD0;
  6052  04A1  3000               	movlw	0
  6053  04A2  0020               	movlb	0	; select bank0
  6054  04A3  180F               	btfsc	15,0	;volatile
  6055  04A4  3001               	movlw	1
  6056  04A5  0021               	movlb	1	; select bank1
  6057  04A6  00C5               	movwf	(_DigitalControllerByte1^(0+128)+5)
  6058  04A7                     l2617:	
  6059                           
  6060                           ;Controller.c: 35: DigitalControllerByte1[L3] = RC2;
  6061  04A7  3000               	movlw	0
  6062  04A8  0020               	movlb	0	; select bank0
  6063  04A9  190E               	btfsc	14,2	;volatile
  6064  04AA  3001               	movlw	1
  6065  04AB  0021               	movlb	1	; select bank1
  6066  04AC  00C6               	movwf	(_DigitalControllerByte1^(0+128)+6)
  6067  04AD                     l2619:	
  6068                           
  6069                           ;Controller.c: 36: DigitalControllerByte1[Start] = RB6;
  6070  04AD  3000               	movlw	0
  6071  04AE  0020               	movlb	0	; select bank0
  6072  04AF  1B0D               	btfsc	13,6	;volatile
  6073  04B0  3001               	movlw	1
  6074  04B1  0021               	movlb	1	; select bank1
  6075  04B2  00C4               	movwf	(_DigitalControllerByte1^(0+128)+4)
  6076  04B3                     l2621:	
  6077                           
  6078                           ;Controller.c: 37: DigitalControllerByte1[Select] = RB7;
  6079  04B3  3000               	movlw	0
  6080  04B4  0020               	movlb	0	; select bank0
  6081  04B5  1B8D               	btfsc	13,7	;volatile
  6082  04B6  3001               	movlw	1
  6083  04B7  0021               	movlb	1	; select bank1
  6084  04B8  00C7               	movwf	(_DigitalControllerByte1^(0+128)+7)
  6085  04B9                     l2623:	
  6086                           
  6087                           ;Controller.c: 39: DigitalControllerByte2[Square] = RA0;
  6088  04B9  3000               	movlw	0
  6089  04BA  0020               	movlb	0	; select bank0
  6090  04BB  180C               	btfsc	12,0	;volatile
  6091  04BC  3001               	movlw	1
  6092  04BD  0021               	movlb	1	; select bank1
  6093  04BE  00B8               	movwf	_DigitalControllerByte2^(0+128)
  6094  04BF                     l2625:	
  6095                           
  6096                           ;Controller.c: 40: DigitalControllerByte2[Circle] = RA3;
  6097  04BF  3000               	movlw	0
  6098  04C0  0020               	movlb	0	; select bank0
  6099  04C1  198C               	btfsc	12,3	;volatile
  6100  04C2  3001               	movlw	1
  6101  04C3  0021               	movlb	1	; select bank1
  6102  04C4  00BA               	movwf	(_DigitalControllerByte2^(0+128)+2)
  6103  04C5                     l2627:	
  6104                           
  6105                           ;Controller.c: 41: DigitalControllerByte2[X] = RA2;
  6106  04C5  3000               	movlw	0
  6107  04C6  0020               	movlb	0	; select bank0
  6108  04C7  190C               	btfsc	12,2	;volatile
  6109  04C8  3001               	movlw	1
  6110  04C9  0021               	movlb	1	; select bank1
  6111  04CA  00B9               	movwf	(_DigitalControllerByte2^(0+128)+1)
  6112  04CB                     l2629:	
  6113                           
  6114                           ;Controller.c: 42: DigitalControllerByte2[Triangle] = RA1;
  6115  04CB  3000               	movlw	0
  6116  04CC  0020               	movlb	0	; select bank0
  6117  04CD  188C               	btfsc	12,1	;volatile
  6118  04CE  3001               	movlw	1
  6119  04CF  0021               	movlb	1	; select bank1
  6120  04D0  00BB               	movwf	(_DigitalControllerByte2^(0+128)+3)
  6121  04D1                     l2631:	
  6122                           
  6123                           ;Controller.c: 43: DigitalControllerByte2[R1] = RB4;
  6124  04D1  3000               	movlw	0
  6125  04D2  0020               	movlb	0	; select bank0
  6126  04D3  1A0D               	btfsc	13,4	;volatile
  6127  04D4  3001               	movlw	1
  6128  04D5  0021               	movlb	1	; select bank1
  6129  04D6  00BC               	movwf	(_DigitalControllerByte2^(0+128)+4)
  6130  04D7                     l2633:	
  6131                           
  6132                           ;Controller.c: 44: DigitalControllerByte2[R2] = RB5;
  6133  04D7  3000               	movlw	0
  6134  04D8  0020               	movlb	0	; select bank0
  6135  04D9  1A8D               	btfsc	13,5	;volatile
  6136  04DA  3001               	movlw	1
  6137  04DB  0021               	movlb	1	; select bank1
  6138  04DC  00BE               	movwf	(_DigitalControllerByte2^(0+128)+6)
  6139  04DD                     l2635:	
  6140                           
  6141                           ;Controller.c: 45: DigitalControllerByte2[L1] = RB2;
  6142  04DD  3000               	movlw	0
  6143  04DE  0020               	movlb	0	; select bank0
  6144  04DF  190D               	btfsc	13,2	;volatile
  6145  04E0  3001               	movlw	1
  6146  04E1  0021               	movlb	1	; select bank1
  6147  04E2  00BD               	movwf	(_DigitalControllerByte2^(0+128)+5)
  6148  04E3                     l2637:	
  6149                           
  6150                           ;Controller.c: 46: DigitalControllerByte2[L2] = RB3;
  6151  04E3  3000               	movlw	0
  6152  04E4  0020               	movlb	0	; select bank0
  6153  04E5  198D               	btfsc	13,3	;volatile
  6154  04E6  3001               	movlw	1
  6155  04E7  0021               	movlb	1	; select bank1
  6156  04E8  00BF               	movwf	(_DigitalControllerByte2^(0+128)+7)
  6157                           
  6158                           ;Controller.c: 49: if (index > Select) index = 0;
  6159  04E9  3008               	movlw	8
  6160  04EA  027A               	subwf	_index,w
  6161  04EB  1C03               	skipc
  6162  04EC  2CEE               	goto	u2301
  6163  04ED  2CEF               	goto	u2300
  6164  04EE                     u2301:	
  6165  04EE  2CF0               	goto	l2641
  6166  04EF                     u2300:	
  6167  04EF                     l2639:	
  6168  04EF  01FA               	clrf	_index
  6169  04F0                     l2641:	
  6170                           
  6171                           ;Controller.c: 52: if (!DigitalControllerByte1[index]) IndexDigitalByte1[index]++;
  6172  04F0  087A               	movf	_index,w
  6173  04F1  3EC0               	addlw	(low (_DigitalControllerByte1| 0))& (0+255)
  6174  04F2  0086               	movwf	6
  6175  04F3  0187               	clrf	7
  6176  04F4  0801               	movf	1,w
  6177  04F5  1D03               	btfss	3,2
  6178  04F6  2CF8               	goto	u2311
  6179  04F7  2CF9               	goto	u2310
  6180  04F8                     u2311:	
  6181  04F8  2D02               	goto	l312
  6182  04F9                     u2310:	
  6183  04F9                     l2643:	
  6184  04F9  3001               	movlw	1
  6185  04FA  0020               	movlb	0	; select bank0
  6186  04FB  00A0               	movwf	??_readController
  6187  04FC  087A               	movf	_index,w
  6188  04FD  3EA8               	addlw	(low (_IndexDigitalByte1| 0))& (0+255)
  6189  04FE  0086               	movwf	6
  6190  04FF  0187               	clrf	7
  6191  0500  0820               	movf	??_readController,w
  6192  0501  0781               	addwf	1,f
  6193  0502                     l312:	
  6194                           
  6195                           ;Controller.c: 53: if (!DigitalControllerByte2[index]) IndexDigitalByte2[index]++;
  6196  0502  087A               	movf	_index,w
  6197  0503  3EB8               	addlw	(low (_DigitalControllerByte2| 0))& (0+255)
  6198  0504  0086               	movwf	6
  6199  0505  0187               	clrf	7
  6200  0506  0801               	movf	1,w
  6201  0507  1D03               	btfss	3,2
  6202  0508  2D0A               	goto	u2321
  6203  0509  2D0B               	goto	u2320
  6204  050A                     u2321:	
  6205  050A  2D14               	goto	l2647
  6206  050B                     u2320:	
  6207  050B                     l2645:	
  6208  050B  3001               	movlw	1
  6209  050C  0020               	movlb	0	; select bank0
  6210  050D  00A0               	movwf	??_readController
  6211  050E  087A               	movf	_index,w
  6212  050F  3EA0               	addlw	(low (_IndexDigitalByte2| 0))& (0+255)
  6213  0510  0086               	movwf	6
  6214  0511  0187               	clrf	7
  6215  0512  0820               	movf	??_readController,w
  6216  0513  0781               	addwf	1,f
  6217  0514                     l2647:	
  6218                           
  6219                           ;Controller.c: 56: if (DigitalControllerByte1[index] ^ PreviousDigitalByte1[index]) {
  6220  0514  087A               	movf	_index,w
  6221  0515  3EB0               	addlw	(low (_PreviousDigitalByte1| 0))& (0+255)
  6222  0516  0086               	movwf	6
  6223  0517  0187               	clrf	7
  6224  0518  087A               	movf	_index,w
  6225  0519  3EC0               	addlw	(low (_DigitalControllerByte1| 0))& (0+255)
  6226  051A  0084               	movwf	4
  6227  051B  0185               	clrf	5
  6228  051C  0800               	movf	0,w
  6229  051D  0601               	xorwf	1,w
  6230  051E  1903               	btfsc	3,2
  6231  051F  2D21               	goto	u2331
  6232  0520  2D22               	goto	u2330
  6233  0521                     u2331:	
  6234  0521  2D3D               	goto	l2657
  6235  0522                     u2330:	
  6236  0522                     l2649:	
  6237                           
  6238                           ;Controller.c: 57: IndexDigitalByte1[index] = 0;
  6239  0522  087A               	movf	_index,w
  6240  0523  3EA8               	addlw	(low (_IndexDigitalByte1| 0))& (0+255)
  6241  0524  0086               	movwf	6
  6242  0525  0187               	clrf	7
  6243  0526  0181               	clrf	1
  6244  0527                     l2651:	
  6245                           
  6246                           ;Controller.c: 58: digitalStateFirst |= 1 << index;
  6247  0527  3001               	movlw	1
  6248  0528  0020               	movlb	0	; select bank0
  6249  0529  00A0               	movwf	??_readController
  6250  052A  0A7A               	incf	_index,w
  6251  052B  2D2D               	goto	u2344
  6252  052C                     u2345:	
  6253  052C  35A0               	lslf	??_readController,f
  6254  052D                     u2344:	
  6255  052D  0B89               	decfsz	9,f
  6256  052E  2D2C               	goto	u2345
  6257  052F  0820               	movf	??_readController,w
  6258  0530  00A1               	movwf	??_readController+1
  6259  0531  0821               	movf	??_readController+1,w
  6260  0532  04E6               	iorwf	_digitalStateFirst,f
  6261  0533                     l2653:	
  6262                           
  6263                           ;Controller.c: 59: if (analogMode >= 1) analogStateFirst[index] = 0x00;
  6264  0533  0822               	movf	readController@analogMode,w
  6265  0534  1903               	btfsc	3,2
  6266  0535  2D37               	goto	u2351
  6267  0536  2D38               	goto	u2350
  6268  0537                     u2351:	
  6269  0537  2D3D               	goto	l2657
  6270  0538                     u2350:	
  6271  0538                     l2655:	
  6272  0538  087A               	movf	_index,w
  6273  0539  3ED0               	addlw	(low (_analogStateFirst| 0))& (0+255)
  6274  053A  0086               	movwf	6
  6275  053B  0187               	clrf	7
  6276  053C  0181               	clrf	1
  6277  053D                     l2657:	
  6278                           
  6279                           ;Controller.c: 60: };Controller.c: 61: if (DigitalControllerByte2[index] ^ PreviousDigit
      +                          alByte2[index]) {
  6280  053D  087A               	movf	_index,w
  6281  053E  3E20               	addlw	(low (_PreviousDigitalByte2| (0+256)))& (0+255)
  6282  053F  0086               	movwf	6
  6283  0540  3001               	movlw	1	; select bank2/3
  6284  0541  0087               	movwf	7
  6285  0542  087A               	movf	_index,w
  6286  0543  3EB8               	addlw	(low (_DigitalControllerByte2| 0))& (0+255)
  6287  0544  0084               	movwf	4
  6288  0545  0185               	clrf	5
  6289  0546  0800               	movf	0,w
  6290  0547  0601               	xorwf	1,w
  6291  0548  1903               	btfsc	3,2
  6292  0549  2D4B               	goto	u2361
  6293  054A  2D4C               	goto	u2360
  6294  054B                     u2361:	
  6295  054B  2D67               	goto	l316
  6296  054C                     u2360:	
  6297  054C                     l2659:	
  6298                           
  6299                           ;Controller.c: 62: IndexDigitalByte2[index] = 0;
  6300  054C  087A               	movf	_index,w
  6301  054D  3EA0               	addlw	(low (_IndexDigitalByte2| 0))& (0+255)
  6302  054E  0086               	movwf	6
  6303  054F  0187               	clrf	7
  6304  0550  0181               	clrf	1
  6305  0551                     l2661:	
  6306                           
  6307                           ;Controller.c: 63: digitalStateSecond |= 1 << index;
  6308  0551  3001               	movlw	1
  6309  0552  0020               	movlb	0	; select bank0
  6310  0553  00A0               	movwf	??_readController
  6311  0554  0A7A               	incf	_index,w
  6312  0555  2D57               	goto	u2374
  6313  0556                     u2375:	
  6314  0556  35A0               	lslf	??_readController,f
  6315  0557                     u2374:	
  6316  0557  0B89               	decfsz	9,f
  6317  0558  2D56               	goto	u2375
  6318  0559  0820               	movf	??_readController,w
  6319  055A  00A1               	movwf	??_readController+1
  6320  055B  0821               	movf	??_readController+1,w
  6321  055C  04E5               	iorwf	_digitalStateSecond,f
  6322  055D                     l2663:	
  6323                           
  6324                           ;Controller.c: 64: if (analogMode >= 1) analogStateSecond[index] = 0x00;
  6325  055D  0822               	movf	readController@analogMode,w
  6326  055E  1903               	btfsc	3,2
  6327  055F  2D61               	goto	u2381
  6328  0560  2D62               	goto	u2380
  6329  0561                     u2381:	
  6330  0561  2D67               	goto	l316
  6331  0562                     u2380:	
  6332  0562                     l2665:	
  6333  0562  087A               	movf	_index,w
  6334  0563  3EC8               	addlw	(low (_analogStateSecond| 0))& (0+255)
  6335  0564  0086               	movwf	6
  6336  0565  0187               	clrf	7
  6337  0566  0181               	clrf	1
  6338  0567                     l316:	
  6339  0567  087A               	movf	_index,w
  6340  0568  3EA8               	addlw	(low (_IndexDigitalByte1| 0))& (0+255)
  6341  0569  0086               	movwf	6
  6342  056A  0187               	clrf	7
  6343  056B  3003               	movlw	3
  6344  056C  0201               	subwf	1,w
  6345  056D  1C03               	skipc
  6346  056E  2D70               	goto	u2391
  6347  056F  2D71               	goto	u2390
  6348  0570                     u2391:	
  6349  0570  2D8B               	goto	l318
  6350  0571                     u2390:	
  6351  0571                     l2667:	
  6352                           
  6353                           ;Controller.c: 69: digitalStateFirst &= ~(1 << index);
  6354  0571  3001               	movlw	1
  6355  0572  0020               	movlb	0	; select bank0
  6356  0573  00A0               	movwf	??_readController
  6357  0574  0A7A               	incf	_index,w
  6358  0575  2D77               	goto	u2404
  6359  0576                     u2405:	
  6360  0576  35A0               	lslf	??_readController,f
  6361  0577                     u2404:	
  6362  0577  0B89               	decfsz	9,f
  6363  0578  2D76               	goto	u2405
  6364  0579  0820               	movf	??_readController,w
  6365  057A  3AFF               	xorlw	255
  6366  057B  00A1               	movwf	??_readController+1
  6367  057C  0821               	movf	??_readController+1,w
  6368  057D  05E6               	andwf	_digitalStateFirst,f
  6369                           
  6370                           ;Controller.c: 70: if (analogMode >= 1) analogStateFirst[index] = 0xFF;
  6371  057E  0822               	movf	readController@analogMode,w
  6372  057F  1903               	btfsc	3,2
  6373  0580  2D82               	goto	u2411
  6374  0581  2D83               	goto	u2410
  6375  0582                     u2411:	
  6376  0582  2D8B               	goto	l318
  6377  0583                     u2410:	
  6378  0583                     l2669:	
  6379  0583  30FF               	movlw	255
  6380  0584  00A0               	movwf	??_readController
  6381  0585  087A               	movf	_index,w
  6382  0586  3ED0               	addlw	(low (_analogStateFirst| 0))& (0+255)
  6383  0587  0086               	movwf	6
  6384  0588  0187               	clrf	7
  6385  0589  0820               	movf	??_readController,w
  6386  058A  0081               	movwf	1
  6387  058B                     l318:	
  6388  058B  087A               	movf	_index,w
  6389  058C  3EA0               	addlw	(low (_IndexDigitalByte2| 0))& (0+255)
  6390  058D  0086               	movwf	6
  6391  058E  0187               	clrf	7
  6392  058F  3003               	movlw	3
  6393  0590  0201               	subwf	1,w
  6394  0591  1C03               	skipc
  6395  0592  2D94               	goto	u2421
  6396  0593  2D95               	goto	u2420
  6397  0594                     u2421:	
  6398  0594  2DAF               	goto	l320
  6399  0595                     u2420:	
  6400  0595                     l2671:	
  6401                           
  6402                           ;Controller.c: 73: digitalStateSecond &= ~(1 << index);
  6403  0595  3001               	movlw	1
  6404  0596  0020               	movlb	0	; select bank0
  6405  0597  00A0               	movwf	??_readController
  6406  0598  0A7A               	incf	_index,w
  6407  0599  2D9B               	goto	u2434
  6408  059A                     u2435:	
  6409  059A  35A0               	lslf	??_readController,f
  6410  059B                     u2434:	
  6411  059B  0B89               	decfsz	9,f
  6412  059C  2D9A               	goto	u2435
  6413  059D  0820               	movf	??_readController,w
  6414  059E  3AFF               	xorlw	255
  6415  059F  00A1               	movwf	??_readController+1
  6416  05A0  0821               	movf	??_readController+1,w
  6417  05A1  05E5               	andwf	_digitalStateSecond,f
  6418                           
  6419                           ;Controller.c: 74: if (analogMode >= 1) analogStateSecond[index] = 0xFF;
  6420  05A2  0822               	movf	readController@analogMode,w
  6421  05A3  1903               	btfsc	3,2
  6422  05A4  2DA6               	goto	u2441
  6423  05A5  2DA7               	goto	u2440
  6424  05A6                     u2441:	
  6425  05A6  2DAF               	goto	l320
  6426  05A7                     u2440:	
  6427  05A7                     l2673:	
  6428  05A7  30FF               	movlw	255
  6429  05A8  00A0               	movwf	??_readController
  6430  05A9  087A               	movf	_index,w
  6431  05AA  3EC8               	addlw	(low (_analogStateSecond| 0))& (0+255)
  6432  05AB  0086               	movwf	6
  6433  05AC  0187               	clrf	7
  6434  05AD  0820               	movf	??_readController,w
  6435  05AE  0081               	movwf	1
  6436  05AF                     l320:	
  6437                           
  6438                           ;Controller.c: 75: };Controller.c: 78: PreviousDigitalByte1[index] = DigitalControllerBy
      +                          te1[index];
  6439  05AF  087A               	movf	_index,w
  6440  05B0  3EC0               	addlw	(low (_DigitalControllerByte1| 0))& (0+255)
  6441  05B1  0086               	movwf	6
  6442  05B2  0187               	clrf	7
  6443  05B3  0801               	movf	1,w
  6444  05B4  0020               	movlb	0	; select bank0
  6445  05B5  00A0               	movwf	??_readController
  6446  05B6  087A               	movf	_index,w
  6447  05B7  3EB0               	addlw	(low (_PreviousDigitalByte1| 0))& (0+255)
  6448  05B8  0086               	movwf	6
  6449  05B9  0187               	clrf	7
  6450  05BA  0820               	movf	??_readController,w
  6451  05BB  0081               	movwf	1
  6452                           
  6453                           ;Controller.c: 79: PreviousDigitalByte2[index] = DigitalControllerByte2[index];
  6454  05BC  087A               	movf	_index,w
  6455  05BD  3EB8               	addlw	(low (_DigitalControllerByte2| 0))& (0+255)
  6456  05BE  0086               	movwf	6
  6457  05BF  0187               	clrf	7
  6458  05C0  0801               	movf	1,w
  6459  05C1  00A0               	movwf	??_readController
  6460  05C2  087A               	movf	_index,w
  6461  05C3  3E20               	addlw	(low (_PreviousDigitalByte2| (0+256)))& (0+255)
  6462  05C4  0086               	movwf	6
  6463  05C5  3001               	movlw	1	; select bank2/3
  6464  05C6  0087               	movwf	7
  6465  05C7  0820               	movf	??_readController,w
  6466  05C8  0081               	movwf	1
  6467  05C9                     l2675:	
  6468                           
  6469                           ;Controller.c: 81: index++;
  6470  05C9  3001               	movlw	1
  6471  05CA  00A0               	movwf	??_readController
  6472  05CB  0820               	movf	??_readController,w
  6473  05CC  07FA               	addwf	_index,f
  6474  05CD                     l322:	
  6475  05CD  0008               	return
  6476  05CE                     __end_of_readController:	
  6477                           
  6478                           	psect	text7
  6479  0DD8                     __ptext7:	
  6480 ;; *************** function _readADC *****************
  6481 ;; Defined at:
  6482 ;;		line 146 in file "Controller.c"
  6483 ;; Parameters:    Size  Location     Type
  6484 ;;  channel         2    0[BANK0 ] int 
  6485 ;; Auto vars:     Size  Location     Type
  6486 ;;		None
  6487 ;; Return value:  Size  Location     Type
  6488 ;;                  2    0[BANK0 ] unsigned int 
  6489 ;; Registers used:
  6490 ;;		wreg, status,2, status,0
  6491 ;; Tracked objects:
  6492 ;;		On entry : 0/0
  6493 ;;		On exit  : 0/0
  6494 ;;		Unchanged: 0/0
  6495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6496 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6498 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6499 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6500 ;;Total ram usage:        9 bytes
  6501 ;; Hardware stack levels used:    1
  6502 ;; Hardware stack levels required when called:    3
  6503 ;; This function calls:
  6504 ;;		Nothing
  6505 ;; This function is called by:
  6506 ;;		_readControllerAnalog
  6507 ;;		_configureController
  6508 ;; This function uses a non-reentrant model
  6509 ;;
  6510                           
  6511                           
  6512                           ;psect for function _readADC
  6513  0DD8                     _readADC:	
  6514  0DD8                     l2677:	
  6515                           ;incstack = 0
  6516                           ; Regs used in _readADC: [wreg+status,2+status,0]
  6517                           
  6518                           
  6519                           ;Controller.c: 147: ADPCH = channel;
  6520  0DD8  0020               	movlb	0	; select bank0
  6521  0DD9  0820               	movf	readADC@channel,w
  6522  0DDA  0021               	movlb	1	; select bank1
  6523  0DDB  009E               	movwf	30	;volatile
  6524  0DDC                     l2679:	
  6525                           
  6526                           ;Controller.c: 148: ADPRE = 0x00;
  6527  0DDC  019C               	clrf	28	;volatile
  6528  0DDD                     l2681:	
  6529                           
  6530                           ;Controller.c: 149: ADACQ = 0x3F;
  6531  0DDD  303F               	movlw	63
  6532  0DDE  009D               	movwf	29	;volatile
  6533  0DDF                     l2683:	
  6534                           
  6535                           ;Controller.c: 151: ADCON0bits.ADGO = 1;
  6536  0DDF  1413               	bsf	19,0	;volatile
  6537  0DE0                     l349:	
  6538                           ;Controller.c: 152: while (ADCON0bits.ADGO);
  6539                           
  6540  0DE0  1813               	btfsc	19,0	;volatile
  6541  0DE1  2DE3               	goto	u2451
  6542  0DE2  2DE4               	goto	u2450
  6543  0DE3                     u2451:	
  6544  0DE3  2DE0               	goto	l349
  6545  0DE4                     u2450:	
  6546  0DE4                     l2685:	
  6547                           
  6548                           ;Controller.c: 154: return ((ADRESH << 6) | (ADRESL >> 2));
  6549  0DE4  080C               	movf	12,w	;volatile
  6550  0DE5  0020               	movlb	0	; select bank0
  6551  0DE6  00A2               	movwf	??_readADC
  6552  0DE7  3002               	movlw	2
  6553  0DE8                     u2465:	
  6554  0DE8  36A2               	lsrf	??_readADC,f
  6555  0DE9  0B89               	decfsz	9,f
  6556  0DEA  2DE8               	goto	u2465
  6557  0DEB  0822               	movf	??_readADC,w
  6558  0DEC  00A3               	movwf	??_readADC+1
  6559  0DED  01A4               	clrf	??_readADC+2
  6560  0DEE  0021               	movlb	1	; select bank1
  6561  0DEF  080D               	movf	13,w	;volatile
  6562  0DF0  0020               	movlb	0	; select bank0
  6563  0DF1  00A5               	movwf	??_readADC+3
  6564  0DF2  01A6               	clrf	??_readADC+4
  6565  0DF3  3006               	movlw	6
  6566  0DF4                     u2475:	
  6567  0DF4  35A5               	lslf	??_readADC+3,f
  6568  0DF5  0DA6               	rlf	??_readADC+4,f
  6569  0DF6  0B89               	decfsz	9,f
  6570  0DF7  2DF4               	goto	u2475
  6571  0DF8  0823               	movf	??_readADC+1,w
  6572  0DF9  0425               	iorwf	??_readADC+3,w
  6573  0DFA  00A7               	movwf	??_readADC+5
  6574  0DFB  0824               	movf	??_readADC+2,w
  6575  0DFC  0426               	iorwf	??_readADC+4,w
  6576  0DFD  00A8               	movwf	??_readADC+6
  6577  0DFE  0827               	movf	??_readADC+5,w
  6578  0DFF  00A0               	movwf	?_readADC
  6579  0E00  0828               	movf	??_readADC+6,w
  6580  0E01  00A1               	movwf	?_readADC+1
  6581  0E02                     l352:	
  6582  0E02  0008               	return
  6583  0E03                     __end_of_readADC:	
  6584                           
  6585                           	psect	text8
  6586  0273                     __ptext8:	
  6587 ;; *************** function _lutInit *****************
  6588 ;; Defined at:
  6589 ;;		line 89 in file "Controller.c"
  6590 ;; Parameters:    Size  Location     Type
  6591 ;;		None
  6592 ;; Auto vars:     Size  Location     Type
  6593 ;;  position        2   42[BANK0 ] int 
  6594 ;;  ryMax           1   41[BANK0 ] unsigned char 
  6595 ;;  ryMin           1   40[BANK0 ] unsigned char 
  6596 ;;  rxMax           1   39[BANK0 ] unsigned char 
  6597 ;;  rxMin           1   38[BANK0 ] unsigned char 
  6598 ;;  lyMax           1   37[BANK0 ] unsigned char 
  6599 ;;  lyMin           1   36[BANK0 ] unsigned char 
  6600 ;;  lxMax           1   35[BANK0 ] unsigned char 
  6601 ;;  lxMin           1   34[BANK0 ] unsigned char 
  6602 ;; Return value:  Size  Location     Type
  6603 ;;                  1    wreg      void 
  6604 ;; Registers used:
  6605 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6606 ;; Tracked objects:
  6607 ;;		On entry : 0/0
  6608 ;;		On exit  : 0/0
  6609 ;;		Unchanged: 0/0
  6610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6612 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6613 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6614 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6615 ;;Total ram usage:       19 bytes
  6616 ;; Hardware stack levels used:    1
  6617 ;; Hardware stack levels required when called:    5
  6618 ;; This function calls:
  6619 ;;		_Map
  6620 ;;		_eepromRead
  6621 ;; This function is called by:
  6622 ;;		_main
  6623 ;;		_configureController
  6624 ;; This function uses a non-reentrant model
  6625 ;;
  6626                           
  6627                           
  6628                           ;psect for function _lutInit
  6629  0273                     _lutInit:	
  6630  0273                     l2541:	
  6631                           ;incstack = 0
  6632                           ; Regs used in _lutInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6633                           
  6634                           
  6635                           ;Controller.c: 91: char lxMin = eepromRead(0x60);
  6636  0273  3060               	movlw	96
  6637  0274  318D  2523  3182   	fcall	_eepromRead
  6638  0277  0020               	movlb	0	; select bank0
  6639  0278  00B9               	movwf	??_lutInit
  6640  0279  0839               	movf	??_lutInit,w
  6641  027A  00C2               	movwf	lutInit@lxMin
  6642                           
  6643                           ;Controller.c: 92: char lxMax = eepromRead(0x61);
  6644  027B  3061               	movlw	97
  6645  027C  318D  2523  3182   	fcall	_eepromRead
  6646  027F  0020               	movlb	0	; select bank0
  6647  0280  00B9               	movwf	??_lutInit
  6648  0281  0839               	movf	??_lutInit,w
  6649  0282  00C3               	movwf	lutInit@lxMax
  6650                           
  6651                           ;Controller.c: 93: char lyMin = eepromRead(0x62);
  6652  0283  3062               	movlw	98
  6653  0284  318D  2523  3182   	fcall	_eepromRead
  6654  0287  0020               	movlb	0	; select bank0
  6655  0288  00B9               	movwf	??_lutInit
  6656  0289  0839               	movf	??_lutInit,w
  6657  028A  00C4               	movwf	lutInit@lyMin
  6658                           
  6659                           ;Controller.c: 94: char lyMax = eepromRead(0x63);
  6660  028B  3063               	movlw	99
  6661  028C  318D  2523  3182   	fcall	_eepromRead
  6662  028F  0020               	movlb	0	; select bank0
  6663  0290  00B9               	movwf	??_lutInit
  6664  0291  0839               	movf	??_lutInit,w
  6665  0292  00C5               	movwf	lutInit@lyMax
  6666                           
  6667                           ;Controller.c: 96: char rxMin = eepromRead(0x64);
  6668  0293  3064               	movlw	100
  6669  0294  318D  2523  3182   	fcall	_eepromRead
  6670  0297  0020               	movlb	0	; select bank0
  6671  0298  00B9               	movwf	??_lutInit
  6672  0299  0839               	movf	??_lutInit,w
  6673  029A  00C6               	movwf	lutInit@rxMin
  6674                           
  6675                           ;Controller.c: 97: char rxMax = eepromRead(0x65);
  6676  029B  3065               	movlw	101
  6677  029C  318D  2523  3182   	fcall	_eepromRead
  6678  029F  0020               	movlb	0	; select bank0
  6679  02A0  00B9               	movwf	??_lutInit
  6680  02A1  0839               	movf	??_lutInit,w
  6681  02A2  00C7               	movwf	lutInit@rxMax
  6682                           
  6683                           ;Controller.c: 98: char ryMin = eepromRead(0x66);
  6684  02A3  3066               	movlw	102
  6685  02A4  318D  2523  3182   	fcall	_eepromRead
  6686  02A7  0020               	movlb	0	; select bank0
  6687  02A8  00B9               	movwf	??_lutInit
  6688  02A9  0839               	movf	??_lutInit,w
  6689  02AA  00C8               	movwf	lutInit@ryMin
  6690                           
  6691                           ;Controller.c: 99: char ryMax = eepromRead(0x67);
  6692  02AB  3067               	movlw	103
  6693  02AC  318D  2523  3182   	fcall	_eepromRead
  6694  02AF  0020               	movlb	0	; select bank0
  6695  02B0  00B9               	movwf	??_lutInit
  6696  02B1  0839               	movf	??_lutInit,w
  6697  02B2  00C9               	movwf	lutInit@ryMax
  6698  02B3                     l2543:	
  6699                           
  6700                           ;Controller.c: 101: for (int position = 0; position < 256; position++) {
  6701  02B3  01CA               	clrf	lutInit@position
  6702  02B4  01CB               	clrf	lutInit@position+1
  6703  02B5                     l2549:	
  6704                           
  6705                           ;Controller.c: 104: if (position < lxMin) {
  6706  02B5  0020               	movlb	0	; select bank0
  6707  02B6  084B               	movf	lutInit@position+1,w
  6708  02B7  3A80               	xorlw	128
  6709  02B8  00B9               	movwf	??_lutInit
  6710  02B9  3080               	movlw	128
  6711  02BA  0239               	subwf	??_lutInit,w
  6712  02BB  1D03               	skipz
  6713  02BC  2ABF               	goto	u2185
  6714  02BD  0842               	movf	lutInit@lxMin,w
  6715  02BE  024A               	subwf	lutInit@position,w
  6716  02BF                     u2185:	
  6717  02BF  1803               	skipnc
  6718  02C0  2AC2               	goto	u2181
  6719  02C1  2AC3               	goto	u2180
  6720  02C2                     u2181:	
  6721  02C2  2AD0               	goto	l2553
  6722  02C3                     u2180:	
  6723  02C3                     l2551:	
  6724                           
  6725                           ;Controller.c: 105: lutLX[position] = 0;
  6726  02C3  30F0               	movlw	240
  6727  02C4  0020               	movlb	0	; select bank0
  6728  02C5  00B9               	movwf	??_lutInit
  6729  02C6  3026               	movlw	38
  6730  02C7  00BA               	movwf	??_lutInit+1
  6731  02C8  084A               	movf	lutInit@position,w
  6732  02C9  0739               	addwf	??_lutInit,w
  6733  02CA  0086               	movwf	6
  6734  02CB  084B               	movf	lutInit@position+1,w
  6735  02CC  3D3A               	addwfc	??_lutInit+1,w
  6736  02CD  0087               	movwf	7
  6737  02CE  0181               	clrf	1
  6738                           
  6739                           ;Controller.c: 106: } else if (position > lxMax) {
  6740  02CF  2B1D               	goto	l2559
  6741  02D0                     l2553:	
  6742  02D0  0020               	movlb	0	; select bank0
  6743  02D1  084B               	movf	lutInit@position+1,w
  6744  02D2  3A80               	xorlw	128
  6745  02D3  3C80               	sublw	128
  6746  02D4  1D03               	skipz
  6747  02D5  2AD8               	goto	u2195
  6748  02D6  084A               	movf	lutInit@position,w
  6749  02D7  0243               	subwf	lutInit@lxMax,w
  6750  02D8                     u2195:	
  6751  02D8  1803               	skipnc
  6752  02D9  2ADB               	goto	u2191
  6753  02DA  2ADC               	goto	u2190
  6754  02DB                     u2191:	
  6755  02DB  2AEE               	goto	l2557
  6756  02DC                     u2190:	
  6757  02DC                     l2555:	
  6758                           
  6759                           ;Controller.c: 107: lutLX[position] = 255;
  6760  02DC  30F0               	movlw	240
  6761  02DD  0020               	movlb	0	; select bank0
  6762  02DE  00B9               	movwf	??_lutInit
  6763  02DF  3026               	movlw	38
  6764  02E0  00BA               	movwf	??_lutInit+1
  6765  02E1  084A               	movf	lutInit@position,w
  6766  02E2  0739               	addwf	??_lutInit,w
  6767  02E3  00BB               	movwf	??_lutInit+2
  6768  02E4  084B               	movf	lutInit@position+1,w
  6769  02E5  3D3A               	addwfc	??_lutInit+1,w
  6770  02E6  00BC               	movwf	??_lutInit+3
  6771  02E7  083B               	movf	??_lutInit+2,w
  6772  02E8  0086               	movwf	6
  6773  02E9  083C               	movf	??_lutInit+3,w
  6774  02EA  0087               	movwf	7
  6775  02EB  30FF               	movlw	255
  6776  02EC  0081               	movwf	1
  6777                           
  6778                           ;Controller.c: 109: } else {
  6779  02ED  2B1D               	goto	l2559
  6780  02EE                     l2557:	
  6781                           
  6782                           ;Controller.c: 110: lutLX[position] = Map(position, lxMin, lxMax, 0, 255);
  6783  02EE  0020               	movlb	0	; select bank0
  6784  02EF  084B               	movf	lutInit@position+1,w
  6785  02F0  00B0               	movwf	Map@x+1
  6786  02F1  084A               	movf	lutInit@position,w
  6787  02F2  00AF               	movwf	Map@x
  6788  02F3  0842               	movf	lutInit@lxMin,w
  6789  02F4  00B9               	movwf	??_lutInit
  6790  02F5  01BA               	clrf	??_lutInit+1
  6791  02F6  0839               	movf	??_lutInit,w
  6792  02F7  00B1               	movwf	Map@inMin
  6793  02F8  083A               	movf	??_lutInit+1,w
  6794  02F9  00B2               	movwf	Map@inMin+1
  6795  02FA  0843               	movf	lutInit@lxMax,w
  6796  02FB  00BB               	movwf	??_lutInit+2
  6797  02FC  01BC               	clrf	??_lutInit+3
  6798  02FD  083B               	movf	??_lutInit+2,w
  6799  02FE  00B3               	movwf	Map@inMax
  6800  02FF  083C               	movf	??_lutInit+3,w
  6801  0300  00B4               	movwf	Map@inMax+1
  6802  0301  3000               	movlw	0
  6803  0302  00B5               	movwf	Map@outMin
  6804  0303  00B6               	movwf	Map@outMin+1
  6805  0304  30FF               	movlw	255
  6806  0305  00B7               	movwf	Map@outMax
  6807  0306  3000               	movlw	0
  6808  0307  00B8               	movwf	Map@outMax+1
  6809  0308  318D  2591  3182   	fcall	_Map
  6810  030B  0020               	movlb	0	; select bank0
  6811  030C  00BD               	movwf	??_lutInit+4
  6812  030D  30F0               	movlw	240
  6813  030E  00BE               	movwf	??_lutInit+5
  6814  030F  3026               	movlw	38
  6815  0310  00BF               	movwf	??_lutInit+6
  6816  0311  084A               	movf	lutInit@position,w
  6817  0312  073E               	addwf	??_lutInit+5,w
  6818  0313  00C0               	movwf	??_lutInit+7
  6819  0314  084B               	movf	lutInit@position+1,w
  6820  0315  3D3F               	addwfc	??_lutInit+6,w
  6821  0316  00C1               	movwf	??_lutInit+8
  6822  0317  0840               	movf	??_lutInit+7,w
  6823  0318  0086               	movwf	6
  6824  0319  0841               	movf	??_lutInit+8,w
  6825  031A  0087               	movwf	7
  6826  031B  083D               	movf	??_lutInit+4,w
  6827  031C  0081               	movwf	1
  6828  031D                     l2559:	
  6829                           
  6830                           ;Controller.c: 111: };Controller.c: 114: if (position < lyMin) {
  6831  031D  084B               	movf	lutInit@position+1,w
  6832  031E  3A80               	xorlw	128
  6833  031F  00B9               	movwf	??_lutInit
  6834  0320  3080               	movlw	128
  6835  0321  0239               	subwf	??_lutInit,w
  6836  0322  1D03               	skipz
  6837  0323  2B26               	goto	u2205
  6838  0324  0844               	movf	lutInit@lyMin,w
  6839  0325  024A               	subwf	lutInit@position,w
  6840  0326                     u2205:	
  6841  0326  1803               	skipnc
  6842  0327  2B29               	goto	u2201
  6843  0328  2B2A               	goto	u2200
  6844  0329                     u2201:	
  6845  0329  2B37               	goto	l2563
  6846  032A                     u2200:	
  6847  032A                     l2561:	
  6848                           
  6849                           ;Controller.c: 115: lutLY[position] = 0;
  6850  032A  30F0               	movlw	240
  6851  032B  0020               	movlb	0	; select bank0
  6852  032C  00B9               	movwf	??_lutInit
  6853  032D  3025               	movlw	37
  6854  032E  00BA               	movwf	??_lutInit+1
  6855  032F  084A               	movf	lutInit@position,w
  6856  0330  0739               	addwf	??_lutInit,w
  6857  0331  0086               	movwf	6
  6858  0332  084B               	movf	lutInit@position+1,w
  6859  0333  3D3A               	addwfc	??_lutInit+1,w
  6860  0334  0087               	movwf	7
  6861  0335  0181               	clrf	1
  6862                           
  6863                           ;Controller.c: 116: } else if (position > lyMax) {
  6864  0336  2B84               	goto	l2569
  6865  0337                     l2563:	
  6866  0337  0020               	movlb	0	; select bank0
  6867  0338  084B               	movf	lutInit@position+1,w
  6868  0339  3A80               	xorlw	128
  6869  033A  3C80               	sublw	128
  6870  033B  1D03               	skipz
  6871  033C  2B3F               	goto	u2215
  6872  033D  084A               	movf	lutInit@position,w
  6873  033E  0245               	subwf	lutInit@lyMax,w
  6874  033F                     u2215:	
  6875  033F  1803               	skipnc
  6876  0340  2B42               	goto	u2211
  6877  0341  2B43               	goto	u2210
  6878  0342                     u2211:	
  6879  0342  2B55               	goto	l2567
  6880  0343                     u2210:	
  6881  0343                     l2565:	
  6882                           
  6883                           ;Controller.c: 117: lutLY[position] = 255;
  6884  0343  30F0               	movlw	240
  6885  0344  0020               	movlb	0	; select bank0
  6886  0345  00B9               	movwf	??_lutInit
  6887  0346  3025               	movlw	37
  6888  0347  00BA               	movwf	??_lutInit+1
  6889  0348  084A               	movf	lutInit@position,w
  6890  0349  0739               	addwf	??_lutInit,w
  6891  034A  00BB               	movwf	??_lutInit+2
  6892  034B  084B               	movf	lutInit@position+1,w
  6893  034C  3D3A               	addwfc	??_lutInit+1,w
  6894  034D  00BC               	movwf	??_lutInit+3
  6895  034E  083B               	movf	??_lutInit+2,w
  6896  034F  0086               	movwf	6
  6897  0350  083C               	movf	??_lutInit+3,w
  6898  0351  0087               	movwf	7
  6899  0352  30FF               	movlw	255
  6900  0353  0081               	movwf	1
  6901                           
  6902                           ;Controller.c: 119: } else {
  6903  0354  2B84               	goto	l2569
  6904  0355                     l2567:	
  6905                           
  6906                           ;Controller.c: 120: lutLY[position] = Map(position, lyMin, lyMax, 0, 255);
  6907  0355  0020               	movlb	0	; select bank0
  6908  0356  084B               	movf	lutInit@position+1,w
  6909  0357  00B0               	movwf	Map@x+1
  6910  0358  084A               	movf	lutInit@position,w
  6911  0359  00AF               	movwf	Map@x
  6912  035A  0844               	movf	lutInit@lyMin,w
  6913  035B  00B9               	movwf	??_lutInit
  6914  035C  01BA               	clrf	??_lutInit+1
  6915  035D  0839               	movf	??_lutInit,w
  6916  035E  00B1               	movwf	Map@inMin
  6917  035F  083A               	movf	??_lutInit+1,w
  6918  0360  00B2               	movwf	Map@inMin+1
  6919  0361  0845               	movf	lutInit@lyMax,w
  6920  0362  00BB               	movwf	??_lutInit+2
  6921  0363  01BC               	clrf	??_lutInit+3
  6922  0364  083B               	movf	??_lutInit+2,w
  6923  0365  00B3               	movwf	Map@inMax
  6924  0366  083C               	movf	??_lutInit+3,w
  6925  0367  00B4               	movwf	Map@inMax+1
  6926  0368  3000               	movlw	0
  6927  0369  00B5               	movwf	Map@outMin
  6928  036A  00B6               	movwf	Map@outMin+1
  6929  036B  30FF               	movlw	255
  6930  036C  00B7               	movwf	Map@outMax
  6931  036D  3000               	movlw	0
  6932  036E  00B8               	movwf	Map@outMax+1
  6933  036F  318D  2591  3182   	fcall	_Map
  6934  0372  0020               	movlb	0	; select bank0
  6935  0373  00BD               	movwf	??_lutInit+4
  6936  0374  30F0               	movlw	240
  6937  0375  00BE               	movwf	??_lutInit+5
  6938  0376  3025               	movlw	37
  6939  0377  00BF               	movwf	??_lutInit+6
  6940  0378  084A               	movf	lutInit@position,w
  6941  0379  073E               	addwf	??_lutInit+5,w
  6942  037A  00C0               	movwf	??_lutInit+7
  6943  037B  084B               	movf	lutInit@position+1,w
  6944  037C  3D3F               	addwfc	??_lutInit+6,w
  6945  037D  00C1               	movwf	??_lutInit+8
  6946  037E  0840               	movf	??_lutInit+7,w
  6947  037F  0086               	movwf	6
  6948  0380  0841               	movf	??_lutInit+8,w
  6949  0381  0087               	movwf	7
  6950  0382  083D               	movf	??_lutInit+4,w
  6951  0383  0081               	movwf	1
  6952  0384                     l2569:	
  6953                           
  6954                           ;Controller.c: 121: };Controller.c: 124: if (position < rxMin) {
  6955  0384  084B               	movf	lutInit@position+1,w
  6956  0385  3A80               	xorlw	128
  6957  0386  00B9               	movwf	??_lutInit
  6958  0387  3080               	movlw	128
  6959  0388  0239               	subwf	??_lutInit,w
  6960  0389  1D03               	skipz
  6961  038A  2B8D               	goto	u2225
  6962  038B  0846               	movf	lutInit@rxMin,w
  6963  038C  024A               	subwf	lutInit@position,w
  6964  038D                     u2225:	
  6965  038D  1803               	skipnc
  6966  038E  2B90               	goto	u2221
  6967  038F  2B91               	goto	u2220
  6968  0390                     u2221:	
  6969  0390  2B9E               	goto	l2573
  6970  0391                     u2220:	
  6971  0391                     l2571:	
  6972                           
  6973                           ;Controller.c: 125: lutRX[position] = 0;
  6974  0391  30F0               	movlw	240
  6975  0392  0020               	movlb	0	; select bank0
  6976  0393  00B9               	movwf	??_lutInit
  6977  0394  3024               	movlw	36
  6978  0395  00BA               	movwf	??_lutInit+1
  6979  0396  084A               	movf	lutInit@position,w
  6980  0397  0739               	addwf	??_lutInit,w
  6981  0398  0086               	movwf	6
  6982  0399  084B               	movf	lutInit@position+1,w
  6983  039A  3D3A               	addwfc	??_lutInit+1,w
  6984  039B  0087               	movwf	7
  6985  039C  0181               	clrf	1
  6986                           
  6987                           ;Controller.c: 126: } else if (position > rxMax) {
  6988  039D  2BEB               	goto	l2579
  6989  039E                     l2573:	
  6990  039E  0020               	movlb	0	; select bank0
  6991  039F  084B               	movf	lutInit@position+1,w
  6992  03A0  3A80               	xorlw	128
  6993  03A1  3C80               	sublw	128
  6994  03A2  1D03               	skipz
  6995  03A3  2BA6               	goto	u2235
  6996  03A4  084A               	movf	lutInit@position,w
  6997  03A5  0247               	subwf	lutInit@rxMax,w
  6998  03A6                     u2235:	
  6999  03A6  1803               	skipnc
  7000  03A7  2BA9               	goto	u2231
  7001  03A8  2BAA               	goto	u2230
  7002  03A9                     u2231:	
  7003  03A9  2BBC               	goto	l2577
  7004  03AA                     u2230:	
  7005  03AA                     l2575:	
  7006                           
  7007                           ;Controller.c: 127: lutRX[position] = 255;
  7008  03AA  30F0               	movlw	240
  7009  03AB  0020               	movlb	0	; select bank0
  7010  03AC  00B9               	movwf	??_lutInit
  7011  03AD  3024               	movlw	36
  7012  03AE  00BA               	movwf	??_lutInit+1
  7013  03AF  084A               	movf	lutInit@position,w
  7014  03B0  0739               	addwf	??_lutInit,w
  7015  03B1  00BB               	movwf	??_lutInit+2
  7016  03B2  084B               	movf	lutInit@position+1,w
  7017  03B3  3D3A               	addwfc	??_lutInit+1,w
  7018  03B4  00BC               	movwf	??_lutInit+3
  7019  03B5  083B               	movf	??_lutInit+2,w
  7020  03B6  0086               	movwf	6
  7021  03B7  083C               	movf	??_lutInit+3,w
  7022  03B8  0087               	movwf	7
  7023  03B9  30FF               	movlw	255
  7024  03BA  0081               	movwf	1
  7025                           
  7026                           ;Controller.c: 129: } else {
  7027  03BB  2BEB               	goto	l2579
  7028  03BC                     l2577:	
  7029                           
  7030                           ;Controller.c: 130: lutRX[position] = Map(position, rxMin, rxMax, 0, 255);
  7031  03BC  0020               	movlb	0	; select bank0
  7032  03BD  084B               	movf	lutInit@position+1,w
  7033  03BE  00B0               	movwf	Map@x+1
  7034  03BF  084A               	movf	lutInit@position,w
  7035  03C0  00AF               	movwf	Map@x
  7036  03C1  0846               	movf	lutInit@rxMin,w
  7037  03C2  00B9               	movwf	??_lutInit
  7038  03C3  01BA               	clrf	??_lutInit+1
  7039  03C4  0839               	movf	??_lutInit,w
  7040  03C5  00B1               	movwf	Map@inMin
  7041  03C6  083A               	movf	??_lutInit+1,w
  7042  03C7  00B2               	movwf	Map@inMin+1
  7043  03C8  0847               	movf	lutInit@rxMax,w
  7044  03C9  00BB               	movwf	??_lutInit+2
  7045  03CA  01BC               	clrf	??_lutInit+3
  7046  03CB  083B               	movf	??_lutInit+2,w
  7047  03CC  00B3               	movwf	Map@inMax
  7048  03CD  083C               	movf	??_lutInit+3,w
  7049  03CE  00B4               	movwf	Map@inMax+1
  7050  03CF  3000               	movlw	0
  7051  03D0  00B5               	movwf	Map@outMin
  7052  03D1  00B6               	movwf	Map@outMin+1
  7053  03D2  30FF               	movlw	255
  7054  03D3  00B7               	movwf	Map@outMax
  7055  03D4  3000               	movlw	0
  7056  03D5  00B8               	movwf	Map@outMax+1
  7057  03D6  318D  2591  3182   	fcall	_Map
  7058  03D9  0020               	movlb	0	; select bank0
  7059  03DA  00BD               	movwf	??_lutInit+4
  7060  03DB  30F0               	movlw	240
  7061  03DC  00BE               	movwf	??_lutInit+5
  7062  03DD  3024               	movlw	36
  7063  03DE  00BF               	movwf	??_lutInit+6
  7064  03DF  084A               	movf	lutInit@position,w
  7065  03E0  073E               	addwf	??_lutInit+5,w
  7066  03E1  00C0               	movwf	??_lutInit+7
  7067  03E2  084B               	movf	lutInit@position+1,w
  7068  03E3  3D3F               	addwfc	??_lutInit+6,w
  7069  03E4  00C1               	movwf	??_lutInit+8
  7070  03E5  0840               	movf	??_lutInit+7,w
  7071  03E6  0086               	movwf	6
  7072  03E7  0841               	movf	??_lutInit+8,w
  7073  03E8  0087               	movwf	7
  7074  03E9  083D               	movf	??_lutInit+4,w
  7075  03EA  0081               	movwf	1
  7076  03EB                     l2579:	
  7077                           
  7078                           ;Controller.c: 131: };Controller.c: 134: if (position < ryMin) {
  7079  03EB  084B               	movf	lutInit@position+1,w
  7080  03EC  3A80               	xorlw	128
  7081  03ED  00B9               	movwf	??_lutInit
  7082  03EE  3080               	movlw	128
  7083  03EF  0239               	subwf	??_lutInit,w
  7084  03F0  1D03               	skipz
  7085  03F1  2BF4               	goto	u2245
  7086  03F2  0848               	movf	lutInit@ryMin,w
  7087  03F3  024A               	subwf	lutInit@position,w
  7088  03F4                     u2245:	
  7089  03F4  1803               	skipnc
  7090  03F5  2BF7               	goto	u2241
  7091  03F6  2BF8               	goto	u2240
  7092  03F7                     u2241:	
  7093  03F7  2C05               	goto	l2583
  7094  03F8                     u2240:	
  7095  03F8                     l2581:	
  7096                           
  7097                           ;Controller.c: 135: lutRY[position] = 0;
  7098  03F8  30F0               	movlw	240
  7099  03F9  0020               	movlb	0	; select bank0
  7100  03FA  00B9               	movwf	??_lutInit
  7101  03FB  3023               	movlw	35
  7102  03FC  00BA               	movwf	??_lutInit+1
  7103  03FD  084A               	movf	lutInit@position,w
  7104  03FE  0739               	addwf	??_lutInit,w
  7105  03FF  0086               	movwf	6
  7106  0400  084B               	movf	lutInit@position+1,w
  7107  0401  3D3A               	addwfc	??_lutInit+1,w
  7108  0402  0087               	movwf	7
  7109  0403  0181               	clrf	1
  7110                           
  7111                           ;Controller.c: 136: } else if (position > ryMax) {
  7112  0404  2C52               	goto	l2589
  7113  0405                     l2583:	
  7114  0405  0020               	movlb	0	; select bank0
  7115  0406  084B               	movf	lutInit@position+1,w
  7116  0407  3A80               	xorlw	128
  7117  0408  3C80               	sublw	128
  7118  0409  1D03               	skipz
  7119  040A  2C0D               	goto	u2255
  7120  040B  084A               	movf	lutInit@position,w
  7121  040C  0249               	subwf	lutInit@ryMax,w
  7122  040D                     u2255:	
  7123  040D  1803               	skipnc
  7124  040E  2C10               	goto	u2251
  7125  040F  2C11               	goto	u2250
  7126  0410                     u2251:	
  7127  0410  2C23               	goto	l2587
  7128  0411                     u2250:	
  7129  0411                     l2585:	
  7130                           
  7131                           ;Controller.c: 137: lutRY[position] = 255;
  7132  0411  30F0               	movlw	240
  7133  0412  0020               	movlb	0	; select bank0
  7134  0413  00B9               	movwf	??_lutInit
  7135  0414  3023               	movlw	35
  7136  0415  00BA               	movwf	??_lutInit+1
  7137  0416  084A               	movf	lutInit@position,w
  7138  0417  0739               	addwf	??_lutInit,w
  7139  0418  00BB               	movwf	??_lutInit+2
  7140  0419  084B               	movf	lutInit@position+1,w
  7141  041A  3D3A               	addwfc	??_lutInit+1,w
  7142  041B  00BC               	movwf	??_lutInit+3
  7143  041C  083B               	movf	??_lutInit+2,w
  7144  041D  0086               	movwf	6
  7145  041E  083C               	movf	??_lutInit+3,w
  7146  041F  0087               	movwf	7
  7147  0420  30FF               	movlw	255
  7148  0421  0081               	movwf	1
  7149                           
  7150                           ;Controller.c: 139: } else {
  7151  0422  2C52               	goto	l2589
  7152  0423                     l2587:	
  7153                           
  7154                           ;Controller.c: 140: lutRY[position] = Map(position, ryMin, ryMax, 0, 255);
  7155  0423  0020               	movlb	0	; select bank0
  7156  0424  084B               	movf	lutInit@position+1,w
  7157  0425  00B0               	movwf	Map@x+1
  7158  0426  084A               	movf	lutInit@position,w
  7159  0427  00AF               	movwf	Map@x
  7160  0428  0848               	movf	lutInit@ryMin,w
  7161  0429  00B9               	movwf	??_lutInit
  7162  042A  01BA               	clrf	??_lutInit+1
  7163  042B  0839               	movf	??_lutInit,w
  7164  042C  00B1               	movwf	Map@inMin
  7165  042D  083A               	movf	??_lutInit+1,w
  7166  042E  00B2               	movwf	Map@inMin+1
  7167  042F  0849               	movf	lutInit@ryMax,w
  7168  0430  00BB               	movwf	??_lutInit+2
  7169  0431  01BC               	clrf	??_lutInit+3
  7170  0432  083B               	movf	??_lutInit+2,w
  7171  0433  00B3               	movwf	Map@inMax
  7172  0434  083C               	movf	??_lutInit+3,w
  7173  0435  00B4               	movwf	Map@inMax+1
  7174  0436  3000               	movlw	0
  7175  0437  00B5               	movwf	Map@outMin
  7176  0438  00B6               	movwf	Map@outMin+1
  7177  0439  30FF               	movlw	255
  7178  043A  00B7               	movwf	Map@outMax
  7179  043B  3000               	movlw	0
  7180  043C  00B8               	movwf	Map@outMax+1
  7181  043D  318D  2591  3182   	fcall	_Map
  7182  0440  0020               	movlb	0	; select bank0
  7183  0441  00BD               	movwf	??_lutInit+4
  7184  0442  30F0               	movlw	240
  7185  0443  00BE               	movwf	??_lutInit+5
  7186  0444  3023               	movlw	35
  7187  0445  00BF               	movwf	??_lutInit+6
  7188  0446  084A               	movf	lutInit@position,w
  7189  0447  073E               	addwf	??_lutInit+5,w
  7190  0448  00C0               	movwf	??_lutInit+7
  7191  0449  084B               	movf	lutInit@position+1,w
  7192  044A  3D3F               	addwfc	??_lutInit+6,w
  7193  044B  00C1               	movwf	??_lutInit+8
  7194  044C  0840               	movf	??_lutInit+7,w
  7195  044D  0086               	movwf	6
  7196  044E  0841               	movf	??_lutInit+8,w
  7197  044F  0087               	movwf	7
  7198  0450  083D               	movf	??_lutInit+4,w
  7199  0451  0081               	movwf	1
  7200  0452                     l2589:	
  7201  0452  3001               	movlw	1
  7202  0453  07CA               	addwf	lutInit@position,f
  7203  0454  3000               	movlw	0
  7204  0455  3DCB               	addwfc	lutInit@position+1,f
  7205  0456                     l2591:	
  7206  0456  084B               	movf	lutInit@position+1,w
  7207  0457  3A80               	xorlw	128
  7208  0458  00B9               	movwf	??_lutInit
  7209  0459  3081               	movlw	129
  7210  045A  0239               	subwf	??_lutInit,w
  7211  045B  1D03               	skipz
  7212  045C  2C5F               	goto	u2265
  7213  045D  3000               	movlw	0
  7214  045E  024A               	subwf	lutInit@position,w
  7215  045F                     u2265:	
  7216  045F  1C03               	skipc
  7217  0460  2C62               	goto	u2261
  7218  0461  2C63               	goto	u2260
  7219  0462                     u2261:	
  7220  0462  2AB5               	goto	l2549
  7221  0463                     u2260:	
  7222  0463                     l346:	
  7223  0463  0008               	return
  7224  0464                     __end_of_lutInit:	
  7225                           
  7226                           	psect	text9
  7227  0D23                     __ptext9:	
  7228 ;; *************** function _eepromRead *****************
  7229 ;; Defined at:
  7230 ;;		line 31 in file "Nvm.c"
  7231 ;; Parameters:    Size  Location     Type
  7232 ;;  address         1    wreg     unsigned char 
  7233 ;; Auto vars:     Size  Location     Type
  7234 ;;  address         1    1[BANK0 ] unsigned char 
  7235 ;;  data            1    2[BANK0 ] unsigned char 
  7236 ;; Return value:  Size  Location     Type
  7237 ;;                  1    wreg      unsigned char 
  7238 ;; Registers used:
  7239 ;;		wreg
  7240 ;; Tracked objects:
  7241 ;;		On entry : 0/0
  7242 ;;		On exit  : 0/0
  7243 ;;		Unchanged: 0/0
  7244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7246 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7247 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7248 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7249 ;;Total ram usage:        3 bytes
  7250 ;; Hardware stack levels used:    1
  7251 ;; Hardware stack levels required when called:    3
  7252 ;; This function calls:
  7253 ;;		Nothing
  7254 ;; This function is called by:
  7255 ;;		_main
  7256 ;;		_lutInit
  7257 ;; This function uses a non-reentrant model
  7258 ;;
  7259                           
  7260                           
  7261                           ;psect for function _eepromRead
  7262  0D23                     _eepromRead:	
  7263                           
  7264                           ;incstack = 0
  7265                           ; Regs used in _eepromRead: [wreg]
  7266                           ;eepromRead@address stored from wreg
  7267  0D23  0020               	movlb	0	; select bank0
  7268  0D24  00A1               	movwf	eepromRead@address
  7269  0D25                     l2499:	
  7270                           
  7271                           ;Nvm.c: 33: char data;;Nvm.c: 35: NVMCON1bits.NVMREGS = 1;
  7272  0D25  0030               	movlb	16	; select bank16
  7273  0D26  171E               	bsf	30,6	;volsfr
  7274  0D27                     l2501:	
  7275                           
  7276                           ;Nvm.c: 36: NVMADRH = 0xF0;
  7277  0D27  30F0               	movlw	240
  7278  0D28  009B               	movwf	27	;volatile
  7279                           
  7280                           ;Nvm.c: 37: NVMADRL = address;
  7281  0D29  0020               	movlb	0	; select bank0
  7282  0D2A  0821               	movf	eepromRead@address,w
  7283  0D2B  0030               	movlb	16	; select bank16
  7284  0D2C  009A               	movwf	26	;volatile
  7285  0D2D                     l2503:	
  7286                           
  7287                           ;Nvm.c: 38: NVMCON1bits.RD = 1;
  7288  0D2D  141E               	bsf	30,0	;volsfr
  7289                           
  7290                           ;Nvm.c: 40: data = NVMDATL;
  7291  0D2E  081C               	movf	28,w	;volatile
  7292  0D2F  0020               	movlb	0	; select bank0
  7293  0D30  00A0               	movwf	??_eepromRead
  7294  0D31  0820               	movf	??_eepromRead,w
  7295  0D32  00A2               	movwf	eepromRead@data
  7296                           
  7297                           ;Nvm.c: 42: return data;
  7298  0D33  0822               	movf	eepromRead@data,w
  7299  0D34                     l457:	
  7300  0D34  0008               	return
  7301  0D35                     __end_of_eepromRead:	
  7302                           
  7303                           	psect	text10
  7304  0D91                     __ptext10:	
  7305 ;; *************** function _Map *****************
  7306 ;; Defined at:
  7307 ;;		line 84 in file "Controller.c"
  7308 ;; Parameters:    Size  Location     Type
  7309 ;;  x               2   15[BANK0 ] int 
  7310 ;;  inMin           2   17[BANK0 ] int 
  7311 ;;  inMax           2   19[BANK0 ] int 
  7312 ;;  outMin          2   21[BANK0 ] int 
  7313 ;;  outMax          2   23[BANK0 ] int 
  7314 ;; Auto vars:     Size  Location     Type
  7315 ;;		None
  7316 ;; Return value:  Size  Location     Type
  7317 ;;                  1    wreg      unsigned char 
  7318 ;; Registers used:
  7319 ;;		wreg, status,2, status,0, pclath, cstack
  7320 ;; Tracked objects:
  7321 ;;		On entry : 0/0
  7322 ;;		On exit  : 0/0
  7323 ;;		Unchanged: 0/0
  7324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7325 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7328 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7329 ;;Total ram usage:       10 bytes
  7330 ;; Hardware stack levels used:    1
  7331 ;; Hardware stack levels required when called:    4
  7332 ;; This function calls:
  7333 ;;		___awdiv
  7334 ;;		___wmul
  7335 ;; This function is called by:
  7336 ;;		_lutInit
  7337 ;; This function uses a non-reentrant model
  7338 ;;
  7339                           
  7340                           
  7341                           ;psect for function _Map
  7342  0D91                     _Map:	
  7343  0D91                     l2507:	
  7344                           ;incstack = 0
  7345                           ; Regs used in _Map: [wreg+status,2+status,0+pclath+cstack]
  7346                           
  7347                           
  7348                           ;Controller.c: 86: return (((x - inMin) * (outMax - outMin)) / (inMax - inMin)) + outMin
      +                          ;
  7349  0D91  0020               	movlb	0	; select bank0
  7350  0D92  0831               	movf	Map@inMin,w
  7351  0D93  0233               	subwf	Map@inMax,w
  7352  0D94  00A6               	movwf	___awdiv@divisor
  7353  0D95  0832               	movf	Map@inMin+1,w
  7354  0D96  3B34               	subwfb	Map@inMax+1,w
  7355  0D97  00A7               	movwf	___awdiv@divisor+1
  7356  0D98  0831               	movf	Map@inMin,w
  7357  0D99  022F               	subwf	Map@x,w
  7358  0D9A  00A0               	movwf	___wmul@multiplier
  7359  0D9B  0832               	movf	Map@inMin+1,w
  7360  0D9C  3B30               	subwfb	Map@x+1,w
  7361  0D9D  00A1               	movwf	___wmul@multiplier+1
  7362  0D9E  0835               	movf	Map@outMin,w
  7363  0D9F  0237               	subwf	Map@outMax,w
  7364  0DA0  00A2               	movwf	___wmul@multiplicand
  7365  0DA1  0836               	movf	Map@outMin+1,w
  7366  0DA2  3B38               	subwfb	Map@outMax+1,w
  7367  0DA3  00A3               	movwf	___wmul@multiplicand+1
  7368  0DA4  318D  2571  318D   	fcall	___wmul
  7369  0DA7  0020               	movlb	0	; select bank0
  7370  0DA8  0821               	movf	?___wmul+1,w
  7371  0DA9  00A9               	movwf	___awdiv@dividend+1
  7372  0DAA  0820               	movf	?___wmul,w
  7373  0DAB  00A8               	movwf	___awdiv@dividend
  7374  0DAC  318E  269C  318D   	fcall	___awdiv
  7375  0DAF  0020               	movlb	0	; select bank0
  7376  0DB0  0826               	movf	?___awdiv,w
  7377  0DB1  0735               	addwf	Map@outMin,w
  7378  0DB2                     l325:	
  7379  0DB2  0008               	return
  7380  0DB3                     __end_of_Map:	
  7381                           
  7382                           	psect	text11
  7383  0D71                     __ptext11:	
  7384 ;; *************** function ___wmul *****************
  7385 ;; Defined at:
  7386 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  7387 ;; Parameters:    Size  Location     Type
  7388 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7389 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7390 ;; Auto vars:     Size  Location     Type
  7391 ;;  product         2    4[BANK0 ] unsigned int 
  7392 ;; Return value:  Size  Location     Type
  7393 ;;                  2    0[BANK0 ] unsigned int 
  7394 ;; Registers used:
  7395 ;;		wreg, status,2, status,0
  7396 ;; Tracked objects:
  7397 ;;		On entry : 0/0
  7398 ;;		On exit  : 0/0
  7399 ;;		Unchanged: 0/0
  7400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7401 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7402 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7404 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7405 ;;Total ram usage:        6 bytes
  7406 ;; Hardware stack levels used:    1
  7407 ;; Hardware stack levels required when called:    3
  7408 ;; This function calls:
  7409 ;;		Nothing
  7410 ;; This function is called by:
  7411 ;;		_Map
  7412 ;; This function uses a non-reentrant model
  7413 ;;
  7414                           
  7415                           
  7416                           ;psect for function ___wmul
  7417  0D71                     ___wmul:	
  7418  0D71                     l2485:	
  7419                           ;incstack = 0
  7420                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7421                           
  7422  0D71  0020               	movlb	0	; select bank0
  7423  0D72  01A4               	clrf	___wmul@product
  7424  0D73  01A5               	clrf	___wmul@product+1
  7425  0D74                     l2487:	
  7426  0D74  1C20               	btfss	___wmul@multiplier,0
  7427  0D75  2D77               	goto	u2071
  7428  0D76  2D78               	goto	u2070
  7429  0D77                     u2071:	
  7430  0D77  2D7C               	goto	l659
  7431  0D78                     u2070:	
  7432  0D78                     l2489:	
  7433  0D78  0822               	movf	___wmul@multiplicand,w
  7434  0D79  07A4               	addwf	___wmul@product,f
  7435  0D7A  0823               	movf	___wmul@multiplicand+1,w
  7436  0D7B  3DA5               	addwfc	___wmul@product+1,f
  7437  0D7C                     l659:	
  7438  0D7C  3001               	movlw	1
  7439  0D7D                     u2085:	
  7440  0D7D  35A2               	lslf	___wmul@multiplicand,f
  7441  0D7E  0DA3               	rlf	___wmul@multiplicand+1,f
  7442  0D7F  0B89               	decfsz	9,f
  7443  0D80  2D7D               	goto	u2085
  7444  0D81                     l2491:	
  7445  0D81  3001               	movlw	1
  7446  0D82                     u2095:	
  7447  0D82  36A1               	lsrf	___wmul@multiplier+1,f
  7448  0D83  0CA0               	rrf	___wmul@multiplier,f
  7449  0D84  0B89               	decfsz	9,f
  7450  0D85  2D82               	goto	u2095
  7451  0D86                     l2493:	
  7452  0D86  0820               	movf	___wmul@multiplier,w
  7453  0D87  0421               	iorwf	___wmul@multiplier+1,w
  7454  0D88  1D03               	btfss	3,2
  7455  0D89  2D8B               	goto	u2101
  7456  0D8A  2D8C               	goto	u2100
  7457  0D8B                     u2101:	
  7458  0D8B  2D74               	goto	l2487
  7459  0D8C                     u2100:	
  7460  0D8C                     l2495:	
  7461  0D8C  0825               	movf	___wmul@product+1,w
  7462  0D8D  00A1               	movwf	?___wmul+1
  7463  0D8E  0824               	movf	___wmul@product,w
  7464  0D8F  00A0               	movwf	?___wmul
  7465  0D90                     l661:	
  7466  0D90  0008               	return
  7467  0D91                     __end_of___wmul:	
  7468                           
  7469                           	psect	text12
  7470  0E9C                     __ptext12:	
  7471 ;; *************** function ___awdiv *****************
  7472 ;; Defined at:
  7473 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  7474 ;; Parameters:    Size  Location     Type
  7475 ;;  divisor         2    6[BANK0 ] int 
  7476 ;;  dividend        2    8[BANK0 ] int 
  7477 ;; Auto vars:     Size  Location     Type
  7478 ;;  quotient        2   13[BANK0 ] int 
  7479 ;;  sign            1   12[BANK0 ] unsigned char 
  7480 ;;  counter         1   11[BANK0 ] unsigned char 
  7481 ;; Return value:  Size  Location     Type
  7482 ;;                  2    6[BANK0 ] int 
  7483 ;; Registers used:
  7484 ;;		wreg, status,2, status,0
  7485 ;; Tracked objects:
  7486 ;;		On entry : 0/0
  7487 ;;		On exit  : 0/0
  7488 ;;		Unchanged: 0/0
  7489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7490 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7491 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7492 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7493 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7494 ;;Total ram usage:        9 bytes
  7495 ;; Hardware stack levels used:    1
  7496 ;; Hardware stack levels required when called:    3
  7497 ;; This function calls:
  7498 ;;		Nothing
  7499 ;; This function is called by:
  7500 ;;		_Map
  7501 ;; This function uses a non-reentrant model
  7502 ;;
  7503                           
  7504                           
  7505                           ;psect for function ___awdiv
  7506  0E9C                     ___awdiv:	
  7507  0E9C                     l1839:	
  7508                           ;incstack = 0
  7509                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7510                           
  7511  0E9C  0020               	movlb	0	; select bank0
  7512  0E9D  01AC               	clrf	___awdiv@sign
  7513  0E9E                     l1841:	
  7514  0E9E  1FA7               	btfss	___awdiv@divisor+1,7
  7515  0E9F  2EA1               	goto	u1081
  7516  0EA0  2EA2               	goto	u1080
  7517  0EA1                     u1081:	
  7518  0EA1  2EA9               	goto	l1847
  7519  0EA2                     u1080:	
  7520  0EA2                     l1843:	
  7521  0EA2  09A6               	comf	___awdiv@divisor,f
  7522  0EA3  09A7               	comf	___awdiv@divisor+1,f
  7523  0EA4  0AA6               	incf	___awdiv@divisor,f
  7524  0EA5  1903               	skipnz
  7525  0EA6  0AA7               	incf	___awdiv@divisor+1,f
  7526  0EA7                     l1845:	
  7527  0EA7  01AC               	clrf	___awdiv@sign
  7528  0EA8  0AAC               	incf	___awdiv@sign,f
  7529  0EA9                     l1847:	
  7530  0EA9  1FA9               	btfss	___awdiv@dividend+1,7
  7531  0EAA  2EAC               	goto	u1091
  7532  0EAB  2EAD               	goto	u1090
  7533  0EAC                     u1091:	
  7534  0EAC  2EB6               	goto	l1853
  7535  0EAD                     u1090:	
  7536  0EAD                     l1849:	
  7537  0EAD  09A8               	comf	___awdiv@dividend,f
  7538  0EAE  09A9               	comf	___awdiv@dividend+1,f
  7539  0EAF  0AA8               	incf	___awdiv@dividend,f
  7540  0EB0  1903               	skipnz
  7541  0EB1  0AA9               	incf	___awdiv@dividend+1,f
  7542  0EB2                     l1851:	
  7543  0EB2  3001               	movlw	1
  7544  0EB3  00AA               	movwf	??___awdiv
  7545  0EB4  082A               	movf	??___awdiv,w
  7546  0EB5  06AC               	xorwf	___awdiv@sign,f
  7547  0EB6                     l1853:	
  7548  0EB6  01AD               	clrf	___awdiv@quotient
  7549  0EB7  01AE               	clrf	___awdiv@quotient+1
  7550  0EB8                     l1855:	
  7551  0EB8  0826               	movf	___awdiv@divisor,w
  7552  0EB9  0427               	iorwf	___awdiv@divisor+1,w
  7553  0EBA  1903               	btfsc	3,2
  7554  0EBB  2EBD               	goto	u1101
  7555  0EBC  2EBE               	goto	u1100
  7556  0EBD                     u1101:	
  7557  0EBD  2EED               	goto	l1875
  7558  0EBE                     u1100:	
  7559  0EBE                     l1857:	
  7560  0EBE  01AB               	clrf	___awdiv@counter
  7561  0EBF  0AAB               	incf	___awdiv@counter,f
  7562  0EC0  2ECA               	goto	l1863
  7563  0EC1                     l1859:	
  7564  0EC1  3001               	movlw	1
  7565  0EC2                     u1115:	
  7566  0EC2  35A6               	lslf	___awdiv@divisor,f
  7567  0EC3  0DA7               	rlf	___awdiv@divisor+1,f
  7568  0EC4  0B89               	decfsz	9,f
  7569  0EC5  2EC2               	goto	u1115
  7570  0EC6                     l1861:	
  7571  0EC6  3001               	movlw	1
  7572  0EC7  00AA               	movwf	??___awdiv
  7573  0EC8  082A               	movf	??___awdiv,w
  7574  0EC9  07AB               	addwf	___awdiv@counter,f
  7575  0ECA                     l1863:	
  7576  0ECA  1FA7               	btfss	___awdiv@divisor+1,7
  7577  0ECB  2ECD               	goto	u1121
  7578  0ECC  2ECE               	goto	u1120
  7579  0ECD                     u1121:	
  7580  0ECD  2EC1               	goto	l1859
  7581  0ECE                     u1120:	
  7582  0ECE                     l1865:	
  7583  0ECE  3001               	movlw	1
  7584  0ECF                     u1135:	
  7585  0ECF  35AD               	lslf	___awdiv@quotient,f
  7586  0ED0  0DAE               	rlf	___awdiv@quotient+1,f
  7587  0ED1  0B89               	decfsz	9,f
  7588  0ED2  2ECF               	goto	u1135
  7589  0ED3  0827               	movf	___awdiv@divisor+1,w
  7590  0ED4  0229               	subwf	___awdiv@dividend+1,w
  7591  0ED5  1D03               	skipz
  7592  0ED6  2ED9               	goto	u1145
  7593  0ED7  0826               	movf	___awdiv@divisor,w
  7594  0ED8  0228               	subwf	___awdiv@dividend,w
  7595  0ED9                     u1145:	
  7596  0ED9  1C03               	skipc
  7597  0EDA  2EDC               	goto	u1141
  7598  0EDB  2EDD               	goto	u1140
  7599  0EDC                     u1141:	
  7600  0EDC  2EE2               	goto	l1871
  7601  0EDD                     u1140:	
  7602  0EDD                     l1867:	
  7603  0EDD  0826               	movf	___awdiv@divisor,w
  7604  0EDE  02A8               	subwf	___awdiv@dividend,f
  7605  0EDF  0827               	movf	___awdiv@divisor+1,w
  7606  0EE0  3BA9               	subwfb	___awdiv@dividend+1,f
  7607  0EE1                     l1869:	
  7608  0EE1  142D               	bsf	___awdiv@quotient,0
  7609  0EE2                     l1871:	
  7610  0EE2  3001               	movlw	1
  7611  0EE3                     u1155:	
  7612  0EE3  36A7               	lsrf	___awdiv@divisor+1,f
  7613  0EE4  0CA6               	rrf	___awdiv@divisor,f
  7614  0EE5  0B89               	decfsz	9,f
  7615  0EE6  2EE3               	goto	u1155
  7616  0EE7                     l1873:	
  7617  0EE7  3001               	movlw	1
  7618  0EE8  02AB               	subwf	___awdiv@counter,f
  7619  0EE9  1D03               	btfss	3,2
  7620  0EEA  2EEC               	goto	u1161
  7621  0EEB  2EED               	goto	u1160
  7622  0EEC                     u1161:	
  7623  0EEC  2ECE               	goto	l1865
  7624  0EED                     u1160:	
  7625  0EED                     l1875:	
  7626  0EED  082C               	movf	___awdiv@sign,w
  7627  0EEE  1903               	btfsc	3,2
  7628  0EEF  2EF1               	goto	u1171
  7629  0EF0  2EF2               	goto	u1170
  7630  0EF1                     u1171:	
  7631  0EF1  2EF7               	goto	l1879
  7632  0EF2                     u1170:	
  7633  0EF2                     l1877:	
  7634  0EF2  09AD               	comf	___awdiv@quotient,f
  7635  0EF3  09AE               	comf	___awdiv@quotient+1,f
  7636  0EF4  0AAD               	incf	___awdiv@quotient,f
  7637  0EF5  1903               	skipnz
  7638  0EF6  0AAE               	incf	___awdiv@quotient+1,f
  7639  0EF7                     l1879:	
  7640  0EF7  082E               	movf	___awdiv@quotient+1,w
  7641  0EF8  00A7               	movwf	?___awdiv+1
  7642  0EF9  082D               	movf	___awdiv@quotient,w
  7643  0EFA  00A6               	movwf	?___awdiv
  7644  0EFB                     l812:	
  7645  0EFB  0008               	return
  7646  0EFC                     __end_of___awdiv:	
  7647                           
  7648                           	psect	text13
  7649  0DB3                     __ptext13:	
  7650 ;; *************** function _eepromWrite *****************
  7651 ;; Defined at:
  7652 ;;		line 8 in file "Nvm.c"
  7653 ;; Parameters:    Size  Location     Type
  7654 ;;  address         1    wreg     unsigned char 
  7655 ;;  data            1    0[BANK0 ] unsigned char 
  7656 ;; Auto vars:     Size  Location     Type
  7657 ;;  address         1    1[BANK0 ] unsigned char 
  7658 ;;  interruptSta    1    2[BANK0 ] unsigned char 
  7659 ;; Return value:  Size  Location     Type
  7660 ;;                  1    wreg      void 
  7661 ;; Registers used:
  7662 ;;		wreg, status,2, status,0, pclath, cstack
  7663 ;; Tracked objects:
  7664 ;;		On entry : 0/0
  7665 ;;		On exit  : 0/0
  7666 ;;		Unchanged: 0/0
  7667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7668 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7669 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7671 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7672 ;;Total ram usage:        3 bytes
  7673 ;; Hardware stack levels used:    1
  7674 ;; Hardware stack levels required when called:    4
  7675 ;; This function calls:
  7676 ;;		_nvmUnlock
  7677 ;; This function is called by:
  7678 ;;		_main
  7679 ;;		_configureController
  7680 ;; This function uses a non-reentrant model
  7681 ;;
  7682                           
  7683                           
  7684                           ;psect for function _eepromWrite
  7685  0DB3                     _eepromWrite:	
  7686                           
  7687                           ;incstack = 0
  7688                           ; Regs used in _eepromWrite: [wreg+status,2+status,0+pclath+cstack]
  7689                           ;eepromWrite@address stored from wreg
  7690  0DB3  0020               	movlb	0	; select bank0
  7691  0DB4  00A1               	movwf	eepromWrite@address
  7692  0DB5                     l2521:	
  7693                           
  7694                           ;Nvm.c: 10: unsigned char interruptStatus = INTCONbits.GIE;
  7695  0DB5  3000               	movlw	0
  7696  0DB6  1B8B               	btfsc	11,7	;volatile
  7697  0DB7  3001               	movlw	1
  7698  0DB8  00A2               	movwf	eepromWrite@interruptStatus
  7699  0DB9                     l2523:	
  7700                           
  7701                           ;Nvm.c: 12: INTCONbits.GIE = 0;
  7702  0DB9  138B               	bcf	11,7	;volatile
  7703  0DBA                     l2525:	
  7704                           
  7705                           ;Nvm.c: 14: NVMCON1bits.NVMREGS = 1;
  7706  0DBA  0030               	movlb	16	; select bank16
  7707  0DBB  171E               	bsf	30,6	;volsfr
  7708  0DBC                     l2527:	
  7709                           
  7710                           ;Nvm.c: 15: NVMCON1bits.WREN = 1;
  7711  0DBC  151E               	bsf	30,2	;volsfr
  7712  0DBD                     l2529:	
  7713                           
  7714                           ;Nvm.c: 17: NVMADRH = 0xF0;
  7715  0DBD  30F0               	movlw	240
  7716  0DBE  009B               	movwf	27	;volatile
  7717  0DBF                     l2531:	
  7718                           
  7719                           ;Nvm.c: 18: NVMADRL = address;
  7720  0DBF  0020               	movlb	0	; select bank0
  7721  0DC0  0821               	movf	eepromWrite@address,w
  7722  0DC1  0030               	movlb	16	; select bank16
  7723  0DC2  009A               	movwf	26	;volatile
  7724  0DC3                     l2533:	
  7725                           
  7726                           ;Nvm.c: 20: NVMDATL = data;
  7727  0DC3  0020               	movlb	0	; select bank0
  7728  0DC4  0820               	movf	eepromWrite@data,w
  7729  0DC5  0030               	movlb	16	; select bank16
  7730  0DC6  009C               	movwf	28	;volatile
  7731  0DC7                     l2535:	
  7732                           
  7733                           ;Nvm.c: 22: nvmUnlock();
  7734  0DC7  318C  24E7  318D   	fcall	_nvmUnlock
  7735  0DCA                     l450:	
  7736                           ;Nvm.c: 24: while (NVMCON1bits.WR);
  7737                           
  7738  0DCA  0030               	movlb	16	; select bank16
  7739  0DCB  189E               	btfsc	30,1	;volsfr
  7740  0DCC  2DCE               	goto	u2161
  7741  0DCD  2DCF               	goto	u2160
  7742  0DCE                     u2161:	
  7743  0DCE  2DCA               	goto	l450
  7744  0DCF                     u2160:	
  7745  0DCF                     l452:	
  7746                           
  7747                           ;Nvm.c: 26: NVMCON1bits.WREN = 0;
  7748  0DCF  111E               	bcf	30,2	;volsfr
  7749  0DD0                     l2537:	
  7750                           
  7751                           ;Nvm.c: 28: if (interruptStatus) INTCONbits.GIE = 1;
  7752  0DD0  0020               	movlb	0	; select bank0
  7753  0DD1  0822               	movf	eepromWrite@interruptStatus,w
  7754  0DD2  1903               	btfsc	3,2
  7755  0DD3  2DD5               	goto	u2171
  7756  0DD4  2DD6               	goto	u2170
  7757  0DD5                     u2171:	
  7758  0DD5  2DD7               	goto	l454
  7759  0DD6                     u2170:	
  7760  0DD6                     l2539:	
  7761  0DD6  178B               	bsf	11,7	;volatile
  7762  0DD7                     l454:	
  7763  0DD7  0008               	return
  7764  0DD8                     __end_of_eepromWrite:	
  7765                           
  7766                           	psect	text14
  7767  0CE7                     __ptext14:	
  7768 ;; *************** function _nvmUnlock *****************
  7769 ;; Defined at:
  7770 ;;		line 45 in file "Nvm.c"
  7771 ;; Parameters:    Size  Location     Type
  7772 ;;		None
  7773 ;; Auto vars:     Size  Location     Type
  7774 ;;		None
  7775 ;; Return value:  Size  Location     Type
  7776 ;;                  1    wreg      void 
  7777 ;; Registers used:
  7778 ;;		wreg
  7779 ;; Tracked objects:
  7780 ;;		On entry : 0/0
  7781 ;;		On exit  : 0/0
  7782 ;;		Unchanged: 0/0
  7783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7788 ;;Total ram usage:        0 bytes
  7789 ;; Hardware stack levels used:    1
  7790 ;; Hardware stack levels required when called:    3
  7791 ;; This function calls:
  7792 ;;		Nothing
  7793 ;; This function is called by:
  7794 ;;		_eepromWrite
  7795 ;; This function uses a non-reentrant model
  7796 ;;
  7797                           
  7798                           
  7799                           ;psect for function _nvmUnlock
  7800  0CE7                     _nvmUnlock:	
  7801  0CE7                     l2511:	
  7802                           ;incstack = 0
  7803                           ; Regs used in _nvmUnlock: [wreg]
  7804                           
  7805                           
  7806                           ;Nvm.c: 47: NVMCON2 = 0x55;
  7807  0CE7  3055               	movlw	85
  7808  0CE8  0030               	movlb	16	; select bank16
  7809  0CE9  009F               	movwf	31	;volsfr
  7810                           
  7811                           ;Nvm.c: 48: NVMCON2 = 0xAA;
  7812  0CEA  30AA               	movlw	170
  7813  0CEB  009F               	movwf	31	;volsfr
  7814  0CEC                     l2513:	
  7815                           
  7816                           ;Nvm.c: 49: NVMCON1bits.WR = 1;
  7817  0CEC  149E               	bsf	30,1	;volsfr
  7818  0CED                     l460:	
  7819  0CED  0008               	return
  7820  0CEE                     __end_of_nvmUnlock:	
  7821                           
  7822                           	psect	text15
  7823  0CF6                     __ptext15:	
  7824 ;; *************** function _adcInit *****************
  7825 ;; Defined at:
  7826 ;;		line 21 in file "PicConfig.c"
  7827 ;; Parameters:    Size  Location     Type
  7828 ;;		None
  7829 ;; Auto vars:     Size  Location     Type
  7830 ;;		None
  7831 ;; Return value:  Size  Location     Type
  7832 ;;                  1    wreg      void 
  7833 ;; Registers used:
  7834 ;;		wreg, status,2
  7835 ;; Tracked objects:
  7836 ;;		On entry : 0/0
  7837 ;;		On exit  : 0/0
  7838 ;;		Unchanged: 0/0
  7839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7844 ;;Total ram usage:        0 bytes
  7845 ;; Hardware stack levels used:    1
  7846 ;; Hardware stack levels required when called:    3
  7847 ;; This function calls:
  7848 ;;		Nothing
  7849 ;; This function is called by:
  7850 ;;		_main
  7851 ;; This function uses a non-reentrant model
  7852 ;;
  7853                           
  7854                           
  7855                           ;psect for function _adcInit
  7856  0CF6                     _adcInit:	
  7857  0CF6                     l2737:	
  7858                           ;incstack = 0
  7859                           ; Regs used in _adcInit: [wreg+status,2]
  7860                           
  7861                           
  7862                           ;PicConfig.c: 22: ADCON0 = 0x04;
  7863  0CF6  3004               	movlw	4
  7864  0CF7  0021               	movlb	1	; select bank1
  7865  0CF8  0093               	movwf	19	;volatile
  7866  0CF9                     l2739:	
  7867                           
  7868                           ;PicConfig.c: 23: ADCON1 = 0;
  7869  0CF9  0194               	clrf	20	;volatile
  7870  0CFA                     l2741:	
  7871                           
  7872                           ;PicConfig.c: 24: ADCON2 = 0;
  7873  0CFA  0195               	clrf	21	;volatile
  7874  0CFB                     l2743:	
  7875                           
  7876                           ;PicConfig.c: 25: ADREF = 0;
  7877  0CFB  019A               	clrf	26	;volatile
  7878  0CFC                     l2745:	
  7879                           
  7880                           ;PicConfig.c: 26: ADCLK = 0x3F;
  7881  0CFC  303F               	movlw	63
  7882  0CFD  0098               	movwf	24	;volatile
  7883  0CFE                     l2747:	
  7884                           
  7885                           ;PicConfig.c: 27: ADCON0bits.ADON = 1;
  7886  0CFE  1793               	bsf	19,7	;volatile
  7887  0CFF                     l405:	
  7888  0CFF  0008               	return
  7889  0D00                     __end_of_adcInit:	
  7890                           
  7891                           	psect	text16
  7892  0E03                     __ptext16:	
  7893 ;; *************** function _IO_MAPPING *****************
  7894 ;; Defined at:
  7895 ;;		line 88 in file "MAPPING.c"
  7896 ;; Parameters:    Size  Location     Type
  7897 ;;		None
  7898 ;; Auto vars:     Size  Location     Type
  7899 ;;		None
  7900 ;; Return value:  Size  Location     Type
  7901 ;;                  1    wreg      void 
  7902 ;; Registers used:
  7903 ;;		wreg, status,2, status,0, pclath, cstack
  7904 ;; Tracked objects:
  7905 ;;		On entry : 0/0
  7906 ;;		On exit  : 0/0
  7907 ;;		Unchanged: 0/0
  7908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7913 ;;Total ram usage:        0 bytes
  7914 ;; Hardware stack levels used:    1
  7915 ;; Hardware stack levels required when called:    4
  7916 ;; This function calls:
  7917 ;;		_ppsLock
  7918 ;;		_ppsUnlock
  7919 ;; This function is called by:
  7920 ;;		_main
  7921 ;; This function uses a non-reentrant model
  7922 ;;
  7923                           
  7924                           
  7925                           ;psect for function _IO_MAPPING
  7926  0E03                     _IO_MAPPING:	
  7927  0E03                     l2711:	
  7928                           ;incstack = 0
  7929                           ; Regs used in _IO_MAPPING: [wreg+status,2+status,0+pclath+cstack]
  7930                           
  7931                           
  7932                           ;MAPPING.c: 90: TRISA = 0xFF;
  7933  0E03  30FF               	movlw	255
  7934  0E04  0020               	movlb	0	; select bank0
  7935  0E05  0091               	movwf	17	;volatile
  7936                           
  7937                           ;MAPPING.c: 91: TRISB = 0xFF;
  7938  0E06  30FF               	movlw	255
  7939  0E07  0092               	movwf	18	;volatile
  7940                           
  7941                           ;MAPPING.c: 92: TRISC = 0xFF;
  7942  0E08  30FF               	movlw	255
  7943  0E09  0093               	movwf	19	;volatile
  7944                           
  7945                           ;MAPPING.c: 93: TRISD = 0xFF;
  7946  0E0A  30FF               	movlw	255
  7947  0E0B  0094               	movwf	20	;volatile
  7948                           
  7949                           ;MAPPING.c: 94: TRISE = 0xFF;
  7950  0E0C  30FF               	movlw	255
  7951  0E0D  0095               	movwf	21	;volatile
  7952  0E0E                     l2713:	
  7953                           
  7954                           ;MAPPING.c: 97: ANSELA = 0;
  7955  0E0E  003E               	movlb	30	; select bank30
  7956  0E0F  01B8               	clrf	56	;volatile
  7957  0E10                     l2715:	
  7958                           
  7959                           ;MAPPING.c: 98: ANSELB = 0;
  7960  0E10  01C3               	clrf	67	;volatile
  7961                           
  7962                           ;MAPPING.c: 99: ANSELC = 0xC3;
  7963  0E11  30C3               	movlw	195
  7964  0E12  00CE               	movwf	78	;volatile
  7965  0E13                     l2717:	
  7966                           
  7967                           ;MAPPING.c: 100: ANSELD = 0;
  7968  0E13  01D9               	clrf	89	;volatile
  7969  0E14                     l2719:	
  7970                           
  7971                           ;MAPPING.c: 101: ANSELE = 0;
  7972  0E14  01E4               	clrf	100	;volatile
  7973                           
  7974                           ;MAPPING.c: 104: WPUA = 0xCF;
  7975  0E15  30CF               	movlw	207
  7976  0E16  00B9               	movwf	57	;volatile
  7977                           
  7978                           ;MAPPING.c: 105: WPUB = 0xFF;
  7979  0E17  30FF               	movlw	255
  7980  0E18  00C4               	movwf	68	;volatile
  7981                           
  7982                           ;MAPPING.c: 106: WPUC = 0x04;
  7983  0E19  3004               	movlw	4
  7984  0E1A  00CF               	movwf	79	;volatile
  7985                           
  7986                           ;MAPPING.c: 107: WPUD = 0x01;
  7987  0E1B  3001               	movlw	1
  7988  0E1C  00DA               	movwf	90	;volatile
  7989  0E1D                     l2721:	
  7990                           
  7991                           ;MAPPING.c: 108: WPUE = 0;
  7992  0E1D  01E5               	clrf	101	;volatile
  7993  0E1E                     l2723:	
  7994                           
  7995                           ;MAPPING.c: 110: TRISDbits.TRISD5 = 0;
  7996  0E1E  0020               	movlb	0	; select bank0
  7997  0E1F  1294               	bcf	20,5	;volatile
  7998  0E20                     l2725:	
  7999                           
  8000                           ;MAPPING.c: 111: WPUDbits.WPUD4 = 1;
  8001  0E20  003E               	movlb	30	; select bank30
  8002  0E21  165A               	bsf	90,4	;volatile
  8003  0E22                     l2727:	
  8004                           
  8005                           ;MAPPING.c: 113: TRISCbits.TRISC5 = 0;
  8006  0E22  0020               	movlb	0	; select bank0
  8007  0E23  1293               	bcf	19,5	;volatile
  8008  0E24                     l2729:	
  8009                           
  8010                           ;MAPPING.c: 114: TRISAbits.TRISA4 = 0;
  8011  0E24  1211               	bcf	17,4	;volatile
  8012  0E25                     l2731:	
  8013                           
  8014                           ;MAPPING.c: 115: ppsUnlock();
  8015  0E25  318C  24E0  318E   	fcall	_ppsUnlock
  8016  0E28                     l2733:	
  8017                           
  8018                           ;MAPPING.c: 116: RC5PPS = 0x15;
  8019  0E28  3015               	movlw	21
  8020  0E29  003E               	movlb	30	; select bank30
  8021  0E2A  00A5               	movwf	37	;volatile
  8022  0E2B                     l2735:	
  8023                           
  8024                           ;MAPPING.c: 117: ppsLock();
  8025  0E2B  318C  24EE  318E   	fcall	_ppsLock
  8026  0E2E                     l507:	
  8027  0E2E  0008               	return
  8028  0E2F                     __end_of_IO_MAPPING:	
  8029                           
  8030                           	psect	text17
  8031  0CE0                     __ptext17:	
  8032 ;; *************** function _ppsUnlock *****************
  8033 ;; Defined at:
  8034 ;;		line 9 in file "PicConfig.c"
  8035 ;; Parameters:    Size  Location     Type
  8036 ;;		None
  8037 ;; Auto vars:     Size  Location     Type
  8038 ;;		None
  8039 ;; Return value:  Size  Location     Type
  8040 ;;                  1    wreg      void 
  8041 ;; Registers used:
  8042 ;;		wreg, status,2
  8043 ;; Tracked objects:
  8044 ;;		On entry : 0/0
  8045 ;;		On exit  : 0/0
  8046 ;;		Unchanged: 0/0
  8047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8052 ;;Total ram usage:        0 bytes
  8053 ;; Hardware stack levels used:    1
  8054 ;; Hardware stack levels required when called:    3
  8055 ;; This function calls:
  8056 ;;		Nothing
  8057 ;; This function is called by:
  8058 ;;		_IO_MAPPING
  8059 ;; This function uses a non-reentrant model
  8060 ;;
  8061                           
  8062                           
  8063                           ;psect for function _ppsUnlock
  8064  0CE0                     _ppsUnlock:	
  8065  0CE0                     l2689:	
  8066                           ;incstack = 0
  8067                           ; Regs used in _ppsUnlock: [wreg+status,2]
  8068                           
  8069                           
  8070                           ;PicConfig.c: 10: PPSLOCK = 0x55;
  8071  0CE0  3055               	movlw	85
  8072  0CE1  003D               	movlb	29	; select bank29
  8073  0CE2  008F               	movwf	15	;volsfr
  8074                           
  8075                           ;PicConfig.c: 11: PPSLOCK = 0xAA;
  8076  0CE3  30AA               	movlw	170
  8077  0CE4  008F               	movwf	15	;volsfr
  8078  0CE5                     l2691:	
  8079                           
  8080                           ;PicConfig.c: 12: PPSLOCK = 0;
  8081  0CE5  018F               	clrf	15	;volsfr
  8082  0CE6                     l399:	
  8083  0CE6  0008               	return
  8084  0CE7                     __end_of_ppsUnlock:	
  8085                           
  8086                           	psect	text18
  8087  0CEE                     __ptext18:	
  8088 ;; *************** function _ppsLock *****************
  8089 ;; Defined at:
  8090 ;;		line 15 in file "PicConfig.c"
  8091 ;; Parameters:    Size  Location     Type
  8092 ;;		None
  8093 ;; Auto vars:     Size  Location     Type
  8094 ;;		None
  8095 ;; Return value:  Size  Location     Type
  8096 ;;                  1    wreg      void 
  8097 ;; Registers used:
  8098 ;;		wreg
  8099 ;; Tracked objects:
  8100 ;;		On entry : 0/0
  8101 ;;		On exit  : 0/0
  8102 ;;		Unchanged: 0/0
  8103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8108 ;;Total ram usage:        0 bytes
  8109 ;; Hardware stack levels used:    1
  8110 ;; Hardware stack levels required when called:    3
  8111 ;; This function calls:
  8112 ;;		Nothing
  8113 ;; This function is called by:
  8114 ;;		_IO_MAPPING
  8115 ;; This function uses a non-reentrant model
  8116 ;;
  8117                           
  8118                           
  8119                           ;psect for function _ppsLock
  8120  0CEE                     _ppsLock:	
  8121  0CEE                     l2693:	
  8122                           ;incstack = 0
  8123                           ; Regs used in _ppsLock: [wreg]
  8124                           
  8125                           
  8126                           ;PicConfig.c: 16: PPSLOCK = 0x55;
  8127  0CEE  3055               	movlw	85
  8128  0CEF  003D               	movlb	29	; select bank29
  8129  0CF0  008F               	movwf	15	;volsfr
  8130                           
  8131                           ;PicConfig.c: 17: PPSLOCK = 0xAA;
  8132  0CF1  30AA               	movlw	170
  8133  0CF2  008F               	movwf	15	;volsfr
  8134                           
  8135                           ;PicConfig.c: 18: PPSLOCK = 1;
  8136  0CF3  3001               	movlw	1
  8137  0CF4  008F               	movwf	15	;volsfr
  8138  0CF5                     l402:	
  8139  0CF5  0008               	return
  8140  0CF6                     __end_of_ppsLock:	
  8141                           
  8142                           	psect	intentry
  8143  0004                     __pintentry:	
  8144 ;; *************** function _PS2Command *****************
  8145 ;; Defined at:
  8146 ;;		line 56 in file "main.c"
  8147 ;; Parameters:    Size  Location     Type
  8148 ;;		None
  8149 ;; Auto vars:     Size  Location     Type
  8150 ;;  cmd             1    5[COMMON] unsigned char 
  8151 ;; Return value:  Size  Location     Type
  8152 ;;                  1    wreg      void 
  8153 ;; Registers used:
  8154 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8155 ;; Tracked objects:
  8156 ;;		On entry : 0/0
  8157 ;;		On exit  : 0/0
  8158 ;;		Unchanged: 0/0
  8159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8161 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8162 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8163 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8164 ;;Total ram usage:        2 bytes
  8165 ;; Hardware stack levels used:    1
  8166 ;; Hardware stack levels required when called:    2
  8167 ;; This function calls:
  8168 ;;		_pollController
  8169 ;;		_spiRead
  8170 ;;		_spiWrite
  8171 ;;		i1_reversebyte
  8172 ;; This function is called by:
  8173 ;;		Interrupt level 1
  8174 ;; This function uses a non-reentrant model
  8175 ;;
  8176                           
  8177  0004                     _PS2Command:	
  8178                           
  8179                           ;incstack = 0
  8180  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  8181                           
  8182                           ; Regs used in _PS2Command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8183  0005  3180               	pagesel	$
  8184  0006                     i1l2213:	
  8185                           
  8186                           ;main.c: 58: if (SSP1IF) {
  8187  0006  002E               	movlb	14	; select bank14
  8188  0007  1C0F               	btfss	15,0	;volatile
  8189  0008  280A               	goto	u175_21
  8190  0009  280B               	goto	u175_20
  8191  000A                     u175_21:	
  8192  000A  2A1F               	goto	i1l184
  8193  000B                     u175_20:	
  8194  000B                     i1l2215:	
  8195                           
  8196                           ;main.c: 59: char cmd = spiRead();
  8197  000B  318C  24DA  3180   	fcall	_spiRead
  8198  000E  00F4               	movwf	??_PS2Command
  8199  000F  0874               	movf	??_PS2Command,w
  8200  0010  00F5               	movwf	PS2Command@cmd
  8201                           
  8202                           ;main.c: 60: switch (cmdCounter) {
  8203  0011  29D1               	goto	i1l2393
  8204  0012                     i1l2217:	
  8205                           
  8206                           ;main.c: 67: response[2] = 0x00;
  8207  0012  0021               	movlb	1	; select bank1
  8208  0013  01DA               	clrf	(_response^(0+128)+2)
  8209                           
  8210                           ;main.c: 68: response[3] = 0x00;
  8211  0014  01DB               	clrf	(_response^(0+128)+3)
  8212  0015                     i1l2219:	
  8213                           
  8214                           ;main.c: 69: response[4] = 0x40;
  8215  0015  3040               	movlw	64
  8216  0016  00F4               	movwf	??_PS2Command
  8217  0017  0874               	movf	??_PS2Command,w
  8218  0018  00DC               	movwf	(_response^(0+128)+4)
  8219  0019                     i1l2221:	
  8220                           
  8221                           ;main.c: 70: response[5] = 0x00;
  8222  0019  01DD               	clrf	(_response^(0+128)+5)
  8223  001A                     i1l2223:	
  8224                           
  8225                           ;main.c: 71: response[6] = 0x00;
  8226  001A  01DE               	clrf	(_response^(0+128)+6)
  8227  001B                     i1l2225:	
  8228                           
  8229                           ;main.c: 72: response[7] = 0x5A;
  8230  001B  305A               	movlw	90
  8231  001C  00F4               	movwf	??_PS2Command
  8232  001D  0874               	movf	??_PS2Command,w
  8233  001E  00DF               	movwf	(_response^(0+128)+7)
  8234  001F                     i1l2227:	
  8235                           
  8236                           ;main.c: 73: previousCmd = cmd;
  8237  001F  0875               	movf	PS2Command@cmd,w
  8238  0020  00F4               	movwf	??_PS2Command
  8239  0021  0874               	movf	??_PS2Command,w
  8240  0022  00F6               	movwf	_previousCmd
  8241                           
  8242                           ;main.c: 74: break;
  8243  0023  29DF               	goto	i1l2395
  8244  0024                     i1l2229:	
  8245                           
  8246                           ;main.c: 81: if(analogMode == 0) {
  8247  0024  0878               	movf	_analogMode,w
  8248  0025  1D03               	btfss	3,2
  8249  0026  2828               	goto	u176_21
  8250  0027  2829               	goto	u176_20
  8251  0028                     u176_21:	
  8252  0028  282E               	goto	i1l2233
  8253  0029                     u176_20:	
  8254  0029                     i1l2231:	
  8255                           
  8256                           ;main.c: 82: response[2] = 0x00;
  8257  0029  0021               	movlb	1	; select bank1
  8258  002A  01DA               	clrf	(_response^(0+128)+2)
  8259                           
  8260                           ;main.c: 83: response[3] = 0x00;
  8261  002B  01DB               	clrf	(_response^(0+128)+3)
  8262                           
  8263                           ;main.c: 84: response[4] = 0x00;
  8264  002C  01DC               	clrf	(_response^(0+128)+4)
  8265                           
  8266                           ;main.c: 85: response[7] = 0x00;
  8267  002D  01DF               	clrf	(_response^(0+128)+7)
  8268  002E                     i1l2233:	
  8269                           
  8270                           ;main.c: 86: };main.c: 87: if(analogMode >= 1) {
  8271  002E  0878               	movf	_analogMode,w
  8272  002F  1903               	btfsc	3,2
  8273  0030  2832               	goto	u177_21
  8274  0031  2833               	goto	u177_20
  8275  0032                     u177_21:	
  8276  0032  2844               	goto	i1l2237
  8277  0033                     u177_20:	
  8278  0033                     i1l2235:	
  8279                           
  8280                           ;main.c: 92: response[2] = 0xFF;
  8281  0033  30FF               	movlw	255
  8282  0034  00F4               	movwf	??_PS2Command
  8283  0035  0874               	movf	??_PS2Command,w
  8284  0036  0021               	movlb	1	; select bank1
  8285  0037  00DA               	movwf	(_response^(0+128)+2)
  8286                           
  8287                           ;main.c: 93: response[3] = 0xFF;
  8288  0038  30FF               	movlw	255
  8289  0039  00F4               	movwf	??_PS2Command
  8290  003A  0874               	movf	??_PS2Command,w
  8291  003B  00DB               	movwf	(_response^(0+128)+3)
  8292                           
  8293                           ;main.c: 94: response[4] = 0xC0;
  8294  003C  30C0               	movlw	192
  8295  003D  00F4               	movwf	??_PS2Command
  8296  003E  0874               	movf	??_PS2Command,w
  8297  003F  00DC               	movwf	(_response^(0+128)+4)
  8298                           
  8299                           ;main.c: 95: response[7] = 0x5A;
  8300  0040  305A               	movlw	90
  8301  0041  00F4               	movwf	??_PS2Command
  8302  0042  0874               	movf	??_PS2Command,w
  8303  0043  00DF               	movwf	(_response^(0+128)+7)
  8304  0044                     i1l2237:	
  8305                           
  8306                           ;main.c: 96: };main.c: 97: response[5] = 0x00;
  8307  0044  0021               	movlb	1	; select bank1
  8308  0045  01DD               	clrf	(_response^(0+128)+5)
  8309  0046                     i1l2239:	
  8310                           
  8311                           ;main.c: 98: response[6] = 0x00;
  8312  0046  01DE               	clrf	(_response^(0+128)+6)
  8313                           
  8314                           ;main.c: 99: break;
  8315  0047  29DF               	goto	i1l2395
  8316  0048                     i1l2241:	
  8317                           
  8318                           ;main.c: 105: pollController(response);
  8319  0048  30D8               	movlw	(low (_response| 0))& (0+255)
  8320  0049  318F  2766  3180   	fcall	_pollController
  8321  004C  281F               	goto	i1l2227
  8322  004D                     i1l2245:	
  8323                           
  8324                           ;main.c: 114: if(escapeMode) {
  8325  004D  0877               	movf	_escapeMode,w
  8326  004E  1903               	btfsc	3,2
  8327  004F  2851               	goto	u178_21
  8328  0050  2852               	goto	u178_20
  8329  0051                     u178_21:	
  8330  0051  285A               	goto	i1l2249
  8331  0052                     u178_20:	
  8332  0052                     i1l2247:	
  8333                           
  8334                           ;main.c: 115: response[2] = 0x00;
  8335  0052  0021               	movlb	1	; select bank1
  8336  0053  01DA               	clrf	(_response^(0+128)+2)
  8337                           
  8338                           ;main.c: 116: response[3] = 0x00;
  8339  0054  01DB               	clrf	(_response^(0+128)+3)
  8340                           
  8341                           ;main.c: 117: response[4] = 0x00;
  8342  0055  01DC               	clrf	(_response^(0+128)+4)
  8343                           
  8344                           ;main.c: 118: response[5] = 0x00;
  8345  0056  01DD               	clrf	(_response^(0+128)+5)
  8346                           
  8347                           ;main.c: 119: response[6] = 0x00;
  8348  0057  01DE               	clrf	(_response^(0+128)+6)
  8349                           
  8350                           ;main.c: 120: response[7] = 0x00;
  8351  0058  01DF               	clrf	(_response^(0+128)+7)
  8352                           
  8353                           ;main.c: 121: }
  8354  0059  281F               	goto	i1l2227
  8355  005A                     i1l2249:	
  8356                           
  8357                           ;main.c: 122: else {;main.c: 123: pollController(response);
  8358  005A  30D8               	movlw	(low (_response| 0))& (0+255)
  8359  005B  318F  2766  3180   	fcall	_pollController
  8360  005E  281F               	goto	i1l2227
  8361  005F                     i1l2257:	
  8362                           
  8363                           ;main.c: 146: response[2] = 0xC0;
  8364  005F  30C0               	movlw	192
  8365  0060  00F4               	movwf	??_PS2Command
  8366  0061  0874               	movf	??_PS2Command,w
  8367  0062  0021               	movlb	1	; select bank1
  8368  0063  00DA               	movwf	(_response^(0+128)+2)
  8369                           
  8370                           ;main.c: 147: response[3] = 0x40;
  8371  0064  3040               	movlw	64
  8372  0065  00F4               	movwf	??_PS2Command
  8373  0066  0874               	movf	??_PS2Command,w
  8374  0067  00DB               	movwf	(_response^(0+128)+3)
  8375  0068                     i1l2259:	
  8376                           
  8377                           ;main.c: 148: if (analogMode >= 1) response[4] = 0x80;
  8378  0068  0878               	movf	_analogMode,w
  8379  0069  1903               	btfsc	3,2
  8380  006A  286C               	goto	u179_21
  8381  006B  286D               	goto	u179_20
  8382  006C                     u179_21:	
  8383  006C  2872               	goto	i1l2263
  8384  006D                     u179_20:	
  8385  006D                     i1l2261:	
  8386  006D  3080               	movlw	128
  8387  006E  00F4               	movwf	??_PS2Command
  8388  006F  0874               	movf	??_PS2Command,w
  8389  0070  00DC               	movwf	(_response^(0+128)+4)
  8390  0071  2873               	goto	i1l2265
  8391  0072                     i1l2263:	
  8392                           
  8393                           ;main.c: 149: else response[4] = 0x00;
  8394  0072  01DC               	clrf	(_response^(0+128)+4)
  8395  0073                     i1l2265:	
  8396                           
  8397                           ;main.c: 150: response[5] = 0x40;
  8398  0073  3040               	movlw	64
  8399  0074  00F4               	movwf	??_PS2Command
  8400  0075  0874               	movf	??_PS2Command,w
  8401  0076  00DD               	movwf	(_response^(0+128)+5)
  8402  0077                     i1l2267:	
  8403                           
  8404                           ;main.c: 151: response[6] = 0x80;
  8405  0077  3080               	movlw	128
  8406  0078  00F4               	movwf	??_PS2Command
  8407  0079  0874               	movf	??_PS2Command,w
  8408  007A  00DE               	movwf	(_response^(0+128)+6)
  8409                           
  8410                           ;main.c: 152: response[7] = 0x00;
  8411  007B  01DF               	clrf	(_response^(0+128)+7)
  8412                           
  8413                           ;main.c: 153: break;
  8414  007C  29DF               	goto	i1l2395
  8415  007D                     i1l2269:	
  8416                           
  8417                           ;main.c: 159: response[2] = 0x00;
  8418  007D  0021               	movlb	1	; select bank1
  8419  007E  01DA               	clrf	(_response^(0+128)+2)
  8420                           
  8421                           ;main.c: 160: response[3] = 0x00;
  8422  007F  01DB               	clrf	(_response^(0+128)+3)
  8423  0080                     i1l2271:	
  8424                           
  8425                           ;main.c: 161: response[4] = 0x80;
  8426  0080  3080               	movlw	128
  8427  0081  00F4               	movwf	??_PS2Command
  8428  0082  0874               	movf	??_PS2Command,w
  8429  0083  00DC               	movwf	(_response^(0+128)+4)
  8430  0084                     i1l2273:	
  8431                           
  8432                           ;main.c: 162: response[5] = 0x40;
  8433  0084  3040               	movlw	64
  8434  0085  00F4               	movwf	??_PS2Command
  8435  0086  0874               	movf	??_PS2Command,w
  8436  0087  00DD               	movwf	(_response^(0+128)+5)
  8437                           
  8438                           ;main.c: 163: response[6] = 0x00;
  8439  0088  01DE               	clrf	(_response^(0+128)+6)
  8440  0089                     i1l2275:	
  8441                           
  8442                           ;main.c: 164: response[7] = 0x50;
  8443  0089  3050               	movlw	80
  8444  008A  00F4               	movwf	??_PS2Command
  8445  008B  0874               	movf	??_PS2Command,w
  8446  008C  00DF               	movwf	(_response^(0+128)+7)
  8447  008D  281F               	goto	i1l2227
  8448  008E                     i1l2279:	
  8449                           
  8450                           ;main.c: 173: response[2] = 0x00;
  8451  008E  0021               	movlb	1	; select bank1
  8452  008F  01DA               	clrf	(_response^(0+128)+2)
  8453                           
  8454                           ;main.c: 174: response[3] = 0x00;
  8455  0090  01DB               	clrf	(_response^(0+128)+3)
  8456  0091                     i1l2281:	
  8457                           
  8458                           ;main.c: 175: response[4] = 0x40;
  8459  0091  3040               	movlw	64
  8460  0092  00F4               	movwf	??_PS2Command
  8461  0093  0874               	movf	??_PS2Command,w
  8462  0094  00DC               	movwf	(_response^(0+128)+4)
  8463  0095                     i1l2283:	
  8464                           
  8465                           ;main.c: 176: response[5] = 0x00;
  8466  0095  01DD               	clrf	(_response^(0+128)+5)
  8467                           
  8468                           ;main.c: 177: response[6] = 0x80;
  8469  0096  3080               	movlw	128
  8470  0097  00F4               	movwf	??_PS2Command
  8471  0098  0874               	movf	??_PS2Command,w
  8472  0099  00DE               	movwf	(_response^(0+128)+6)
  8473  009A                     i1l2285:	
  8474                           
  8475                           ;main.c: 178: response[7] = 0x00;
  8476  009A  01DF               	clrf	(_response^(0+128)+7)
  8477                           
  8478                           ;main.c: 179: break;
  8479  009B  29DF               	goto	i1l2395
  8480  009C                     i1l2287:	
  8481                           
  8482                           ;main.c: 186: response[2] = 0x00;
  8483  009C  0021               	movlb	1	; select bank1
  8484  009D  01DA               	clrf	(_response^(0+128)+2)
  8485                           
  8486                           ;main.c: 187: response[3] = 0x00;
  8487  009E  01DB               	clrf	(_response^(0+128)+3)
  8488                           
  8489                           ;main.c: 188: response[4] = 0x00;
  8490  009F  01DC               	clrf	(_response^(0+128)+4)
  8491  00A0                     i1l2289:	
  8492                           
  8493                           ;main.c: 189: response[5] = 0x20;
  8494  00A0  3020               	movlw	32
  8495  00A1  00F4               	movwf	??_PS2Command
  8496  00A2  0874               	movf	??_PS2Command,w
  8497  00A3  00DD               	movwf	(_response^(0+128)+5)
  8498  00A4                     i1l2291:	
  8499                           
  8500                           ;main.c: 190: response[6] = 0x00;
  8501  00A4  01DE               	clrf	(_response^(0+128)+6)
  8502  00A5                     i1l2293:	
  8503                           
  8504                           ;main.c: 191: response[7] = 0x00;
  8505  00A5  01DF               	clrf	(_response^(0+128)+7)
  8506  00A6  281F               	goto	i1l2227
  8507  00A7                     i1l2297:	
  8508                           
  8509                           ;main.c: 199: response[2] = MAP_SMALL_MOTOR;
  8510  00A7  0020               	movlb	0	; select bank0
  8511  00A8  085F               	movf	_MAP_SMALL_MOTOR,w
  8512  00A9  00F4               	movwf	??_PS2Command
  8513  00AA  0874               	movf	??_PS2Command,w
  8514  00AB  0021               	movlb	1	; select bank1
  8515  00AC  00DA               	movwf	(_response^(0+128)+2)
  8516                           
  8517                           ;main.c: 200: response[3] = MAP_LARGE_MOTOR;
  8518  00AD  0020               	movlb	0	; select bank0
  8519  00AE  085E               	movf	_MAP_LARGE_MOTOR,w
  8520  00AF  00F4               	movwf	??_PS2Command
  8521  00B0  0874               	movf	??_PS2Command,w
  8522  00B1  0021               	movlb	1	; select bank1
  8523  00B2  00DB               	movwf	(_response^(0+128)+3)
  8524                           
  8525                           ;main.c: 201: response[4] = 0xFF;
  8526  00B3  30FF               	movlw	255
  8527  00B4  00F4               	movwf	??_PS2Command
  8528  00B5  0874               	movf	??_PS2Command,w
  8529  00B6  00DC               	movwf	(_response^(0+128)+4)
  8530                           
  8531                           ;main.c: 202: response[5] = 0xFF;
  8532  00B7  30FF               	movlw	255
  8533  00B8  00F4               	movwf	??_PS2Command
  8534  00B9  0874               	movf	??_PS2Command,w
  8535  00BA  00DD               	movwf	(_response^(0+128)+5)
  8536                           
  8537                           ;main.c: 203: response[6] = 0xFF;
  8538  00BB  30FF               	movlw	255
  8539  00BC  00F4               	movwf	??_PS2Command
  8540  00BD  0874               	movf	??_PS2Command,w
  8541  00BE  00DE               	movwf	(_response^(0+128)+6)
  8542                           
  8543                           ;main.c: 204: response[7] = 0xFF;
  8544  00BF  30FF               	movlw	255
  8545  00C0  00F4               	movwf	??_PS2Command
  8546  00C1  0874               	movf	??_PS2Command,w
  8547  00C2  00DF               	movwf	(_response^(0+128)+7)
  8548                           
  8549                           ;main.c: 205: previousCmd = cmd;
  8550  00C3  0875               	movf	PS2Command@cmd,w
  8551  00C4  00F4               	movwf	??_PS2Command
  8552  00C5  0874               	movf	??_PS2Command,w
  8553  00C6  00F6               	movwf	_previousCmd
  8554                           
  8555                           ;main.c: 206: break;
  8556  00C7  29DF               	goto	i1l2395
  8557  00C8                     i1l2299:	
  8558                           
  8559                           ;main.c: 211: response[2] = 0x00;
  8560  00C8  0021               	movlb	1	; select bank1
  8561  00C9  01DA               	clrf	(_response^(0+128)+2)
  8562                           
  8563                           ;main.c: 212: response[3] = 0x00;
  8564  00CA  01DB               	clrf	(_response^(0+128)+3)
  8565                           
  8566                           ;main.c: 213: response[4] = 0x00;
  8567  00CB  01DC               	clrf	(_response^(0+128)+4)
  8568                           
  8569                           ;main.c: 214: response[5] = 0x00;
  8570  00CC  01DD               	clrf	(_response^(0+128)+5)
  8571                           
  8572                           ;main.c: 215: response[6] = 0x00;
  8573  00CD  01DE               	clrf	(_response^(0+128)+6)
  8574  00CE                     i1l2301:	
  8575                           
  8576                           ;main.c: 216: response[7] = 0x5A;
  8577  00CE  305A               	movlw	90
  8578  00CF  00F4               	movwf	??_PS2Command
  8579  00D0  0874               	movf	??_PS2Command,w
  8580  00D1  00DF               	movwf	(_response^(0+128)+7)
  8581  00D2                     i1l2303:	
  8582                           
  8583                           ;main.c: 217: previousCmd = cmd;
  8584  00D2  0875               	movf	PS2Command@cmd,w
  8585  00D3  00F4               	movwf	??_PS2Command
  8586  00D4  0874               	movf	??_PS2Command,w
  8587  00D5  00F6               	movwf	_previousCmd
  8588  00D6                     i1l2305:	
  8589                           
  8590                           ;main.c: 218: if(analogMode == 1) analogMode = 2;
  8591  00D6  0378               	decf	_analogMode,w
  8592  00D7  1D03               	btfss	3,2
  8593  00D8  28DA               	goto	u180_21
  8594  00D9  28DB               	goto	u180_20
  8595  00DA                     u180_21:	
  8596  00DA  29DF               	goto	i1l2395
  8597  00DB                     u180_20:	
  8598  00DB                     i1l2307:	
  8599  00DB  3002               	movlw	2
  8600  00DC  00F4               	movwf	??_PS2Command
  8601  00DD  0874               	movf	??_PS2Command,w
  8602  00DE  00F8               	movwf	_analogMode
  8603  00DF  29DF               	goto	i1l2395
  8604  00E0                     i1l2311:	
  8605  00E0  0875               	movf	PS2Command@cmd,w
  8606                           
  8607                           ; Switch size 1, requested type "simple"
  8608                           ; Number of cases is 11, Range of values is 2 to 242
  8609                           ; switch strategies available:
  8610                           ; Name         Instructions Cycles
  8611                           ; simple_byte           34    18 (average)
  8612                           ; jumptable            263     9 (fixed)
  8613                           ;	Chosen strategy is simple_byte
  8614  00E1  3A02               	xorlw	2	; case 2
  8615  00E2  1903               	skipnz
  8616  00E3  2812               	goto	i1l2217
  8617  00E4  3A20               	xorlw	32	; case 34
  8618  00E5  1903               	skipnz
  8619  00E6  2852               	goto	i1l2247
  8620  00E7  3A10               	xorlw	16	; case 50
  8621  00E8  1903               	skipnz
  8622  00E9  289C               	goto	i1l2287
  8623  00EA  3A70               	xorlw	112	; case 66
  8624  00EB  1903               	skipnz
  8625  00EC  2848               	goto	i1l2241
  8626  00ED  3A20               	xorlw	32	; case 98
  8627  00EE  1903               	skipnz
  8628  00EF  287D               	goto	i1l2269
  8629  00F0  3AE0               	xorlw	224	; case 130
  8630  00F1  1903               	skipnz
  8631  00F2  2824               	goto	i1l2229
  8632  00F3  3A20               	xorlw	32	; case 162
  8633  00F4  1903               	skipnz
  8634  00F5  285F               	goto	i1l2257
  8635  00F6  3A10               	xorlw	16	; case 178
  8636  00F7  1903               	skipnz
  8637  00F8  28A7               	goto	i1l2297
  8638  00F9  3A70               	xorlw	112	; case 194
  8639  00FA  1903               	skipnz
  8640  00FB  284D               	goto	i1l2245
  8641  00FC  3A20               	xorlw	32	; case 226
  8642  00FD  1903               	skipnz
  8643  00FE  288E               	goto	i1l2279
  8644  00FF  3A10               	xorlw	16	; case 242
  8645  0100  1903               	skipnz
  8646  0101  28C8               	goto	i1l2299
  8647  0102  29DF               	goto	i1l2395
  8648  0103                     i1l2313:	
  8649                           
  8650                           ;main.c: 225: INIT_PRESSURE_SENSOR_byte3 = cmd;
  8651  0103  0875               	movf	PS2Command@cmd,w
  8652  0104  00F4               	movwf	??_PS2Command
  8653  0105  0874               	movf	??_PS2Command,w
  8654  0106  0020               	movlb	0	; select bank0
  8655  0107  00ED               	movwf	_INIT_PRESSURE_SENSOR_byte3
  8656                           
  8657                           ;main.c: 226: break;
  8658  0108  29DF               	goto	i1l2395
  8659  0109                     i1l2315:	
  8660                           
  8661                           ;main.c: 228: if(MAP_SMALL_MOTOR == 0 && cmd == 0xFF) RD6 = 1;
  8662  0109  0020               	movlb	0	; select bank0
  8663  010A  085F               	movf	_MAP_SMALL_MOTOR,w
  8664  010B  1D03               	btfss	3,2
  8665  010C  290E               	goto	u181_21
  8666  010D  290F               	goto	u181_20
  8667  010E                     u181_21:	
  8668  010E  2916               	goto	i1l148
  8669  010F                     u181_20:	
  8670  010F                     i1l2317:	
  8671  010F  0A75               	incf	PS2Command@cmd,w
  8672  0110  1D03               	btfss	3,2
  8673  0111  2913               	goto	u182_21
  8674  0112  2914               	goto	u182_20
  8675  0113                     u182_21:	
  8676  0113  2916               	goto	i1l148
  8677  0114                     u182_20:	
  8678  0114                     i1l2319:	
  8679  0114  170F               	bsf	15,6	;volatile
  8680  0115  29DF               	goto	i1l2395
  8681  0116                     i1l148:	
  8682                           
  8683                           ;main.c: 229: else RD6 = 0;
  8684  0116  130F               	bcf	15,6	;volatile
  8685  0117  29DF               	goto	i1l2395
  8686  0118                     i1l2321:	
  8687                           
  8688                           ;main.c: 232: if (cmd == 0x80) escapeMode = 1;
  8689  0118  3080               	movlw	128
  8690  0119  0675               	xorwf	PS2Command@cmd,w
  8691  011A  1D03               	btfss	3,2
  8692  011B  291D               	goto	u183_21
  8693  011C  291E               	goto	u183_20
  8694  011D                     u183_21:	
  8695  011D  2921               	goto	i1l2325
  8696  011E                     u183_20:	
  8697  011E                     i1l2323:	
  8698  011E  01F7               	clrf	_escapeMode
  8699  011F  0AF7               	incf	_escapeMode,f
  8700  0120  29DF               	goto	i1l2395
  8701  0121                     i1l2325:	
  8702                           
  8703                           ;main.c: 233: else escapeMode = 0;
  8704  0121  01F7               	clrf	_escapeMode
  8705  0122  29DF               	goto	i1l2395
  8706  0123                     i1l2327:	
  8707                           
  8708                           ;main.c: 236: if (cmd == 0x80) analogMode = 1;
  8709  0123  3080               	movlw	128
  8710  0124  0675               	xorwf	PS2Command@cmd,w
  8711  0125  1D03               	btfss	3,2
  8712  0126  2928               	goto	u184_21
  8713  0127  2929               	goto	u184_20
  8714  0128                     u184_21:	
  8715  0128  292C               	goto	i1l2331
  8716  0129                     u184_20:	
  8717  0129                     i1l2329:	
  8718  0129  01F8               	clrf	_analogMode
  8719  012A  0AF8               	incf	_analogMode,f
  8720  012B  29DF               	goto	i1l2395
  8721  012C                     i1l2331:	
  8722                           
  8723                           ;main.c: 237: else analogMode = 0;
  8724  012C  01F8               	clrf	_analogMode
  8725  012D  29DF               	goto	i1l2395
  8726  012E                     i1l2333:	
  8727                           
  8728                           ;main.c: 240: if (cmd == 0x80) {
  8729  012E  3080               	movlw	128
  8730  012F  0675               	xorwf	PS2Command@cmd,w
  8731  0130  1D03               	btfss	3,2
  8732  0131  2933               	goto	u185_21
  8733  0132  2934               	goto	u185_20
  8734  0133                     u185_21:	
  8735  0133  29DF               	goto	i1l2395
  8736  0134                     u185_20:	
  8737  0134                     i1l2335:	
  8738                           
  8739                           ;main.c: 241: response[2] = 0x00;
  8740  0134  0021               	movlb	1	; select bank1
  8741  0135  01DA               	clrf	(_response^(0+128)+2)
  8742                           
  8743                           ;main.c: 242: response[3] = 0x00;
  8744  0136  01DB               	clrf	(_response^(0+128)+3)
  8745  0137                     i1l2337:	
  8746                           
  8747                           ;main.c: 243: response[4] = 0x80;
  8748  0137  3080               	movlw	128
  8749  0138  00F4               	movwf	??_PS2Command
  8750  0139  0874               	movf	??_PS2Command,w
  8751  013A  00DC               	movwf	(_response^(0+128)+4)
  8752  013B                     i1l2339:	
  8753                           
  8754                           ;main.c: 244: response[5] = 0x80;
  8755  013B  3080               	movlw	128
  8756  013C  00F4               	movwf	??_PS2Command
  8757  013D  0874               	movf	??_PS2Command,w
  8758  013E  00DD               	movwf	(_response^(0+128)+5)
  8759  013F                     i1l2341:	
  8760                           
  8761                           ;main.c: 245: response[6] = 0x80;
  8762  013F  3080               	movlw	128
  8763  0140  00F4               	movwf	??_PS2Command
  8764  0141  0874               	movf	??_PS2Command,w
  8765  0142  00DE               	movwf	(_response^(0+128)+6)
  8766  0143                     i1l2343:	
  8767                           
  8768                           ;main.c: 246: response[7] = 0x28;
  8769  0143  3028               	movlw	40
  8770  0144  00F4               	movwf	??_PS2Command
  8771  0145  0874               	movf	??_PS2Command,w
  8772  0146  00DF               	movwf	(_response^(0+128)+7)
  8773  0147  29DF               	goto	i1l2395
  8774  0148                     i1l2345:	
  8775                           
  8776                           ;main.c: 250: if (cmd == 0x80) {
  8777  0148  3080               	movlw	128
  8778  0149  0675               	xorwf	PS2Command@cmd,w
  8779  014A  1D03               	btfss	3,2
  8780  014B  294D               	goto	u186_21
  8781  014C  294E               	goto	u186_20
  8782  014D                     u186_21:	
  8783  014D  29DF               	goto	i1l2395
  8784  014E                     u186_20:	
  8785  014E                     i1l2347:	
  8786                           
  8787                           ;main.c: 251: response[2] = 0x00;
  8788  014E  0021               	movlb	1	; select bank1
  8789  014F  01DA               	clrf	(_response^(0+128)+2)
  8790                           
  8791                           ;main.c: 252: response[3] = 0x00;
  8792  0150  01DB               	clrf	(_response^(0+128)+3)
  8793                           
  8794                           ;main.c: 253: response[4] = 0x00;
  8795  0151  01DC               	clrf	(_response^(0+128)+4)
  8796  0152                     i1l2349:	
  8797                           
  8798                           ;main.c: 254: response[5] = 0xE0;
  8799  0152  30E0               	movlw	224
  8800  0153  00F4               	movwf	??_PS2Command
  8801  0154  0874               	movf	??_PS2Command,w
  8802  0155  00DD               	movwf	(_response^(0+128)+5)
  8803  0156                     i1l2351:	
  8804                           
  8805                           ;main.c: 255: response[6] = 0x00;
  8806  0156  01DE               	clrf	(_response^(0+128)+6)
  8807  0157  289A               	goto	i1l2285
  8808  0158                     i1l2355:	
  8809                           
  8810                           ;main.c: 260: CONTROL_RESPONSE_byte3 = cmd;
  8811  0158  0875               	movf	PS2Command@cmd,w
  8812  0159  00F4               	movwf	??_PS2Command
  8813  015A  0874               	movf	??_PS2Command,w
  8814  015B  0020               	movlb	0	; select bank0
  8815  015C  00EB               	movwf	_CONTROL_RESPONSE_byte3
  8816                           
  8817                           ;main.c: 261: break;
  8818  015D  29DF               	goto	i1l2395
  8819  015E                     i1l2357:	
  8820                           
  8821                           ;main.c: 263: MAP_SMALL_MOTOR = cmd;
  8822  015E  0875               	movf	PS2Command@cmd,w
  8823  015F  00F4               	movwf	??_PS2Command
  8824  0160  0874               	movf	??_PS2Command,w
  8825  0161  0020               	movlb	0	; select bank0
  8826  0162  00DF               	movwf	_MAP_SMALL_MOTOR
  8827                           
  8828                           ;main.c: 264: break;
  8829  0163  29DF               	goto	i1l2395
  8830  0164                     i1l2361:	
  8831  0164  0876               	movf	_previousCmd,w
  8832                           
  8833                           ; Switch size 1, requested type "simple"
  8834                           ; Number of cases is 8, Range of values is 2 to 242
  8835                           ; switch strategies available:
  8836                           ; Name         Instructions Cycles
  8837                           ; simple_byte           25    13 (average)
  8838                           ; jumptable            263     9 (fixed)
  8839                           ;	Chosen strategy is simple_byte
  8840  0165  3A02               	xorlw	2	; case 2
  8841  0166  1903               	skipnz
  8842  0167  2903               	goto	i1l2313
  8843  0168  3A20               	xorlw	32	; case 34
  8844  0169  1903               	skipnz
  8845  016A  2923               	goto	i1l2327
  8846  016B  3A10               	xorlw	16	; case 50
  8847  016C  1903               	skipnz
  8848  016D  2948               	goto	i1l2345
  8849  016E  3A70               	xorlw	112	; case 66
  8850  016F  1903               	skipnz
  8851  0170  2909               	goto	i1l2315
  8852  0171  3A20               	xorlw	32	; case 98
  8853  0172  1903               	skipnz
  8854  0173  292E               	goto	i1l2333
  8855  0174  3AD0               	xorlw	208	; case 178
  8856  0175  1903               	skipnz
  8857  0176  295E               	goto	i1l2357
  8858  0177  3A70               	xorlw	112	; case 194
  8859  0178  1903               	skipnz
  8860  0179  2918               	goto	i1l2321
  8861  017A  3A30               	xorlw	48	; case 242
  8862  017B  1903               	skipnz
  8863  017C  2958               	goto	i1l2355
  8864  017D  29DF               	goto	i1l2395
  8865  017E                     i1l2363:	
  8866                           
  8867                           ;main.c: 270: INIT_PRESSURE_SENSOR_byte4 = cmd;
  8868  017E  0875               	movf	PS2Command@cmd,w
  8869  017F  00F4               	movwf	??_PS2Command
  8870  0180  0874               	movf	??_PS2Command,w
  8871  0181  0020               	movlb	0	; select bank0
  8872  0182  00EC               	movwf	_INIT_PRESSURE_SENSOR_byte4
  8873                           
  8874                           ;main.c: 271: break;
  8875  0183  29DF               	goto	i1l2395
  8876  0184                     i1l2365:	
  8877                           
  8878                           ;main.c: 273: if(MAP_LARGE_MOTOR == 0x80 && reversebyte(cmd) >= 0x40) RD7 = 1;
  8879  0184  3080               	movlw	128
  8880  0185  0020               	movlb	0	; select bank0
  8881  0186  065E               	xorwf	_MAP_LARGE_MOTOR,w
  8882  0187  1D03               	btfss	3,2
  8883  0188  298A               	goto	u187_21
  8884  0189  298B               	goto	u187_20
  8885  018A                     u187_21:	
  8886  018A  2999               	goto	i1l167
  8887  018B                     u187_20:	
  8888  018B                     i1l2367:	
  8889  018B  0875               	movf	PS2Command@cmd,w
  8890  018C  318E  262F  3180   	fcall	i1_reversebyte
  8891  018F  00F4               	movwf	??_PS2Command
  8892  0190  3040               	movlw	64
  8893  0191  0274               	subwf	??_PS2Command,w
  8894  0192  1C03               	skipc
  8895  0193  2995               	goto	u188_21
  8896  0194  2996               	goto	u188_20
  8897  0195                     u188_21:	
  8898  0195  2999               	goto	i1l167
  8899  0196                     u188_20:	
  8900  0196                     i1l2369:	
  8901  0196  0020               	movlb	0	; select bank0
  8902  0197  178F               	bsf	15,7	;volatile
  8903  0198  29DF               	goto	i1l2395
  8904  0199                     i1l167:	
  8905                           
  8906                           ;main.c: 274: else RD7 = 0;
  8907  0199  0020               	movlb	0	; select bank0
  8908  019A  138F               	bcf	15,7	;volatile
  8909  019B  29DF               	goto	i1l2395
  8910  019C                     i1l2371:	
  8911                           
  8912                           ;main.c: 277: if(cmd == 0xC0) MODE_LOCK = 1;
  8913  019C  30C0               	movlw	192
  8914  019D  0675               	xorwf	PS2Command@cmd,w
  8915  019E  1D03               	btfss	3,2
  8916  019F  29A1               	goto	u189_21
  8917  01A0  29A2               	goto	u189_20
  8918  01A1                     u189_21:	
  8919  01A1  29A6               	goto	i1l2375
  8920  01A2                     u189_20:	
  8921  01A2                     i1l2373:	
  8922  01A2  0020               	movlb	0	; select bank0
  8923  01A3  01EF               	clrf	_MODE_LOCK
  8924  01A4  0AEF               	incf	_MODE_LOCK,f
  8925  01A5  29DF               	goto	i1l2395
  8926  01A6                     i1l2375:	
  8927                           
  8928                           ;main.c: 278: else MODE_LOCK = 0;
  8929  01A6  0020               	movlb	0	; select bank0
  8930  01A7  01EF               	clrf	_MODE_LOCK
  8931  01A8  29DF               	goto	i1l2395
  8932  01A9                     i1l2377:	
  8933                           
  8934                           ;main.c: 281: CONTROL_RESPONSE_byte4 = cmd;
  8935  01A9  0875               	movf	PS2Command@cmd,w
  8936  01AA  00F4               	movwf	??_PS2Command
  8937  01AB  0874               	movf	??_PS2Command,w
  8938  01AC  0020               	movlb	0	; select bank0
  8939  01AD  00EA               	movwf	_CONTROL_RESPONSE_byte4
  8940                           
  8941                           ;main.c: 282: break;
  8942  01AE  29DF               	goto	i1l2395
  8943  01AF                     i1l2379:	
  8944                           
  8945                           ;main.c: 284: MAP_LARGE_MOTOR = cmd;
  8946  01AF  0875               	movf	PS2Command@cmd,w
  8947  01B0  00F4               	movwf	??_PS2Command
  8948  01B1  0874               	movf	??_PS2Command,w
  8949  01B2  0020               	movlb	0	; select bank0
  8950  01B3  00DE               	movwf	_MAP_LARGE_MOTOR
  8951                           
  8952                           ;main.c: 285: break;
  8953  01B4  29DF               	goto	i1l2395
  8954  01B5                     i1l2383:	
  8955  01B5  0876               	movf	_previousCmd,w
  8956                           
  8957                           ; Switch size 1, requested type "simple"
  8958                           ; Number of cases is 5, Range of values is 2 to 242
  8959                           ; switch strategies available:
  8960                           ; Name         Instructions Cycles
  8961                           ; simple_byte           16     9 (average)
  8962                           ; jumptable            263     9 (fixed)
  8963                           ;	Chosen strategy is simple_byte
  8964  01B6  3A02               	xorlw	2	; case 2
  8965  01B7  1903               	skipnz
  8966  01B8  297E               	goto	i1l2363
  8967  01B9  3A20               	xorlw	32	; case 34
  8968  01BA  1903               	skipnz
  8969  01BB  299C               	goto	i1l2371
  8970  01BC  3A60               	xorlw	96	; case 66
  8971  01BD  1903               	skipnz
  8972  01BE  2984               	goto	i1l2365
  8973  01BF  3AF0               	xorlw	240	; case 178
  8974  01C0  1903               	skipnz
  8975  01C1  29AF               	goto	i1l2379
  8976  01C2  3A40               	xorlw	64	; case 242
  8977  01C3  1903               	skipnz
  8978  01C4  29A9               	goto	i1l2377
  8979  01C5  29DF               	goto	i1l2395
  8980  01C6                     i1l2385:	
  8981                           
  8982                           ;main.c: 291: CONTROL_RESPONSE_byte5 = cmd;
  8983  01C6  0875               	movf	PS2Command@cmd,w
  8984  01C7  00F4               	movwf	??_PS2Command
  8985  01C8  0874               	movf	??_PS2Command,w
  8986  01C9  0020               	movlb	0	; select bank0
  8987  01CA  00E9               	movwf	_CONTROL_RESPONSE_byte5
  8988                           
  8989                           ;main.c: 292: break;
  8990  01CB  29DF               	goto	i1l2395
  8991  01CC                     i1l2389:	
  8992  01CC  0876               	movf	_previousCmd,w
  8993                           
  8994                           ; Switch size 1, requested type "simple"
  8995                           ; Number of cases is 1, Range of values is 242 to 242
  8996                           ; switch strategies available:
  8997                           ; Name         Instructions Cycles
  8998                           ; simple_byte            4     3 (average)
  8999                           ; direct_byte           11     9 (fixed)
  9000                           ; jumptable            263     9 (fixed)
  9001                           ;	Chosen strategy is simple_byte
  9002  01CD  3AF2               	xorlw	242	; case 242
  9003  01CE  1903               	skipnz
  9004  01CF  29C6               	goto	i1l2385
  9005  01D0  29DF               	goto	i1l2395
  9006  01D1                     i1l2393:	
  9007  01D1  0879               	movf	_cmdCounter,w
  9008                           
  9009                           ; Switch size 1, requested type "simple"
  9010                           ; Number of cases is 4, Range of values is 1 to 5
  9011                           ; switch strategies available:
  9012                           ; Name         Instructions Cycles
  9013                           ; simple_byte           13     7 (average)
  9014                           ; direct_byte           19     9 (fixed)
  9015                           ; jumptable            263     9 (fixed)
  9016                           ;	Chosen strategy is simple_byte
  9017  01D2  3A01               	xorlw	1	; case 1
  9018  01D3  1903               	skipnz
  9019  01D4  28E0               	goto	i1l2311
  9020  01D5  3A02               	xorlw	2	; case 3
  9021  01D6  1903               	skipnz
  9022  01D7  2964               	goto	i1l2361
  9023  01D8  3A07               	xorlw	7	; case 4
  9024  01D9  1903               	skipnz
  9025  01DA  29B5               	goto	i1l2383
  9026  01DB  3A01               	xorlw	1	; case 5
  9027  01DC  1903               	skipnz
  9028  01DD  29CC               	goto	i1l2389
  9029  01DE  29DF               	goto	i1l2395
  9030  01DF                     i1l2395:	
  9031                           
  9032                           ;main.c: 300: spiWrite(response[cmdCounter]);
  9033  01DF  0879               	movf	_cmdCounter,w
  9034  01E0  3ED8               	addlw	(low (_response| 0))& (0+255)
  9035  01E1  0086               	movwf	6
  9036  01E2  0187               	clrf	7
  9037  01E3  0801               	movf	1,w
  9038  01E4  3187  27FB  3180   	fcall	_spiWrite
  9039  01E7                     i1l2397:	
  9040                           
  9041                           ;main.c: 302: RA4 = 0;
  9042  01E7  0020               	movlb	0	; select bank0
  9043  01E8  120C               	bcf	12,4	;volatile
  9044  01E9                     i1l2399:	
  9045                           
  9046                           ;main.c: 303: _delay((unsigned long)((1)*(32000000/4000000.0)));
  9047  01E9  3200               	nop2	;2 cycle nop
  9048  01EA  3200               	nop2	;2 cycle nop
  9049  01EB  3200               	nop2	;2 cycle nop
  9050  01EC  3200               	nop2	;2 cycle nop
  9051  01ED                     i1l2401:	
  9052                           
  9053                           ;main.c: 304: RA4 = 1;
  9054  01ED  0020               	movlb	0	; select bank0
  9055  01EE  160C               	bsf	12,4	;volatile
  9056  01EF                     i1l2403:	
  9057                           
  9058                           ;main.c: 306: cmdCounter++;
  9059  01EF  3001               	movlw	1
  9060  01F0  00F4               	movwf	??_PS2Command
  9061  01F1  0874               	movf	??_PS2Command,w
  9062  01F2  07F9               	addwf	_cmdCounter,f
  9063  01F3                     i1l2405:	
  9064                           
  9065                           ;main.c: 309: if (escapeMode) {
  9066  01F3  0877               	movf	_escapeMode,w
  9067  01F4  1903               	btfsc	3,2
  9068  01F5  29F7               	goto	u190_21
  9069  01F6  29F8               	goto	u190_20
  9070  01F7                     u190_21:	
  9071  01F7  29FE               	goto	i1l2409
  9072  01F8                     u190_20:	
  9073  01F8                     i1l2407:	
  9074                           
  9075                           ;main.c: 310: response[0] = 0xCF;
  9076  01F8  30CF               	movlw	207
  9077  01F9  00F4               	movwf	??_PS2Command
  9078  01FA  0874               	movf	??_PS2Command,w
  9079  01FB  0021               	movlb	1	; select bank1
  9080  01FC  00D8               	movwf	_response^(0+128)
  9081                           
  9082                           ;main.c: 311: }
  9083  01FD  2A1D               	goto	i1l2419
  9084  01FE                     i1l2409:	
  9085                           
  9086                           ;main.c: 312: else {;main.c: 313: if(analogMode == 0) response[0] = 0x82;
  9087  01FE  0878               	movf	_analogMode,w
  9088  01FF  1D03               	btfss	3,2
  9089  0200  2A02               	goto	u191_21
  9090  0201  2A03               	goto	u191_20
  9091  0202                     u191_21:	
  9092  0202  2A08               	goto	i1l2413
  9093  0203                     u191_20:	
  9094  0203                     i1l2411:	
  9095  0203  3082               	movlw	130
  9096  0204  00F4               	movwf	??_PS2Command
  9097  0205  0874               	movf	??_PS2Command,w
  9098  0206  0021               	movlb	1	; select bank1
  9099  0207  00D8               	movwf	_response^(0+128)
  9100  0208                     i1l2413:	
  9101                           
  9102                           ;main.c: 314: if(analogMode == 1) response[0] = 0xCE;
  9103  0208  0378               	decf	_analogMode,w
  9104  0209  1D03               	btfss	3,2
  9105  020A  2A0C               	goto	u192_21
  9106  020B  2A0D               	goto	u192_20
  9107  020C                     u192_21:	
  9108  020C  2A12               	goto	i1l182
  9109  020D                     u192_20:	
  9110  020D                     i1l2415:	
  9111  020D  30CE               	movlw	206
  9112  020E  00F4               	movwf	??_PS2Command
  9113  020F  0874               	movf	??_PS2Command,w
  9114  0210  0021               	movlb	1	; select bank1
  9115  0211  00D8               	movwf	_response^(0+128)
  9116  0212                     i1l182:	
  9117                           
  9118                           ;main.c: 315: if(analogMode > 1) response[0] = 0x9E;
  9119  0212  3002               	movlw	2
  9120  0213  0278               	subwf	_analogMode,w
  9121  0214  1C03               	skipc
  9122  0215  2A17               	goto	u193_21
  9123  0216  2A18               	goto	u193_20
  9124  0217                     u193_21:	
  9125  0217  2A1D               	goto	i1l2419
  9126  0218                     u193_20:	
  9127  0218                     i1l2417:	
  9128  0218  309E               	movlw	158
  9129  0219  00F4               	movwf	??_PS2Command
  9130  021A  0874               	movf	??_PS2Command,w
  9131  021B  0021               	movlb	1	; select bank1
  9132  021C  00D8               	movwf	_response^(0+128)
  9133  021D                     i1l2419:	
  9134                           
  9135                           ;main.c: 316: };main.c: 318: SSP1IF = 0;
  9136  021D  002E               	movlb	14	; select bank14
  9137  021E  100F               	bcf	15,0	;volatile
  9138  021F                     i1l184:	
  9139  021F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9140  0220  0009               	retfie
  9141  0221                     __end_of_PS2Command:	
  9142                           
  9143                           	psect	text20
  9144  0E2F                     __ptext20:	
  9145 ;; *************** function i1_reversebyte *****************
  9146 ;; Defined at:
  9147 ;;		line 157 in file "Controller.c"
  9148 ;; Parameters:    Size  Location     Type
  9149 ;;  byte            1    wreg     unsigned char 
  9150 ;; Auto vars:     Size  Location     Type
  9151 ;;  byte            1    3[COMMON] unsigned char 
  9152 ;; Return value:  Size  Location     Type
  9153 ;;                  1    wreg      unsigned char 
  9154 ;; Registers used:
  9155 ;;		wreg, status,2, status,0
  9156 ;; Tracked objects:
  9157 ;;		On entry : 0/0
  9158 ;;		On exit  : 0/0
  9159 ;;		Unchanged: 0/0
  9160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9162 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9163 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9164 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9165 ;;Total ram usage:        4 bytes
  9166 ;; Hardware stack levels used:    1
  9167 ;; This function calls:
  9168 ;;		Nothing
  9169 ;; This function is called by:
  9170 ;;		_PS2Command
  9171 ;; This function uses a non-reentrant model
  9172 ;;
  9173                           
  9174                           
  9175                           ;psect for function i1_reversebyte
  9176  0E2F                     i1_reversebyte:	
  9177                           
  9178                           ;incstack = 0
  9179                           ; Regs used in i1_reversebyte: [wreg+status,2+status,0]
  9180                           ;i1reversebyte@byte stored from wreg
  9181  0E2F  00F3               	movwf	i1reversebyte@byte
  9182  0E30                     i1l2207:	
  9183                           
  9184                           ;Controller.c: 158: byte = (byte & 0xF0) >> 4 | (byte & 0x0F) << 4;
  9185  0E30  0873               	movf	i1reversebyte@byte,w
  9186  0E31  390F               	andlw	15
  9187  0E32  00F0               	movwf	??i1_reversebyte
  9188  0E33  3004               	movlw	4
  9189  0E34                     u170_25:	
  9190  0E34  35F0               	lslf	??i1_reversebyte,f
  9191  0E35  0B89               	decfsz	9,f
  9192  0E36  2E34               	goto	u170_25
  9193  0E37  0873               	movf	i1reversebyte@byte,w
  9194  0E38  00F1               	movwf	??i1_reversebyte+1
  9195  0E39  3004               	movlw	4
  9196  0E3A                     u171_25:	
  9197  0E3A  36F1               	lsrf	??i1_reversebyte+1,f
  9198  0E3B  0B89               	decfsz	9,f
  9199  0E3C  2E3A               	goto	u171_25
  9200  0E3D  0871               	movf	??i1_reversebyte+1,w
  9201  0E3E  390F               	andlw	15
  9202  0E3F  0470               	iorwf	??i1_reversebyte,w
  9203  0E40  00F2               	movwf	??i1_reversebyte+2
  9204  0E41  0872               	movf	??i1_reversebyte+2,w
  9205  0E42  00F3               	movwf	i1reversebyte@byte
  9206                           
  9207                           ;Controller.c: 159: byte = (byte & 0xCC) >> 2 | (byte & 0x33) << 2;
  9208  0E43  0873               	movf	i1reversebyte@byte,w
  9209  0E44  3933               	andlw	51
  9210  0E45  00F0               	movwf	??i1_reversebyte
  9211  0E46  3002               	movlw	2
  9212  0E47                     u172_25:	
  9213  0E47  35F0               	lslf	??i1_reversebyte,f
  9214  0E48  0B89               	decfsz	9,f
  9215  0E49  2E47               	goto	u172_25
  9216  0E4A  0873               	movf	i1reversebyte@byte,w
  9217  0E4B  00F1               	movwf	??i1_reversebyte+1
  9218  0E4C  3002               	movlw	2
  9219  0E4D                     u173_25:	
  9220  0E4D  36F1               	lsrf	??i1_reversebyte+1,f
  9221  0E4E  0B89               	decfsz	9,f
  9222  0E4F  2E4D               	goto	u173_25
  9223  0E50  0871               	movf	??i1_reversebyte+1,w
  9224  0E51  3933               	andlw	51
  9225  0E52  0470               	iorwf	??i1_reversebyte,w
  9226  0E53  00F2               	movwf	??i1_reversebyte+2
  9227  0E54  0872               	movf	??i1_reversebyte+2,w
  9228  0E55  00F3               	movwf	i1reversebyte@byte
  9229                           
  9230                           ;Controller.c: 160: byte = (byte & 0xAA) >> 1 | (byte & 0x55) << 1;
  9231  0E56  0873               	movf	i1reversebyte@byte,w
  9232  0E57  3955               	andlw	85
  9233  0E58  00F0               	movwf	??i1_reversebyte
  9234  0E59  3001               	movlw	1
  9235  0E5A                     u174_25:	
  9236  0E5A  35F0               	lslf	??i1_reversebyte,f
  9237  0E5B  0B89               	decfsz	9,f
  9238  0E5C  2E5A               	goto	u174_25
  9239  0E5D  3673               	lsrf	i1reversebyte@byte,w
  9240  0E5E  3955               	andlw	85
  9241  0E5F  0470               	iorwf	??i1_reversebyte,w
  9242  0E60  00F1               	movwf	??i1_reversebyte+1
  9243  0E61  0871               	movf	??i1_reversebyte+1,w
  9244  0E62  00F3               	movwf	i1reversebyte@byte
  9245  0E63                     i1l2209:	
  9246                           
  9247                           ;Controller.c: 162: return byte;
  9248  0E63  0873               	movf	i1reversebyte@byte,w
  9249  0E64                     i1l355:	
  9250  0E64  0008               	return
  9251  0E65                     __end_ofi1_reversebyte:	
  9252                           
  9253                           	psect	text21
  9254  07FB                     __ptext21:	
  9255 ;; *************** function _spiWrite *****************
  9256 ;; Defined at:
  9257 ;;		line 32 in file "Spi.c"
  9258 ;; Parameters:    Size  Location     Type
  9259 ;;  dat             1    wreg     unsigned char 
  9260 ;; Auto vars:     Size  Location     Type
  9261 ;;  dat             1    0[COMMON] unsigned char 
  9262 ;; Return value:  Size  Location     Type
  9263 ;;                  1    wreg      void 
  9264 ;; Registers used:
  9265 ;;		wreg
  9266 ;; Tracked objects:
  9267 ;;		On entry : 0/0
  9268 ;;		On exit  : 0/0
  9269 ;;		Unchanged: 0/0
  9270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9272 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9274 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9275 ;;Total ram usage:        1 bytes
  9276 ;; Hardware stack levels used:    1
  9277 ;; This function calls:
  9278 ;;		Nothing
  9279 ;; This function is called by:
  9280 ;;		_PS2Command
  9281 ;; This function uses a non-reentrant model
  9282 ;;
  9283                           
  9284                           
  9285                           ;psect for function _spiWrite
  9286  07FB                     _spiWrite:	
  9287                           
  9288                           ;incstack = 0
  9289                           ; Regs used in _spiWrite: [wreg]
  9290                           ;spiWrite@dat stored from wreg
  9291  07FB  00F0               	movwf	spiWrite@dat
  9292  07FC                     i1l2099:	
  9293                           
  9294                           ;Spi.c: 34: SSP1BUF = dat;
  9295  07FC  0870               	movf	spiWrite@dat,w
  9296  07FD  0023               	movlb	3	; select bank3
  9297  07FE  008C               	movwf	12	;volatile
  9298  07FF                     i1l430:	
  9299  07FF  0008               	return
  9300  0800                     __end_of_spiWrite:	
  9301                           
  9302                           	psect	text22
  9303  0CDA                     __ptext22:	
  9304 ;; *************** function _spiRead *****************
  9305 ;; Defined at:
  9306 ;;		line 37 in file "Spi.c"
  9307 ;; Parameters:    Size  Location     Type
  9308 ;;		None
  9309 ;; Auto vars:     Size  Location     Type
  9310 ;;		None
  9311 ;; Return value:  Size  Location     Type
  9312 ;;                  1    wreg      unsigned char 
  9313 ;; Registers used:
  9314 ;;		wreg, status,2, status,0, pclath, cstack
  9315 ;; Tracked objects:
  9316 ;;		On entry : 0/0
  9317 ;;		On exit  : 0/0
  9318 ;;		Unchanged: 0/0
  9319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9324 ;;Total ram usage:        0 bytes
  9325 ;; Hardware stack levels used:    1
  9326 ;; Hardware stack levels required when called:    1
  9327 ;; This function calls:
  9328 ;;		_spiReceiveWait
  9329 ;; This function is called by:
  9330 ;;		_PS2Command
  9331 ;; This function uses a non-reentrant model
  9332 ;;
  9333                           
  9334                           
  9335                           ;psect for function _spiRead
  9336  0CDA                     _spiRead:	
  9337  0CDA                     i1l2093:	
  9338                           ;incstack = 0
  9339                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  9340                           
  9341                           
  9342                           ;Spi.c: 39: spiReceiveWait();
  9343  0CDA  318C  24D4  318C   	fcall	_spiReceiveWait
  9344  0CDD                     i1l2095:	
  9345                           
  9346                           ;Spi.c: 40: return(SSP1BUF);
  9347  0CDD  0023               	movlb	3	; select bank3
  9348  0CDE  080C               	movf	12,w	;volatile
  9349  0CDF                     i1l433:	
  9350  0CDF  0008               	return
  9351  0CE0                     __end_of_spiRead:	
  9352                           
  9353                           	psect	text23
  9354  0CD4                     __ptext23:	
  9355 ;; *************** function _spiReceiveWait *****************
  9356 ;; Defined at:
  9357 ;;		line 27 in file "Spi.c"
  9358 ;; Parameters:    Size  Location     Type
  9359 ;;		None
  9360 ;; Auto vars:     Size  Location     Type
  9361 ;;		None
  9362 ;; Return value:  Size  Location     Type
  9363 ;;                  1    wreg      void 
  9364 ;; Registers used:
  9365 ;;		None
  9366 ;; Tracked objects:
  9367 ;;		On entry : 0/0
  9368 ;;		On exit  : 0/0
  9369 ;;		Unchanged: 0/0
  9370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9375 ;;Total ram usage:        0 bytes
  9376 ;; Hardware stack levels used:    1
  9377 ;; This function calls:
  9378 ;;		Nothing
  9379 ;; This function is called by:
  9380 ;;		_spiRead
  9381 ;; This function uses a non-reentrant model
  9382 ;;
  9383                           
  9384                           
  9385                           ;psect for function _spiReceiveWait
  9386  0CD4                     _spiReceiveWait:	
  9387  0CD4                     i1l2085:	
  9388                           ;incstack = 0
  9389                           ; Regs used in _spiReceiveWait: []
  9390                           
  9391  0CD4                     i1l424:	
  9392                           ;Spi.c: 29: while ( !SSP1STATbits.BF );
  9393                           
  9394  0CD4  0023               	movlb	3	; select bank3
  9395  0CD5  1C0F               	btfss	15,0	;volatile
  9396  0CD6  2CD8               	goto	u156_21
  9397  0CD7  2CD9               	goto	u156_20
  9398  0CD8                     u156_21:	
  9399  0CD8  2CD4               	goto	i1l424
  9400  0CD9                     u156_20:	
  9401  0CD9                     i1l427:	
  9402  0CD9  0008               	return
  9403  0CDA                     __end_of_spiReceiveWait:	
  9404                           
  9405                           	psect	text24
  9406  0F66                     __ptext24:	
  9407 ;; *************** function _pollController *****************
  9408 ;; Defined at:
  9409 ;;		line 33 in file "main.c"
  9410 ;; Parameters:    Size  Location     Type
  9411 ;;  response        1    wreg     PTR unsigned char 
  9412 ;;		 -> response(20), 
  9413 ;; Auto vars:     Size  Location     Type
  9414 ;;  response        1    1[COMMON] PTR unsigned char 
  9415 ;;		 -> response(20), 
  9416 ;; Return value:  Size  Location     Type
  9417 ;;                  1    wreg      void 
  9418 ;; Registers used:
  9419 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9420 ;; Tracked objects:
  9421 ;;		On entry : 0/0
  9422 ;;		On exit  : 0/0
  9423 ;;		Unchanged: 0/0
  9424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9426 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9427 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9428 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9429 ;;Total ram usage:        2 bytes
  9430 ;; Hardware stack levels used:    1
  9431 ;; This function calls:
  9432 ;;		Nothing
  9433 ;; This function is called by:
  9434 ;;		_PS2Command
  9435 ;; This function uses a non-reentrant model
  9436 ;;
  9437                           
  9438                           
  9439                           ;psect for function _pollController
  9440  0F66                     _pollController:	
  9441                           
  9442                           ;incstack = 0
  9443                           ; Regs used in _pollController: [wreg+fsr1l+fsr1h+status,2+status,0]
  9444                           ;pollController@response stored from wreg
  9445  0F66  00F1               	movwf	pollController@response
  9446  0F67                     i1l2087:	
  9447                           
  9448                           ;main.c: 34: response[2] = digitalStateFirst;
  9449  0F67  0020               	movlb	0	; select bank0
  9450  0F68  0866               	movf	_digitalStateFirst,w
  9451  0F69  00F0               	movwf	??_pollController
  9452  0F6A  0871               	movf	pollController@response,w
  9453  0F6B  3E02               	addlw	2
  9454  0F6C  0086               	movwf	6
  9455  0F6D  0187               	clrf	7
  9456  0F6E  0870               	movf	??_pollController,w
  9457  0F6F  0081               	movwf	1
  9458                           
  9459                           ;main.c: 35: response[3] = digitalStateSecond;
  9460  0F70  0865               	movf	_digitalStateSecond,w
  9461  0F71  00F0               	movwf	??_pollController
  9462  0F72  0871               	movf	pollController@response,w
  9463  0F73  3E03               	addlw	3
  9464  0F74  0086               	movwf	6
  9465  0F75  0187               	clrf	7
  9466  0F76  0870               	movf	??_pollController,w
  9467  0F77  0081               	movwf	1
  9468                           
  9469                           ;main.c: 36: response[4] = rxData;
  9470  0F78  0864               	movf	_rxData,w
  9471  0F79  00F0               	movwf	??_pollController
  9472  0F7A  0871               	movf	pollController@response,w
  9473  0F7B  3E04               	addlw	4
  9474  0F7C  0086               	movwf	6
  9475  0F7D  0187               	clrf	7
  9476  0F7E  0870               	movf	??_pollController,w
  9477  0F7F  0081               	movwf	1
  9478                           
  9479                           ;main.c: 37: response[5] = ryData;
  9480  0F80  0863               	movf	_ryData,w
  9481  0F81  00F0               	movwf	??_pollController
  9482  0F82  0871               	movf	pollController@response,w
  9483  0F83  3E05               	addlw	5
  9484  0F84  0086               	movwf	6
  9485  0F85  0187               	clrf	7
  9486  0F86  0870               	movf	??_pollController,w
  9487  0F87  0081               	movwf	1
  9488                           
  9489                           ;main.c: 38: response[6] = lxData;
  9490  0F88  0862               	movf	_lxData,w
  9491  0F89  00F0               	movwf	??_pollController
  9492  0F8A  0871               	movf	pollController@response,w
  9493  0F8B  3E06               	addlw	6
  9494  0F8C  0086               	movwf	6
  9495  0F8D  0187               	clrf	7
  9496  0F8E  0870               	movf	??_pollController,w
  9497  0F8F  0081               	movwf	1
  9498                           
  9499                           ;main.c: 39: response[7] = lyData;
  9500  0F90  0861               	movf	_lyData,w
  9501  0F91  00F0               	movwf	??_pollController
  9502  0F92  0871               	movf	pollController@response,w
  9503  0F93  3E07               	addlw	7
  9504  0F94  0086               	movwf	6
  9505  0F95  0187               	clrf	7
  9506  0F96  0870               	movf	??_pollController,w
  9507  0F97  0081               	movwf	1
  9508  0F98                     i1l2089:	
  9509                           
  9510                           ;main.c: 40: if(analogMode == 2) {
  9511  0F98  3002               	movlw	2
  9512  0F99  0678               	xorwf	_analogMode,w
  9513  0F9A  1D03               	btfss	3,2
  9514  0F9B  2F9D               	goto	u157_21
  9515  0F9C  2F9E               	goto	u157_20
  9516  0F9D                     u157_21:	
  9517  0F9D  2FFF               	goto	i1l114
  9518  0F9E                     u157_20:	
  9519  0F9E                     i1l2091:	
  9520                           
  9521                           ;main.c: 41: response[8] = analogStateFirst[2];
  9522  0F9E  0021               	movlb	1	; select bank1
  9523  0F9F  0852               	movf	(_analogStateFirst^(0+128)+2),w
  9524  0FA0  00F0               	movwf	??_pollController
  9525  0FA1  0871               	movf	pollController@response,w
  9526  0FA2  3E08               	addlw	8
  9527  0FA3  0086               	movwf	6
  9528  0FA4  0187               	clrf	7
  9529  0FA5  0870               	movf	??_pollController,w
  9530  0FA6  0081               	movwf	1
  9531                           
  9532                           ;main.c: 42: response[9] = analogStateFirst[0];
  9533  0FA7  0850               	movf	_analogStateFirst^(0+128),w
  9534  0FA8  00F0               	movwf	??_pollController
  9535  0FA9  0871               	movf	pollController@response,w
  9536  0FAA  3E09               	addlw	9
  9537  0FAB  0086               	movwf	6
  9538  0FAC  0187               	clrf	7
  9539  0FAD  0870               	movf	??_pollController,w
  9540  0FAE  0081               	movwf	1
  9541                           
  9542                           ;main.c: 43: response[10] = analogStateFirst[3];
  9543  0FAF  0853               	movf	(_analogStateFirst^(0+128)+3),w
  9544  0FB0  00F0               	movwf	??_pollController
  9545  0FB1  0871               	movf	pollController@response,w
  9546  0FB2  3E0A               	addlw	10
  9547  0FB3  0086               	movwf	6
  9548  0FB4  0187               	clrf	7
  9549  0FB5  0870               	movf	??_pollController,w
  9550  0FB6  0081               	movwf	1
  9551                           
  9552                           ;main.c: 44: response[11] = analogStateFirst[1];
  9553  0FB7  0851               	movf	(_analogStateFirst^(0+128)+1),w
  9554  0FB8  00F0               	movwf	??_pollController
  9555  0FB9  0871               	movf	pollController@response,w
  9556  0FBA  3E0B               	addlw	11
  9557  0FBB  0086               	movwf	6
  9558  0FBC  0187               	clrf	7
  9559  0FBD  0870               	movf	??_pollController,w
  9560  0FBE  0081               	movwf	1
  9561                           
  9562                           ;main.c: 45: response[12] = analogStateSecond[3];
  9563  0FBF  084B               	movf	(_analogStateSecond^(0+128)+3),w
  9564  0FC0  00F0               	movwf	??_pollController
  9565  0FC1  0871               	movf	pollController@response,w
  9566  0FC2  3E0C               	addlw	12
  9567  0FC3  0086               	movwf	6
  9568  0FC4  0187               	clrf	7
  9569  0FC5  0870               	movf	??_pollController,w
  9570  0FC6  0081               	movwf	1
  9571                           
  9572                           ;main.c: 46: response[13] = analogStateSecond[2];
  9573  0FC7  084A               	movf	(_analogStateSecond^(0+128)+2),w
  9574  0FC8  00F0               	movwf	??_pollController
  9575  0FC9  0871               	movf	pollController@response,w
  9576  0FCA  3E0D               	addlw	13
  9577  0FCB  0086               	movwf	6
  9578  0FCC  0187               	clrf	7
  9579  0FCD  0870               	movf	??_pollController,w
  9580  0FCE  0081               	movwf	1
  9581                           
  9582                           ;main.c: 47: response[14] = analogStateSecond[1];
  9583  0FCF  0849               	movf	(_analogStateSecond^(0+128)+1),w
  9584  0FD0  00F0               	movwf	??_pollController
  9585  0FD1  0871               	movf	pollController@response,w
  9586  0FD2  3E0E               	addlw	14
  9587  0FD3  0086               	movwf	6
  9588  0FD4  0187               	clrf	7
  9589  0FD5  0870               	movf	??_pollController,w
  9590  0FD6  0081               	movwf	1
  9591                           
  9592                           ;main.c: 48: response[15] = analogStateSecond[0];
  9593  0FD7  0848               	movf	_analogStateSecond^(0+128),w
  9594  0FD8  00F0               	movwf	??_pollController
  9595  0FD9  0871               	movf	pollController@response,w
  9596  0FDA  3E0F               	addlw	15
  9597  0FDB  0086               	movwf	6
  9598  0FDC  0187               	clrf	7
  9599  0FDD  0870               	movf	??_pollController,w
  9600  0FDE  0081               	movwf	1
  9601                           
  9602                           ;main.c: 49: response[16] = analogStateSecond[5];
  9603  0FDF  084D               	movf	(_analogStateSecond^(0+128)+5),w
  9604  0FE0  00F0               	movwf	??_pollController
  9605  0FE1  0871               	movf	pollController@response,w
  9606  0FE2  3E10               	addlw	16
  9607  0FE3  0086               	movwf	6
  9608  0FE4  0187               	clrf	7
  9609  0FE5  0870               	movf	??_pollController,w
  9610  0FE6  0081               	movwf	1
  9611                           
  9612                           ;main.c: 50: response[17] = analogStateSecond[4];
  9613  0FE7  084C               	movf	(_analogStateSecond^(0+128)+4),w
  9614  0FE8  00F0               	movwf	??_pollController
  9615  0FE9  0871               	movf	pollController@response,w
  9616  0FEA  3E11               	addlw	17
  9617  0FEB  0086               	movwf	6
  9618  0FEC  0187               	clrf	7
  9619  0FED  0870               	movf	??_pollController,w
  9620  0FEE  0081               	movwf	1
  9621                           
  9622                           ;main.c: 51: response[18] = analogStateSecond[7];
  9623  0FEF  084F               	movf	(_analogStateSecond^(0+128)+7),w
  9624  0FF0  00F0               	movwf	??_pollController
  9625  0FF1  0871               	movf	pollController@response,w
  9626  0FF2  3E12               	addlw	18
  9627  0FF3  0086               	movwf	6
  9628  0FF4  0187               	clrf	7
  9629  0FF5  0870               	movf	??_pollController,w
  9630  0FF6  0081               	movwf	1
  9631                           
  9632                           ;main.c: 52: response[19] = analogStateSecond[6];
  9633  0FF7  084E               	movf	(_analogStateSecond^(0+128)+6),w
  9634  0FF8  00F0               	movwf	??_pollController
  9635  0FF9  0871               	movf	pollController@response,w
  9636  0FFA  3E13               	addlw	19
  9637  0FFB  0086               	movwf	6
  9638  0FFC  0187               	clrf	7
  9639  0FFD  0870               	movf	??_pollController,w
  9640  0FFE  0081               	movwf	1
  9641  0FFF                     i1l114:	
  9642  0FFF  0008               	return
  9643  1000                     __end_of_pollController:	
  9644  007E                     btemp	set	126	;btemp
  9645  007E                     int$flags	set	126
  9646  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         77
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     61      80
    BANK1            80      0      76
    BANK2            80      0       8
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    pollController@response	PTR unsigned char  size(1) Largest target is 20
		 -> response(BANK1[20]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _PS2Command in COMMON

    _PS2Command->i1_reversebyte

Critical Paths under _main in BANK0

    _main->_configureController
    _readControllerAnalog->_readADC
    _picInit->_spiInit
    _configureController->_lutInit
    _lutInit->_Map
    _Map->___awdiv
    ___awdiv->___wmul

Critical Paths under _PS2Command in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _PS2Command in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _PS2Command in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _PS2Command in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _PS2Command in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _PS2Command in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _PS2Command in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _PS2Command in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _PS2Command in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _PS2Command in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _PS2Command in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _PS2Command in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _PS2Command in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _PS2Command in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _PS2Command in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _PS2Command in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _PS2Command in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _PS2Command in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _PS2Command in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _PS2Command in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _PS2Command in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _PS2Command in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _PS2Command in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _PS2Command in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _PS2Command in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _PS2Command in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   16833
                                             57 BANK0      4     4      0
                         _IO_MAPPING
                            _adcInit
                _configureController
                         _eepromRead
                        _eepromWrite
                            _lutInit
                            _picInit
                     _readController
               _readControllerAnalog
 ---------------------------------------------------------------------------------
 (1) _readControllerAnalog                                 3     3      0    1697
                                              9 BANK0      3     3      0
                            _readADC
                        _reversebyte
 ---------------------------------------------------------------------------------
 (2) _reversebyte                                          4     4      0     226
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _picInit                                              2     2      0     456
                                              4 BANK0      2     2      0
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _configureController                                 13    13      0    8479
                                             44 BANK0     13    13      0
                        _eepromWrite
                            _lutInit
                            _readADC
                     _readController
 ---------------------------------------------------------------------------------
 (1) _readController                                       3     3      0     124
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _readADC                                              9     7      2    1471
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _lutInit                                             19    19      0    4182
                                             25 BANK0     19    19      0
                                _Map
                         _eepromRead
 ---------------------------------------------------------------------------------
 (2) _eepromRead                                           3     3      0      65
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _Map                                                 10     0     10    2785
                                             15 BANK0     10     0     10
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     452
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _eepromWrite                                          3     2      1    1626
                                              0 BANK0      3     2      1
                          _nvmUnlock
 ---------------------------------------------------------------------------------
 (2) _nvmUnlock                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IO_MAPPING                                           0     0      0       0
                            _ppsLock
                          _ppsUnlock
 ---------------------------------------------------------------------------------
 (2) _ppsUnlock                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ppsLock                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _PS2Command                                           2     2      0    1148
                                              4 COMMON     2     2      0
                     _pollController
                            _spiRead
                           _spiWrite
                      i1_reversebyte
 ---------------------------------------------------------------------------------
 (6) i1_reversebyte                                        4     4      0     157
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (6) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (7) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _pollController                                       2     2      0     462
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IO_MAPPING
     _ppsLock
     _ppsUnlock
   _adcInit
   _configureController
     _eepromWrite
       _nvmUnlock
     _lutInit
       _Map
         ___awdiv
           ___wmul (ARG)
         ___wmul
       _eepromRead
     _readADC
     _readController
   _eepromRead
   _eepromWrite
     _nvmUnlock
   _lutInit
     _Map
       ___awdiv
         ___wmul (ARG)
       ___wmul
     _eepromRead
   _picInit
     _spiInit
   _readController
   _readControllerAnalog
     _readADC
     _reversebyte

 _PS2Command (ROOT)
   _pollController
   _spiRead
     _spiReceiveWait
   _spiWrite
   i1_reversebyte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3D      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4C       7       95.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       8       9       10.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      B0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      B0      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              30      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14               0      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15               0      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16               0      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17               0      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18               0      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19               0      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20               0      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21               0      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22               0      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23               0      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Dec 06 12:08:03 2021

                  __CFG_CP$OFF 0000                   ___awdiv@sign 002C            ___wmul@multiplicand 0022  
        __end_ofi1_reversebyte 0E65                            l310 0486                            l320 05AF  
                          l312 0502                            l402 0CF5                            l322 05CD  
                          l316 0567                            l420 0D43                            l405 0CFF  
                          l325 0DB2                            l421 0D48                            l318 058B  
                          l352 0E02                            l408 0D5C                            l192 07A6  
                          l450 0DCA                            l346 0463                            l370 06B9  
                          l507 0E2E                            l355 0E9B                            l195 07BE  
                          l460 0CED                            l452 0DCF                            l364 067D  
                          l349 0DE0                            l365 0687                            l454 0DD7  
                          l374 072F                            l366 0691                            l358 0F65  
                          l198 07DB                            l367 069B                            l368 06A5  
                          l457 0D34                            l369 06AF                            l812 0EFB  
                          l661 0D90                            l399 0CE6                            l659 0D7C  
                          _RA0 0060                            _RA1 0061                            _RB0 0068  
                          _RA2 0062                            _RB1 0069                            _RA3 0063  
                          _RA4 0064                            _RB2 006A                            _RA5 0065  
                          _RB3 006B                            _RA6 0066                            _RD0 0078  
                          _RC2 0072                            _RB4 006C                            _RA7 0067  
                          _RB5 006D                            _RB6 006E                            _RB7 006F  
                          _RD4 007C                            _RD5 007D                            _RD6 007E  
                          _RD7 007F                   __CFG_CPD$OFF 0000                            _Map 0D91  
                 __CFG_BORV$LO 0000                            wreg 0009                 eepromRead@data 0022  
                 __CFG_LVP$OFF 0000                   __CFG_ZCD$OFF 0000                           ?_Map 002F  
                         l2501 0D27                           l2511 0CE7                           l2503 0D2D  
                         l2513 0CEC                           l2521 0DB5                           l2601 0478  
                         l2531 0DBF                           l2523 0DB9                           l2507 0D91  
                         l2611 0495                           l2603 047C                           l2515 0E67  
                         l2533 0DC3                           l2525 0DBA                           l2541 0273  
                         l2621 04B3                           l2613 049B                           l2605 0482  
                         l2701 0D49                           l2517 0E9A                           l2711 0E03  
                         l2535 0DC7                           l2527 0DBC                           l2551 02C3  
                         l2543 02B3                           l2631 04D1                           l2623 04B9  
                         l2615 04A1                           l2607 048A                           l2703 0D57  
                         l2721 0E1D                           l2713 0E0E                           l2537 0DD0  
                         l2529 0DBD                           l1841 0E9E                           l2561 032A  
                         l2553 02D0                           l2641 04F0                           l2633 04D7  
                         l2625 04BF                           l2617 04A7                           l2609 048F  
                         l2801 072D                           l2705 0D58                           l2731 0E25  
                         l2723 0E1E                           l2715 0E10                           l2539 0DD6  
                         l1851 0EB2                           l1843 0EA2                           l2491 0D81  
                         l2571 0391                           l2563 0337                           l2555 02DC  
                         l2651 0527                           l2643 04F9                           l2635 04DD  
                         l2627 04C5                           l2619 04AD                           l2803 072E  
                         l2707 0D59                           l2811 0742                           l2733 0E28  
                         l2725 0E20                           l2717 0E13                           l2741 0CFA  
                         l1861 0EC6                           l1853 0EB6                           l1845 0EA7  
                         l2493 0D86                           l2485 0D71                           l2581 03F8  
                         l2573 039E                           l2565 0343                           l2557 02EE  
                         l2549 02B5                           l2661 0551                           l2653 0533  
                         l2645 050B                           l2637 04E3                           l2629 04CB  
                         l2709 0D5B                           l2805 0EFC                           l2821 078E  
                         l2813 0787                           l2735 0E2B                           l2727 0E22  
                         l2719 0E14                           l2743 0CFB                           l1871 0EE2  
                         l1863 0ECA                           l1855 0EB8                           l1847 0EA9  
                         l1839 0E9C                           l2495 0D8C                           l2487 0D74  
                         l2591 0456                           l2583 0405                           l2575 03AA  
                         l2567 0355                           l2559 031D                           l2671 0595  
                         l2663 055D                           l2655 0538                           l2647 0514  
                         l2639 04EF                           l2751 05D0                           l2831 07A8  
                         l2823 0795                           l2815 078A                           l2807 0730  
                         l2729 0E24                           l2745 0CFC                           l2737 0CF6  
                         l1873 0EE7                           l1865 0ECE                           l1857 0EBE  
                         l1849 0EAD                           l2489 0D78                           l2585 0411  
                         l2577 03BC                           l2569 0384                           l2681 0DDD  
                         l2673 05A7                           l2665 0562                           l2649 0522  
                         l2657 053D                           l2593 0466                           l2761 0643  
                         l2753 0631                           l2841 07C0                           l2833 07AD  
                         l2825 079B                           l2817 078C                           l2809 0739  
                         l2691 0CE5                           l2747 0CFE                           l2739 0CF9  
                         l1867 0EDD                           l1859 0EC1                           l1875 0EED  
                         l2499 0D25                           l2587 0423                           l2579 03EB  
                         l2683 0DDF                           l2675 05C9                           l2667 0571  
                         l2659 054C                           l2595 046A                           l2771 0697  
                         l2763 0673                           l2755 0635                           l2851 07D1  
                         l2835 07B2                           l2843 07C1                           l2827 079E  
                         l2819 078D                           l2693 0CEE                           l1877 0EF2  
                         l1869 0EE1                           l2589 0452                           l2685 0DE4  
                         l2677 0DD8                           l2669 0583                           l2597 0470  
                         l2781 06C3                           l2773 06A1                           l2765 0679  
                         l2757 063C                           l2749 05CE                           l2861 07EC  
                         l2853 07D7                           l2845 07C6                           l2837 07B7  
                         l2829 07A3                           l1879 0EF7                           l2679 0DDC  
                         l2599 0472                           l2791 06D9                           l2783 06C9  
                         l2775 06AB                           l2767 0683                           l2695 0D37  
                         l2863 07ED                           l2855 07E1                           l2847 07C8  
                         l2839 07BC                           l2689 0CE0                           l2793 06DA  
                         l2785 06CF                           l2777 06B5                           l2769 068D  
                         l2697 0D3B                           l2865 07F0                           l2857 07E2  
                         l2849 07CC                           l2795 06DF                           l2787 06D0  
                         l2779 06BF                           l2699 0D3F                           l2867 07F1  
                         l2859 07E6                           l2789 06D4                           l2797 06E3  
                         l2869 07F5                           l2799 072A                           u1100 0EBE  
                         u1101 0EBD                           u1120 0ECE                           u1121 0ECD  
                         u1115 0EC2                           u1140 0EDD                           u2100 0D8C  
                         u1141 0EDC                           u2101 0D8B                           u1135 0ECF  
                         u1160 0EED                           u1080 0EA2                           u2200 032A  
                         u1161 0EEC                           u1145 0ED9                           u1081 0EA1  
                         u2201 0329                           u1170 0EF2                           u1090 0EAD  
                         u2210 0343                           u1171 0EF1                           u1155 0EE3  
                         u1091 0EAC                           u2211 0342                           u2115 0E6B  
                         u2220 0391                           u2300 04EF                           u2221 0390  
                         u2205 0326                           u2301 04EE                           u2125 0E71  
                         u2070 0D78                           u2230 03AA                           u2310 04F9  
                         u2071 0D77                           u2231 03A9                           u2215 033F  
                         u2311 04F8                           u2135 0E7E                           u2160 0DCF  
                         u2240 03F8                           u2320 050B                           u2161 0DCE  
                         u2241 03F7                           u2225 038D                           u2321 050A  
                         u2145 0E84                           u2170 0DD6                           u2250 0411  
                         u2410 0583                           u2330 0522                           u2171 0DD5  
                         u2251 0410                           u2235 03A6                           u2411 0582  
                         u2331 0521                           u2155 0E91                           u2260 0463  
                         u2180 02C3                           u2420 0595                           u2404 0577  
                         u2500 0642                           u2085 0D7D                           u2261 0462  
                         u2245 03F4                           u2181 02C2                           u2421 0594  
                         u2405 0576                           u2501 0641                           u2190 02DC  
                         u2350 0538                           u2270 0470                           u2510 0679  
                         u2095 0D82                           u2255 040D                           u2191 02DB  
                         u2351 0537                           u2271 046F                           u2511 0678  
                         u2440 05A7                           u2360 054C                           u2344 052D  
                         u2280 0478                           u2600 06CF                           u2520 0683  
                         u2265 045F                           u2185 02BF                           u2441 05A6  
                         u2361 054B                           u2345 052C                           u2281 0477  
                         u2601 06CE                           u2521 0682                           u2450 0DE4  
                         u2434 059B                           u2290 0482                           u2530 068D  
                         u2610 0742                           u2195 02D8                           u2451 0DE3  
                         u2435 059A                           u2291 0481                           u2531 068C  
                         u2611 0741                           u2380 0562                           u2540 0697  
                         u2700 07D1                           u2620 0795                           u2381 0561  
                         u2541 0696                           u2701 07D0                           u2621 0794  
                         u2390 0571                           u2374 0557                           u2550 06A1  
                         u2710 07D7                           u2630 079B                           u2391 0570  
                         u2375 0556                           u2551 06A0                           u2711 07D6  
                         u2631 079A                           u2560 06AB                           u2480 0D3B  
                         u2720 07E1                           u2640 07A3                           u2465 0DE8  
                         u2561 06AA                           u2481 0D3A                           u2721 07E0  
                         u2641 07A2                           u2570 06B5                           u2490 063C  
                         u2730 07EC                           u2650 07AD                           u2475 0DF4  
                         u2571 06B4                           u2491 063B                           u2731 07EB  
                         u2651 07AC                           u2580 06BF                           u2660 07B2  
                         u2581 06BE                           u2661 07B1                           u2590 06C9  
                         u2670 07B7                           u2591 06C8                           u2671 07B6  
                         u2680 07BC                           u2681 07BB                           u2690 07C6  
                         u2691 07C5                           Map@x 002F                           _WPUA 0F39  
                         _WPUB 0F44                           _WPUC 0F4F                           _WPUD 0F5A  
                         _WPUE 0F65                   __CFG_WRT$OFF 0000                  __CFG_FCMEN$ON 0000  
                  ?_IO_MAPPING 0070                           _main 0730                           fsr0h 0005  
                         fsr1h 0007                           indf0 0000                           fsr0l 0004  
                         indf1 0001                           fsr1l 0006                           btemp 007E  
                __CFG_BOREN$ON 0000                           start 0221                    ?_PS2Command 0070  
                __CFG_CSWEN$ON 0000                lutInit@position 004A              i1reversebyte@byte 0073  
                        ??_Map 0039       configureController@lxMax 004E       configureController@lxMin 004D  
     configureController@lyMax 0050       configureController@lyMin 004F       configureController@rxMax 0052  
     configureController@rxMin 0051       configureController@ryMax 0054       configureController@ryMin 0053  
                        _ADACQ 009D                          ?_main 0070                          _ADCLK 0098  
                        _ADPCH 009E                __end_of_adcInit 0D00                          _ADREF 009A  
              __end_of___awdiv 0EFC                          _ADPRE 009C                  __CFG_WDTE$OFF 0000  
              ___awdiv@divisor 0026       main@slaveSelectStatePrev 005A                          i1l114 0FFF  
                        i1l148 0116                          i1l430 07FF                          i1l182 0212  
                        i1l167 0199                          i1l424 0CD4                          i1l184 021F  
                        i1l433 0CDF                          i1l427 0CD9                          i1l355 0E64  
              ___awdiv@counter 002B                          _TRISA 0011                          _TRISB 0012  
                        _TRISC 0013                          _TRISD 0014                          _TRISE 0015  
  __end_of_configureController 0730                __end_of_readADC 0E03                __end_of_picInit 0D5D  
                        _index 007A  __size_of_readControllerAnalog 006A                          _lutLX 26F0  
                        _lutLY 25F0                          _lutRX 24F0                          _lutRY 23F0  
              __end_of_lutInit 0464                __end_of_ppsLock 0CF6                __end_of_spiInit 0D49  
              __end_of_spiRead 0CE0                          status 0003                          wtemp0 007E  
                PS2Command@cmd 0075                 __CFG_MCLRE$OFF 0000                __initialization 0223  
                 __end_of_main 07FB                         ??_main 0059            __size_of_IO_MAPPING 002C  
          __size_of_PS2Command 021D                         _ADCON0 0093                         _ADCON1 0094  
                       _ADCON2 0095                         _ADRESH 008D                         _ADRESL 008C  
             ___awdiv@dividend 0028                         _ANSELA 0F38                         _ANSELB 0F43  
                       _ANSELC 0F4E                         _ANSELD 0F59                         _ANSELE 0F64  
         _PreviousDigitalByte1 00B0           _PreviousDigitalByte2 0120                         _RC5PPS 0F25  
                       i1l2301 00CE                         i1l2221 0019                         i1l2213 0006  
                       i1l2207 0E30                         i1l2311 00E0                         i1l2303 00D2  
                       i1l2231 0029                         i1l2223 001A                         i1l2215 000B  
                       i1l2209 0E63                         i1l2401 01ED                         i1l2321 0118  
                       i1l2313 0103                         i1l2305 00D6                         i1l2241 0048  
                       i1l2233 002E                         i1l2225 001B                         i1l2217 0012  
                       i1l2091 0F9E                         i1l2411 0203                         i1l2403 01EF  
                       i1l2331 012C                         i1l2323 011E                         i1l2315 0109  
                       i1l2307 00DB                         i1l2235 0033                         i1l2227 001F  
                       i1l2219 0015                         i1l2085 0CD4                         i1l2093 0CDA  
                       i1l2413 0208                         i1l2405 01F3                         i1l2341 013F  
                       i1l2333 012E                         i1l2325 0121                         i1l2317 010F  
                       i1l2261 006D                         i1l2245 004D                         i1l2237 0044  
                       i1l2229 0024                         i1l2087 0F67                         i1l2095 0CDD  
                       i1l2415 020D                         i1l2407 01F8                         i1l2351 0156  
                       i1l2343 0143                         i1l2335 0134                         i1l2327 0123  
                       i1l2319 0114                         i1l2271 0080                         i1l2263 0072  
                       i1l2247 0052                         i1l2239 0046                         i1l2089 0F98  
                       i1l2417 0218                         i1l2409 01FE                         i1l2361 0164  
                       i1l2345 0148                         i1l2337 0137                         i1l2329 0129  
                       i1l2281 0091                         i1l2273 0084                         i1l2265 0073  
                       i1l2257 005F                         i1l2249 005A                         i1l2099 07FC  
                       i1l2419 021D                         i1l2371 019C                         i1l2363 017E  
                       i1l2355 0158                         i1l2347 014E                         i1l2339 013B  
                       i1l2291 00A4                         i1l2283 0095                         i1l2275 0089  
                       i1l2267 0077                         i1l2259 0068                         i1l2373 01A2  
                       i1l2365 0184                         i1l2357 015E                         i1l2349 0152  
                       i1l2293 00A5                         i1l2285 009A                         i1l2269 007D  
                       i1l2383 01B5                         i1l2375 01A6                         i1l2367 018B  
                       i1l2287 009C                         i1l2279 008E                         i1l2385 01C6  
                       i1l2377 01A9                         i1l2369 0196                         i1l2297 00A7  
                       i1l2289 00A0                         i1l2393 01D1                         i1l2379 01AF  
                       i1l2299 00C8                         i1l2395 01DF                         i1l2397 01E7  
                       i1l2389 01CC                         i1l2399 01E9                 __CFG_WDTCCS$SC 0000  
                       u170_25 0E34                         u171_25 0E3A                         u156_20 0CD9  
                       u180_20 00DB                         u156_21 0CD8                         u180_21 00DA  
                       u172_25 0E47                         u157_20 0F9E                         u181_20 010F  
                       u157_21 0F9D                         u181_21 010E                         u173_25 0E4D  
                       u190_20 01F8                         u182_20 0114                         u190_21 01F7  
                       u182_21 0113                         u174_25 0E5A                         u191_20 0203  
                       u183_20 011E                         u175_20 000B                         u191_21 0202  
                       u183_21 011D                         u175_21 000A                         u192_20 020D  
                       u184_20 0129                         u176_20 0029                         u192_21 020C  
                       u184_21 0128                         u176_21 0028                         _AN_btn 0067  
                       u193_20 0218                         u185_20 0134                         u177_20 0033  
                       u193_21 0217                         u185_21 0133                         u177_21 0032  
                       u186_20 014E                         u178_20 0052                         u186_21 014D  
                       u178_21 0051                         u187_20 018B                         u179_20 006D  
                       u187_21 018A                         u179_21 006C                         u188_20 0196  
                       u188_21 0195                         u189_20 01A2                         u189_21 01A1  
                       _SSP1IE 38C8                         _SSP1IF 3878                 __CFG_PWRTE$OFF 0000  
         __size_of_eepromWrite 0025                         ___wmul 0D71                      ??_adcInit 0020  
                    ??___awdiv 002A                 __CFG_STVREN$ON 0000        __size_of_pollController 009A  
                       _lxData 0062                         _lyData 0061                eepromWrite@data 0020  
                       _rxData 0064               ___awdiv@quotient 002D                         _ryData 0063  
                 ?_reversebyte 0070                      ??_readADC 0022                      ??_picInit 0024  
                 __pdataCOMMON 007B                      ??_lutInit 0039               __end_of_spiWrite 0800  
                    ??_ppsLock 0020                      ??_spiInit 0023                      ??_spiRead 0070  
            _IndexDigitalByte1 00A8              _IndexDigitalByte2 00A0                _MAP_LARGE_MOTOR 005E  
      __end_of__initialization 026F                 __pcstackCOMMON 0070                   __pidataBANK0 0D00  
                 __pidataBANK1 0D5D         _DigitalControllerByte1 00C0         _DigitalControllerByte2 00B8  
            eepromRead@address 0021        __size_of_readController 016A                     _cmdCounter 0079  
                   __pbssBANK0 0068                     __pbssBANK1 00A0                     __pbssBANK2 0120  
                 ??_IO_MAPPING 0020                     _analogMode 0078                   ??_PS2Command 0074  
                   __pmaintext 0730                        ?___wmul 0020                     __pintentry 0004  
      __size_of_spiReceiveWait 0006            __CFG_RSTOSC$HFINT32 0000             __size_of_nvmUnlock 0007  
           __size_of_ppsUnlock 0007                     _eepromRead 0D23             __end_of_IO_MAPPING 0E2F  
                      _AN_temp 007B                        _AN_prev 005D     eepromWrite@interruptStatus 0022  
                      _NVMADRH 081B                        _NVMADRL 081A                        _NVMDATL 081C  
                      _NVMCON2 081F             __end_of_PS2Command 0221                        _PPSLOCK 0E8F  
                      _SSP1BUF 018C                     _escapeMode 0077       readController@analogMode 0022  
       __size_ofi1_reversebyte 0036   __end_of_readControllerAnalog 0F66           __CFG_SCANE$available 0000  
                    ?_spiWrite 0070                        _adcInit 0CF6                        ___awdiv 0E9C  
               _pollController 0F66                __size_of___wmul 0020                _MAP_SMALL_MOTOR 005F  
                      __ptext1 0EFC                        __ptext2 0E65                        __ptext3 0D49  
                      __ptext4 0D35                        __ptext5 05CE                        __ptext6 0464  
                      __ptext7 0DD8                        __ptext8 0273                        __ptext9 0D23  
                      _readADC 0DD8                   __size_of_Map 0022                        _picInit 0D49  
         __size_of_reversebyte 0037                        _lutInit 0273                        _ppsLock 0CEE  
                      _spiInit 0D35                        _spiRead 0CDA                        clrloop0 0D0C  
         end_of_initialization 026F         _CONTROL_RESPONSE_byte3 006B         _CONTROL_RESPONSE_byte4 006A  
       _CONTROL_RESPONSE_byte5 0069                      _MODE_LOCK 006F                        init_ram 0D17  
 __size_of_configureController 0162                        initloop 0D18              __end_of_nvmUnlock 0CEE  
            __end_of_ppsUnlock 0CE7         __end_of_pollController 1000                     ??_spiWrite 0070  
              reversebyte@byte 0023          __CFG_WDTCPS$WDTCPS_31 0000                      Map@outMax 0037  
                    Map@outMin 0035                  i1_reversebyte 0E2F                    ?_eepromRead 0070  
               _readController 0464                      _TRISAbits 0011                      _TRISCbits 0013  
                    _TRISDbits 0014                    spiWrite@dat 0070               __CFG_FEXTOSC$OFF 0000  
   _INIT_PRESSURE_SENSOR_byte3 006D     _INIT_PRESSURE_SENSOR_byte4 006C             _digitalStateSecond 0065  
                ??_eepromWrite 0021                ?_pollController 0070                 _spiReceiveWait 0CD4  
               __end_of___wmul 0D91                  __pidataCOMMON 0003                 ?i1_reversebyte 0070  
       __end_of_readController 05CE            start_initialization 0223                    __end_of_Map 0DB3  
         _readControllerAnalog 0EFC                  _debounceLoops 0060            __size_of_eepromRead 0012  
             __CFG_LPBOREN$OFF 0000         __end_of_spiReceiveWait 0CDA            __end_of_eepromWrite 0DD8  
                     ??___wmul 0024                    __pdataBANK0 005D                    __pdataBANK1 00D8  
              ?_readController 0070                    __pbssBIGRAM 23F0                    __pbssCOMMON 0076  
                    ___latbits 0003                  __pcstackBANK0 0020          configureController@lx 0055  
        configureController@ly 0056          configureController@rx 0057          configureController@ry 0058  
        ?_readControllerAnalog 0070              _analogStateSecond 00C8                ?_spiReceiveWait 0070  
                     ?_adcInit 0070                       ?___awdiv 0026                ??i1_reversebyte 0070  
             __CFG_PPS1WAY$OFF 0000              __size_of_spiWrite 0005            _configureController 05CE  
                     ?_readADC 0020                       ?_picInit 0070                       ?_lutInit 0070  
                     ?_ppsLock 0070                       ?_spiInit 0020                       ?_spiRead 0070  
           eepromWrite@address 0021           spiInit@sTransmitEdge 0022           ?_configureController 0070  
               ___wmul@product 0024                    _eepromWrite 0DB3                      clear_ram0 0D0B  
                     _AN_latch 006E             spiInit@sDataSample 0020                       _AN_timer 0068  
                    _nvmUnlock 0CE7                       Map@inMax 0033                       Map@inMin 0031  
                    _ppsUnlock 0CE0                       _SSP1CON1 0190                       _SSP1STAT 018F  
                ??_reversebyte 0020                     _ADCON0bits 0093              ___wmul@multiplier 0020  
                 lutInit@lxMax 0043                   lutInit@lxMin 0042                   lutInit@lyMax 0045  
                 lutInit@lyMin 0044              _digitalStateFirst 0066                   lutInit@rxMax 0047  
                 lutInit@rxMin 0046                   lutInit@ryMax 0049                   lutInit@ryMin 0048  
                 ??_eepromRead 0020                       _WPUDbits 0F5A                      main@count 005B  
       ??_readControllerAnalog 0029          ??_configureController 004C               ??_pollController 0070  
           __end_of_eepromRead 0D35                     ?_nvmUnlock 0070                     ?_ppsUnlock 0070  
             __size_of_adcInit 000A               __size_of___awdiv 0060                 readADC@channel 0020  
             _analogStateFirst 00D0               __size_of_readADC 002B               __size_of_picInit 0014  
          __end_of_reversebyte 0E9C               __size_of_lutInit 01F1                       __ptext10 0D91  
                     __ptext11 0D71                       __ptext20 0E2F                       __ptext12 0E9C  
                     __ptext21 07FB                       __ptext13 0DB3                       __ptext22 0CDA  
                     __ptext14 0CE7                       __ptext23 0CD4                       __ptext15 0CF6  
                     __ptext24 0F66                       __ptext16 0E03                       __ptext17 0CE0  
                     __ptext18 0CEE               __size_of_ppsLock 0008               __size_of_spiInit 0014  
             __size_of_spiRead 0006                  __size_of_main 00CB           __CFG_WDTCWS$WDTCWS_7 0000  
                     _response 00D8               ??_readController 0020                       _spiWrite 07FB  
                     int$flags 007E                   spiInit@sType 0023                main@slaveSelect 005C  
                 _SSP1STATbits 018F              spiInit@sClockIdle 0021                     _INTCONbits 000B  
                  _NVMCON1bits 081E         pollController@response 0071                       intlevel1 0000  
                   _IO_MAPPING 0E03               ??_spiReceiveWait 0070              __CFG_CLKOUTEN$OFF 0000  
                   _PS2Command 0004                    ??_nvmUnlock 0020                    ??_ppsUnlock 0020  
                  _reversebyte 0E65                    _previousCmd 0076                   ?_eepromWrite 0020  
