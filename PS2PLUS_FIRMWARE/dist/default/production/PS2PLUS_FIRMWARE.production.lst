

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Dec 04 15:40:47 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18876
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	dabs	1,0xCA0,32
    42                           	dabs	1,0xC20,80
    43                           	dabs	1,0xBA0,80
    44                           	dabs	1,0xB30,64
    45                           	dabs	1,0xB20,16
    46                           	dabs	1,0xAA0,80
    47                           	dabs	1,0xA20,80
    48                           	dabs	1,0x9A0,80
    49                           	dabs	1,0x920,80
    50                           	dabs	1,0x8A0,80
    51                           	dabs	1,0x820,80
    52                           	dabs	1,0x7E0,16
    53                           	dabs	1,0x7A0,64
    54                           	dabs	1,0x720,80
    55                           	dabs	1,0x6A0,80
    56                           	dabs	1,0x650,32
    57                           	dabs	1,0x23F0,0,_lutRY
    58                           	dabs	1,0x24F0,0,_lutRX
    59                           	dabs	1,0x25F0,0,_lutLY
    60                           	dabs	1,0x26F0,0,_lutLX
    61                           	dabs	1,0x7E,2
    62  0000                     
    63                           ; Version 2.10
    64                           ; Generated 31/07/2019 GMT
    65                           ; 
    66                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC16F18876 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     	;# 
    98  0001                     	;# 
    99  0002                     	;# 
   100  0003                     	;# 
   101  0004                     	;# 
   102  0005                     	;# 
   103  0006                     	;# 
   104  0007                     	;# 
   105  0008                     	;# 
   106  0009                     	;# 
   107  000A                     	;# 
   108  000B                     	;# 
   109  000C                     	;# 
   110  000D                     	;# 
   111  000E                     	;# 
   112  000F                     	;# 
   113  0010                     	;# 
   114  0011                     	;# 
   115  0012                     	;# 
   116  0013                     	;# 
   117  0014                     	;# 
   118  0015                     	;# 
   119  0016                     	;# 
   120  0017                     	;# 
   121  0018                     	;# 
   122  0019                     	;# 
   123  001A                     	;# 
   124  001C                     	;# 
   125  001C                     	;# 
   126  001D                     	;# 
   127  001D                     	;# 
   128  001E                     	;# 
   129  001F                     	;# 
   130  008C                     	;# 
   131  008C                     	;# 
   132  008D                     	;# 
   133  008E                     	;# 
   134  008E                     	;# 
   135  008F                     	;# 
   136  0090                     	;# 
   137  0090                     	;# 
   138  0091                     	;# 
   139  0093                     	;# 
   140  0094                     	;# 
   141  0095                     	;# 
   142  0096                     	;# 
   143  0097                     	;# 
   144  0098                     	;# 
   145  0099                     	;# 
   146  009A                     	;# 
   147  009B                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  010C                     	;# 
   152  010D                     	;# 
   153  010E                     	;# 
   154  010E                     	;# 
   155  010F                     	;# 
   156  0110                     	;# 
   157  0110                     	;# 
   158  0111                     	;# 
   159  0112                     	;# 
   160  0112                     	;# 
   161  0113                     	;# 
   162  0114                     	;# 
   163  0114                     	;# 
   164  0115                     	;# 
   165  0116                     	;# 
   166  0116                     	;# 
   167  0117                     	;# 
   168  0119                     	;# 
   169  0119                     	;# 
   170  0119                     	;# 
   171  011A                     	;# 
   172  011A                     	;# 
   173  011A                     	;# 
   174  011B                     	;# 
   175  011B                     	;# 
   176  011B                     	;# 
   177  011B                     	;# 
   178  011B                     	;# 
   179  011C                     	;# 
   180  011C                     	;# 
   181  011C                     	;# 
   182  011D                     	;# 
   183  011D                     	;# 
   184  011D                     	;# 
   185  011E                     	;# 
   186  011E                     	;# 
   187  011E                     	;# 
   188  011F                     	;# 
   189  011F                     	;# 
   190  011F                     	;# 
   191  011F                     	;# 
   192  011F                     	;# 
   193  018C                     	;# 
   194  018D                     	;# 
   195  018E                     	;# 
   196  018F                     	;# 
   197  0190                     	;# 
   198  0191                     	;# 
   199  0192                     	;# 
   200  0196                     	;# 
   201  0197                     	;# 
   202  0198                     	;# 
   203  0199                     	;# 
   204  019A                     	;# 
   205  019B                     	;# 
   206  019C                     	;# 
   207  020C                     	;# 
   208  020C                     	;# 
   209  020D                     	;# 
   210  020E                     	;# 
   211  020F                     	;# 
   212  020F                     	;# 
   213  0210                     	;# 
   214  0210                     	;# 
   215  0211                     	;# 
   216  0211                     	;# 
   217  0212                     	;# 
   218  0212                     	;# 
   219  0213                     	;# 
   220  0214                     	;# 
   221  0215                     	;# 
   222  0215                     	;# 
   223  0216                     	;# 
   224  0216                     	;# 
   225  0217                     	;# 
   226  0217                     	;# 
   227  0218                     	;# 
   228  0218                     	;# 
   229  0219                     	;# 
   230  021A                     	;# 
   231  021B                     	;# 
   232  021B                     	;# 
   233  021C                     	;# 
   234  021C                     	;# 
   235  021D                     	;# 
   236  021D                     	;# 
   237  021E                     	;# 
   238  021F                     	;# 
   239  028C                     	;# 
   240  028C                     	;# 
   241  028D                     	;# 
   242  028D                     	;# 
   243  028E                     	;# 
   244  028F                     	;# 
   245  0290                     	;# 
   246  0290                     	;# 
   247  0291                     	;# 
   248  0292                     	;# 
   249  0292                     	;# 
   250  0293                     	;# 
   251  0293                     	;# 
   252  0294                     	;# 
   253  0295                     	;# 
   254  0296                     	;# 
   255  0296                     	;# 
   256  0297                     	;# 
   257  0298                     	;# 
   258  0298                     	;# 
   259  0299                     	;# 
   260  0299                     	;# 
   261  029A                     	;# 
   262  029B                     	;# 
   263  029C                     	;# 
   264  029C                     	;# 
   265  029D                     	;# 
   266  030C                     	;# 
   267  030C                     	;# 
   268  030D                     	;# 
   269  030E                     	;# 
   270  030F                     	;# 
   271  0310                     	;# 
   272  0310                     	;# 
   273  0311                     	;# 
   274  0312                     	;# 
   275  0313                     	;# 
   276  0314                     	;# 
   277  0314                     	;# 
   278  0315                     	;# 
   279  0316                     	;# 
   280  0317                     	;# 
   281  0318                     	;# 
   282  0318                     	;# 
   283  0319                     	;# 
   284  031A                     	;# 
   285  031B                     	;# 
   286  031C                     	;# 
   287  031C                     	;# 
   288  031D                     	;# 
   289  031E                     	;# 
   290  031F                     	;# 
   291  038C                     	;# 
   292  038C                     	;# 
   293  038D                     	;# 
   294  038E                     	;# 
   295  0390                     	;# 
   296  0390                     	;# 
   297  0391                     	;# 
   298  0392                     	;# 
   299  040C                     	;# 
   300  040D                     	;# 
   301  040E                     	;# 
   302  040F                     	;# 
   303  0410                     	;# 
   304  0411                     	;# 
   305  0416                     	;# 
   306  0416                     	;# 
   307  0417                     	;# 
   308  0418                     	;# 
   309  0418                     	;# 
   310  0419                     	;# 
   311  041A                     	;# 
   312  041A                     	;# 
   313  041B                     	;# 
   314  041C                     	;# 
   315  041C                     	;# 
   316  041D                     	;# 
   317  041E                     	;# 
   318  041F                     	;# 
   319  048C                     	;# 
   320  048C                     	;# 
   321  048D                     	;# 
   322  048E                     	;# 
   323  048F                     	;# 
   324  048F                     	;# 
   325  0490                     	;# 
   326  0491                     	;# 
   327  0492                     	;# 
   328  0492                     	;# 
   329  0493                     	;# 
   330  0494                     	;# 
   331  0495                     	;# 
   332  0495                     	;# 
   333  0496                     	;# 
   334  0497                     	;# 
   335  0498                     	;# 
   336  0499                     	;# 
   337  049A                     	;# 
   338  049B                     	;# 
   339  049C                     	;# 
   340  049D                     	;# 
   341  050C                     	;# 
   342  050C                     	;# 
   343  050D                     	;# 
   344  050E                     	;# 
   345  050F                     	;# 
   346  050F                     	;# 
   347  0510                     	;# 
   348  0511                     	;# 
   349  0512                     	;# 
   350  0512                     	;# 
   351  0513                     	;# 
   352  0514                     	;# 
   353  0515                     	;# 
   354  0515                     	;# 
   355  0516                     	;# 
   356  0517                     	;# 
   357  0518                     	;# 
   358  0519                     	;# 
   359  051A                     	;# 
   360  051B                     	;# 
   361  051C                     	;# 
   362  051D                     	;# 
   363  058C                     	;# 
   364  058C                     	;# 
   365  058D                     	;# 
   366  058E                     	;# 
   367  058F                     	;# 
   368  058F                     	;# 
   369  0590                     	;# 
   370  0591                     	;# 
   371  0592                     	;# 
   372  0593                     	;# 
   373  060C                     	;# 
   374  060D                     	;# 
   375  060E                     	;# 
   376  060F                     	;# 
   377  0610                     	;# 
   378  0611                     	;# 
   379  0612                     	;# 
   380  0613                     	;# 
   381  0614                     	;# 
   382  0616                     	;# 
   383  0617                     	;# 
   384  0618                     	;# 
   385  0619                     	;# 
   386  061A                     	;# 
   387  061B                     	;# 
   388  061C                     	;# 
   389  061D                     	;# 
   390  061E                     	;# 
   391  068C                     	;# 
   392  068D                     	;# 
   393  068E                     	;# 
   394  068F                     	;# 
   395  0690                     	;# 
   396  0691                     	;# 
   397  0692                     	;# 
   398  0693                     	;# 
   399  0694                     	;# 
   400  070C                     	;# 
   401  070D                     	;# 
   402  070E                     	;# 
   403  070F                     	;# 
   404  0710                     	;# 
   405  0711                     	;# 
   406  0712                     	;# 
   407  0713                     	;# 
   408  0714                     	;# 
   409  0716                     	;# 
   410  0717                     	;# 
   411  0718                     	;# 
   412  0719                     	;# 
   413  071A                     	;# 
   414  071B                     	;# 
   415  071C                     	;# 
   416  071D                     	;# 
   417  071E                     	;# 
   418  0796                     	;# 
   419  0797                     	;# 
   420  0798                     	;# 
   421  0799                     	;# 
   422  079A                     	;# 
   423  079B                     	;# 
   424  080C                     	;# 
   425  080D                     	;# 
   426  080E                     	;# 
   427  080F                     	;# 
   428  0810                     	;# 
   429  0811                     	;# 
   430  0812                     	;# 
   431  0813                     	;# 
   432  0814                     	;# 
   433  081A                     	;# 
   434  081B                     	;# 
   435  081C                     	;# 
   436  081D                     	;# 
   437  081E                     	;# 
   438  081F                     	;# 
   439  088C                     	;# 
   440  088D                     	;# 
   441  088E                     	;# 
   442  088F                     	;# 
   443  0890                     	;# 
   444  0891                     	;# 
   445  0892                     	;# 
   446  0893                     	;# 
   447  0895                     	;# 
   448  0896                     	;# 
   449  0897                     	;# 
   450  0898                     	;# 
   451  0899                     	;# 
   452  089A                     	;# 
   453  089B                     	;# 
   454  090C                     	;# 
   455  090E                     	;# 
   456  090F                     	;# 
   457  091F                     	;# 
   458  098F                     	;# 
   459  098F                     	;# 
   460  0990                     	;# 
   461  0991                     	;# 
   462  0992                     	;# 
   463  0993                     	;# 
   464  0994                     	;# 
   465  0995                     	;# 
   466  0996                     	;# 
   467  0997                     	;# 
   468  0E0F                     	;# 
   469  0E10                     	;# 
   470  0E11                     	;# 
   471  0E12                     	;# 
   472  0E13                     	;# 
   473  0E14                     	;# 
   474  0E15                     	;# 
   475  0E16                     	;# 
   476  0E17                     	;# 
   477  0E18                     	;# 
   478  0E19                     	;# 
   479  0E1A                     	;# 
   480  0E1B                     	;# 
   481  0E1C                     	;# 
   482  0E1D                     	;# 
   483  0E1E                     	;# 
   484  0E1F                     	;# 
   485  0E20                     	;# 
   486  0E21                     	;# 
   487  0E22                     	;# 
   488  0E23                     	;# 
   489  0E24                     	;# 
   490  0E25                     	;# 
   491  0E26                     	;# 
   492  0E27                     	;# 
   493  0E28                     	;# 
   494  0E29                     	;# 
   495  0E2A                     	;# 
   496  0E2B                     	;# 
   497  0E2C                     	;# 
   498  0E2D                     	;# 
   499  0E2E                     	;# 
   500  0E2F                     	;# 
   501  0E30                     	;# 
   502  0E31                     	;# 
   503  0E32                     	;# 
   504  0E33                     	;# 
   505  0E34                     	;# 
   506  0E35                     	;# 
   507  0E36                     	;# 
   508  0E37                     	;# 
   509  0E8F                     	;# 
   510  0E90                     	;# 
   511  0E91                     	;# 
   512  0E92                     	;# 
   513  0E93                     	;# 
   514  0E94                     	;# 
   515  0E95                     	;# 
   516  0E96                     	;# 
   517  0E97                     	;# 
   518  0E9C                     	;# 
   519  0E9D                     	;# 
   520  0E9E                     	;# 
   521  0EA1                     	;# 
   522  0EA2                     	;# 
   523  0EA3                     	;# 
   524  0EA4                     	;# 
   525  0EA5                     	;# 
   526  0EA9                     	;# 
   527  0EAA                     	;# 
   528  0EAB                     	;# 
   529  0EAC                     	;# 
   530  0EB1                     	;# 
   531  0EB2                     	;# 
   532  0EB3                     	;# 
   533  0EB8                     	;# 
   534  0EB9                     	;# 
   535  0EBA                     	;# 
   536  0EBB                     	;# 
   537  0EBC                     	;# 
   538  0EBD                     	;# 
   539  0EBE                     	;# 
   540  0EC3                     	;# 
   541  0EC5                     	;# 
   542  0EC6                     	;# 
   543  0EC7                     	;# 
   544  0EC8                     	;# 
   545  0EC9                     	;# 
   546  0ECA                     	;# 
   547  0ECB                     	;# 
   548  0ECC                     	;# 
   549  0F10                     	;# 
   550  0F11                     	;# 
   551  0F12                     	;# 
   552  0F13                     	;# 
   553  0F14                     	;# 
   554  0F15                     	;# 
   555  0F16                     	;# 
   556  0F17                     	;# 
   557  0F18                     	;# 
   558  0F19                     	;# 
   559  0F1A                     	;# 
   560  0F1B                     	;# 
   561  0F1C                     	;# 
   562  0F1D                     	;# 
   563  0F1E                     	;# 
   564  0F1F                     	;# 
   565  0F20                     	;# 
   566  0F21                     	;# 
   567  0F22                     	;# 
   568  0F23                     	;# 
   569  0F24                     	;# 
   570  0F25                     	;# 
   571  0F26                     	;# 
   572  0F27                     	;# 
   573  0F28                     	;# 
   574  0F29                     	;# 
   575  0F2A                     	;# 
   576  0F2B                     	;# 
   577  0F2C                     	;# 
   578  0F2D                     	;# 
   579  0F2E                     	;# 
   580  0F2F                     	;# 
   581  0F30                     	;# 
   582  0F31                     	;# 
   583  0F32                     	;# 
   584  0F38                     	;# 
   585  0F39                     	;# 
   586  0F3A                     	;# 
   587  0F3B                     	;# 
   588  0F3C                     	;# 
   589  0F3D                     	;# 
   590  0F3E                     	;# 
   591  0F3F                     	;# 
   592  0F40                     	;# 
   593  0F41                     	;# 
   594  0F43                     	;# 
   595  0F44                     	;# 
   596  0F45                     	;# 
   597  0F46                     	;# 
   598  0F47                     	;# 
   599  0F48                     	;# 
   600  0F49                     	;# 
   601  0F4A                     	;# 
   602  0F4B                     	;# 
   603  0F4C                     	;# 
   604  0F4E                     	;# 
   605  0F4F                     	;# 
   606  0F50                     	;# 
   607  0F51                     	;# 
   608  0F52                     	;# 
   609  0F53                     	;# 
   610  0F54                     	;# 
   611  0F55                     	;# 
   612  0F56                     	;# 
   613  0F57                     	;# 
   614  0F59                     	;# 
   615  0F5A                     	;# 
   616  0F5B                     	;# 
   617  0F5C                     	;# 
   618  0F5D                     	;# 
   619  0F61                     	;# 
   620  0F62                     	;# 
   621  0F64                     	;# 
   622  0F65                     	;# 
   623  0F66                     	;# 
   624  0F67                     	;# 
   625  0F68                     	;# 
   626  0F69                     	;# 
   627  0F6A                     	;# 
   628  0F6B                     	;# 
   629  0F6C                     	;# 
   630  0F6D                     	;# 
   631  0FE4                     	;# 
   632  0FE5                     	;# 
   633  0FE6                     	;# 
   634  0FE7                     	;# 
   635  0FE8                     	;# 
   636  0FE9                     	;# 
   637  0FEA                     	;# 
   638  0FEB                     	;# 
   639  0FED                     	;# 
   640  0FEE                     	;# 
   641  0FEF                     	;# 
   642  0000                     	;# 
   643  0001                     	;# 
   644  0002                     	;# 
   645  0003                     	;# 
   646  0004                     	;# 
   647  0005                     	;# 
   648  0006                     	;# 
   649  0007                     	;# 
   650  0008                     	;# 
   651  0009                     	;# 
   652  000A                     	;# 
   653  000B                     	;# 
   654  000C                     	;# 
   655  000D                     	;# 
   656  000E                     	;# 
   657  000F                     	;# 
   658  0010                     	;# 
   659  0011                     	;# 
   660  0012                     	;# 
   661  0013                     	;# 
   662  0014                     	;# 
   663  0015                     	;# 
   664  0016                     	;# 
   665  0017                     	;# 
   666  0018                     	;# 
   667  0019                     	;# 
   668  001A                     	;# 
   669  001C                     	;# 
   670  001C                     	;# 
   671  001D                     	;# 
   672  001D                     	;# 
   673  001E                     	;# 
   674  001F                     	;# 
   675  008C                     	;# 
   676  008C                     	;# 
   677  008D                     	;# 
   678  008E                     	;# 
   679  008E                     	;# 
   680  008F                     	;# 
   681  0090                     	;# 
   682  0090                     	;# 
   683  0091                     	;# 
   684  0093                     	;# 
   685  0094                     	;# 
   686  0095                     	;# 
   687  0096                     	;# 
   688  0097                     	;# 
   689  0098                     	;# 
   690  0099                     	;# 
   691  009A                     	;# 
   692  009B                     	;# 
   693  009C                     	;# 
   694  009D                     	;# 
   695  009E                     	;# 
   696  010C                     	;# 
   697  010D                     	;# 
   698  010E                     	;# 
   699  010E                     	;# 
   700  010F                     	;# 
   701  0110                     	;# 
   702  0110                     	;# 
   703  0111                     	;# 
   704  0112                     	;# 
   705  0112                     	;# 
   706  0113                     	;# 
   707  0114                     	;# 
   708  0114                     	;# 
   709  0115                     	;# 
   710  0116                     	;# 
   711  0116                     	;# 
   712  0117                     	;# 
   713  0119                     	;# 
   714  0119                     	;# 
   715  0119                     	;# 
   716  011A                     	;# 
   717  011A                     	;# 
   718  011A                     	;# 
   719  011B                     	;# 
   720  011B                     	;# 
   721  011B                     	;# 
   722  011B                     	;# 
   723  011B                     	;# 
   724  011C                     	;# 
   725  011C                     	;# 
   726  011C                     	;# 
   727  011D                     	;# 
   728  011D                     	;# 
   729  011D                     	;# 
   730  011E                     	;# 
   731  011E                     	;# 
   732  011E                     	;# 
   733  011F                     	;# 
   734  011F                     	;# 
   735  011F                     	;# 
   736  011F                     	;# 
   737  011F                     	;# 
   738  018C                     	;# 
   739  018D                     	;# 
   740  018E                     	;# 
   741  018F                     	;# 
   742  0190                     	;# 
   743  0191                     	;# 
   744  0192                     	;# 
   745  0196                     	;# 
   746  0197                     	;# 
   747  0198                     	;# 
   748  0199                     	;# 
   749  019A                     	;# 
   750  019B                     	;# 
   751  019C                     	;# 
   752  020C                     	;# 
   753  020C                     	;# 
   754  020D                     	;# 
   755  020E                     	;# 
   756  020F                     	;# 
   757  020F                     	;# 
   758  0210                     	;# 
   759  0210                     	;# 
   760  0211                     	;# 
   761  0211                     	;# 
   762  0212                     	;# 
   763  0212                     	;# 
   764  0213                     	;# 
   765  0214                     	;# 
   766  0215                     	;# 
   767  0215                     	;# 
   768  0216                     	;# 
   769  0216                     	;# 
   770  0217                     	;# 
   771  0217                     	;# 
   772  0218                     	;# 
   773  0218                     	;# 
   774  0219                     	;# 
   775  021A                     	;# 
   776  021B                     	;# 
   777  021B                     	;# 
   778  021C                     	;# 
   779  021C                     	;# 
   780  021D                     	;# 
   781  021D                     	;# 
   782  021E                     	;# 
   783  021F                     	;# 
   784  028C                     	;# 
   785  028C                     	;# 
   786  028D                     	;# 
   787  028D                     	;# 
   788  028E                     	;# 
   789  028F                     	;# 
   790  0290                     	;# 
   791  0290                     	;# 
   792  0291                     	;# 
   793  0292                     	;# 
   794  0292                     	;# 
   795  0293                     	;# 
   796  0293                     	;# 
   797  0294                     	;# 
   798  0295                     	;# 
   799  0296                     	;# 
   800  0296                     	;# 
   801  0297                     	;# 
   802  0298                     	;# 
   803  0298                     	;# 
   804  0299                     	;# 
   805  0299                     	;# 
   806  029A                     	;# 
   807  029B                     	;# 
   808  029C                     	;# 
   809  029C                     	;# 
   810  029D                     	;# 
   811  030C                     	;# 
   812  030C                     	;# 
   813  030D                     	;# 
   814  030E                     	;# 
   815  030F                     	;# 
   816  0310                     	;# 
   817  0310                     	;# 
   818  0311                     	;# 
   819  0312                     	;# 
   820  0313                     	;# 
   821  0314                     	;# 
   822  0314                     	;# 
   823  0315                     	;# 
   824  0316                     	;# 
   825  0317                     	;# 
   826  0318                     	;# 
   827  0318                     	;# 
   828  0319                     	;# 
   829  031A                     	;# 
   830  031B                     	;# 
   831  031C                     	;# 
   832  031C                     	;# 
   833  031D                     	;# 
   834  031E                     	;# 
   835  031F                     	;# 
   836  038C                     	;# 
   837  038C                     	;# 
   838  038D                     	;# 
   839  038E                     	;# 
   840  0390                     	;# 
   841  0390                     	;# 
   842  0391                     	;# 
   843  0392                     	;# 
   844  040C                     	;# 
   845  040D                     	;# 
   846  040E                     	;# 
   847  040F                     	;# 
   848  0410                     	;# 
   849  0411                     	;# 
   850  0416                     	;# 
   851  0416                     	;# 
   852  0417                     	;# 
   853  0418                     	;# 
   854  0418                     	;# 
   855  0419                     	;# 
   856  041A                     	;# 
   857  041A                     	;# 
   858  041B                     	;# 
   859  041C                     	;# 
   860  041C                     	;# 
   861  041D                     	;# 
   862  041E                     	;# 
   863  041F                     	;# 
   864  048C                     	;# 
   865  048C                     	;# 
   866  048D                     	;# 
   867  048E                     	;# 
   868  048F                     	;# 
   869  048F                     	;# 
   870  0490                     	;# 
   871  0491                     	;# 
   872  0492                     	;# 
   873  0492                     	;# 
   874  0493                     	;# 
   875  0494                     	;# 
   876  0495                     	;# 
   877  0495                     	;# 
   878  0496                     	;# 
   879  0497                     	;# 
   880  0498                     	;# 
   881  0499                     	;# 
   882  049A                     	;# 
   883  049B                     	;# 
   884  049C                     	;# 
   885  049D                     	;# 
   886  050C                     	;# 
   887  050C                     	;# 
   888  050D                     	;# 
   889  050E                     	;# 
   890  050F                     	;# 
   891  050F                     	;# 
   892  0510                     	;# 
   893  0511                     	;# 
   894  0512                     	;# 
   895  0512                     	;# 
   896  0513                     	;# 
   897  0514                     	;# 
   898  0515                     	;# 
   899  0515                     	;# 
   900  0516                     	;# 
   901  0517                     	;# 
   902  0518                     	;# 
   903  0519                     	;# 
   904  051A                     	;# 
   905  051B                     	;# 
   906  051C                     	;# 
   907  051D                     	;# 
   908  058C                     	;# 
   909  058C                     	;# 
   910  058D                     	;# 
   911  058E                     	;# 
   912  058F                     	;# 
   913  058F                     	;# 
   914  0590                     	;# 
   915  0591                     	;# 
   916  0592                     	;# 
   917  0593                     	;# 
   918  060C                     	;# 
   919  060D                     	;# 
   920  060E                     	;# 
   921  060F                     	;# 
   922  0610                     	;# 
   923  0611                     	;# 
   924  0612                     	;# 
   925  0613                     	;# 
   926  0614                     	;# 
   927  0616                     	;# 
   928  0617                     	;# 
   929  0618                     	;# 
   930  0619                     	;# 
   931  061A                     	;# 
   932  061B                     	;# 
   933  061C                     	;# 
   934  061D                     	;# 
   935  061E                     	;# 
   936  068C                     	;# 
   937  068D                     	;# 
   938  068E                     	;# 
   939  068F                     	;# 
   940  0690                     	;# 
   941  0691                     	;# 
   942  0692                     	;# 
   943  0693                     	;# 
   944  0694                     	;# 
   945  070C                     	;# 
   946  070D                     	;# 
   947  070E                     	;# 
   948  070F                     	;# 
   949  0710                     	;# 
   950  0711                     	;# 
   951  0712                     	;# 
   952  0713                     	;# 
   953  0714                     	;# 
   954  0716                     	;# 
   955  0717                     	;# 
   956  0718                     	;# 
   957  0719                     	;# 
   958  071A                     	;# 
   959  071B                     	;# 
   960  071C                     	;# 
   961  071D                     	;# 
   962  071E                     	;# 
   963  0796                     	;# 
   964  0797                     	;# 
   965  0798                     	;# 
   966  0799                     	;# 
   967  079A                     	;# 
   968  079B                     	;# 
   969  080C                     	;# 
   970  080D                     	;# 
   971  080E                     	;# 
   972  080F                     	;# 
   973  0810                     	;# 
   974  0811                     	;# 
   975  0812                     	;# 
   976  0813                     	;# 
   977  0814                     	;# 
   978  081A                     	;# 
   979  081B                     	;# 
   980  081C                     	;# 
   981  081D                     	;# 
   982  081E                     	;# 
   983  081F                     	;# 
   984  088C                     	;# 
   985  088D                     	;# 
   986  088E                     	;# 
   987  088F                     	;# 
   988  0890                     	;# 
   989  0891                     	;# 
   990  0892                     	;# 
   991  0893                     	;# 
   992  0895                     	;# 
   993  0896                     	;# 
   994  0897                     	;# 
   995  0898                     	;# 
   996  0899                     	;# 
   997  089A                     	;# 
   998  089B                     	;# 
   999  090C                     	;# 
  1000  090E                     	;# 
  1001  090F                     	;# 
  1002  091F                     	;# 
  1003  098F                     	;# 
  1004  098F                     	;# 
  1005  0990                     	;# 
  1006  0991                     	;# 
  1007  0992                     	;# 
  1008  0993                     	;# 
  1009  0994                     	;# 
  1010  0995                     	;# 
  1011  0996                     	;# 
  1012  0997                     	;# 
  1013  0E0F                     	;# 
  1014  0E10                     	;# 
  1015  0E11                     	;# 
  1016  0E12                     	;# 
  1017  0E13                     	;# 
  1018  0E14                     	;# 
  1019  0E15                     	;# 
  1020  0E16                     	;# 
  1021  0E17                     	;# 
  1022  0E18                     	;# 
  1023  0E19                     	;# 
  1024  0E1A                     	;# 
  1025  0E1B                     	;# 
  1026  0E1C                     	;# 
  1027  0E1D                     	;# 
  1028  0E1E                     	;# 
  1029  0E1F                     	;# 
  1030  0E20                     	;# 
  1031  0E21                     	;# 
  1032  0E22                     	;# 
  1033  0E23                     	;# 
  1034  0E24                     	;# 
  1035  0E25                     	;# 
  1036  0E26                     	;# 
  1037  0E27                     	;# 
  1038  0E28                     	;# 
  1039  0E29                     	;# 
  1040  0E2A                     	;# 
  1041  0E2B                     	;# 
  1042  0E2C                     	;# 
  1043  0E2D                     	;# 
  1044  0E2E                     	;# 
  1045  0E2F                     	;# 
  1046  0E30                     	;# 
  1047  0E31                     	;# 
  1048  0E32                     	;# 
  1049  0E33                     	;# 
  1050  0E34                     	;# 
  1051  0E35                     	;# 
  1052  0E36                     	;# 
  1053  0E37                     	;# 
  1054  0E8F                     	;# 
  1055  0E90                     	;# 
  1056  0E91                     	;# 
  1057  0E92                     	;# 
  1058  0E93                     	;# 
  1059  0E94                     	;# 
  1060  0E95                     	;# 
  1061  0E96                     	;# 
  1062  0E97                     	;# 
  1063  0E9C                     	;# 
  1064  0E9D                     	;# 
  1065  0E9E                     	;# 
  1066  0EA1                     	;# 
  1067  0EA2                     	;# 
  1068  0EA3                     	;# 
  1069  0EA4                     	;# 
  1070  0EA5                     	;# 
  1071  0EA9                     	;# 
  1072  0EAA                     	;# 
  1073  0EAB                     	;# 
  1074  0EAC                     	;# 
  1075  0EB1                     	;# 
  1076  0EB2                     	;# 
  1077  0EB3                     	;# 
  1078  0EB8                     	;# 
  1079  0EB9                     	;# 
  1080  0EBA                     	;# 
  1081  0EBB                     	;# 
  1082  0EBC                     	;# 
  1083  0EBD                     	;# 
  1084  0EBE                     	;# 
  1085  0EC3                     	;# 
  1086  0EC5                     	;# 
  1087  0EC6                     	;# 
  1088  0EC7                     	;# 
  1089  0EC8                     	;# 
  1090  0EC9                     	;# 
  1091  0ECA                     	;# 
  1092  0ECB                     	;# 
  1093  0ECC                     	;# 
  1094  0F10                     	;# 
  1095  0F11                     	;# 
  1096  0F12                     	;# 
  1097  0F13                     	;# 
  1098  0F14                     	;# 
  1099  0F15                     	;# 
  1100  0F16                     	;# 
  1101  0F17                     	;# 
  1102  0F18                     	;# 
  1103  0F19                     	;# 
  1104  0F1A                     	;# 
  1105  0F1B                     	;# 
  1106  0F1C                     	;# 
  1107  0F1D                     	;# 
  1108  0F1E                     	;# 
  1109  0F1F                     	;# 
  1110  0F20                     	;# 
  1111  0F21                     	;# 
  1112  0F22                     	;# 
  1113  0F23                     	;# 
  1114  0F24                     	;# 
  1115  0F25                     	;# 
  1116  0F26                     	;# 
  1117  0F27                     	;# 
  1118  0F28                     	;# 
  1119  0F29                     	;# 
  1120  0F2A                     	;# 
  1121  0F2B                     	;# 
  1122  0F2C                     	;# 
  1123  0F2D                     	;# 
  1124  0F2E                     	;# 
  1125  0F2F                     	;# 
  1126  0F30                     	;# 
  1127  0F31                     	;# 
  1128  0F32                     	;# 
  1129  0F38                     	;# 
  1130  0F39                     	;# 
  1131  0F3A                     	;# 
  1132  0F3B                     	;# 
  1133  0F3C                     	;# 
  1134  0F3D                     	;# 
  1135  0F3E                     	;# 
  1136  0F3F                     	;# 
  1137  0F40                     	;# 
  1138  0F41                     	;# 
  1139  0F43                     	;# 
  1140  0F44                     	;# 
  1141  0F45                     	;# 
  1142  0F46                     	;# 
  1143  0F47                     	;# 
  1144  0F48                     	;# 
  1145  0F49                     	;# 
  1146  0F4A                     	;# 
  1147  0F4B                     	;# 
  1148  0F4C                     	;# 
  1149  0F4E                     	;# 
  1150  0F4F                     	;# 
  1151  0F50                     	;# 
  1152  0F51                     	;# 
  1153  0F52                     	;# 
  1154  0F53                     	;# 
  1155  0F54                     	;# 
  1156  0F55                     	;# 
  1157  0F56                     	;# 
  1158  0F57                     	;# 
  1159  0F59                     	;# 
  1160  0F5A                     	;# 
  1161  0F5B                     	;# 
  1162  0F5C                     	;# 
  1163  0F5D                     	;# 
  1164  0F61                     	;# 
  1165  0F62                     	;# 
  1166  0F64                     	;# 
  1167  0F65                     	;# 
  1168  0F66                     	;# 
  1169  0F67                     	;# 
  1170  0F68                     	;# 
  1171  0F69                     	;# 
  1172  0F6A                     	;# 
  1173  0F6B                     	;# 
  1174  0F6C                     	;# 
  1175  0F6D                     	;# 
  1176  0FE4                     	;# 
  1177  0FE5                     	;# 
  1178  0FE6                     	;# 
  1179  0FE7                     	;# 
  1180  0FE8                     	;# 
  1181  0FE9                     	;# 
  1182  0FEA                     	;# 
  1183  0FEB                     	;# 
  1184  0FED                     	;# 
  1185  0FEE                     	;# 
  1186  0FEF                     	;# 
  1187  0000                     	;# 
  1188  0001                     	;# 
  1189  0002                     	;# 
  1190  0003                     	;# 
  1191  0004                     	;# 
  1192  0005                     	;# 
  1193  0006                     	;# 
  1194  0007                     	;# 
  1195  0008                     	;# 
  1196  0009                     	;# 
  1197  000A                     	;# 
  1198  000B                     	;# 
  1199  000C                     	;# 
  1200  000D                     	;# 
  1201  000E                     	;# 
  1202  000F                     	;# 
  1203  0010                     	;# 
  1204  0011                     	;# 
  1205  0012                     	;# 
  1206  0013                     	;# 
  1207  0014                     	;# 
  1208  0015                     	;# 
  1209  0016                     	;# 
  1210  0017                     	;# 
  1211  0018                     	;# 
  1212  0019                     	;# 
  1213  001A                     	;# 
  1214  001C                     	;# 
  1215  001C                     	;# 
  1216  001D                     	;# 
  1217  001D                     	;# 
  1218  001E                     	;# 
  1219  001F                     	;# 
  1220  008C                     	;# 
  1221  008C                     	;# 
  1222  008D                     	;# 
  1223  008E                     	;# 
  1224  008E                     	;# 
  1225  008F                     	;# 
  1226  0090                     	;# 
  1227  0090                     	;# 
  1228  0091                     	;# 
  1229  0093                     	;# 
  1230  0094                     	;# 
  1231  0095                     	;# 
  1232  0096                     	;# 
  1233  0097                     	;# 
  1234  0098                     	;# 
  1235  0099                     	;# 
  1236  009A                     	;# 
  1237  009B                     	;# 
  1238  009C                     	;# 
  1239  009D                     	;# 
  1240  009E                     	;# 
  1241  010C                     	;# 
  1242  010D                     	;# 
  1243  010E                     	;# 
  1244  010E                     	;# 
  1245  010F                     	;# 
  1246  0110                     	;# 
  1247  0110                     	;# 
  1248  0111                     	;# 
  1249  0112                     	;# 
  1250  0112                     	;# 
  1251  0113                     	;# 
  1252  0114                     	;# 
  1253  0114                     	;# 
  1254  0115                     	;# 
  1255  0116                     	;# 
  1256  0116                     	;# 
  1257  0117                     	;# 
  1258  0119                     	;# 
  1259  0119                     	;# 
  1260  0119                     	;# 
  1261  011A                     	;# 
  1262  011A                     	;# 
  1263  011A                     	;# 
  1264  011B                     	;# 
  1265  011B                     	;# 
  1266  011B                     	;# 
  1267  011B                     	;# 
  1268  011B                     	;# 
  1269  011C                     	;# 
  1270  011C                     	;# 
  1271  011C                     	;# 
  1272  011D                     	;# 
  1273  011D                     	;# 
  1274  011D                     	;# 
  1275  011E                     	;# 
  1276  011E                     	;# 
  1277  011E                     	;# 
  1278  011F                     	;# 
  1279  011F                     	;# 
  1280  011F                     	;# 
  1281  011F                     	;# 
  1282  011F                     	;# 
  1283  018C                     	;# 
  1284  018D                     	;# 
  1285  018E                     	;# 
  1286  018F                     	;# 
  1287  0190                     	;# 
  1288  0191                     	;# 
  1289  0192                     	;# 
  1290  0196                     	;# 
  1291  0197                     	;# 
  1292  0198                     	;# 
  1293  0199                     	;# 
  1294  019A                     	;# 
  1295  019B                     	;# 
  1296  019C                     	;# 
  1297  020C                     	;# 
  1298  020C                     	;# 
  1299  020D                     	;# 
  1300  020E                     	;# 
  1301  020F                     	;# 
  1302  020F                     	;# 
  1303  0210                     	;# 
  1304  0210                     	;# 
  1305  0211                     	;# 
  1306  0211                     	;# 
  1307  0212                     	;# 
  1308  0212                     	;# 
  1309  0213                     	;# 
  1310  0214                     	;# 
  1311  0215                     	;# 
  1312  0215                     	;# 
  1313  0216                     	;# 
  1314  0216                     	;# 
  1315  0217                     	;# 
  1316  0217                     	;# 
  1317  0218                     	;# 
  1318  0218                     	;# 
  1319  0219                     	;# 
  1320  021A                     	;# 
  1321  021B                     	;# 
  1322  021B                     	;# 
  1323  021C                     	;# 
  1324  021C                     	;# 
  1325  021D                     	;# 
  1326  021D                     	;# 
  1327  021E                     	;# 
  1328  021F                     	;# 
  1329  028C                     	;# 
  1330  028C                     	;# 
  1331  028D                     	;# 
  1332  028D                     	;# 
  1333  028E                     	;# 
  1334  028F                     	;# 
  1335  0290                     	;# 
  1336  0290                     	;# 
  1337  0291                     	;# 
  1338  0292                     	;# 
  1339  0292                     	;# 
  1340  0293                     	;# 
  1341  0293                     	;# 
  1342  0294                     	;# 
  1343  0295                     	;# 
  1344  0296                     	;# 
  1345  0296                     	;# 
  1346  0297                     	;# 
  1347  0298                     	;# 
  1348  0298                     	;# 
  1349  0299                     	;# 
  1350  0299                     	;# 
  1351  029A                     	;# 
  1352  029B                     	;# 
  1353  029C                     	;# 
  1354  029C                     	;# 
  1355  029D                     	;# 
  1356  030C                     	;# 
  1357  030C                     	;# 
  1358  030D                     	;# 
  1359  030E                     	;# 
  1360  030F                     	;# 
  1361  0310                     	;# 
  1362  0310                     	;# 
  1363  0311                     	;# 
  1364  0312                     	;# 
  1365  0313                     	;# 
  1366  0314                     	;# 
  1367  0314                     	;# 
  1368  0315                     	;# 
  1369  0316                     	;# 
  1370  0317                     	;# 
  1371  0318                     	;# 
  1372  0318                     	;# 
  1373  0319                     	;# 
  1374  031A                     	;# 
  1375  031B                     	;# 
  1376  031C                     	;# 
  1377  031C                     	;# 
  1378  031D                     	;# 
  1379  031E                     	;# 
  1380  031F                     	;# 
  1381  038C                     	;# 
  1382  038C                     	;# 
  1383  038D                     	;# 
  1384  038E                     	;# 
  1385  0390                     	;# 
  1386  0390                     	;# 
  1387  0391                     	;# 
  1388  0392                     	;# 
  1389  040C                     	;# 
  1390  040D                     	;# 
  1391  040E                     	;# 
  1392  040F                     	;# 
  1393  0410                     	;# 
  1394  0411                     	;# 
  1395  0416                     	;# 
  1396  0416                     	;# 
  1397  0417                     	;# 
  1398  0418                     	;# 
  1399  0418                     	;# 
  1400  0419                     	;# 
  1401  041A                     	;# 
  1402  041A                     	;# 
  1403  041B                     	;# 
  1404  041C                     	;# 
  1405  041C                     	;# 
  1406  041D                     	;# 
  1407  041E                     	;# 
  1408  041F                     	;# 
  1409  048C                     	;# 
  1410  048C                     	;# 
  1411  048D                     	;# 
  1412  048E                     	;# 
  1413  048F                     	;# 
  1414  048F                     	;# 
  1415  0490                     	;# 
  1416  0491                     	;# 
  1417  0492                     	;# 
  1418  0492                     	;# 
  1419  0493                     	;# 
  1420  0494                     	;# 
  1421  0495                     	;# 
  1422  0495                     	;# 
  1423  0496                     	;# 
  1424  0497                     	;# 
  1425  0498                     	;# 
  1426  0499                     	;# 
  1427  049A                     	;# 
  1428  049B                     	;# 
  1429  049C                     	;# 
  1430  049D                     	;# 
  1431  050C                     	;# 
  1432  050C                     	;# 
  1433  050D                     	;# 
  1434  050E                     	;# 
  1435  050F                     	;# 
  1436  050F                     	;# 
  1437  0510                     	;# 
  1438  0511                     	;# 
  1439  0512                     	;# 
  1440  0512                     	;# 
  1441  0513                     	;# 
  1442  0514                     	;# 
  1443  0515                     	;# 
  1444  0515                     	;# 
  1445  0516                     	;# 
  1446  0517                     	;# 
  1447  0518                     	;# 
  1448  0519                     	;# 
  1449  051A                     	;# 
  1450  051B                     	;# 
  1451  051C                     	;# 
  1452  051D                     	;# 
  1453  058C                     	;# 
  1454  058C                     	;# 
  1455  058D                     	;# 
  1456  058E                     	;# 
  1457  058F                     	;# 
  1458  058F                     	;# 
  1459  0590                     	;# 
  1460  0591                     	;# 
  1461  0592                     	;# 
  1462  0593                     	;# 
  1463  060C                     	;# 
  1464  060D                     	;# 
  1465  060E                     	;# 
  1466  060F                     	;# 
  1467  0610                     	;# 
  1468  0611                     	;# 
  1469  0612                     	;# 
  1470  0613                     	;# 
  1471  0614                     	;# 
  1472  0616                     	;# 
  1473  0617                     	;# 
  1474  0618                     	;# 
  1475  0619                     	;# 
  1476  061A                     	;# 
  1477  061B                     	;# 
  1478  061C                     	;# 
  1479  061D                     	;# 
  1480  061E                     	;# 
  1481  068C                     	;# 
  1482  068D                     	;# 
  1483  068E                     	;# 
  1484  068F                     	;# 
  1485  0690                     	;# 
  1486  0691                     	;# 
  1487  0692                     	;# 
  1488  0693                     	;# 
  1489  0694                     	;# 
  1490  070C                     	;# 
  1491  070D                     	;# 
  1492  070E                     	;# 
  1493  070F                     	;# 
  1494  0710                     	;# 
  1495  0711                     	;# 
  1496  0712                     	;# 
  1497  0713                     	;# 
  1498  0714                     	;# 
  1499  0716                     	;# 
  1500  0717                     	;# 
  1501  0718                     	;# 
  1502  0719                     	;# 
  1503  071A                     	;# 
  1504  071B                     	;# 
  1505  071C                     	;# 
  1506  071D                     	;# 
  1507  071E                     	;# 
  1508  0796                     	;# 
  1509  0797                     	;# 
  1510  0798                     	;# 
  1511  0799                     	;# 
  1512  079A                     	;# 
  1513  079B                     	;# 
  1514  080C                     	;# 
  1515  080D                     	;# 
  1516  080E                     	;# 
  1517  080F                     	;# 
  1518  0810                     	;# 
  1519  0811                     	;# 
  1520  0812                     	;# 
  1521  0813                     	;# 
  1522  0814                     	;# 
  1523  081A                     	;# 
  1524  081B                     	;# 
  1525  081C                     	;# 
  1526  081D                     	;# 
  1527  081E                     	;# 
  1528  081F                     	;# 
  1529  088C                     	;# 
  1530  088D                     	;# 
  1531  088E                     	;# 
  1532  088F                     	;# 
  1533  0890                     	;# 
  1534  0891                     	;# 
  1535  0892                     	;# 
  1536  0893                     	;# 
  1537  0895                     	;# 
  1538  0896                     	;# 
  1539  0897                     	;# 
  1540  0898                     	;# 
  1541  0899                     	;# 
  1542  089A                     	;# 
  1543  089B                     	;# 
  1544  090C                     	;# 
  1545  090E                     	;# 
  1546  090F                     	;# 
  1547  091F                     	;# 
  1548  098F                     	;# 
  1549  098F                     	;# 
  1550  0990                     	;# 
  1551  0991                     	;# 
  1552  0992                     	;# 
  1553  0993                     	;# 
  1554  0994                     	;# 
  1555  0995                     	;# 
  1556  0996                     	;# 
  1557  0997                     	;# 
  1558  0E0F                     	;# 
  1559  0E10                     	;# 
  1560  0E11                     	;# 
  1561  0E12                     	;# 
  1562  0E13                     	;# 
  1563  0E14                     	;# 
  1564  0E15                     	;# 
  1565  0E16                     	;# 
  1566  0E17                     	;# 
  1567  0E18                     	;# 
  1568  0E19                     	;# 
  1569  0E1A                     	;# 
  1570  0E1B                     	;# 
  1571  0E1C                     	;# 
  1572  0E1D                     	;# 
  1573  0E1E                     	;# 
  1574  0E1F                     	;# 
  1575  0E20                     	;# 
  1576  0E21                     	;# 
  1577  0E22                     	;# 
  1578  0E23                     	;# 
  1579  0E24                     	;# 
  1580  0E25                     	;# 
  1581  0E26                     	;# 
  1582  0E27                     	;# 
  1583  0E28                     	;# 
  1584  0E29                     	;# 
  1585  0E2A                     	;# 
  1586  0E2B                     	;# 
  1587  0E2C                     	;# 
  1588  0E2D                     	;# 
  1589  0E2E                     	;# 
  1590  0E2F                     	;# 
  1591  0E30                     	;# 
  1592  0E31                     	;# 
  1593  0E32                     	;# 
  1594  0E33                     	;# 
  1595  0E34                     	;# 
  1596  0E35                     	;# 
  1597  0E36                     	;# 
  1598  0E37                     	;# 
  1599  0E8F                     	;# 
  1600  0E90                     	;# 
  1601  0E91                     	;# 
  1602  0E92                     	;# 
  1603  0E93                     	;# 
  1604  0E94                     	;# 
  1605  0E95                     	;# 
  1606  0E96                     	;# 
  1607  0E97                     	;# 
  1608  0E9C                     	;# 
  1609  0E9D                     	;# 
  1610  0E9E                     	;# 
  1611  0EA1                     	;# 
  1612  0EA2                     	;# 
  1613  0EA3                     	;# 
  1614  0EA4                     	;# 
  1615  0EA5                     	;# 
  1616  0EA9                     	;# 
  1617  0EAA                     	;# 
  1618  0EAB                     	;# 
  1619  0EAC                     	;# 
  1620  0EB1                     	;# 
  1621  0EB2                     	;# 
  1622  0EB3                     	;# 
  1623  0EB8                     	;# 
  1624  0EB9                     	;# 
  1625  0EBA                     	;# 
  1626  0EBB                     	;# 
  1627  0EBC                     	;# 
  1628  0EBD                     	;# 
  1629  0EBE                     	;# 
  1630  0EC3                     	;# 
  1631  0EC5                     	;# 
  1632  0EC6                     	;# 
  1633  0EC7                     	;# 
  1634  0EC8                     	;# 
  1635  0EC9                     	;# 
  1636  0ECA                     	;# 
  1637  0ECB                     	;# 
  1638  0ECC                     	;# 
  1639  0F10                     	;# 
  1640  0F11                     	;# 
  1641  0F12                     	;# 
  1642  0F13                     	;# 
  1643  0F14                     	;# 
  1644  0F15                     	;# 
  1645  0F16                     	;# 
  1646  0F17                     	;# 
  1647  0F18                     	;# 
  1648  0F19                     	;# 
  1649  0F1A                     	;# 
  1650  0F1B                     	;# 
  1651  0F1C                     	;# 
  1652  0F1D                     	;# 
  1653  0F1E                     	;# 
  1654  0F1F                     	;# 
  1655  0F20                     	;# 
  1656  0F21                     	;# 
  1657  0F22                     	;# 
  1658  0F23                     	;# 
  1659  0F24                     	;# 
  1660  0F25                     	;# 
  1661  0F26                     	;# 
  1662  0F27                     	;# 
  1663  0F28                     	;# 
  1664  0F29                     	;# 
  1665  0F2A                     	;# 
  1666  0F2B                     	;# 
  1667  0F2C                     	;# 
  1668  0F2D                     	;# 
  1669  0F2E                     	;# 
  1670  0F2F                     	;# 
  1671  0F30                     	;# 
  1672  0F31                     	;# 
  1673  0F32                     	;# 
  1674  0F38                     	;# 
  1675  0F39                     	;# 
  1676  0F3A                     	;# 
  1677  0F3B                     	;# 
  1678  0F3C                     	;# 
  1679  0F3D                     	;# 
  1680  0F3E                     	;# 
  1681  0F3F                     	;# 
  1682  0F40                     	;# 
  1683  0F41                     	;# 
  1684  0F43                     	;# 
  1685  0F44                     	;# 
  1686  0F45                     	;# 
  1687  0F46                     	;# 
  1688  0F47                     	;# 
  1689  0F48                     	;# 
  1690  0F49                     	;# 
  1691  0F4A                     	;# 
  1692  0F4B                     	;# 
  1693  0F4C                     	;# 
  1694  0F4E                     	;# 
  1695  0F4F                     	;# 
  1696  0F50                     	;# 
  1697  0F51                     	;# 
  1698  0F52                     	;# 
  1699  0F53                     	;# 
  1700  0F54                     	;# 
  1701  0F55                     	;# 
  1702  0F56                     	;# 
  1703  0F57                     	;# 
  1704  0F59                     	;# 
  1705  0F5A                     	;# 
  1706  0F5B                     	;# 
  1707  0F5C                     	;# 
  1708  0F5D                     	;# 
  1709  0F61                     	;# 
  1710  0F62                     	;# 
  1711  0F64                     	;# 
  1712  0F65                     	;# 
  1713  0F66                     	;# 
  1714  0F67                     	;# 
  1715  0F68                     	;# 
  1716  0F69                     	;# 
  1717  0F6A                     	;# 
  1718  0F6B                     	;# 
  1719  0F6C                     	;# 
  1720  0F6D                     	;# 
  1721  0FE4                     	;# 
  1722  0FE5                     	;# 
  1723  0FE6                     	;# 
  1724  0FE7                     	;# 
  1725  0FE8                     	;# 
  1726  0FE9                     	;# 
  1727  0FEA                     	;# 
  1728  0FEB                     	;# 
  1729  0FED                     	;# 
  1730  0FEE                     	;# 
  1731  0FEF                     	;# 
  1732  0000                     	;# 
  1733  0001                     	;# 
  1734  0002                     	;# 
  1735  0003                     	;# 
  1736  0004                     	;# 
  1737  0005                     	;# 
  1738  0006                     	;# 
  1739  0007                     	;# 
  1740  0008                     	;# 
  1741  0009                     	;# 
  1742  000A                     	;# 
  1743  000B                     	;# 
  1744  000C                     	;# 
  1745  000D                     	;# 
  1746  000E                     	;# 
  1747  000F                     	;# 
  1748  0010                     	;# 
  1749  0011                     	;# 
  1750  0012                     	;# 
  1751  0013                     	;# 
  1752  0014                     	;# 
  1753  0015                     	;# 
  1754  0016                     	;# 
  1755  0017                     	;# 
  1756  0018                     	;# 
  1757  0019                     	;# 
  1758  001A                     	;# 
  1759  001C                     	;# 
  1760  001C                     	;# 
  1761  001D                     	;# 
  1762  001D                     	;# 
  1763  001E                     	;# 
  1764  001F                     	;# 
  1765  008C                     	;# 
  1766  008C                     	;# 
  1767  008D                     	;# 
  1768  008E                     	;# 
  1769  008E                     	;# 
  1770  008F                     	;# 
  1771  0090                     	;# 
  1772  0090                     	;# 
  1773  0091                     	;# 
  1774  0093                     	;# 
  1775  0094                     	;# 
  1776  0095                     	;# 
  1777  0096                     	;# 
  1778  0097                     	;# 
  1779  0098                     	;# 
  1780  0099                     	;# 
  1781  009A                     	;# 
  1782  009B                     	;# 
  1783  009C                     	;# 
  1784  009D                     	;# 
  1785  009E                     	;# 
  1786  010C                     	;# 
  1787  010D                     	;# 
  1788  010E                     	;# 
  1789  010E                     	;# 
  1790  010F                     	;# 
  1791  0110                     	;# 
  1792  0110                     	;# 
  1793  0111                     	;# 
  1794  0112                     	;# 
  1795  0112                     	;# 
  1796  0113                     	;# 
  1797  0114                     	;# 
  1798  0114                     	;# 
  1799  0115                     	;# 
  1800  0116                     	;# 
  1801  0116                     	;# 
  1802  0117                     	;# 
  1803  0119                     	;# 
  1804  0119                     	;# 
  1805  0119                     	;# 
  1806  011A                     	;# 
  1807  011A                     	;# 
  1808  011A                     	;# 
  1809  011B                     	;# 
  1810  011B                     	;# 
  1811  011B                     	;# 
  1812  011B                     	;# 
  1813  011B                     	;# 
  1814  011C                     	;# 
  1815  011C                     	;# 
  1816  011C                     	;# 
  1817  011D                     	;# 
  1818  011D                     	;# 
  1819  011D                     	;# 
  1820  011E                     	;# 
  1821  011E                     	;# 
  1822  011E                     	;# 
  1823  011F                     	;# 
  1824  011F                     	;# 
  1825  011F                     	;# 
  1826  011F                     	;# 
  1827  011F                     	;# 
  1828  018C                     	;# 
  1829  018D                     	;# 
  1830  018E                     	;# 
  1831  018F                     	;# 
  1832  0190                     	;# 
  1833  0191                     	;# 
  1834  0192                     	;# 
  1835  0196                     	;# 
  1836  0197                     	;# 
  1837  0198                     	;# 
  1838  0199                     	;# 
  1839  019A                     	;# 
  1840  019B                     	;# 
  1841  019C                     	;# 
  1842  020C                     	;# 
  1843  020C                     	;# 
  1844  020D                     	;# 
  1845  020E                     	;# 
  1846  020F                     	;# 
  1847  020F                     	;# 
  1848  0210                     	;# 
  1849  0210                     	;# 
  1850  0211                     	;# 
  1851  0211                     	;# 
  1852  0212                     	;# 
  1853  0212                     	;# 
  1854  0213                     	;# 
  1855  0214                     	;# 
  1856  0215                     	;# 
  1857  0215                     	;# 
  1858  0216                     	;# 
  1859  0216                     	;# 
  1860  0217                     	;# 
  1861  0217                     	;# 
  1862  0218                     	;# 
  1863  0218                     	;# 
  1864  0219                     	;# 
  1865  021A                     	;# 
  1866  021B                     	;# 
  1867  021B                     	;# 
  1868  021C                     	;# 
  1869  021C                     	;# 
  1870  021D                     	;# 
  1871  021D                     	;# 
  1872  021E                     	;# 
  1873  021F                     	;# 
  1874  028C                     	;# 
  1875  028C                     	;# 
  1876  028D                     	;# 
  1877  028D                     	;# 
  1878  028E                     	;# 
  1879  028F                     	;# 
  1880  0290                     	;# 
  1881  0290                     	;# 
  1882  0291                     	;# 
  1883  0292                     	;# 
  1884  0292                     	;# 
  1885  0293                     	;# 
  1886  0293                     	;# 
  1887  0294                     	;# 
  1888  0295                     	;# 
  1889  0296                     	;# 
  1890  0296                     	;# 
  1891  0297                     	;# 
  1892  0298                     	;# 
  1893  0298                     	;# 
  1894  0299                     	;# 
  1895  0299                     	;# 
  1896  029A                     	;# 
  1897  029B                     	;# 
  1898  029C                     	;# 
  1899  029C                     	;# 
  1900  029D                     	;# 
  1901  030C                     	;# 
  1902  030C                     	;# 
  1903  030D                     	;# 
  1904  030E                     	;# 
  1905  030F                     	;# 
  1906  0310                     	;# 
  1907  0310                     	;# 
  1908  0311                     	;# 
  1909  0312                     	;# 
  1910  0313                     	;# 
  1911  0314                     	;# 
  1912  0314                     	;# 
  1913  0315                     	;# 
  1914  0316                     	;# 
  1915  0317                     	;# 
  1916  0318                     	;# 
  1917  0318                     	;# 
  1918  0319                     	;# 
  1919  031A                     	;# 
  1920  031B                     	;# 
  1921  031C                     	;# 
  1922  031C                     	;# 
  1923  031D                     	;# 
  1924  031E                     	;# 
  1925  031F                     	;# 
  1926  038C                     	;# 
  1927  038C                     	;# 
  1928  038D                     	;# 
  1929  038E                     	;# 
  1930  0390                     	;# 
  1931  0390                     	;# 
  1932  0391                     	;# 
  1933  0392                     	;# 
  1934  040C                     	;# 
  1935  040D                     	;# 
  1936  040E                     	;# 
  1937  040F                     	;# 
  1938  0410                     	;# 
  1939  0411                     	;# 
  1940  0416                     	;# 
  1941  0416                     	;# 
  1942  0417                     	;# 
  1943  0418                     	;# 
  1944  0418                     	;# 
  1945  0419                     	;# 
  1946  041A                     	;# 
  1947  041A                     	;# 
  1948  041B                     	;# 
  1949  041C                     	;# 
  1950  041C                     	;# 
  1951  041D                     	;# 
  1952  041E                     	;# 
  1953  041F                     	;# 
  1954  048C                     	;# 
  1955  048C                     	;# 
  1956  048D                     	;# 
  1957  048E                     	;# 
  1958  048F                     	;# 
  1959  048F                     	;# 
  1960  0490                     	;# 
  1961  0491                     	;# 
  1962  0492                     	;# 
  1963  0492                     	;# 
  1964  0493                     	;# 
  1965  0494                     	;# 
  1966  0495                     	;# 
  1967  0495                     	;# 
  1968  0496                     	;# 
  1969  0497                     	;# 
  1970  0498                     	;# 
  1971  0499                     	;# 
  1972  049A                     	;# 
  1973  049B                     	;# 
  1974  049C                     	;# 
  1975  049D                     	;# 
  1976  050C                     	;# 
  1977  050C                     	;# 
  1978  050D                     	;# 
  1979  050E                     	;# 
  1980  050F                     	;# 
  1981  050F                     	;# 
  1982  0510                     	;# 
  1983  0511                     	;# 
  1984  0512                     	;# 
  1985  0512                     	;# 
  1986  0513                     	;# 
  1987  0514                     	;# 
  1988  0515                     	;# 
  1989  0515                     	;# 
  1990  0516                     	;# 
  1991  0517                     	;# 
  1992  0518                     	;# 
  1993  0519                     	;# 
  1994  051A                     	;# 
  1995  051B                     	;# 
  1996  051C                     	;# 
  1997  051D                     	;# 
  1998  058C                     	;# 
  1999  058C                     	;# 
  2000  058D                     	;# 
  2001  058E                     	;# 
  2002  058F                     	;# 
  2003  058F                     	;# 
  2004  0590                     	;# 
  2005  0591                     	;# 
  2006  0592                     	;# 
  2007  0593                     	;# 
  2008  060C                     	;# 
  2009  060D                     	;# 
  2010  060E                     	;# 
  2011  060F                     	;# 
  2012  0610                     	;# 
  2013  0611                     	;# 
  2014  0612                     	;# 
  2015  0613                     	;# 
  2016  0614                     	;# 
  2017  0616                     	;# 
  2018  0617                     	;# 
  2019  0618                     	;# 
  2020  0619                     	;# 
  2021  061A                     	;# 
  2022  061B                     	;# 
  2023  061C                     	;# 
  2024  061D                     	;# 
  2025  061E                     	;# 
  2026  068C                     	;# 
  2027  068D                     	;# 
  2028  068E                     	;# 
  2029  068F                     	;# 
  2030  0690                     	;# 
  2031  0691                     	;# 
  2032  0692                     	;# 
  2033  0693                     	;# 
  2034  0694                     	;# 
  2035  070C                     	;# 
  2036  070D                     	;# 
  2037  070E                     	;# 
  2038  070F                     	;# 
  2039  0710                     	;# 
  2040  0711                     	;# 
  2041  0712                     	;# 
  2042  0713                     	;# 
  2043  0714                     	;# 
  2044  0716                     	;# 
  2045  0717                     	;# 
  2046  0718                     	;# 
  2047  0719                     	;# 
  2048  071A                     	;# 
  2049  071B                     	;# 
  2050  071C                     	;# 
  2051  071D                     	;# 
  2052  071E                     	;# 
  2053  0796                     	;# 
  2054  0797                     	;# 
  2055  0798                     	;# 
  2056  0799                     	;# 
  2057  079A                     	;# 
  2058  079B                     	;# 
  2059  080C                     	;# 
  2060  080D                     	;# 
  2061  080E                     	;# 
  2062  080F                     	;# 
  2063  0810                     	;# 
  2064  0811                     	;# 
  2065  0812                     	;# 
  2066  0813                     	;# 
  2067  0814                     	;# 
  2068  081A                     	;# 
  2069  081B                     	;# 
  2070  081C                     	;# 
  2071  081D                     	;# 
  2072  081E                     	;# 
  2073  081F                     	;# 
  2074  088C                     	;# 
  2075  088D                     	;# 
  2076  088E                     	;# 
  2077  088F                     	;# 
  2078  0890                     	;# 
  2079  0891                     	;# 
  2080  0892                     	;# 
  2081  0893                     	;# 
  2082  0895                     	;# 
  2083  0896                     	;# 
  2084  0897                     	;# 
  2085  0898                     	;# 
  2086  0899                     	;# 
  2087  089A                     	;# 
  2088  089B                     	;# 
  2089  090C                     	;# 
  2090  090E                     	;# 
  2091  090F                     	;# 
  2092  091F                     	;# 
  2093  098F                     	;# 
  2094  098F                     	;# 
  2095  0990                     	;# 
  2096  0991                     	;# 
  2097  0992                     	;# 
  2098  0993                     	;# 
  2099  0994                     	;# 
  2100  0995                     	;# 
  2101  0996                     	;# 
  2102  0997                     	;# 
  2103  0E0F                     	;# 
  2104  0E10                     	;# 
  2105  0E11                     	;# 
  2106  0E12                     	;# 
  2107  0E13                     	;# 
  2108  0E14                     	;# 
  2109  0E15                     	;# 
  2110  0E16                     	;# 
  2111  0E17                     	;# 
  2112  0E18                     	;# 
  2113  0E19                     	;# 
  2114  0E1A                     	;# 
  2115  0E1B                     	;# 
  2116  0E1C                     	;# 
  2117  0E1D                     	;# 
  2118  0E1E                     	;# 
  2119  0E1F                     	;# 
  2120  0E20                     	;# 
  2121  0E21                     	;# 
  2122  0E22                     	;# 
  2123  0E23                     	;# 
  2124  0E24                     	;# 
  2125  0E25                     	;# 
  2126  0E26                     	;# 
  2127  0E27                     	;# 
  2128  0E28                     	;# 
  2129  0E29                     	;# 
  2130  0E2A                     	;# 
  2131  0E2B                     	;# 
  2132  0E2C                     	;# 
  2133  0E2D                     	;# 
  2134  0E2E                     	;# 
  2135  0E2F                     	;# 
  2136  0E30                     	;# 
  2137  0E31                     	;# 
  2138  0E32                     	;# 
  2139  0E33                     	;# 
  2140  0E34                     	;# 
  2141  0E35                     	;# 
  2142  0E36                     	;# 
  2143  0E37                     	;# 
  2144  0E8F                     	;# 
  2145  0E90                     	;# 
  2146  0E91                     	;# 
  2147  0E92                     	;# 
  2148  0E93                     	;# 
  2149  0E94                     	;# 
  2150  0E95                     	;# 
  2151  0E96                     	;# 
  2152  0E97                     	;# 
  2153  0E9C                     	;# 
  2154  0E9D                     	;# 
  2155  0E9E                     	;# 
  2156  0EA1                     	;# 
  2157  0EA2                     	;# 
  2158  0EA3                     	;# 
  2159  0EA4                     	;# 
  2160  0EA5                     	;# 
  2161  0EA9                     	;# 
  2162  0EAA                     	;# 
  2163  0EAB                     	;# 
  2164  0EAC                     	;# 
  2165  0EB1                     	;# 
  2166  0EB2                     	;# 
  2167  0EB3                     	;# 
  2168  0EB8                     	;# 
  2169  0EB9                     	;# 
  2170  0EBA                     	;# 
  2171  0EBB                     	;# 
  2172  0EBC                     	;# 
  2173  0EBD                     	;# 
  2174  0EBE                     	;# 
  2175  0EC3                     	;# 
  2176  0EC5                     	;# 
  2177  0EC6                     	;# 
  2178  0EC7                     	;# 
  2179  0EC8                     	;# 
  2180  0EC9                     	;# 
  2181  0ECA                     	;# 
  2182  0ECB                     	;# 
  2183  0ECC                     	;# 
  2184  0F10                     	;# 
  2185  0F11                     	;# 
  2186  0F12                     	;# 
  2187  0F13                     	;# 
  2188  0F14                     	;# 
  2189  0F15                     	;# 
  2190  0F16                     	;# 
  2191  0F17                     	;# 
  2192  0F18                     	;# 
  2193  0F19                     	;# 
  2194  0F1A                     	;# 
  2195  0F1B                     	;# 
  2196  0F1C                     	;# 
  2197  0F1D                     	;# 
  2198  0F1E                     	;# 
  2199  0F1F                     	;# 
  2200  0F20                     	;# 
  2201  0F21                     	;# 
  2202  0F22                     	;# 
  2203  0F23                     	;# 
  2204  0F24                     	;# 
  2205  0F25                     	;# 
  2206  0F26                     	;# 
  2207  0F27                     	;# 
  2208  0F28                     	;# 
  2209  0F29                     	;# 
  2210  0F2A                     	;# 
  2211  0F2B                     	;# 
  2212  0F2C                     	;# 
  2213  0F2D                     	;# 
  2214  0F2E                     	;# 
  2215  0F2F                     	;# 
  2216  0F30                     	;# 
  2217  0F31                     	;# 
  2218  0F32                     	;# 
  2219  0F38                     	;# 
  2220  0F39                     	;# 
  2221  0F3A                     	;# 
  2222  0F3B                     	;# 
  2223  0F3C                     	;# 
  2224  0F3D                     	;# 
  2225  0F3E                     	;# 
  2226  0F3F                     	;# 
  2227  0F40                     	;# 
  2228  0F41                     	;# 
  2229  0F43                     	;# 
  2230  0F44                     	;# 
  2231  0F45                     	;# 
  2232  0F46                     	;# 
  2233  0F47                     	;# 
  2234  0F48                     	;# 
  2235  0F49                     	;# 
  2236  0F4A                     	;# 
  2237  0F4B                     	;# 
  2238  0F4C                     	;# 
  2239  0F4E                     	;# 
  2240  0F4F                     	;# 
  2241  0F50                     	;# 
  2242  0F51                     	;# 
  2243  0F52                     	;# 
  2244  0F53                     	;# 
  2245  0F54                     	;# 
  2246  0F55                     	;# 
  2247  0F56                     	;# 
  2248  0F57                     	;# 
  2249  0F59                     	;# 
  2250  0F5A                     	;# 
  2251  0F5B                     	;# 
  2252  0F5C                     	;# 
  2253  0F5D                     	;# 
  2254  0F61                     	;# 
  2255  0F62                     	;# 
  2256  0F64                     	;# 
  2257  0F65                     	;# 
  2258  0F66                     	;# 
  2259  0F67                     	;# 
  2260  0F68                     	;# 
  2261  0F69                     	;# 
  2262  0F6A                     	;# 
  2263  0F6B                     	;# 
  2264  0F6C                     	;# 
  2265  0F6D                     	;# 
  2266  0FE4                     	;# 
  2267  0FE5                     	;# 
  2268  0FE6                     	;# 
  2269  0FE7                     	;# 
  2270  0FE8                     	;# 
  2271  0FE9                     	;# 
  2272  0FEA                     	;# 
  2273  0FEB                     	;# 
  2274  0FED                     	;# 
  2275  0FEE                     	;# 
  2276  0FEF                     	;# 
  2277  0000                     	;# 
  2278  0001                     	;# 
  2279  0002                     	;# 
  2280  0003                     	;# 
  2281  0004                     	;# 
  2282  0005                     	;# 
  2283  0006                     	;# 
  2284  0007                     	;# 
  2285  0008                     	;# 
  2286  0009                     	;# 
  2287  000A                     	;# 
  2288  000B                     	;# 
  2289  000C                     	;# 
  2290  000D                     	;# 
  2291  000E                     	;# 
  2292  000F                     	;# 
  2293  0010                     	;# 
  2294  0011                     	;# 
  2295  0012                     	;# 
  2296  0013                     	;# 
  2297  0014                     	;# 
  2298  0015                     	;# 
  2299  0016                     	;# 
  2300  0017                     	;# 
  2301  0018                     	;# 
  2302  0019                     	;# 
  2303  001A                     	;# 
  2304  001C                     	;# 
  2305  001C                     	;# 
  2306  001D                     	;# 
  2307  001D                     	;# 
  2308  001E                     	;# 
  2309  001F                     	;# 
  2310  008C                     	;# 
  2311  008C                     	;# 
  2312  008D                     	;# 
  2313  008E                     	;# 
  2314  008E                     	;# 
  2315  008F                     	;# 
  2316  0090                     	;# 
  2317  0090                     	;# 
  2318  0091                     	;# 
  2319  0093                     	;# 
  2320  0094                     	;# 
  2321  0095                     	;# 
  2322  0096                     	;# 
  2323  0097                     	;# 
  2324  0098                     	;# 
  2325  0099                     	;# 
  2326  009A                     	;# 
  2327  009B                     	;# 
  2328  009C                     	;# 
  2329  009D                     	;# 
  2330  009E                     	;# 
  2331  010C                     	;# 
  2332  010D                     	;# 
  2333  010E                     	;# 
  2334  010E                     	;# 
  2335  010F                     	;# 
  2336  0110                     	;# 
  2337  0110                     	;# 
  2338  0111                     	;# 
  2339  0112                     	;# 
  2340  0112                     	;# 
  2341  0113                     	;# 
  2342  0114                     	;# 
  2343  0114                     	;# 
  2344  0115                     	;# 
  2345  0116                     	;# 
  2346  0116                     	;# 
  2347  0117                     	;# 
  2348  0119                     	;# 
  2349  0119                     	;# 
  2350  0119                     	;# 
  2351  011A                     	;# 
  2352  011A                     	;# 
  2353  011A                     	;# 
  2354  011B                     	;# 
  2355  011B                     	;# 
  2356  011B                     	;# 
  2357  011B                     	;# 
  2358  011B                     	;# 
  2359  011C                     	;# 
  2360  011C                     	;# 
  2361  011C                     	;# 
  2362  011D                     	;# 
  2363  011D                     	;# 
  2364  011D                     	;# 
  2365  011E                     	;# 
  2366  011E                     	;# 
  2367  011E                     	;# 
  2368  011F                     	;# 
  2369  011F                     	;# 
  2370  011F                     	;# 
  2371  011F                     	;# 
  2372  011F                     	;# 
  2373  018C                     	;# 
  2374  018D                     	;# 
  2375  018E                     	;# 
  2376  018F                     	;# 
  2377  0190                     	;# 
  2378  0191                     	;# 
  2379  0192                     	;# 
  2380  0196                     	;# 
  2381  0197                     	;# 
  2382  0198                     	;# 
  2383  0199                     	;# 
  2384  019A                     	;# 
  2385  019B                     	;# 
  2386  019C                     	;# 
  2387  020C                     	;# 
  2388  020C                     	;# 
  2389  020D                     	;# 
  2390  020E                     	;# 
  2391  020F                     	;# 
  2392  020F                     	;# 
  2393  0210                     	;# 
  2394  0210                     	;# 
  2395  0211                     	;# 
  2396  0211                     	;# 
  2397  0212                     	;# 
  2398  0212                     	;# 
  2399  0213                     	;# 
  2400  0214                     	;# 
  2401  0215                     	;# 
  2402  0215                     	;# 
  2403  0216                     	;# 
  2404  0216                     	;# 
  2405  0217                     	;# 
  2406  0217                     	;# 
  2407  0218                     	;# 
  2408  0218                     	;# 
  2409  0219                     	;# 
  2410  021A                     	;# 
  2411  021B                     	;# 
  2412  021B                     	;# 
  2413  021C                     	;# 
  2414  021C                     	;# 
  2415  021D                     	;# 
  2416  021D                     	;# 
  2417  021E                     	;# 
  2418  021F                     	;# 
  2419  028C                     	;# 
  2420  028C                     	;# 
  2421  028D                     	;# 
  2422  028D                     	;# 
  2423  028E                     	;# 
  2424  028F                     	;# 
  2425  0290                     	;# 
  2426  0290                     	;# 
  2427  0291                     	;# 
  2428  0292                     	;# 
  2429  0292                     	;# 
  2430  0293                     	;# 
  2431  0293                     	;# 
  2432  0294                     	;# 
  2433  0295                     	;# 
  2434  0296                     	;# 
  2435  0296                     	;# 
  2436  0297                     	;# 
  2437  0298                     	;# 
  2438  0298                     	;# 
  2439  0299                     	;# 
  2440  0299                     	;# 
  2441  029A                     	;# 
  2442  029B                     	;# 
  2443  029C                     	;# 
  2444  029C                     	;# 
  2445  029D                     	;# 
  2446  030C                     	;# 
  2447  030C                     	;# 
  2448  030D                     	;# 
  2449  030E                     	;# 
  2450  030F                     	;# 
  2451  0310                     	;# 
  2452  0310                     	;# 
  2453  0311                     	;# 
  2454  0312                     	;# 
  2455  0313                     	;# 
  2456  0314                     	;# 
  2457  0314                     	;# 
  2458  0315                     	;# 
  2459  0316                     	;# 
  2460  0317                     	;# 
  2461  0318                     	;# 
  2462  0318                     	;# 
  2463  0319                     	;# 
  2464  031A                     	;# 
  2465  031B                     	;# 
  2466  031C                     	;# 
  2467  031C                     	;# 
  2468  031D                     	;# 
  2469  031E                     	;# 
  2470  031F                     	;# 
  2471  038C                     	;# 
  2472  038C                     	;# 
  2473  038D                     	;# 
  2474  038E                     	;# 
  2475  0390                     	;# 
  2476  0390                     	;# 
  2477  0391                     	;# 
  2478  0392                     	;# 
  2479  040C                     	;# 
  2480  040D                     	;# 
  2481  040E                     	;# 
  2482  040F                     	;# 
  2483  0410                     	;# 
  2484  0411                     	;# 
  2485  0416                     	;# 
  2486  0416                     	;# 
  2487  0417                     	;# 
  2488  0418                     	;# 
  2489  0418                     	;# 
  2490  0419                     	;# 
  2491  041A                     	;# 
  2492  041A                     	;# 
  2493  041B                     	;# 
  2494  041C                     	;# 
  2495  041C                     	;# 
  2496  041D                     	;# 
  2497  041E                     	;# 
  2498  041F                     	;# 
  2499  048C                     	;# 
  2500  048C                     	;# 
  2501  048D                     	;# 
  2502  048E                     	;# 
  2503  048F                     	;# 
  2504  048F                     	;# 
  2505  0490                     	;# 
  2506  0491                     	;# 
  2507  0492                     	;# 
  2508  0492                     	;# 
  2509  0493                     	;# 
  2510  0494                     	;# 
  2511  0495                     	;# 
  2512  0495                     	;# 
  2513  0496                     	;# 
  2514  0497                     	;# 
  2515  0498                     	;# 
  2516  0499                     	;# 
  2517  049A                     	;# 
  2518  049B                     	;# 
  2519  049C                     	;# 
  2520  049D                     	;# 
  2521  050C                     	;# 
  2522  050C                     	;# 
  2523  050D                     	;# 
  2524  050E                     	;# 
  2525  050F                     	;# 
  2526  050F                     	;# 
  2527  0510                     	;# 
  2528  0511                     	;# 
  2529  0512                     	;# 
  2530  0512                     	;# 
  2531  0513                     	;# 
  2532  0514                     	;# 
  2533  0515                     	;# 
  2534  0515                     	;# 
  2535  0516                     	;# 
  2536  0517                     	;# 
  2537  0518                     	;# 
  2538  0519                     	;# 
  2539  051A                     	;# 
  2540  051B                     	;# 
  2541  051C                     	;# 
  2542  051D                     	;# 
  2543  058C                     	;# 
  2544  058C                     	;# 
  2545  058D                     	;# 
  2546  058E                     	;# 
  2547  058F                     	;# 
  2548  058F                     	;# 
  2549  0590                     	;# 
  2550  0591                     	;# 
  2551  0592                     	;# 
  2552  0593                     	;# 
  2553  060C                     	;# 
  2554  060D                     	;# 
  2555  060E                     	;# 
  2556  060F                     	;# 
  2557  0610                     	;# 
  2558  0611                     	;# 
  2559  0612                     	;# 
  2560  0613                     	;# 
  2561  0614                     	;# 
  2562  0616                     	;# 
  2563  0617                     	;# 
  2564  0618                     	;# 
  2565  0619                     	;# 
  2566  061A                     	;# 
  2567  061B                     	;# 
  2568  061C                     	;# 
  2569  061D                     	;# 
  2570  061E                     	;# 
  2571  068C                     	;# 
  2572  068D                     	;# 
  2573  068E                     	;# 
  2574  068F                     	;# 
  2575  0690                     	;# 
  2576  0691                     	;# 
  2577  0692                     	;# 
  2578  0693                     	;# 
  2579  0694                     	;# 
  2580  070C                     	;# 
  2581  070D                     	;# 
  2582  070E                     	;# 
  2583  070F                     	;# 
  2584  0710                     	;# 
  2585  0711                     	;# 
  2586  0712                     	;# 
  2587  0713                     	;# 
  2588  0714                     	;# 
  2589  0716                     	;# 
  2590  0717                     	;# 
  2591  0718                     	;# 
  2592  0719                     	;# 
  2593  071A                     	;# 
  2594  071B                     	;# 
  2595  071C                     	;# 
  2596  071D                     	;# 
  2597  071E                     	;# 
  2598  0796                     	;# 
  2599  0797                     	;# 
  2600  0798                     	;# 
  2601  0799                     	;# 
  2602  079A                     	;# 
  2603  079B                     	;# 
  2604  080C                     	;# 
  2605  080D                     	;# 
  2606  080E                     	;# 
  2607  080F                     	;# 
  2608  0810                     	;# 
  2609  0811                     	;# 
  2610  0812                     	;# 
  2611  0813                     	;# 
  2612  0814                     	;# 
  2613  081A                     	;# 
  2614  081B                     	;# 
  2615  081C                     	;# 
  2616  081D                     	;# 
  2617  081E                     	;# 
  2618  081F                     	;# 
  2619  088C                     	;# 
  2620  088D                     	;# 
  2621  088E                     	;# 
  2622  088F                     	;# 
  2623  0890                     	;# 
  2624  0891                     	;# 
  2625  0892                     	;# 
  2626  0893                     	;# 
  2627  0895                     	;# 
  2628  0896                     	;# 
  2629  0897                     	;# 
  2630  0898                     	;# 
  2631  0899                     	;# 
  2632  089A                     	;# 
  2633  089B                     	;# 
  2634  090C                     	;# 
  2635  090E                     	;# 
  2636  090F                     	;# 
  2637  091F                     	;# 
  2638  098F                     	;# 
  2639  098F                     	;# 
  2640  0990                     	;# 
  2641  0991                     	;# 
  2642  0992                     	;# 
  2643  0993                     	;# 
  2644  0994                     	;# 
  2645  0995                     	;# 
  2646  0996                     	;# 
  2647  0997                     	;# 
  2648  0E0F                     	;# 
  2649  0E10                     	;# 
  2650  0E11                     	;# 
  2651  0E12                     	;# 
  2652  0E13                     	;# 
  2653  0E14                     	;# 
  2654  0E15                     	;# 
  2655  0E16                     	;# 
  2656  0E17                     	;# 
  2657  0E18                     	;# 
  2658  0E19                     	;# 
  2659  0E1A                     	;# 
  2660  0E1B                     	;# 
  2661  0E1C                     	;# 
  2662  0E1D                     	;# 
  2663  0E1E                     	;# 
  2664  0E1F                     	;# 
  2665  0E20                     	;# 
  2666  0E21                     	;# 
  2667  0E22                     	;# 
  2668  0E23                     	;# 
  2669  0E24                     	;# 
  2670  0E25                     	;# 
  2671  0E26                     	;# 
  2672  0E27                     	;# 
  2673  0E28                     	;# 
  2674  0E29                     	;# 
  2675  0E2A                     	;# 
  2676  0E2B                     	;# 
  2677  0E2C                     	;# 
  2678  0E2D                     	;# 
  2679  0E2E                     	;# 
  2680  0E2F                     	;# 
  2681  0E30                     	;# 
  2682  0E31                     	;# 
  2683  0E32                     	;# 
  2684  0E33                     	;# 
  2685  0E34                     	;# 
  2686  0E35                     	;# 
  2687  0E36                     	;# 
  2688  0E37                     	;# 
  2689  0E8F                     	;# 
  2690  0E90                     	;# 
  2691  0E91                     	;# 
  2692  0E92                     	;# 
  2693  0E93                     	;# 
  2694  0E94                     	;# 
  2695  0E95                     	;# 
  2696  0E96                     	;# 
  2697  0E97                     	;# 
  2698  0E9C                     	;# 
  2699  0E9D                     	;# 
  2700  0E9E                     	;# 
  2701  0EA1                     	;# 
  2702  0EA2                     	;# 
  2703  0EA3                     	;# 
  2704  0EA4                     	;# 
  2705  0EA5                     	;# 
  2706  0EA9                     	;# 
  2707  0EAA                     	;# 
  2708  0EAB                     	;# 
  2709  0EAC                     	;# 
  2710  0EB1                     	;# 
  2711  0EB2                     	;# 
  2712  0EB3                     	;# 
  2713  0EB8                     	;# 
  2714  0EB9                     	;# 
  2715  0EBA                     	;# 
  2716  0EBB                     	;# 
  2717  0EBC                     	;# 
  2718  0EBD                     	;# 
  2719  0EBE                     	;# 
  2720  0EC3                     	;# 
  2721  0EC5                     	;# 
  2722  0EC6                     	;# 
  2723  0EC7                     	;# 
  2724  0EC8                     	;# 
  2725  0EC9                     	;# 
  2726  0ECA                     	;# 
  2727  0ECB                     	;# 
  2728  0ECC                     	;# 
  2729  0F10                     	;# 
  2730  0F11                     	;# 
  2731  0F12                     	;# 
  2732  0F13                     	;# 
  2733  0F14                     	;# 
  2734  0F15                     	;# 
  2735  0F16                     	;# 
  2736  0F17                     	;# 
  2737  0F18                     	;# 
  2738  0F19                     	;# 
  2739  0F1A                     	;# 
  2740  0F1B                     	;# 
  2741  0F1C                     	;# 
  2742  0F1D                     	;# 
  2743  0F1E                     	;# 
  2744  0F1F                     	;# 
  2745  0F20                     	;# 
  2746  0F21                     	;# 
  2747  0F22                     	;# 
  2748  0F23                     	;# 
  2749  0F24                     	;# 
  2750  0F25                     	;# 
  2751  0F26                     	;# 
  2752  0F27                     	;# 
  2753  0F28                     	;# 
  2754  0F29                     	;# 
  2755  0F2A                     	;# 
  2756  0F2B                     	;# 
  2757  0F2C                     	;# 
  2758  0F2D                     	;# 
  2759  0F2E                     	;# 
  2760  0F2F                     	;# 
  2761  0F30                     	;# 
  2762  0F31                     	;# 
  2763  0F32                     	;# 
  2764  0F38                     	;# 
  2765  0F39                     	;# 
  2766  0F3A                     	;# 
  2767  0F3B                     	;# 
  2768  0F3C                     	;# 
  2769  0F3D                     	;# 
  2770  0F3E                     	;# 
  2771  0F3F                     	;# 
  2772  0F40                     	;# 
  2773  0F41                     	;# 
  2774  0F43                     	;# 
  2775  0F44                     	;# 
  2776  0F45                     	;# 
  2777  0F46                     	;# 
  2778  0F47                     	;# 
  2779  0F48                     	;# 
  2780  0F49                     	;# 
  2781  0F4A                     	;# 
  2782  0F4B                     	;# 
  2783  0F4C                     	;# 
  2784  0F4E                     	;# 
  2785  0F4F                     	;# 
  2786  0F50                     	;# 
  2787  0F51                     	;# 
  2788  0F52                     	;# 
  2789  0F53                     	;# 
  2790  0F54                     	;# 
  2791  0F55                     	;# 
  2792  0F56                     	;# 
  2793  0F57                     	;# 
  2794  0F59                     	;# 
  2795  0F5A                     	;# 
  2796  0F5B                     	;# 
  2797  0F5C                     	;# 
  2798  0F5D                     	;# 
  2799  0F61                     	;# 
  2800  0F62                     	;# 
  2801  0F64                     	;# 
  2802  0F65                     	;# 
  2803  0F66                     	;# 
  2804  0F67                     	;# 
  2805  0F68                     	;# 
  2806  0F69                     	;# 
  2807  0F6A                     	;# 
  2808  0F6B                     	;# 
  2809  0F6C                     	;# 
  2810  0F6D                     	;# 
  2811  0FE4                     	;# 
  2812  0FE5                     	;# 
  2813  0FE6                     	;# 
  2814  0FE7                     	;# 
  2815  0FE8                     	;# 
  2816  0FE9                     	;# 
  2817  0FEA                     	;# 
  2818  0FEB                     	;# 
  2819  0FED                     	;# 
  2820  0FEE                     	;# 
  2821  0FEF                     	;# 
  2822  0000                     	;# 
  2823  0001                     	;# 
  2824  0002                     	;# 
  2825  0003                     	;# 
  2826  0004                     	;# 
  2827  0005                     	;# 
  2828  0006                     	;# 
  2829  0007                     	;# 
  2830  0008                     	;# 
  2831  0009                     	;# 
  2832  000A                     	;# 
  2833  000B                     	;# 
  2834  000C                     	;# 
  2835  000D                     	;# 
  2836  000E                     	;# 
  2837  000F                     	;# 
  2838  0010                     	;# 
  2839  0011                     	;# 
  2840  0012                     	;# 
  2841  0013                     	;# 
  2842  0014                     	;# 
  2843  0015                     	;# 
  2844  0016                     	;# 
  2845  0017                     	;# 
  2846  0018                     	;# 
  2847  0019                     	;# 
  2848  001A                     	;# 
  2849  001C                     	;# 
  2850  001C                     	;# 
  2851  001D                     	;# 
  2852  001D                     	;# 
  2853  001E                     	;# 
  2854  001F                     	;# 
  2855  008C                     	;# 
  2856  008C                     	;# 
  2857  008D                     	;# 
  2858  008E                     	;# 
  2859  008E                     	;# 
  2860  008F                     	;# 
  2861  0090                     	;# 
  2862  0090                     	;# 
  2863  0091                     	;# 
  2864  0093                     	;# 
  2865  0094                     	;# 
  2866  0095                     	;# 
  2867  0096                     	;# 
  2868  0097                     	;# 
  2869  0098                     	;# 
  2870  0099                     	;# 
  2871  009A                     	;# 
  2872  009B                     	;# 
  2873  009C                     	;# 
  2874  009D                     	;# 
  2875  009E                     	;# 
  2876  010C                     	;# 
  2877  010D                     	;# 
  2878  010E                     	;# 
  2879  010E                     	;# 
  2880  010F                     	;# 
  2881  0110                     	;# 
  2882  0110                     	;# 
  2883  0111                     	;# 
  2884  0112                     	;# 
  2885  0112                     	;# 
  2886  0113                     	;# 
  2887  0114                     	;# 
  2888  0114                     	;# 
  2889  0115                     	;# 
  2890  0116                     	;# 
  2891  0116                     	;# 
  2892  0117                     	;# 
  2893  0119                     	;# 
  2894  0119                     	;# 
  2895  0119                     	;# 
  2896  011A                     	;# 
  2897  011A                     	;# 
  2898  011A                     	;# 
  2899  011B                     	;# 
  2900  011B                     	;# 
  2901  011B                     	;# 
  2902  011B                     	;# 
  2903  011B                     	;# 
  2904  011C                     	;# 
  2905  011C                     	;# 
  2906  011C                     	;# 
  2907  011D                     	;# 
  2908  011D                     	;# 
  2909  011D                     	;# 
  2910  011E                     	;# 
  2911  011E                     	;# 
  2912  011E                     	;# 
  2913  011F                     	;# 
  2914  011F                     	;# 
  2915  011F                     	;# 
  2916  011F                     	;# 
  2917  011F                     	;# 
  2918  018C                     	;# 
  2919  018D                     	;# 
  2920  018E                     	;# 
  2921  018F                     	;# 
  2922  0190                     	;# 
  2923  0191                     	;# 
  2924  0192                     	;# 
  2925  0196                     	;# 
  2926  0197                     	;# 
  2927  0198                     	;# 
  2928  0199                     	;# 
  2929  019A                     	;# 
  2930  019B                     	;# 
  2931  019C                     	;# 
  2932  020C                     	;# 
  2933  020C                     	;# 
  2934  020D                     	;# 
  2935  020E                     	;# 
  2936  020F                     	;# 
  2937  020F                     	;# 
  2938  0210                     	;# 
  2939  0210                     	;# 
  2940  0211                     	;# 
  2941  0211                     	;# 
  2942  0212                     	;# 
  2943  0212                     	;# 
  2944  0213                     	;# 
  2945  0214                     	;# 
  2946  0215                     	;# 
  2947  0215                     	;# 
  2948  0216                     	;# 
  2949  0216                     	;# 
  2950  0217                     	;# 
  2951  0217                     	;# 
  2952  0218                     	;# 
  2953  0218                     	;# 
  2954  0219                     	;# 
  2955  021A                     	;# 
  2956  021B                     	;# 
  2957  021B                     	;# 
  2958  021C                     	;# 
  2959  021C                     	;# 
  2960  021D                     	;# 
  2961  021D                     	;# 
  2962  021E                     	;# 
  2963  021F                     	;# 
  2964  028C                     	;# 
  2965  028C                     	;# 
  2966  028D                     	;# 
  2967  028D                     	;# 
  2968  028E                     	;# 
  2969  028F                     	;# 
  2970  0290                     	;# 
  2971  0290                     	;# 
  2972  0291                     	;# 
  2973  0292                     	;# 
  2974  0292                     	;# 
  2975  0293                     	;# 
  2976  0293                     	;# 
  2977  0294                     	;# 
  2978  0295                     	;# 
  2979  0296                     	;# 
  2980  0296                     	;# 
  2981  0297                     	;# 
  2982  0298                     	;# 
  2983  0298                     	;# 
  2984  0299                     	;# 
  2985  0299                     	;# 
  2986  029A                     	;# 
  2987  029B                     	;# 
  2988  029C                     	;# 
  2989  029C                     	;# 
  2990  029D                     	;# 
  2991  030C                     	;# 
  2992  030C                     	;# 
  2993  030D                     	;# 
  2994  030E                     	;# 
  2995  030F                     	;# 
  2996  0310                     	;# 
  2997  0310                     	;# 
  2998  0311                     	;# 
  2999  0312                     	;# 
  3000  0313                     	;# 
  3001  0314                     	;# 
  3002  0314                     	;# 
  3003  0315                     	;# 
  3004  0316                     	;# 
  3005  0317                     	;# 
  3006  0318                     	;# 
  3007  0318                     	;# 
  3008  0319                     	;# 
  3009  031A                     	;# 
  3010  031B                     	;# 
  3011  031C                     	;# 
  3012  031C                     	;# 
  3013  031D                     	;# 
  3014  031E                     	;# 
  3015  031F                     	;# 
  3016  038C                     	;# 
  3017  038C                     	;# 
  3018  038D                     	;# 
  3019  038E                     	;# 
  3020  0390                     	;# 
  3021  0390                     	;# 
  3022  0391                     	;# 
  3023  0392                     	;# 
  3024  040C                     	;# 
  3025  040D                     	;# 
  3026  040E                     	;# 
  3027  040F                     	;# 
  3028  0410                     	;# 
  3029  0411                     	;# 
  3030  0416                     	;# 
  3031  0416                     	;# 
  3032  0417                     	;# 
  3033  0418                     	;# 
  3034  0418                     	;# 
  3035  0419                     	;# 
  3036  041A                     	;# 
  3037  041A                     	;# 
  3038  041B                     	;# 
  3039  041C                     	;# 
  3040  041C                     	;# 
  3041  041D                     	;# 
  3042  041E                     	;# 
  3043  041F                     	;# 
  3044  048C                     	;# 
  3045  048C                     	;# 
  3046  048D                     	;# 
  3047  048E                     	;# 
  3048  048F                     	;# 
  3049  048F                     	;# 
  3050  0490                     	;# 
  3051  0491                     	;# 
  3052  0492                     	;# 
  3053  0492                     	;# 
  3054  0493                     	;# 
  3055  0494                     	;# 
  3056  0495                     	;# 
  3057  0495                     	;# 
  3058  0496                     	;# 
  3059  0497                     	;# 
  3060  0498                     	;# 
  3061  0499                     	;# 
  3062  049A                     	;# 
  3063  049B                     	;# 
  3064  049C                     	;# 
  3065  049D                     	;# 
  3066  050C                     	;# 
  3067  050C                     	;# 
  3068  050D                     	;# 
  3069  050E                     	;# 
  3070  050F                     	;# 
  3071  050F                     	;# 
  3072  0510                     	;# 
  3073  0511                     	;# 
  3074  0512                     	;# 
  3075  0512                     	;# 
  3076  0513                     	;# 
  3077  0514                     	;# 
  3078  0515                     	;# 
  3079  0515                     	;# 
  3080  0516                     	;# 
  3081  0517                     	;# 
  3082  0518                     	;# 
  3083  0519                     	;# 
  3084  051A                     	;# 
  3085  051B                     	;# 
  3086  051C                     	;# 
  3087  051D                     	;# 
  3088  058C                     	;# 
  3089  058C                     	;# 
  3090  058D                     	;# 
  3091  058E                     	;# 
  3092  058F                     	;# 
  3093  058F                     	;# 
  3094  0590                     	;# 
  3095  0591                     	;# 
  3096  0592                     	;# 
  3097  0593                     	;# 
  3098  060C                     	;# 
  3099  060D                     	;# 
  3100  060E                     	;# 
  3101  060F                     	;# 
  3102  0610                     	;# 
  3103  0611                     	;# 
  3104  0612                     	;# 
  3105  0613                     	;# 
  3106  0614                     	;# 
  3107  0616                     	;# 
  3108  0617                     	;# 
  3109  0618                     	;# 
  3110  0619                     	;# 
  3111  061A                     	;# 
  3112  061B                     	;# 
  3113  061C                     	;# 
  3114  061D                     	;# 
  3115  061E                     	;# 
  3116  068C                     	;# 
  3117  068D                     	;# 
  3118  068E                     	;# 
  3119  068F                     	;# 
  3120  0690                     	;# 
  3121  0691                     	;# 
  3122  0692                     	;# 
  3123  0693                     	;# 
  3124  0694                     	;# 
  3125  070C                     	;# 
  3126  070D                     	;# 
  3127  070E                     	;# 
  3128  070F                     	;# 
  3129  0710                     	;# 
  3130  0711                     	;# 
  3131  0712                     	;# 
  3132  0713                     	;# 
  3133  0714                     	;# 
  3134  0716                     	;# 
  3135  0717                     	;# 
  3136  0718                     	;# 
  3137  0719                     	;# 
  3138  071A                     	;# 
  3139  071B                     	;# 
  3140  071C                     	;# 
  3141  071D                     	;# 
  3142  071E                     	;# 
  3143  0796                     	;# 
  3144  0797                     	;# 
  3145  0798                     	;# 
  3146  0799                     	;# 
  3147  079A                     	;# 
  3148  079B                     	;# 
  3149  080C                     	;# 
  3150  080D                     	;# 
  3151  080E                     	;# 
  3152  080F                     	;# 
  3153  0810                     	;# 
  3154  0811                     	;# 
  3155  0812                     	;# 
  3156  0813                     	;# 
  3157  0814                     	;# 
  3158  081A                     	;# 
  3159  081B                     	;# 
  3160  081C                     	;# 
  3161  081D                     	;# 
  3162  081E                     	;# 
  3163  081F                     	;# 
  3164  088C                     	;# 
  3165  088D                     	;# 
  3166  088E                     	;# 
  3167  088F                     	;# 
  3168  0890                     	;# 
  3169  0891                     	;# 
  3170  0892                     	;# 
  3171  0893                     	;# 
  3172  0895                     	;# 
  3173  0896                     	;# 
  3174  0897                     	;# 
  3175  0898                     	;# 
  3176  0899                     	;# 
  3177  089A                     	;# 
  3178  089B                     	;# 
  3179  090C                     	;# 
  3180  090E                     	;# 
  3181  090F                     	;# 
  3182  091F                     	;# 
  3183  098F                     	;# 
  3184  098F                     	;# 
  3185  0990                     	;# 
  3186  0991                     	;# 
  3187  0992                     	;# 
  3188  0993                     	;# 
  3189  0994                     	;# 
  3190  0995                     	;# 
  3191  0996                     	;# 
  3192  0997                     	;# 
  3193  0E0F                     	;# 
  3194  0E10                     	;# 
  3195  0E11                     	;# 
  3196  0E12                     	;# 
  3197  0E13                     	;# 
  3198  0E14                     	;# 
  3199  0E15                     	;# 
  3200  0E16                     	;# 
  3201  0E17                     	;# 
  3202  0E18                     	;# 
  3203  0E19                     	;# 
  3204  0E1A                     	;# 
  3205  0E1B                     	;# 
  3206  0E1C                     	;# 
  3207  0E1D                     	;# 
  3208  0E1E                     	;# 
  3209  0E1F                     	;# 
  3210  0E20                     	;# 
  3211  0E21                     	;# 
  3212  0E22                     	;# 
  3213  0E23                     	;# 
  3214  0E24                     	;# 
  3215  0E25                     	;# 
  3216  0E26                     	;# 
  3217  0E27                     	;# 
  3218  0E28                     	;# 
  3219  0E29                     	;# 
  3220  0E2A                     	;# 
  3221  0E2B                     	;# 
  3222  0E2C                     	;# 
  3223  0E2D                     	;# 
  3224  0E2E                     	;# 
  3225  0E2F                     	;# 
  3226  0E30                     	;# 
  3227  0E31                     	;# 
  3228  0E32                     	;# 
  3229  0E33                     	;# 
  3230  0E34                     	;# 
  3231  0E35                     	;# 
  3232  0E36                     	;# 
  3233  0E37                     	;# 
  3234  0E8F                     	;# 
  3235  0E90                     	;# 
  3236  0E91                     	;# 
  3237  0E92                     	;# 
  3238  0E93                     	;# 
  3239  0E94                     	;# 
  3240  0E95                     	;# 
  3241  0E96                     	;# 
  3242  0E97                     	;# 
  3243  0E9C                     	;# 
  3244  0E9D                     	;# 
  3245  0E9E                     	;# 
  3246  0EA1                     	;# 
  3247  0EA2                     	;# 
  3248  0EA3                     	;# 
  3249  0EA4                     	;# 
  3250  0EA5                     	;# 
  3251  0EA9                     	;# 
  3252  0EAA                     	;# 
  3253  0EAB                     	;# 
  3254  0EAC                     	;# 
  3255  0EB1                     	;# 
  3256  0EB2                     	;# 
  3257  0EB3                     	;# 
  3258  0EB8                     	;# 
  3259  0EB9                     	;# 
  3260  0EBA                     	;# 
  3261  0EBB                     	;# 
  3262  0EBC                     	;# 
  3263  0EBD                     	;# 
  3264  0EBE                     	;# 
  3265  0EC3                     	;# 
  3266  0EC5                     	;# 
  3267  0EC6                     	;# 
  3268  0EC7                     	;# 
  3269  0EC8                     	;# 
  3270  0EC9                     	;# 
  3271  0ECA                     	;# 
  3272  0ECB                     	;# 
  3273  0ECC                     	;# 
  3274  0F10                     	;# 
  3275  0F11                     	;# 
  3276  0F12                     	;# 
  3277  0F13                     	;# 
  3278  0F14                     	;# 
  3279  0F15                     	;# 
  3280  0F16                     	;# 
  3281  0F17                     	;# 
  3282  0F18                     	;# 
  3283  0F19                     	;# 
  3284  0F1A                     	;# 
  3285  0F1B                     	;# 
  3286  0F1C                     	;# 
  3287  0F1D                     	;# 
  3288  0F1E                     	;# 
  3289  0F1F                     	;# 
  3290  0F20                     	;# 
  3291  0F21                     	;# 
  3292  0F22                     	;# 
  3293  0F23                     	;# 
  3294  0F24                     	;# 
  3295  0F25                     	;# 
  3296  0F26                     	;# 
  3297  0F27                     	;# 
  3298  0F28                     	;# 
  3299  0F29                     	;# 
  3300  0F2A                     	;# 
  3301  0F2B                     	;# 
  3302  0F2C                     	;# 
  3303  0F2D                     	;# 
  3304  0F2E                     	;# 
  3305  0F2F                     	;# 
  3306  0F30                     	;# 
  3307  0F31                     	;# 
  3308  0F32                     	;# 
  3309  0F38                     	;# 
  3310  0F39                     	;# 
  3311  0F3A                     	;# 
  3312  0F3B                     	;# 
  3313  0F3C                     	;# 
  3314  0F3D                     	;# 
  3315  0F3E                     	;# 
  3316  0F3F                     	;# 
  3317  0F40                     	;# 
  3318  0F41                     	;# 
  3319  0F43                     	;# 
  3320  0F44                     	;# 
  3321  0F45                     	;# 
  3322  0F46                     	;# 
  3323  0F47                     	;# 
  3324  0F48                     	;# 
  3325  0F49                     	;# 
  3326  0F4A                     	;# 
  3327  0F4B                     	;# 
  3328  0F4C                     	;# 
  3329  0F4E                     	;# 
  3330  0F4F                     	;# 
  3331  0F50                     	;# 
  3332  0F51                     	;# 
  3333  0F52                     	;# 
  3334  0F53                     	;# 
  3335  0F54                     	;# 
  3336  0F55                     	;# 
  3337  0F56                     	;# 
  3338  0F57                     	;# 
  3339  0F59                     	;# 
  3340  0F5A                     	;# 
  3341  0F5B                     	;# 
  3342  0F5C                     	;# 
  3343  0F5D                     	;# 
  3344  0F61                     	;# 
  3345  0F62                     	;# 
  3346  0F64                     	;# 
  3347  0F65                     	;# 
  3348  0F66                     	;# 
  3349  0F67                     	;# 
  3350  0F68                     	;# 
  3351  0F69                     	;# 
  3352  0F6A                     	;# 
  3353  0F6B                     	;# 
  3354  0F6C                     	;# 
  3355  0F6D                     	;# 
  3356  0FE4                     	;# 
  3357  0FE5                     	;# 
  3358  0FE6                     	;# 
  3359  0FE7                     	;# 
  3360  0FE8                     	;# 
  3361  0FE9                     	;# 
  3362  0FEA                     	;# 
  3363  0FEB                     	;# 
  3364  0FED                     	;# 
  3365  0FEE                     	;# 
  3366  0FEF                     	;# 
  3367  0000                     	;# 
  3368  0001                     	;# 
  3369  0002                     	;# 
  3370  0003                     	;# 
  3371  0004                     	;# 
  3372  0005                     	;# 
  3373  0006                     	;# 
  3374  0007                     	;# 
  3375  0008                     	;# 
  3376  0009                     	;# 
  3377  000A                     	;# 
  3378  000B                     	;# 
  3379  000C                     	;# 
  3380  000D                     	;# 
  3381  000E                     	;# 
  3382  000F                     	;# 
  3383  0010                     	;# 
  3384  0011                     	;# 
  3385  0012                     	;# 
  3386  0013                     	;# 
  3387  0014                     	;# 
  3388  0015                     	;# 
  3389  0016                     	;# 
  3390  0017                     	;# 
  3391  0018                     	;# 
  3392  0019                     	;# 
  3393  001A                     	;# 
  3394  001C                     	;# 
  3395  001C                     	;# 
  3396  001D                     	;# 
  3397  001D                     	;# 
  3398  001E                     	;# 
  3399  001F                     	;# 
  3400  008C                     	;# 
  3401  008C                     	;# 
  3402  008D                     	;# 
  3403  008E                     	;# 
  3404  008E                     	;# 
  3405  008F                     	;# 
  3406  0090                     	;# 
  3407  0090                     	;# 
  3408  0091                     	;# 
  3409  0093                     	;# 
  3410  0094                     	;# 
  3411  0095                     	;# 
  3412  0096                     	;# 
  3413  0097                     	;# 
  3414  0098                     	;# 
  3415  0099                     	;# 
  3416  009A                     	;# 
  3417  009B                     	;# 
  3418  009C                     	;# 
  3419  009D                     	;# 
  3420  009E                     	;# 
  3421  010C                     	;# 
  3422  010D                     	;# 
  3423  010E                     	;# 
  3424  010E                     	;# 
  3425  010F                     	;# 
  3426  0110                     	;# 
  3427  0110                     	;# 
  3428  0111                     	;# 
  3429  0112                     	;# 
  3430  0112                     	;# 
  3431  0113                     	;# 
  3432  0114                     	;# 
  3433  0114                     	;# 
  3434  0115                     	;# 
  3435  0116                     	;# 
  3436  0116                     	;# 
  3437  0117                     	;# 
  3438  0119                     	;# 
  3439  0119                     	;# 
  3440  0119                     	;# 
  3441  011A                     	;# 
  3442  011A                     	;# 
  3443  011A                     	;# 
  3444  011B                     	;# 
  3445  011B                     	;# 
  3446  011B                     	;# 
  3447  011B                     	;# 
  3448  011B                     	;# 
  3449  011C                     	;# 
  3450  011C                     	;# 
  3451  011C                     	;# 
  3452  011D                     	;# 
  3453  011D                     	;# 
  3454  011D                     	;# 
  3455  011E                     	;# 
  3456  011E                     	;# 
  3457  011E                     	;# 
  3458  011F                     	;# 
  3459  011F                     	;# 
  3460  011F                     	;# 
  3461  011F                     	;# 
  3462  011F                     	;# 
  3463  018C                     	;# 
  3464  018D                     	;# 
  3465  018E                     	;# 
  3466  018F                     	;# 
  3467  0190                     	;# 
  3468  0191                     	;# 
  3469  0192                     	;# 
  3470  0196                     	;# 
  3471  0197                     	;# 
  3472  0198                     	;# 
  3473  0199                     	;# 
  3474  019A                     	;# 
  3475  019B                     	;# 
  3476  019C                     	;# 
  3477  020C                     	;# 
  3478  020C                     	;# 
  3479  020D                     	;# 
  3480  020E                     	;# 
  3481  020F                     	;# 
  3482  020F                     	;# 
  3483  0210                     	;# 
  3484  0210                     	;# 
  3485  0211                     	;# 
  3486  0211                     	;# 
  3487  0212                     	;# 
  3488  0212                     	;# 
  3489  0213                     	;# 
  3490  0214                     	;# 
  3491  0215                     	;# 
  3492  0215                     	;# 
  3493  0216                     	;# 
  3494  0216                     	;# 
  3495  0217                     	;# 
  3496  0217                     	;# 
  3497  0218                     	;# 
  3498  0218                     	;# 
  3499  0219                     	;# 
  3500  021A                     	;# 
  3501  021B                     	;# 
  3502  021B                     	;# 
  3503  021C                     	;# 
  3504  021C                     	;# 
  3505  021D                     	;# 
  3506  021D                     	;# 
  3507  021E                     	;# 
  3508  021F                     	;# 
  3509  028C                     	;# 
  3510  028C                     	;# 
  3511  028D                     	;# 
  3512  028D                     	;# 
  3513  028E                     	;# 
  3514  028F                     	;# 
  3515  0290                     	;# 
  3516  0290                     	;# 
  3517  0291                     	;# 
  3518  0292                     	;# 
  3519  0292                     	;# 
  3520  0293                     	;# 
  3521  0293                     	;# 
  3522  0294                     	;# 
  3523  0295                     	;# 
  3524  0296                     	;# 
  3525  0296                     	;# 
  3526  0297                     	;# 
  3527  0298                     	;# 
  3528  0298                     	;# 
  3529  0299                     	;# 
  3530  0299                     	;# 
  3531  029A                     	;# 
  3532  029B                     	;# 
  3533  029C                     	;# 
  3534  029C                     	;# 
  3535  029D                     	;# 
  3536  030C                     	;# 
  3537  030C                     	;# 
  3538  030D                     	;# 
  3539  030E                     	;# 
  3540  030F                     	;# 
  3541  0310                     	;# 
  3542  0310                     	;# 
  3543  0311                     	;# 
  3544  0312                     	;# 
  3545  0313                     	;# 
  3546  0314                     	;# 
  3547  0314                     	;# 
  3548  0315                     	;# 
  3549  0316                     	;# 
  3550  0317                     	;# 
  3551  0318                     	;# 
  3552  0318                     	;# 
  3553  0319                     	;# 
  3554  031A                     	;# 
  3555  031B                     	;# 
  3556  031C                     	;# 
  3557  031C                     	;# 
  3558  031D                     	;# 
  3559  031E                     	;# 
  3560  031F                     	;# 
  3561  038C                     	;# 
  3562  038C                     	;# 
  3563  038D                     	;# 
  3564  038E                     	;# 
  3565  0390                     	;# 
  3566  0390                     	;# 
  3567  0391                     	;# 
  3568  0392                     	;# 
  3569  040C                     	;# 
  3570  040D                     	;# 
  3571  040E                     	;# 
  3572  040F                     	;# 
  3573  0410                     	;# 
  3574  0411                     	;# 
  3575  0416                     	;# 
  3576  0416                     	;# 
  3577  0417                     	;# 
  3578  0418                     	;# 
  3579  0418                     	;# 
  3580  0419                     	;# 
  3581  041A                     	;# 
  3582  041A                     	;# 
  3583  041B                     	;# 
  3584  041C                     	;# 
  3585  041C                     	;# 
  3586  041D                     	;# 
  3587  041E                     	;# 
  3588  041F                     	;# 
  3589  048C                     	;# 
  3590  048C                     	;# 
  3591  048D                     	;# 
  3592  048E                     	;# 
  3593  048F                     	;# 
  3594  048F                     	;# 
  3595  0490                     	;# 
  3596  0491                     	;# 
  3597  0492                     	;# 
  3598  0492                     	;# 
  3599  0493                     	;# 
  3600  0494                     	;# 
  3601  0495                     	;# 
  3602  0495                     	;# 
  3603  0496                     	;# 
  3604  0497                     	;# 
  3605  0498                     	;# 
  3606  0499                     	;# 
  3607  049A                     	;# 
  3608  049B                     	;# 
  3609  049C                     	;# 
  3610  049D                     	;# 
  3611  050C                     	;# 
  3612  050C                     	;# 
  3613  050D                     	;# 
  3614  050E                     	;# 
  3615  050F                     	;# 
  3616  050F                     	;# 
  3617  0510                     	;# 
  3618  0511                     	;# 
  3619  0512                     	;# 
  3620  0512                     	;# 
  3621  0513                     	;# 
  3622  0514                     	;# 
  3623  0515                     	;# 
  3624  0515                     	;# 
  3625  0516                     	;# 
  3626  0517                     	;# 
  3627  0518                     	;# 
  3628  0519                     	;# 
  3629  051A                     	;# 
  3630  051B                     	;# 
  3631  051C                     	;# 
  3632  051D                     	;# 
  3633  058C                     	;# 
  3634  058C                     	;# 
  3635  058D                     	;# 
  3636  058E                     	;# 
  3637  058F                     	;# 
  3638  058F                     	;# 
  3639  0590                     	;# 
  3640  0591                     	;# 
  3641  0592                     	;# 
  3642  0593                     	;# 
  3643  060C                     	;# 
  3644  060D                     	;# 
  3645  060E                     	;# 
  3646  060F                     	;# 
  3647  0610                     	;# 
  3648  0611                     	;# 
  3649  0612                     	;# 
  3650  0613                     	;# 
  3651  0614                     	;# 
  3652  0616                     	;# 
  3653  0617                     	;# 
  3654  0618                     	;# 
  3655  0619                     	;# 
  3656  061A                     	;# 
  3657  061B                     	;# 
  3658  061C                     	;# 
  3659  061D                     	;# 
  3660  061E                     	;# 
  3661  068C                     	;# 
  3662  068D                     	;# 
  3663  068E                     	;# 
  3664  068F                     	;# 
  3665  0690                     	;# 
  3666  0691                     	;# 
  3667  0692                     	;# 
  3668  0693                     	;# 
  3669  0694                     	;# 
  3670  070C                     	;# 
  3671  070D                     	;# 
  3672  070E                     	;# 
  3673  070F                     	;# 
  3674  0710                     	;# 
  3675  0711                     	;# 
  3676  0712                     	;# 
  3677  0713                     	;# 
  3678  0714                     	;# 
  3679  0716                     	;# 
  3680  0717                     	;# 
  3681  0718                     	;# 
  3682  0719                     	;# 
  3683  071A                     	;# 
  3684  071B                     	;# 
  3685  071C                     	;# 
  3686  071D                     	;# 
  3687  071E                     	;# 
  3688  0796                     	;# 
  3689  0797                     	;# 
  3690  0798                     	;# 
  3691  0799                     	;# 
  3692  079A                     	;# 
  3693  079B                     	;# 
  3694  080C                     	;# 
  3695  080D                     	;# 
  3696  080E                     	;# 
  3697  080F                     	;# 
  3698  0810                     	;# 
  3699  0811                     	;# 
  3700  0812                     	;# 
  3701  0813                     	;# 
  3702  0814                     	;# 
  3703  081A                     	;# 
  3704  081B                     	;# 
  3705  081C                     	;# 
  3706  081D                     	;# 
  3707  081E                     	;# 
  3708  081F                     	;# 
  3709  088C                     	;# 
  3710  088D                     	;# 
  3711  088E                     	;# 
  3712  088F                     	;# 
  3713  0890                     	;# 
  3714  0891                     	;# 
  3715  0892                     	;# 
  3716  0893                     	;# 
  3717  0895                     	;# 
  3718  0896                     	;# 
  3719  0897                     	;# 
  3720  0898                     	;# 
  3721  0899                     	;# 
  3722  089A                     	;# 
  3723  089B                     	;# 
  3724  090C                     	;# 
  3725  090E                     	;# 
  3726  090F                     	;# 
  3727  091F                     	;# 
  3728  098F                     	;# 
  3729  098F                     	;# 
  3730  0990                     	;# 
  3731  0991                     	;# 
  3732  0992                     	;# 
  3733  0993                     	;# 
  3734  0994                     	;# 
  3735  0995                     	;# 
  3736  0996                     	;# 
  3737  0997                     	;# 
  3738  0E0F                     	;# 
  3739  0E10                     	;# 
  3740  0E11                     	;# 
  3741  0E12                     	;# 
  3742  0E13                     	;# 
  3743  0E14                     	;# 
  3744  0E15                     	;# 
  3745  0E16                     	;# 
  3746  0E17                     	;# 
  3747  0E18                     	;# 
  3748  0E19                     	;# 
  3749  0E1A                     	;# 
  3750  0E1B                     	;# 
  3751  0E1C                     	;# 
  3752  0E1D                     	;# 
  3753  0E1E                     	;# 
  3754  0E1F                     	;# 
  3755  0E20                     	;# 
  3756  0E21                     	;# 
  3757  0E22                     	;# 
  3758  0E23                     	;# 
  3759  0E24                     	;# 
  3760  0E25                     	;# 
  3761  0E26                     	;# 
  3762  0E27                     	;# 
  3763  0E28                     	;# 
  3764  0E29                     	;# 
  3765  0E2A                     	;# 
  3766  0E2B                     	;# 
  3767  0E2C                     	;# 
  3768  0E2D                     	;# 
  3769  0E2E                     	;# 
  3770  0E2F                     	;# 
  3771  0E30                     	;# 
  3772  0E31                     	;# 
  3773  0E32                     	;# 
  3774  0E33                     	;# 
  3775  0E34                     	;# 
  3776  0E35                     	;# 
  3777  0E36                     	;# 
  3778  0E37                     	;# 
  3779  0E8F                     	;# 
  3780  0E90                     	;# 
  3781  0E91                     	;# 
  3782  0E92                     	;# 
  3783  0E93                     	;# 
  3784  0E94                     	;# 
  3785  0E95                     	;# 
  3786  0E96                     	;# 
  3787  0E97                     	;# 
  3788  0E9C                     	;# 
  3789  0E9D                     	;# 
  3790  0E9E                     	;# 
  3791  0EA1                     	;# 
  3792  0EA2                     	;# 
  3793  0EA3                     	;# 
  3794  0EA4                     	;# 
  3795  0EA5                     	;# 
  3796  0EA9                     	;# 
  3797  0EAA                     	;# 
  3798  0EAB                     	;# 
  3799  0EAC                     	;# 
  3800  0EB1                     	;# 
  3801  0EB2                     	;# 
  3802  0EB3                     	;# 
  3803  0EB8                     	;# 
  3804  0EB9                     	;# 
  3805  0EBA                     	;# 
  3806  0EBB                     	;# 
  3807  0EBC                     	;# 
  3808  0EBD                     	;# 
  3809  0EBE                     	;# 
  3810  0EC3                     	;# 
  3811  0EC5                     	;# 
  3812  0EC6                     	;# 
  3813  0EC7                     	;# 
  3814  0EC8                     	;# 
  3815  0EC9                     	;# 
  3816  0ECA                     	;# 
  3817  0ECB                     	;# 
  3818  0ECC                     	;# 
  3819  0F10                     	;# 
  3820  0F11                     	;# 
  3821  0F12                     	;# 
  3822  0F13                     	;# 
  3823  0F14                     	;# 
  3824  0F15                     	;# 
  3825  0F16                     	;# 
  3826  0F17                     	;# 
  3827  0F18                     	;# 
  3828  0F19                     	;# 
  3829  0F1A                     	;# 
  3830  0F1B                     	;# 
  3831  0F1C                     	;# 
  3832  0F1D                     	;# 
  3833  0F1E                     	;# 
  3834  0F1F                     	;# 
  3835  0F20                     	;# 
  3836  0F21                     	;# 
  3837  0F22                     	;# 
  3838  0F23                     	;# 
  3839  0F24                     	;# 
  3840  0F25                     	;# 
  3841  0F26                     	;# 
  3842  0F27                     	;# 
  3843  0F28                     	;# 
  3844  0F29                     	;# 
  3845  0F2A                     	;# 
  3846  0F2B                     	;# 
  3847  0F2C                     	;# 
  3848  0F2D                     	;# 
  3849  0F2E                     	;# 
  3850  0F2F                     	;# 
  3851  0F30                     	;# 
  3852  0F31                     	;# 
  3853  0F32                     	;# 
  3854  0F38                     	;# 
  3855  0F39                     	;# 
  3856  0F3A                     	;# 
  3857  0F3B                     	;# 
  3858  0F3C                     	;# 
  3859  0F3D                     	;# 
  3860  0F3E                     	;# 
  3861  0F3F                     	;# 
  3862  0F40                     	;# 
  3863  0F41                     	;# 
  3864  0F43                     	;# 
  3865  0F44                     	;# 
  3866  0F45                     	;# 
  3867  0F46                     	;# 
  3868  0F47                     	;# 
  3869  0F48                     	;# 
  3870  0F49                     	;# 
  3871  0F4A                     	;# 
  3872  0F4B                     	;# 
  3873  0F4C                     	;# 
  3874  0F4E                     	;# 
  3875  0F4F                     	;# 
  3876  0F50                     	;# 
  3877  0F51                     	;# 
  3878  0F52                     	;# 
  3879  0F53                     	;# 
  3880  0F54                     	;# 
  3881  0F55                     	;# 
  3882  0F56                     	;# 
  3883  0F57                     	;# 
  3884  0F59                     	;# 
  3885  0F5A                     	;# 
  3886  0F5B                     	;# 
  3887  0F5C                     	;# 
  3888  0F5D                     	;# 
  3889  0F61                     	;# 
  3890  0F62                     	;# 
  3891  0F64                     	;# 
  3892  0F65                     	;# 
  3893  0F66                     	;# 
  3894  0F67                     	;# 
  3895  0F68                     	;# 
  3896  0F69                     	;# 
  3897  0F6A                     	;# 
  3898  0F6B                     	;# 
  3899  0F6C                     	;# 
  3900  0F6D                     	;# 
  3901  0FE4                     	;# 
  3902  0FE5                     	;# 
  3903  0FE6                     	;# 
  3904  0FE7                     	;# 
  3905  0FE8                     	;# 
  3906  0FE9                     	;# 
  3907  0FEA                     	;# 
  3908  0FEB                     	;# 
  3909  0FED                     	;# 
  3910  0FEE                     	;# 
  3911  0FEF                     	;_lutRY
  3912                           
  3913                           	psect	idataCOMMON
  3914  07FF                     __pidataCOMMON:	
  3915                           
  3916                           ;initializer for _rxData
  3917  07FF  34F7               	retlw	247
  3918                           
  3919                           	psect	idataBANK0
  3920  0E30                     __pidataBANK0:	
  3921                           
  3922                           ;initializer for _responseLength
  3923  0E30  3409               	retlw	9
  3924                           
  3925                           ;initializer for _debounceLoops
  3926  0E31  3403               	retlw	3
  3927                           
  3928                           ;initializer for _lyData
  3929  0E32  34F7               	retlw	247
  3930                           
  3931                           ;initializer for _lxData
  3932  0E33  34F7               	retlw	247
  3933                           
  3934                           ;initializer for _ryData
  3935  0E34  34F7               	retlw	247
  3936                           
  3937                           ;initializer for _digitalStateSecond
  3938  0E35  34FF               	retlw	255
  3939                           
  3940                           ;initializer for _digitalStateFirst
  3941  0E36  34FF               	retlw	255
  3942                           
  3943                           ;initializer for _response
  3944  0E37  3482               	retlw	130
  3945  0E38  345A               	retlw	90
  3946  0E39  3400               	retlw	0
  3947  0E3A  3400               	retlw	0
  3948  0E3B  3400               	retlw	0
  3949  0E3C  3400               	retlw	0
  3950  0E3D  3400               	retlw	0
  3951  0E3E  3400               	retlw	0
  3952  0E3F  3400               	retlw	0
  3953  0E40  3400               	retlw	0
  3954  0E41  3400               	retlw	0
  3955  0E42  3400               	retlw	0
  3956  0E43  3400               	retlw	0
  3957  0E44  3400               	retlw	0
  3958  0E45  3400               	retlw	0
  3959  0E46  3400               	retlw	0
  3960  0E47  3400               	retlw	0
  3961  0E48  3400               	retlw	0
  3962  0E49  3400               	retlw	0
  3963  0E4A  3400               	retlw	0
  3964  0011                     _TRISAbits	set	17
  3965  0013                     _TRISCbits	set	19
  3966  0015                     _TRISE	set	21
  3967  0014                     _TRISD	set	20
  3968  0013                     _TRISC	set	19
  3969  0012                     _TRISB	set	18
  3970  0011                     _TRISA	set	17
  3971  000B                     _INTCONbits	set	11
  3972  006B                     _RB3	set	107
  3973  006A                     _RB2	set	106
  3974  006D                     _RB5	set	109
  3975  006C                     _RB4	set	108
  3976  0061                     _RA1	set	97
  3977  0062                     _RA2	set	98
  3978  0063                     _RA3	set	99
  3979  0060                     _RA0	set	96
  3980  006F                     _RB7	set	111
  3981  006E                     _RB6	set	110
  3982  0072                     _RC2	set	114
  3983  0078                     _RD0	set	120
  3984  0069                     _RB1	set	105
  3985  0068                     _RB0	set	104
  3986  0066                     _RA6	set	102
  3987  0067                     _RA7	set	103
  3988  0065                     _RA5	set	101
  3989  0064                     _RA4	set	100
  3990  007C                     _RD4	set	124
  3991  0098                     _ADCLK	set	152
  3992  009A                     _ADREF	set	154
  3993  0095                     _ADCON2	set	149
  3994  0094                     _ADCON1	set	148
  3995  0093                     _ADCON0	set	147
  3996  008C                     _ADRESL	set	140
  3997  008D                     _ADRESH	set	141
  3998  0093                     _ADCON0bits	set	147
  3999  009D                     _ADACQ	set	157
  4000  009C                     _ADPRE	set	156
  4001  009E                     _ADPCH	set	158
  4002  018F                     _SSP1STATbits	set	399
  4003  0190                     _SSP1CON1	set	400
  4004  018F                     _SSP1STAT	set	399
  4005  018C                     _SSP1BUF	set	396
  4006  38C8                     _SSP1IE	set	14536
  4007  3878                     _SSP1IF	set	14456
  4008  081F                     _NVMCON2	set	2079
  4009  081C                     _NVMDATL	set	2076
  4010  081A                     _NVMADRL	set	2074
  4011  081B                     _NVMADRH	set	2075
  4012  081E                     _NVMCON1bits	set	2078
  4013  0E8F                     _PPSLOCK	set	3727
  4014  0F25                     _RC5PPS	set	3877
  4015  0F65                     _WPUE	set	3941
  4016  0F5A                     _WPUD	set	3930
  4017  0F4F                     _WPUC	set	3919
  4018  0F44                     _WPUB	set	3908
  4019  0F39                     _WPUA	set	3897
  4020  0F64                     _ANSELE	set	3940
  4021  0F59                     _ANSELD	set	3929
  4022  0F4E                     _ANSELC	set	3918
  4023  0F43                     _ANSELB	set	3907
  4024  0F38                     _ANSELA	set	3896
  4025                           
  4026                           ; #config settings
  4027  0000                     
  4028                           	psect	cinit
  4029  01E0                     start_initialization:	
  4030  01E0                     __initialization:		;BIGRAM
  4031                           
  4032                           ; Initialize objects allocated to COMMON
  4033  01E0  3187  27FF  3181   	fcall	__pidataCOMMON	;fetch initializer
  4034  01E3  00FB               	movwf	__pdataCOMMON& (0+127)
  4035                           
  4036                           ; Initialize objects allocated to BANK0
  4037  01E4  3030               	movlw	low __pidataBANK0
  4038  01E5  0084               	movwf	4
  4039  01E6  308E               	movlw	(high __pidataBANK0)| (0+128)
  4040  01E7  0085               	movwf	5
  4041  01E8  3050               	movlw	low __pdataBANK0
  4042  01E9  0086               	movwf	6
  4043  01EA  3000               	movlw	high __pdataBANK0
  4044  01EB  0087               	movwf	7
  4045  01EC  3000               	movlw	0
  4046  01ED  00FF               	movwf	btemp+1
  4047  01EE  301B               	movlw	27
  4048  01EF  318D  25FC  3181   	fcall	init_ram
  4049                           
  4050                           ; Clear objects allocated to BIGRAM
  4051  01F2  30F0               	movlw	low (0+9200)
  4052  01F3  0084               	movwf	4
  4053  01F4  3023               	movlw	high (0+9200)
  4054  01F5  0085               	movwf	5
  4055  01F6  3000               	movlw	0
  4056  01F7  00FE               	movwf	btemp
  4057  01F8  3004               	movlw	4
  4058  01F9  00FF               	movwf	btemp+1
  4059  01FA  318D  25F0  3181   	fcall	clear_ram0
  4060                           
  4061                           ; Clear objects allocated to COMMON
  4062  01FD  01F6               	clrf	__pbssCOMMON& (0+127)
  4063  01FE  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  4064  01FF  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  4065  0200  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  4066  0201  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
  4067                           
  4068                           ; Clear objects allocated to BANK0
  4069  0202  01EB               	clrf	__pbssBANK0& (0+127)
  4070  0203  01EC               	clrf	(__pbssBANK0+1)& (0+127)
  4071                           
  4072                           ; Clear objects allocated to BANK1
  4073  0204  30A0               	movlw	low __pbssBANK1
  4074  0205  0084               	movwf	4
  4075  0206  3000               	movlw	high __pbssBANK1
  4076  0207  0085               	movwf	5
  4077  0208  3040               	movlw	64
  4078  0209  00FE               	movwf	btemp
  4079  020A  3000               	movlw	0
  4080  020B  00FF               	movwf	btemp+1
  4081  020C  318D  25F0  3181   	fcall	clear_ram0
  4082  020F                     end_of_initialization:	
  4083                           ;End of C runtime variable initialization code
  4084                           
  4085  020F                     __end_of__initialization:	
  4086  020F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4087  0210  0020               	movlb	0
  4088  0211  318F  2F9B         	ljmp	_main	;jump to C main() function
  4089                           
  4090                           	psect	bssCOMMON
  4091  0076                     __pbssCOMMON:	
  4092  0076                     _previousCmd:	
  4093  0076                     	ds	1
  4094  0077                     _escapeMode:	
  4095  0077                     	ds	1
  4096  0078                     _analogMode:	
  4097  0078                     	ds	1
  4098  0079                     _cmdCounter:	
  4099  0079                     	ds	1
  4100  007A                     _index:	
  4101  007A                     	ds	1
  4102                           
  4103                           	psect	dataCOMMON
  4104  007B                     __pdataCOMMON:	
  4105  007B                     _rxData:	
  4106  007B                     	ds	1
  4107                           
  4108                           	psect	bssBANK0
  4109  006B                     __pbssBANK0:	
  4110  006B                     _INIT_PRESSURE_SENSOR_byte4:	
  4111  006B                     	ds	1
  4112  006C                     _INIT_PRESSURE_SENSOR_byte3:	
  4113  006C                     	ds	1
  4114                           
  4115                           	psect	dataBANK0
  4116  0050                     __pdataBANK0:	
  4117  0050                     _responseLength:	
  4118  0050                     	ds	1
  4119  0051                     _debounceLoops:	
  4120  0051                     	ds	1
  4121  0052                     _lyData:	
  4122  0052                     	ds	1
  4123  0053                     _lxData:	
  4124  0053                     	ds	1
  4125  0054                     _ryData:	
  4126  0054                     	ds	1
  4127  0055                     _digitalStateSecond:	
  4128  0055                     	ds	1
  4129  0056                     _digitalStateFirst:	
  4130  0056                     	ds	1
  4131  0057                     _response:	
  4132  0057                     	ds	20
  4133                           
  4134                           	psect	bssBANK1
  4135  00A0                     __pbssBANK1:	
  4136  00A0                     _IndexDigitalByte2:	
  4137  00A0                     	ds	8
  4138  00A8                     _IndexDigitalByte1:	
  4139  00A8                     	ds	8
  4140  00B0                     _PreviousDigitalByte2:	
  4141  00B0                     	ds	8
  4142  00B8                     _PreviousDigitalByte1:	
  4143  00B8                     	ds	8
  4144  00C0                     _DigitalControllerByte2:	
  4145  00C0                     	ds	8
  4146  00C8                     _DigitalControllerByte1:	
  4147  00C8                     	ds	8
  4148  00D0                     _analogStateSecond:	
  4149  00D0                     	ds	8
  4150  00D8                     _analogStateFirst:	
  4151  00D8                     	ds	8
  4152                           
  4153                           	psect	inittext
  4154  0DFC                     init_ram:	
  4155  0DFC  00FE               	movwf	btemp
  4156  0DFD                     initloop:	
  4157  0DFD  0012               	moviw fsr0++
  4158  0DFE  001E               	movwi fsr1++
  4159  0DFF  3001               	movlw	1
  4160  0E00  02FE               	subwf	btemp,f
  4161  0E01  3000               	movlw	0
  4162  0E02  3BFF               	subwfb	btemp+1,f
  4163  0E03  087F               	movf	btemp+1,w
  4164  0E04  047E               	iorwf	btemp,w
  4165  0E05  1D03               	skipz
  4166  0E06  2DFD               	goto	initloop
  4167  0E07  3400               	retlw	0
  4168                           
  4169                           	psect	clrtext
  4170  0DF0                     clear_ram0:	
  4171                           ;	Called with FSR0 containing the base address, and
  4172                           ;	btemp/btemp+1 has the size to clear
  4173                           
  4174  0DF0  0064               	clrwdt	;clear the watchdog before getting into this loop
  4175  0DF1                     clrloop0:	
  4176  0DF1  0180               	clrf	0	;clear RAM location pointed to by FSR
  4177  0DF2  3101               	addfsr 0,1
  4178  0DF3  3001               	movlw	1
  4179  0DF4  02FE               	subwf	btemp,f
  4180  0DF5  3000               	movlw	0
  4181  0DF6  3BFF               	subwfb	btemp+1,f
  4182  0DF7  087F               	movf	btemp+1,w
  4183  0DF8  047E               	iorwf	btemp,w
  4184  0DF9  1D03               	skipz
  4185  0DFA  2DF1               	goto	clrloop0	;have we reached the end yet?
  4186  0DFB  3400               	retlw	0	;all done for this memory range, return
  4187                           
  4188                           	psect	cstackCOMMON
  4189  0070                     __pcstackCOMMON:	
  4190  0070                     ?_spiRead:	
  4191  0070                     ??_spiRead:	
  4192                           ; 1 bytes @ 0x0
  4193                           
  4194  0070                     ?_reversebyte:	
  4195                           ; 1 bytes @ 0x0
  4196                           
  4197  0070                     ?_spiWrite:	
  4198                           ; 1 bytes @ 0x0
  4199                           
  4200  0070                     ??_spiWrite:	
  4201                           ; 1 bytes @ 0x0
  4202                           
  4203  0070                     ?_picInit:	
  4204                           ; 1 bytes @ 0x0
  4205                           
  4206  0070                     ?_IO_MAPPING:	
  4207                           ; 1 bytes @ 0x0
  4208                           
  4209  0070                     ?_adcInit:	
  4210                           ; 1 bytes @ 0x0
  4211                           
  4212  0070                     ?_lutInit:	
  4213                           ; 1 bytes @ 0x0
  4214                           
  4215  0070                     ?_configureController:	
  4216                           ; 1 bytes @ 0x0
  4217                           
  4218  0070                     ?_readController:	
  4219                           ; 1 bytes @ 0x0
  4220                           
  4221  0070                     ?_readControllerAnalog:	
  4222                           ; 1 bytes @ 0x0
  4223                           
  4224  0070                     ?_eepromRead:	
  4225                           ; 1 bytes @ 0x0
  4226                           
  4227  0070                     ?_nvmUnlock:	
  4228                           ; 1 bytes @ 0x0
  4229                           
  4230  0070                     ?_pollController:	
  4231                           ; 1 bytes @ 0x0
  4232                           
  4233  0070                     ??_pollController:	
  4234                           ; 1 bytes @ 0x0
  4235                           
  4236  0070                     ?_PS2Command:	
  4237                           ; 1 bytes @ 0x0
  4238                           
  4239  0070                     ?_main:	
  4240                           ; 1 bytes @ 0x0
  4241                           
  4242  0070                     ?_ppsUnlock:	
  4243                           ; 1 bytes @ 0x0
  4244                           
  4245  0070                     ?_ppsLock:	
  4246                           ; 1 bytes @ 0x0
  4247                           
  4248  0070                     ?_spiReceiveWait:	
  4249                           ; 1 bytes @ 0x0
  4250                           
  4251  0070                     ??_spiReceiveWait:	
  4252                           ; 1 bytes @ 0x0
  4253                           
  4254  0070                     ?i1_reversebyte:	
  4255                           ; 1 bytes @ 0x0
  4256                           
  4257  0070                     ??i1_reversebyte:	
  4258                           ; 1 bytes @ 0x0
  4259                           
  4260  0070                     spiWrite@dat:	
  4261                           ; 1 bytes @ 0x0
  4262                           
  4263                           
  4264                           ; 1 bytes @ 0x0
  4265  0070                     	ds	1
  4266  0071                     pollController@response:	
  4267                           
  4268                           ; 1 bytes @ 0x1
  4269  0071                     	ds	2
  4270  0073                     i1reversebyte@byte:	
  4271                           
  4272                           ; 1 bytes @ 0x3
  4273  0073                     	ds	1
  4274  0074                     ??_PS2Command:	
  4275                           
  4276                           ; 1 bytes @ 0x4
  4277  0074                     	ds	1
  4278  0075                     PS2Command@cmd:	
  4279                           
  4280                           ; 1 bytes @ 0x5
  4281  0075                     	ds	1
  4282                           
  4283                           	psect	cstackBANK0
  4284  0020                     __pcstackBANK0:	
  4285  0020                     ??_reversebyte:	
  4286  0020                     ??_IO_MAPPING:	
  4287                           ; 1 bytes @ 0x0
  4288                           
  4289  0020                     ??_adcInit:	
  4290                           ; 1 bytes @ 0x0
  4291                           
  4292  0020                     ??_readController:	
  4293                           ; 1 bytes @ 0x0
  4294                           
  4295  0020                     ??_eepromRead:	
  4296                           ; 1 bytes @ 0x0
  4297                           
  4298  0020                     ?_eepromWrite:	
  4299                           ; 1 bytes @ 0x0
  4300                           
  4301  0020                     ?_spiInit:	
  4302                           ; 1 bytes @ 0x0
  4303                           
  4304  0020                     ??_nvmUnlock:	
  4305                           ; 1 bytes @ 0x0
  4306                           
  4307  0020                     ??_ppsUnlock:	
  4308                           ; 1 bytes @ 0x0
  4309                           
  4310  0020                     ??_ppsLock:	
  4311                           ; 1 bytes @ 0x0
  4312                           
  4313  0020                     ?_readADC:	
  4314                           ; 1 bytes @ 0x0
  4315                           
  4316  0020                     ?___wmul:	
  4317                           ; 2 bytes @ 0x0
  4318                           
  4319  0020                     spiInit@sDataSample:	
  4320                           ; 2 bytes @ 0x0
  4321                           
  4322  0020                     eepromWrite@data:	
  4323                           ; 1 bytes @ 0x0
  4324                           
  4325  0020                     readADC@channel:	
  4326                           ; 1 bytes @ 0x0
  4327                           
  4328  0020                     ___wmul@multiplier:	
  4329                           ; 2 bytes @ 0x0
  4330                           
  4331                           
  4332                           ; 2 bytes @ 0x0
  4333  0020                     	ds	1
  4334  0021                     ??_eepromWrite:	
  4335  0021                     spiInit@sClockIdle:	
  4336                           ; 1 bytes @ 0x1
  4337                           
  4338  0021                     eepromWrite@address:	
  4339                           ; 1 bytes @ 0x1
  4340                           
  4341  0021                     eepromRead@address:	
  4342                           ; 1 bytes @ 0x1
  4343                           
  4344                           
  4345                           ; 1 bytes @ 0x1
  4346  0021                     	ds	1
  4347  0022                     ??_readADC:	
  4348  0022                     readController@analogMode:	
  4349                           ; 1 bytes @ 0x2
  4350                           
  4351  0022                     spiInit@sTransmitEdge:	
  4352                           ; 1 bytes @ 0x2
  4353                           
  4354  0022                     eepromWrite@interruptStatus:	
  4355                           ; 1 bytes @ 0x2
  4356                           
  4357  0022                     eepromRead@data:	
  4358                           ; 1 bytes @ 0x2
  4359                           
  4360  0022                     ___wmul@multiplicand:	
  4361                           ; 1 bytes @ 0x2
  4362                           
  4363                           
  4364                           ; 2 bytes @ 0x2
  4365  0022                     	ds	1
  4366  0023                     ??_spiInit:	
  4367  0023                     reversebyte@byte:	
  4368                           ; 1 bytes @ 0x3
  4369                           
  4370  0023                     spiInit@sType:	
  4371                           ; 1 bytes @ 0x3
  4372                           
  4373                           
  4374                           ; 1 bytes @ 0x3
  4375  0023                     	ds	1
  4376  0024                     ??_picInit:	
  4377  0024                     ??___wmul:	
  4378                           ; 1 bytes @ 0x4
  4379                           
  4380  0024                     ___wmul@product:	
  4381                           ; 1 bytes @ 0x4
  4382                           
  4383                           
  4384                           ; 2 bytes @ 0x4
  4385  0024                     	ds	2
  4386  0026                     ?___awdiv:	
  4387  0026                     ___awdiv@divisor:	
  4388                           ; 2 bytes @ 0x6
  4389                           
  4390                           
  4391                           ; 2 bytes @ 0x6
  4392  0026                     	ds	2
  4393  0028                     ___awdiv@dividend:	
  4394                           
  4395                           ; 2 bytes @ 0x8
  4396  0028                     	ds	1
  4397  0029                     ??_configureController:	
  4398  0029                     ??_readControllerAnalog:	
  4399                           ; 1 bytes @ 0x9
  4400                           
  4401                           
  4402                           ; 1 bytes @ 0x9
  4403  0029                     	ds	1
  4404  002A                     ??___awdiv:	
  4405  002A                     configureController@lxMin:	
  4406                           ; 1 bytes @ 0xA
  4407                           
  4408                           
  4409                           ; 1 bytes @ 0xA
  4410  002A                     	ds	1
  4411  002B                     configureController@lxMax:	
  4412  002B                     ___awdiv@counter:	
  4413                           ; 1 bytes @ 0xB
  4414                           
  4415                           
  4416                           ; 1 bytes @ 0xB
  4417  002B                     	ds	1
  4418  002C                     configureController@lyMin:	
  4419  002C                     ___awdiv@sign:	
  4420                           ; 1 bytes @ 0xC
  4421                           
  4422                           
  4423                           ; 1 bytes @ 0xC
  4424  002C                     	ds	1
  4425  002D                     configureController@lyMax:	
  4426  002D                     ___awdiv@quotient:	
  4427                           ; 1 bytes @ 0xD
  4428                           
  4429                           
  4430                           ; 2 bytes @ 0xD
  4431  002D                     	ds	1
  4432  002E                     configureController@rxMin:	
  4433                           
  4434                           ; 1 bytes @ 0xE
  4435  002E                     	ds	1
  4436  002F                     ?_Map:	
  4437  002F                     configureController@rxMax:	
  4438                           ; 1 bytes @ 0xF
  4439                           
  4440  002F                     Map@x:	
  4441                           ; 1 bytes @ 0xF
  4442                           
  4443                           
  4444                           ; 2 bytes @ 0xF
  4445  002F                     	ds	1
  4446  0030                     configureController@ryMin:	
  4447                           
  4448                           ; 1 bytes @ 0x10
  4449  0030                     	ds	1
  4450  0031                     configureController@ryMax:	
  4451  0031                     Map@inMin:	
  4452                           ; 1 bytes @ 0x11
  4453                           
  4454                           
  4455                           ; 2 bytes @ 0x11
  4456  0031                     	ds	1
  4457  0032                     configureController@lx:	
  4458                           
  4459                           ; 1 bytes @ 0x12
  4460  0032                     	ds	1
  4461  0033                     configureController@ly:	
  4462  0033                     Map@inMax:	
  4463                           ; 1 bytes @ 0x13
  4464                           
  4465                           
  4466                           ; 2 bytes @ 0x13
  4467  0033                     	ds	1
  4468  0034                     configureController@rx:	
  4469                           
  4470                           ; 1 bytes @ 0x14
  4471  0034                     	ds	1
  4472  0035                     configureController@ry:	
  4473  0035                     Map@outMin:	
  4474                           ; 1 bytes @ 0x15
  4475                           
  4476                           
  4477                           ; 2 bytes @ 0x15
  4478  0035                     	ds	2
  4479  0037                     Map@outMax:	
  4480                           
  4481                           ; 2 bytes @ 0x17
  4482  0037                     	ds	2
  4483  0039                     ??_lutInit:	
  4484  0039                     ??_Map:	
  4485                           ; 1 bytes @ 0x19
  4486                           
  4487                           
  4488                           ; 1 bytes @ 0x19
  4489  0039                     	ds	9
  4490  0042                     lutInit@lxMin:	
  4491                           
  4492                           ; 1 bytes @ 0x22
  4493  0042                     	ds	1
  4494  0043                     lutInit@lxMax:	
  4495                           
  4496                           ; 1 bytes @ 0x23
  4497  0043                     	ds	1
  4498  0044                     lutInit@lyMin:	
  4499                           
  4500                           ; 1 bytes @ 0x24
  4501  0044                     	ds	1
  4502  0045                     lutInit@lyMax:	
  4503                           
  4504                           ; 1 bytes @ 0x25
  4505  0045                     	ds	1
  4506  0046                     lutInit@rxMin:	
  4507                           
  4508                           ; 1 bytes @ 0x26
  4509  0046                     	ds	1
  4510  0047                     lutInit@rxMax:	
  4511                           
  4512                           ; 1 bytes @ 0x27
  4513  0047                     	ds	1
  4514  0048                     lutInit@ryMin:	
  4515                           
  4516                           ; 1 bytes @ 0x28
  4517  0048                     	ds	1
  4518  0049                     lutInit@ryMax:	
  4519                           
  4520                           ; 1 bytes @ 0x29
  4521  0049                     	ds	1
  4522  004A                     lutInit@position:	
  4523                           
  4524                           ; 2 bytes @ 0x2A
  4525  004A                     	ds	2
  4526  004C                     ??_main:	
  4527                           
  4528                           ; 1 bytes @ 0x2C
  4529  004C                     	ds	1
  4530  004D                     main@slaveSelectStatePrev:	
  4531                           
  4532                           ; 1 bytes @ 0x2D
  4533  004D                     	ds	1
  4534  004E                     main@count:	
  4535                           
  4536                           ; 1 bytes @ 0x2E
  4537  004E                     	ds	1
  4538  004F                     main@slaveSelect:	
  4539                           
  4540                           ; 1 bytes @ 0x2F
  4541  004F                     	ds	1
  4542                           
  4543                           	psect	maintext
  4544  0F9B                     __pmaintext:	
  4545 ;;
  4546 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4547 ;;
  4548 ;; *************** function _main *****************
  4549 ;; Defined at:
  4550 ;;		line 323 in file "main.c"
  4551 ;; Parameters:    Size  Location     Type
  4552 ;;		None
  4553 ;; Auto vars:     Size  Location     Type
  4554 ;;  slaveSelect     1   47[BANK0 ] unsigned char 
  4555 ;;  count           1   46[BANK0 ] unsigned char 
  4556 ;;  slaveSelectS    1   45[BANK0 ] unsigned char 
  4557 ;; Return value:  Size  Location     Type
  4558 ;;                  1    wreg      void 
  4559 ;; Registers used:
  4560 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4561 ;; Tracked objects:
  4562 ;;		On entry : B1F/0
  4563 ;;		On exit  : 0/0
  4564 ;;		Unchanged: 0/0
  4565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4567 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4568 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4569 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4570 ;;Total ram usage:        4 bytes
  4571 ;; Hardware stack levels required when called:    6
  4572 ;; This function calls:
  4573 ;;		_IO_MAPPING
  4574 ;;		_adcInit
  4575 ;;		_configureController
  4576 ;;		_lutInit
  4577 ;;		_picInit
  4578 ;;		_readController
  4579 ;;		_readControllerAnalog
  4580 ;; This function is called by:
  4581 ;;		Startup code after reset
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585                           
  4586                           ;psect for function _main
  4587  0F9B                     _main:	
  4588  0F9B                     l2603:	
  4589                           ;incstack = 0
  4590                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4591                           
  4592                           
  4593                           ;main.c: 325: picInit();
  4594  0F9B  318E  261C  318F   	fcall	_picInit
  4595                           
  4596                           ;main.c: 326: IO_MAPPING();
  4597  0F9E  318E  26B2  318F   	fcall	_IO_MAPPING
  4598                           
  4599                           ;main.c: 327: adcInit();
  4600  0FA1  318D  25E6  318F   	fcall	_adcInit
  4601  0FA4                     l2605:	
  4602                           
  4603                           ;main.c: 328: lutInit();
  4604  0FA4  3182  2213  318F   	fcall	_lutInit
  4605  0FA7                     l2607:	
  4606                           
  4607                           ;main.c: 330: response[1] = 0x5A;
  4608  0FA7  305A               	movlw	90
  4609  0FA8  0020               	movlb	0	; select bank0
  4610  0FA9  00CC               	movwf	??_main
  4611  0FAA  084C               	movf	??_main,w
  4612  0FAB  00D8               	movwf	_response+1
  4613  0FAC                     l2609:	
  4614                           
  4615                           ;main.c: 332: char slaveSelect;;main.c: 333: char slaveSelectStatePrev = 0;
  4616  0FAC  01CD               	clrf	main@slaveSelectStatePrev
  4617  0FAD                     l2611:	
  4618                           
  4619                           ;main.c: 334: char count = 0;
  4620  0FAD  01CE               	clrf	main@count
  4621  0FAE                     l2613:	
  4622                           
  4623                           ;main.c: 335: RA4 = 1;
  4624  0FAE  160C               	bsf	12,4	;volatile
  4625  0FAF                     l2615:	
  4626                           
  4627                           ;main.c: 339: if(digitalStateFirst == 0x7F && digitalStateSecond == 0x5F){
  4628  0FAF  307F               	movlw	127
  4629  0FB0  0020               	movlb	0	; select bank0
  4630  0FB1  0656               	xorwf	_digitalStateFirst,w
  4631  0FB2  1D03               	btfss	3,2
  4632  0FB3  2FB5               	goto	u2321
  4633  0FB4  2FB6               	goto	u2320
  4634  0FB5                     u2321:	
  4635  0FB5  2FBF               	goto	l2621
  4636  0FB6                     u2320:	
  4637  0FB6                     l2617:	
  4638  0FB6  305F               	movlw	95
  4639  0FB7  0655               	xorwf	_digitalStateSecond,w
  4640  0FB8  1D03               	btfss	3,2
  4641  0FB9  2FBB               	goto	u2331
  4642  0FBA  2FBC               	goto	u2330
  4643  0FBB                     u2331:	
  4644  0FBB  2FBF               	goto	l2621
  4645  0FBC                     u2330:	
  4646  0FBC                     l2619:	
  4647                           
  4648                           ;main.c: 340: configureController();
  4649  0FBC  3184  2404  318F   	fcall	_configureController
  4650  0FBF                     l2621:	
  4651                           
  4652                           ;main.c: 341: };main.c: 343: if(analogMode >= 1) RD4 = 1;
  4653  0FBF  0878               	movf	_analogMode,w
  4654  0FC0  1903               	btfsc	3,2
  4655  0FC1  2FC3               	goto	u2341
  4656  0FC2  2FC4               	goto	u2340
  4657  0FC3                     u2341:	
  4658  0FC3  2FC7               	goto	l162
  4659  0FC4                     u2340:	
  4660  0FC4                     l2623:	
  4661  0FC4  0020               	movlb	0	; select bank0
  4662  0FC5  160F               	bsf	15,4	;volatile
  4663  0FC6  2FC9               	goto	l2625
  4664  0FC7                     l162:	
  4665                           
  4666                           ;main.c: 344: else RD4 = 0;
  4667  0FC7  0020               	movlb	0	; select bank0
  4668  0FC8  120F               	bcf	15,4	;volatile
  4669  0FC9                     l2625:	
  4670                           
  4671                           ;main.c: 346: slaveSelect = RA5;
  4672  0FC9  3000               	movlw	0
  4673  0FCA  1A8C               	btfsc	12,5	;volatile
  4674  0FCB  3001               	movlw	1
  4675  0FCC  00CF               	movwf	main@slaveSelect
  4676  0FCD                     l2627:	
  4677                           
  4678                           ;main.c: 347: if (slaveSelect) if(count < 3) count++;
  4679  0FCD  084F               	movf	main@slaveSelect,w
  4680  0FCE  1903               	btfsc	3,2
  4681  0FCF  2FD1               	goto	u2351
  4682  0FD0  2FD2               	goto	u2350
  4683  0FD1                     u2351:	
  4684  0FD1  2FDC               	goto	l164
  4685  0FD2                     u2350:	
  4686  0FD2                     l2629:	
  4687  0FD2  3003               	movlw	3
  4688  0FD3  024E               	subwf	main@count,w
  4689  0FD4  1803               	skipnc
  4690  0FD5  2FD7               	goto	u2361
  4691  0FD6  2FD8               	goto	u2360
  4692  0FD7                     u2361:	
  4693  0FD7  2FDC               	goto	l164
  4694  0FD8                     u2360:	
  4695  0FD8                     l2631:	
  4696  0FD8  3001               	movlw	1
  4697  0FD9  00CC               	movwf	??_main
  4698  0FDA  084C               	movf	??_main,w
  4699  0FDB  07CE               	addwf	main@count,f
  4700  0FDC                     l164:	
  4701                           
  4702                           ;main.c: 348: if (slaveSelect ^ slaveSelectStatePrev) count = 0;
  4703  0FDC  084F               	movf	main@slaveSelect,w
  4704  0FDD  064D               	xorwf	main@slaveSelectStatePrev,w
  4705  0FDE  1903               	btfsc	3,2
  4706  0FDF  2FE1               	goto	u2371
  4707  0FE0  2FE2               	goto	u2370
  4708  0FE1                     u2371:	
  4709  0FE1  2FE3               	goto	l2635
  4710  0FE2                     u2370:	
  4711  0FE2                     l2633:	
  4712  0FE2  01CE               	clrf	main@count
  4713  0FE3                     l2635:	
  4714                           
  4715                           ;main.c: 349: slaveSelectStatePrev = slaveSelect;
  4716  0FE3  084F               	movf	main@slaveSelect,w
  4717  0FE4  00CC               	movwf	??_main
  4718  0FE5  084C               	movf	??_main,w
  4719  0FE6  00CD               	movwf	main@slaveSelectStatePrev
  4720  0FE7                     l2637:	
  4721                           
  4722                           ;main.c: 350: if (count >= 3) {
  4723  0FE7  3003               	movlw	3
  4724  0FE8  024E               	subwf	main@count,w
  4725  0FE9  1C03               	skipc
  4726  0FEA  2FEC               	goto	u2381
  4727  0FEB  2FED               	goto	u2380
  4728  0FEC                     u2381:	
  4729  0FEC  2FF6               	goto	l2645
  4730  0FED                     u2380:	
  4731  0FED                     l2639:	
  4732                           
  4733                           ;main.c: 351: cmdCounter = 0;
  4734  0FED  01F9               	clrf	_cmdCounter
  4735  0FEE                     l2641:	
  4736                           
  4737                           ;main.c: 352: responseLength = 9;
  4738  0FEE  3009               	movlw	9
  4739  0FEF  00CC               	movwf	??_main
  4740  0FF0  084C               	movf	??_main,w
  4741  0FF1  00D0               	movwf	_responseLength
  4742  0FF2                     l2643:	
  4743                           
  4744                           ;main.c: 353: SSP1BUF = 0xFF;
  4745  0FF2  30FF               	movlw	255
  4746  0FF3  0023               	movlb	3	; select bank3
  4747  0FF4  008C               	movwf	12	;volatile
  4748                           
  4749                           ;main.c: 354: previousCmd = 0x00;
  4750  0FF5  01F6               	clrf	_previousCmd
  4751  0FF6                     l2645:	
  4752                           
  4753                           ;main.c: 355: };main.c: 357: readController(analogMode);
  4754  0FF6  0878               	movf	_analogMode,w
  4755  0FF7  3185  2565  318F   	fcall	_readController
  4756  0FFA                     l2647:	
  4757                           
  4758                           ;main.c: 358: readControllerAnalog();
  4759  0FFA  3187  274C  318F   	fcall	_readControllerAnalog
  4760  0FFD  2FAF               	goto	l2615
  4761  0FFE  3181  29DE         	ljmp	start
  4762  1000                     __end_of_main:	
  4763                           
  4764                           	psect	text1
  4765  074C                     __ptext1:	
  4766 ;; *************** function _readControllerAnalog *****************
  4767 ;; Defined at:
  4768 ;;		line 173 in file "Controller.c"
  4769 ;; Parameters:    Size  Location     Type
  4770 ;;		None
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;		None
  4773 ;; Return value:  Size  Location     Type
  4774 ;;                  1    wreg      void 
  4775 ;; Registers used:
  4776 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4777 ;; Tracked objects:
  4778 ;;		On entry : 0/0
  4779 ;;		On exit  : 0/0
  4780 ;;		Unchanged: 0/0
  4781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4784 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4785 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4786 ;;Total ram usage:        3 bytes
  4787 ;; Hardware stack levels used:    1
  4788 ;; Hardware stack levels required when called:    4
  4789 ;; This function calls:
  4790 ;;		_readADC
  4791 ;;		_reversebyte
  4792 ;; This function is called by:
  4793 ;;		_main
  4794 ;; This function uses a non-reentrant model
  4795 ;;
  4796                           
  4797                           
  4798                           ;psect for function _readControllerAnalog
  4799  074C                     _readControllerAnalog:	
  4800  074C                     l2601:	
  4801                           ;incstack = 0
  4802                           ; Regs used in _readControllerAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4803                           
  4804                           
  4805                           ;Controller.c: 175: lxData = reversebyte(lutLX[readADC(0b10001)]);
  4806  074C  3011               	movlw	17
  4807  074D  0020               	movlb	0	; select bank0
  4808  074E  00A0               	movwf	readADC@channel
  4809  074F  3000               	movlw	0
  4810  0750  00A1               	movwf	readADC@channel+1
  4811  0751  318E  26DA  3187   	fcall	_readADC
  4812  0754  30F0               	movlw	240
  4813  0755  0020               	movlb	0	; select bank0
  4814  0756  00A9               	movwf	??_readControllerAnalog
  4815  0757  3026               	movlw	38
  4816  0758  00AA               	movwf	??_readControllerAnalog+1
  4817  0759  0820               	movf	?_readADC,w
  4818  075A  0729               	addwf	??_readControllerAnalog,w
  4819  075B  0086               	movwf	6
  4820  075C  0821               	movf	?_readADC+1,w
  4821  075D  3D2A               	addwfc	??_readControllerAnalog+1,w
  4822  075E  0087               	movwf	7
  4823  075F  0801               	movf	1,w
  4824  0760  3187  27B6  3187   	fcall	_reversebyte
  4825  0763  0020               	movlb	0	; select bank0
  4826  0764  00AB               	movwf	??_readControllerAnalog+2
  4827  0765  082B               	movf	??_readControllerAnalog+2,w
  4828  0766  00D3               	movwf	_lxData
  4829                           
  4830                           ;Controller.c: 176: lyData = reversebyte(lutLY[readADC(0b010000)]);
  4831  0767  3010               	movlw	16
  4832  0768  00A0               	movwf	readADC@channel
  4833  0769  3000               	movlw	0
  4834  076A  00A1               	movwf	readADC@channel+1
  4835  076B  318E  26DA  3187   	fcall	_readADC
  4836  076E  30F0               	movlw	240
  4837  076F  0020               	movlb	0	; select bank0
  4838  0770  00A9               	movwf	??_readControllerAnalog
  4839  0771  3025               	movlw	37
  4840  0772  00AA               	movwf	??_readControllerAnalog+1
  4841  0773  0820               	movf	?_readADC,w
  4842  0774  0729               	addwf	??_readControllerAnalog,w
  4843  0775  0086               	movwf	6
  4844  0776  0821               	movf	?_readADC+1,w
  4845  0777  3D2A               	addwfc	??_readControllerAnalog+1,w
  4846  0778  0087               	movwf	7
  4847  0779  0801               	movf	1,w
  4848  077A  3187  27B6  3187   	fcall	_reversebyte
  4849  077D  0020               	movlb	0	; select bank0
  4850  077E  00AB               	movwf	??_readControllerAnalog+2
  4851  077F  082B               	movf	??_readControllerAnalog+2,w
  4852  0780  00D2               	movwf	_lyData
  4853                           
  4854                           ;Controller.c: 178: rxData = reversebyte(lutRX[readADC(0b010110)]);
  4855  0781  3016               	movlw	22
  4856  0782  00A0               	movwf	readADC@channel
  4857  0783  3000               	movlw	0
  4858  0784  00A1               	movwf	readADC@channel+1
  4859  0785  318E  26DA  3187   	fcall	_readADC
  4860  0788  30F0               	movlw	240
  4861  0789  0020               	movlb	0	; select bank0
  4862  078A  00A9               	movwf	??_readControllerAnalog
  4863  078B  3024               	movlw	36
  4864  078C  00AA               	movwf	??_readControllerAnalog+1
  4865  078D  0820               	movf	?_readADC,w
  4866  078E  0729               	addwf	??_readControllerAnalog,w
  4867  078F  0086               	movwf	6
  4868  0790  0821               	movf	?_readADC+1,w
  4869  0791  3D2A               	addwfc	??_readControllerAnalog+1,w
  4870  0792  0087               	movwf	7
  4871  0793  0801               	movf	1,w
  4872  0794  3187  27B6  3187   	fcall	_reversebyte
  4873  0797  0020               	movlb	0	; select bank0
  4874  0798  00AB               	movwf	??_readControllerAnalog+2
  4875  0799  082B               	movf	??_readControllerAnalog+2,w
  4876  079A  00FB               	movwf	_rxData
  4877                           
  4878                           ;Controller.c: 179: ryData = reversebyte(lutRY[readADC(0b010111)]);
  4879  079B  3017               	movlw	23
  4880  079C  00A0               	movwf	readADC@channel
  4881  079D  3000               	movlw	0
  4882  079E  00A1               	movwf	readADC@channel+1
  4883  079F  318E  26DA  3187   	fcall	_readADC
  4884  07A2  30F0               	movlw	240
  4885  07A3  0020               	movlb	0	; select bank0
  4886  07A4  00A9               	movwf	??_readControllerAnalog
  4887  07A5  3023               	movlw	35
  4888  07A6  00AA               	movwf	??_readControllerAnalog+1
  4889  07A7  0820               	movf	?_readADC,w
  4890  07A8  0729               	addwf	??_readControllerAnalog,w
  4891  07A9  0086               	movwf	6
  4892  07AA  0821               	movf	?_readADC+1,w
  4893  07AB  3D2A               	addwfc	??_readControllerAnalog+1,w
  4894  07AC  0087               	movwf	7
  4895  07AD  0801               	movf	1,w
  4896  07AE  3187  27B6  3187   	fcall	_reversebyte
  4897  07B1  0020               	movlb	0	; select bank0
  4898  07B2  00AB               	movwf	??_readControllerAnalog+2
  4899  07B3  082B               	movf	??_readControllerAnalog+2,w
  4900  07B4  00D4               	movwf	_ryData
  4901  07B5                     l310:	
  4902  07B5  0008               	return
  4903  07B6                     __end_of_readControllerAnalog:	
  4904                           
  4905                           	psect	text2
  4906  07B6                     __ptext2:	
  4907 ;; *************** function _reversebyte *****************
  4908 ;; Defined at:
  4909 ;;		line 165 in file "Controller.c"
  4910 ;; Parameters:    Size  Location     Type
  4911 ;;  byte            1    wreg     unsigned char 
  4912 ;; Auto vars:     Size  Location     Type
  4913 ;;  byte            1    3[BANK0 ] unsigned char 
  4914 ;; Return value:  Size  Location     Type
  4915 ;;                  1    wreg      unsigned char 
  4916 ;; Registers used:
  4917 ;;		wreg, status,2, status,0
  4918 ;; Tracked objects:
  4919 ;;		On entry : 0/0
  4920 ;;		On exit  : 0/0
  4921 ;;		Unchanged: 0/0
  4922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4924 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4925 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4926 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4927 ;;Total ram usage:        4 bytes
  4928 ;; Hardware stack levels used:    1
  4929 ;; Hardware stack levels required when called:    3
  4930 ;; This function calls:
  4931 ;;		Nothing
  4932 ;; This function is called by:
  4933 ;;		_readControllerAnalog
  4934 ;; This function uses a non-reentrant model
  4935 ;;
  4936                           
  4937                           
  4938                           ;psect for function _reversebyte
  4939  07B6                     _reversebyte:	
  4940                           
  4941                           ;incstack = 0
  4942                           ; Regs used in _reversebyte: [wreg+status,2+status,0]
  4943                           ;reversebyte@byte stored from wreg
  4944  07B6  0020               	movlb	0	; select bank0
  4945  07B7  00A3               	movwf	reversebyte@byte
  4946  07B8                     l2347:	
  4947                           
  4948                           ;Controller.c: 166: byte = (byte & 0xF0) >> 4 | (byte & 0x0F) << 4;
  4949  07B8  0823               	movf	reversebyte@byte,w
  4950  07B9  390F               	andlw	15
  4951  07BA  00A0               	movwf	??_reversebyte
  4952  07BB  3004               	movlw	4
  4953  07BC                     u1855:	
  4954  07BC  35A0               	lslf	??_reversebyte,f
  4955  07BD  0B89               	decfsz	9,f
  4956  07BE  2FBC               	goto	u1855
  4957  07BF  0823               	movf	reversebyte@byte,w
  4958  07C0  00A1               	movwf	??_reversebyte+1
  4959  07C1  3004               	movlw	4
  4960  07C2                     u1865:	
  4961  07C2  36A1               	lsrf	??_reversebyte+1,f
  4962  07C3  0B89               	decfsz	9,f
  4963  07C4  2FC2               	goto	u1865
  4964  07C5  0821               	movf	??_reversebyte+1,w
  4965  07C6  390F               	andlw	15
  4966  07C7  0420               	iorwf	??_reversebyte,w
  4967  07C8  00A2               	movwf	??_reversebyte+2
  4968  07C9  0822               	movf	??_reversebyte+2,w
  4969  07CA  00A3               	movwf	reversebyte@byte
  4970                           
  4971                           ;Controller.c: 167: byte = (byte & 0xCC) >> 2 | (byte & 0x33) << 2;
  4972  07CB  0823               	movf	reversebyte@byte,w
  4973  07CC  3933               	andlw	51
  4974  07CD  00A0               	movwf	??_reversebyte
  4975  07CE  3002               	movlw	2
  4976  07CF                     u1875:	
  4977  07CF  35A0               	lslf	??_reversebyte,f
  4978  07D0  0B89               	decfsz	9,f
  4979  07D1  2FCF               	goto	u1875
  4980  07D2  0823               	movf	reversebyte@byte,w
  4981  07D3  00A1               	movwf	??_reversebyte+1
  4982  07D4  3002               	movlw	2
  4983  07D5                     u1885:	
  4984  07D5  36A1               	lsrf	??_reversebyte+1,f
  4985  07D6  0B89               	decfsz	9,f
  4986  07D7  2FD5               	goto	u1885
  4987  07D8  0821               	movf	??_reversebyte+1,w
  4988  07D9  3933               	andlw	51
  4989  07DA  0420               	iorwf	??_reversebyte,w
  4990  07DB  00A2               	movwf	??_reversebyte+2
  4991  07DC  0822               	movf	??_reversebyte+2,w
  4992  07DD  00A3               	movwf	reversebyte@byte
  4993                           
  4994                           ;Controller.c: 168: byte = (byte & 0xAA) >> 1 | (byte & 0x55) << 1;
  4995  07DE  0823               	movf	reversebyte@byte,w
  4996  07DF  3955               	andlw	85
  4997  07E0  00A0               	movwf	??_reversebyte
  4998  07E1  3001               	movlw	1
  4999  07E2                     u1895:	
  5000  07E2  35A0               	lslf	??_reversebyte,f
  5001  07E3  0B89               	decfsz	9,f
  5002  07E4  2FE2               	goto	u1895
  5003  07E5  3623               	lsrf	reversebyte@byte,w
  5004  07E6  3955               	andlw	85
  5005  07E7  0420               	iorwf	??_reversebyte,w
  5006  07E8  00A1               	movwf	??_reversebyte+1
  5007  07E9  0821               	movf	??_reversebyte+1,w
  5008  07EA  00A3               	movwf	reversebyte@byte
  5009  07EB                     l2349:	
  5010                           
  5011                           ;Controller.c: 170: return byte;
  5012  07EB  0823               	movf	reversebyte@byte,w
  5013  07EC                     l307:	
  5014  07EC  0008               	return
  5015  07ED                     __end_of_reversebyte:	
  5016                           
  5017                           	psect	text3
  5018  0E1C                     __ptext3:	
  5019 ;; *************** function _picInit *****************
  5020 ;; Defined at:
  5021 ;;		line 30 in file "PicConfig.c"
  5022 ;; Parameters:    Size  Location     Type
  5023 ;;		None
  5024 ;; Auto vars:     Size  Location     Type
  5025 ;;		None
  5026 ;; Return value:  Size  Location     Type
  5027 ;;                  1    wreg      void 
  5028 ;; Registers used:
  5029 ;;		wreg, status,2, status,0, pclath, cstack
  5030 ;; Tracked objects:
  5031 ;;		On entry : 0/0
  5032 ;;		On exit  : 0/0
  5033 ;;		Unchanged: 0/0
  5034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5037 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5038 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5039 ;;Total ram usage:        2 bytes
  5040 ;; Hardware stack levels used:    1
  5041 ;; Hardware stack levels required when called:    4
  5042 ;; This function calls:
  5043 ;;		_spiInit
  5044 ;; This function is called by:
  5045 ;;		_main
  5046 ;; This function uses a non-reentrant model
  5047 ;;
  5048                           
  5049                           
  5050                           ;psect for function _picInit
  5051  0E1C                     _picInit:	
  5052  0E1C                     l2451:	
  5053                           ;incstack = 0
  5054                           ; Regs used in _picInit: [wreg+status,2+status,0+pclath+cstack]
  5055                           
  5056                           
  5057                           ;PicConfig.c: 32: spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_HIGH, 
      +                          SPI_ACTIVE_2_IDLE);
  5058  0E1C  0020               	movlb	0	; select bank0
  5059  0E1D  01A0               	clrf	spiInit@sDataSample
  5060  0E1E  3010               	movlw	16
  5061  0E1F  00A4               	movwf	??_picInit
  5062  0E20  0824               	movf	??_picInit,w
  5063  0E21  00A1               	movwf	spiInit@sClockIdle
  5064  0E22  3040               	movlw	64
  5065  0E23  00A5               	movwf	??_picInit+1
  5066  0E24  0825               	movf	??_picInit+1,w
  5067  0E25  00A2               	movwf	spiInit@sTransmitEdge
  5068  0E26  3024               	movlw	36
  5069  0E27  318E  2608  318E   	fcall	_spiInit
  5070  0E2A                     l2453:	
  5071                           
  5072                           ;PicConfig.c: 35: INTCONbits.GIE = 1;
  5073  0E2A  178B               	bsf	11,7	;volatile
  5074  0E2B                     l2455:	
  5075                           
  5076                           ;PicConfig.c: 36: INTCONbits.PEIE = 1;
  5077  0E2B  170B               	bsf	11,6	;volatile
  5078  0E2C                     l2457:	
  5079                           
  5080                           ;PicConfig.c: 37: SSP1IF = 0;
  5081  0E2C  002E               	movlb	14	; select bank14
  5082  0E2D  100F               	bcf	15,0	;volatile
  5083  0E2E                     l2459:	
  5084                           
  5085                           ;PicConfig.c: 38: SSP1IE = 1;
  5086  0E2E  1419               	bsf	25,0	;volatile
  5087  0E2F                     l360:	
  5088  0E2F  0008               	return
  5089  0E30                     __end_of_picInit:	
  5090                           
  5091                           	psect	text4
  5092  0E08                     __ptext4:	
  5093 ;; *************** function _spiInit *****************
  5094 ;; Defined at:
  5095 ;;		line 10 in file "Spi.c"
  5096 ;; Parameters:    Size  Location     Type
  5097 ;;  sType           1    wreg     enum E11980
  5098 ;;  sDataSample     1    0[BANK0 ] enum E11988
  5099 ;;  sClockIdle      1    1[BANK0 ] enum E11992
  5100 ;;  sTransmitEdg    1    2[BANK0 ] enum E11996
  5101 ;; Auto vars:     Size  Location     Type
  5102 ;;  sType           1    3[BANK0 ] enum E11980
  5103 ;; Return value:  Size  Location     Type
  5104 ;;                  1    wreg      void 
  5105 ;; Registers used:
  5106 ;;		wreg, status,2, status,0
  5107 ;; Tracked objects:
  5108 ;;		On entry : 0/0
  5109 ;;		On exit  : 0/0
  5110 ;;		Unchanged: 0/0
  5111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5112 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5113 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5115 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5116 ;;Total ram usage:        4 bytes
  5117 ;; Hardware stack levels used:    1
  5118 ;; Hardware stack levels required when called:    3
  5119 ;; This function calls:
  5120 ;;		Nothing
  5121 ;; This function is called by:
  5122 ;;		_picInit
  5123 ;; This function uses a non-reentrant model
  5124 ;;
  5125                           
  5126                           
  5127                           ;psect for function _spiInit
  5128  0E08                     _spiInit:	
  5129                           
  5130                           ;incstack = 0
  5131                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  5132                           ;spiInit@sType stored from wreg
  5133  0E08  0020               	movlb	0	; select bank0
  5134  0E09  00A3               	movwf	spiInit@sType
  5135  0E0A                     l2445:	
  5136                           
  5137                           ;Spi.c: 13: if(sType & 0b00000100)
  5138  0E0A  1D23               	btfss	spiInit@sType,2
  5139  0E0B  2E0D               	goto	u2101
  5140  0E0C  2E0E               	goto	u2100
  5141  0E0D                     u2101:	
  5142  0E0D  2E12               	goto	l2449
  5143  0E0E                     u2100:	
  5144  0E0E                     l2447:	
  5145                           
  5146                           ;Spi.c: 14: {;Spi.c: 15: SSP1STAT = sTransmitEdge;
  5147  0E0E  0822               	movf	spiInit@sTransmitEdge,w
  5148  0E0F  0023               	movlb	3	; select bank3
  5149  0E10  008F               	movwf	15	;volatile
  5150                           
  5151                           ;Spi.c: 17: }
  5152  0E11  2E16               	goto	l372
  5153  0E12                     l2449:	
  5154                           
  5155                           ;Spi.c: 18: else;Spi.c: 19: {;Spi.c: 20: SSP1STAT = sDataSample | sTransmitEdge;
  5156  0E12  0820               	movf	spiInit@sDataSample,w
  5157  0E13  0422               	iorwf	spiInit@sTransmitEdge,w
  5158  0E14  0023               	movlb	3	; select bank3
  5159  0E15  008F               	movwf	15	;volatile
  5160  0E16                     l372:	
  5161                           
  5162                           ;Spi.c: 22: };Spi.c: 24: SSP1CON1 = sType | sClockIdle;
  5163  0E16  0020               	movlb	0	; select bank0
  5164  0E17  0823               	movf	spiInit@sType,w
  5165  0E18  0421               	iorwf	spiInit@sClockIdle,w
  5166  0E19  0023               	movlb	3	; select bank3
  5167  0E1A  0090               	movwf	16	;volatile
  5168  0E1B                     l373:	
  5169  0E1B  0008               	return
  5170  0E1C                     __end_of_spiInit:	
  5171                           
  5172                           	psect	text5
  5173  0213                     __ptext5:	
  5174 ;; *************** function _lutInit *****************
  5175 ;; Defined at:
  5176 ;;		line 96 in file "Controller.c"
  5177 ;; Parameters:    Size  Location     Type
  5178 ;;		None
  5179 ;; Auto vars:     Size  Location     Type
  5180 ;;  position        2   42[BANK0 ] int 
  5181 ;;  ryMax           1   41[BANK0 ] unsigned char 
  5182 ;;  ryMin           1   40[BANK0 ] unsigned char 
  5183 ;;  rxMax           1   39[BANK0 ] unsigned char 
  5184 ;;  rxMin           1   38[BANK0 ] unsigned char 
  5185 ;;  lyMax           1   37[BANK0 ] unsigned char 
  5186 ;;  lyMin           1   36[BANK0 ] unsigned char 
  5187 ;;  lxMax           1   35[BANK0 ] unsigned char 
  5188 ;;  lxMin           1   34[BANK0 ] unsigned char 
  5189 ;; Return value:  Size  Location     Type
  5190 ;;                  1    wreg      void 
  5191 ;; Registers used:
  5192 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5193 ;; Tracked objects:
  5194 ;;		On entry : 0/0
  5195 ;;		On exit  : 0/0
  5196 ;;		Unchanged: 0/0
  5197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5199 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5200 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5201 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5202 ;;Total ram usage:       19 bytes
  5203 ;; Hardware stack levels used:    1
  5204 ;; Hardware stack levels required when called:    5
  5205 ;; This function calls:
  5206 ;;		_Map
  5207 ;;		_eepromRead
  5208 ;; This function is called by:
  5209 ;;		_main
  5210 ;; This function uses a non-reentrant model
  5211 ;;
  5212                           
  5213                           
  5214                           ;psect for function _lutInit
  5215  0213                     _lutInit:	
  5216  0213                     l2495:	
  5217                           ;incstack = 0
  5218                           ; Regs used in _lutInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5219                           
  5220                           
  5221                           ;Controller.c: 98: char lxMin = eepromRead(0x60);
  5222  0213  3060               	movlw	96
  5223  0214  3187  27ED  3182   	fcall	_eepromRead
  5224  0217  0020               	movlb	0	; select bank0
  5225  0218  00B9               	movwf	??_lutInit
  5226  0219  0839               	movf	??_lutInit,w
  5227  021A  00C2               	movwf	lutInit@lxMin
  5228                           
  5229                           ;Controller.c: 99: char lxMax = eepromRead(0x61);
  5230  021B  3061               	movlw	97
  5231  021C  3187  27ED  3182   	fcall	_eepromRead
  5232  021F  0020               	movlb	0	; select bank0
  5233  0220  00B9               	movwf	??_lutInit
  5234  0221  0839               	movf	??_lutInit,w
  5235  0222  00C3               	movwf	lutInit@lxMax
  5236                           
  5237                           ;Controller.c: 100: char lyMin = eepromRead(0x62);
  5238  0223  3062               	movlw	98
  5239  0224  3187  27ED  3182   	fcall	_eepromRead
  5240  0227  0020               	movlb	0	; select bank0
  5241  0228  00B9               	movwf	??_lutInit
  5242  0229  0839               	movf	??_lutInit,w
  5243  022A  00C4               	movwf	lutInit@lyMin
  5244                           
  5245                           ;Controller.c: 101: char lyMax = eepromRead(0x63);
  5246  022B  3063               	movlw	99
  5247  022C  3187  27ED  3182   	fcall	_eepromRead
  5248  022F  0020               	movlb	0	; select bank0
  5249  0230  00B9               	movwf	??_lutInit
  5250  0231  0839               	movf	??_lutInit,w
  5251  0232  00C5               	movwf	lutInit@lyMax
  5252                           
  5253                           ;Controller.c: 103: char rxMin = eepromRead(0x64);
  5254  0233  3064               	movlw	100
  5255  0234  3187  27ED  3182   	fcall	_eepromRead
  5256  0237  0020               	movlb	0	; select bank0
  5257  0238  00B9               	movwf	??_lutInit
  5258  0239  0839               	movf	??_lutInit,w
  5259  023A  00C6               	movwf	lutInit@rxMin
  5260                           
  5261                           ;Controller.c: 104: char rxMax = eepromRead(0x65);
  5262  023B  3065               	movlw	101
  5263  023C  3187  27ED  3182   	fcall	_eepromRead
  5264  023F  0020               	movlb	0	; select bank0
  5265  0240  00B9               	movwf	??_lutInit
  5266  0241  0839               	movf	??_lutInit,w
  5267  0242  00C7               	movwf	lutInit@rxMax
  5268                           
  5269                           ;Controller.c: 105: char ryMin = eepromRead(0x66);
  5270  0243  3066               	movlw	102
  5271  0244  3187  27ED  3182   	fcall	_eepromRead
  5272  0247  0020               	movlb	0	; select bank0
  5273  0248  00B9               	movwf	??_lutInit
  5274  0249  0839               	movf	??_lutInit,w
  5275  024A  00C8               	movwf	lutInit@ryMin
  5276                           
  5277                           ;Controller.c: 106: char ryMax = eepromRead(0x67);
  5278  024B  3067               	movlw	103
  5279  024C  3187  27ED  3182   	fcall	_eepromRead
  5280  024F  0020               	movlb	0	; select bank0
  5281  0250  00B9               	movwf	??_lutInit
  5282  0251  0839               	movf	??_lutInit,w
  5283  0252  00C9               	movwf	lutInit@ryMax
  5284  0253                     l2497:	
  5285                           
  5286                           ;Controller.c: 108: for (int position = 0; position < 256; position++) {
  5287  0253  01CA               	clrf	lutInit@position
  5288  0254  01CB               	clrf	lutInit@position+1
  5289  0255                     l2503:	
  5290                           
  5291                           ;Controller.c: 111: if (position < lxMin) {
  5292  0255  0020               	movlb	0	; select bank0
  5293  0256  084B               	movf	lutInit@position+1,w
  5294  0257  3A80               	xorlw	128
  5295  0258  00B9               	movwf	??_lutInit
  5296  0259  3080               	movlw	128
  5297  025A  0239               	subwf	??_lutInit,w
  5298  025B  1D03               	skipz
  5299  025C  2A5F               	goto	u2115
  5300  025D  0842               	movf	lutInit@lxMin,w
  5301  025E  024A               	subwf	lutInit@position,w
  5302  025F                     u2115:	
  5303  025F  1803               	skipnc
  5304  0260  2A62               	goto	u2111
  5305  0261  2A63               	goto	u2110
  5306  0262                     u2111:	
  5307  0262  2A70               	goto	l2507
  5308  0263                     u2110:	
  5309  0263                     l2505:	
  5310                           
  5311                           ;Controller.c: 113: lutLX[position] = 0;
  5312  0263  30F0               	movlw	240
  5313  0264  0020               	movlb	0	; select bank0
  5314  0265  00B9               	movwf	??_lutInit
  5315  0266  3026               	movlw	38
  5316  0267  00BA               	movwf	??_lutInit+1
  5317  0268  084A               	movf	lutInit@position,w
  5318  0269  0739               	addwf	??_lutInit,w
  5319  026A  0086               	movwf	6
  5320  026B  084B               	movf	lutInit@position+1,w
  5321  026C  3D3A               	addwfc	??_lutInit+1,w
  5322  026D  0087               	movwf	7
  5323  026E  0181               	clrf	1
  5324                           
  5325                           ;Controller.c: 114: } else if (position > lxMax) {
  5326  026F  2ABD               	goto	l2513
  5327  0270                     l2507:	
  5328  0270  0020               	movlb	0	; select bank0
  5329  0271  084B               	movf	lutInit@position+1,w
  5330  0272  3A80               	xorlw	128
  5331  0273  3C80               	sublw	128
  5332  0274  1D03               	skipz
  5333  0275  2A78               	goto	u2125
  5334  0276  084A               	movf	lutInit@position,w
  5335  0277  0243               	subwf	lutInit@lxMax,w
  5336  0278                     u2125:	
  5337  0278  1803               	skipnc
  5338  0279  2A7B               	goto	u2121
  5339  027A  2A7C               	goto	u2120
  5340  027B                     u2121:	
  5341  027B  2A8E               	goto	l2511
  5342  027C                     u2120:	
  5343  027C                     l2509:	
  5344                           
  5345                           ;Controller.c: 115: lutLX[position] = 255;
  5346  027C  30F0               	movlw	240
  5347  027D  0020               	movlb	0	; select bank0
  5348  027E  00B9               	movwf	??_lutInit
  5349  027F  3026               	movlw	38
  5350  0280  00BA               	movwf	??_lutInit+1
  5351  0281  084A               	movf	lutInit@position,w
  5352  0282  0739               	addwf	??_lutInit,w
  5353  0283  00BB               	movwf	??_lutInit+2
  5354  0284  084B               	movf	lutInit@position+1,w
  5355  0285  3D3A               	addwfc	??_lutInit+1,w
  5356  0286  00BC               	movwf	??_lutInit+3
  5357  0287  083B               	movf	??_lutInit+2,w
  5358  0288  0086               	movwf	6
  5359  0289  083C               	movf	??_lutInit+3,w
  5360  028A  0087               	movwf	7
  5361  028B  30FF               	movlw	255
  5362  028C  0081               	movwf	1
  5363                           
  5364                           ;Controller.c: 117: } else {
  5365  028D  2ABD               	goto	l2513
  5366  028E                     l2511:	
  5367                           
  5368                           ;Controller.c: 118: lutLX[position] = Map(position, lxMin, lxMax, 0, 255);
  5369  028E  0020               	movlb	0	; select bank0
  5370  028F  084B               	movf	lutInit@position+1,w
  5371  0290  00B0               	movwf	Map@x+1
  5372  0291  084A               	movf	lutInit@position,w
  5373  0292  00AF               	movwf	Map@x
  5374  0293  0842               	movf	lutInit@lxMin,w
  5375  0294  00B9               	movwf	??_lutInit
  5376  0295  01BA               	clrf	??_lutInit+1
  5377  0296  0839               	movf	??_lutInit,w
  5378  0297  00B1               	movwf	Map@inMin
  5379  0298  083A               	movf	??_lutInit+1,w
  5380  0299  00B2               	movwf	Map@inMin+1
  5381  029A  0843               	movf	lutInit@lxMax,w
  5382  029B  00BB               	movwf	??_lutInit+2
  5383  029C  01BC               	clrf	??_lutInit+3
  5384  029D  083B               	movf	??_lutInit+2,w
  5385  029E  00B3               	movwf	Map@inMax
  5386  029F  083C               	movf	??_lutInit+3,w
  5387  02A0  00B4               	movwf	Map@inMax+1
  5388  02A1  3000               	movlw	0
  5389  02A2  00B5               	movwf	Map@outMin
  5390  02A3  00B6               	movwf	Map@outMin+1
  5391  02A4  30FF               	movlw	255
  5392  02A5  00B7               	movwf	Map@outMax
  5393  02A6  3000               	movlw	0
  5394  02A7  00B8               	movwf	Map@outMax+1
  5395  02A8  318E  266B  3182   	fcall	_Map
  5396  02AB  0020               	movlb	0	; select bank0
  5397  02AC  00BD               	movwf	??_lutInit+4
  5398  02AD  30F0               	movlw	240
  5399  02AE  00BE               	movwf	??_lutInit+5
  5400  02AF  3026               	movlw	38
  5401  02B0  00BF               	movwf	??_lutInit+6
  5402  02B1  084A               	movf	lutInit@position,w
  5403  02B2  073E               	addwf	??_lutInit+5,w
  5404  02B3  00C0               	movwf	??_lutInit+7
  5405  02B4  084B               	movf	lutInit@position+1,w
  5406  02B5  3D3F               	addwfc	??_lutInit+6,w
  5407  02B6  00C1               	movwf	??_lutInit+8
  5408  02B7  0840               	movf	??_lutInit+7,w
  5409  02B8  0086               	movwf	6
  5410  02B9  0841               	movf	??_lutInit+8,w
  5411  02BA  0087               	movwf	7
  5412  02BB  083D               	movf	??_lutInit+4,w
  5413  02BC  0081               	movwf	1
  5414  02BD                     l2513:	
  5415                           
  5416                           ;Controller.c: 119: };Controller.c: 122: if (position < lyMin) {
  5417  02BD  084B               	movf	lutInit@position+1,w
  5418  02BE  3A80               	xorlw	128
  5419  02BF  00B9               	movwf	??_lutInit
  5420  02C0  3080               	movlw	128
  5421  02C1  0239               	subwf	??_lutInit,w
  5422  02C2  1D03               	skipz
  5423  02C3  2AC6               	goto	u2135
  5424  02C4  0844               	movf	lutInit@lyMin,w
  5425  02C5  024A               	subwf	lutInit@position,w
  5426  02C6                     u2135:	
  5427  02C6  1803               	skipnc
  5428  02C7  2AC9               	goto	u2131
  5429  02C8  2ACA               	goto	u2130
  5430  02C9                     u2131:	
  5431  02C9  2AD7               	goto	l2517
  5432  02CA                     u2130:	
  5433  02CA                     l2515:	
  5434                           
  5435                           ;Controller.c: 123: lutLY[position] = 0;
  5436  02CA  30F0               	movlw	240
  5437  02CB  0020               	movlb	0	; select bank0
  5438  02CC  00B9               	movwf	??_lutInit
  5439  02CD  3025               	movlw	37
  5440  02CE  00BA               	movwf	??_lutInit+1
  5441  02CF  084A               	movf	lutInit@position,w
  5442  02D0  0739               	addwf	??_lutInit,w
  5443  02D1  0086               	movwf	6
  5444  02D2  084B               	movf	lutInit@position+1,w
  5445  02D3  3D3A               	addwfc	??_lutInit+1,w
  5446  02D4  0087               	movwf	7
  5447  02D5  0181               	clrf	1
  5448                           
  5449                           ;Controller.c: 124: } else if (position > lyMax) {
  5450  02D6  2B24               	goto	l2523
  5451  02D7                     l2517:	
  5452  02D7  0020               	movlb	0	; select bank0
  5453  02D8  084B               	movf	lutInit@position+1,w
  5454  02D9  3A80               	xorlw	128
  5455  02DA  3C80               	sublw	128
  5456  02DB  1D03               	skipz
  5457  02DC  2ADF               	goto	u2145
  5458  02DD  084A               	movf	lutInit@position,w
  5459  02DE  0245               	subwf	lutInit@lyMax,w
  5460  02DF                     u2145:	
  5461  02DF  1803               	skipnc
  5462  02E0  2AE2               	goto	u2141
  5463  02E1  2AE3               	goto	u2140
  5464  02E2                     u2141:	
  5465  02E2  2AF5               	goto	l2521
  5466  02E3                     u2140:	
  5467  02E3                     l2519:	
  5468                           
  5469                           ;Controller.c: 125: lutLY[position] = 255;
  5470  02E3  30F0               	movlw	240
  5471  02E4  0020               	movlb	0	; select bank0
  5472  02E5  00B9               	movwf	??_lutInit
  5473  02E6  3025               	movlw	37
  5474  02E7  00BA               	movwf	??_lutInit+1
  5475  02E8  084A               	movf	lutInit@position,w
  5476  02E9  0739               	addwf	??_lutInit,w
  5477  02EA  00BB               	movwf	??_lutInit+2
  5478  02EB  084B               	movf	lutInit@position+1,w
  5479  02EC  3D3A               	addwfc	??_lutInit+1,w
  5480  02ED  00BC               	movwf	??_lutInit+3
  5481  02EE  083B               	movf	??_lutInit+2,w
  5482  02EF  0086               	movwf	6
  5483  02F0  083C               	movf	??_lutInit+3,w
  5484  02F1  0087               	movwf	7
  5485  02F2  30FF               	movlw	255
  5486  02F3  0081               	movwf	1
  5487                           
  5488                           ;Controller.c: 127: } else {
  5489  02F4  2B24               	goto	l2523
  5490  02F5                     l2521:	
  5491                           
  5492                           ;Controller.c: 128: lutLY[position] = Map(position, lyMin, lyMax, 0, 255);
  5493  02F5  0020               	movlb	0	; select bank0
  5494  02F6  084B               	movf	lutInit@position+1,w
  5495  02F7  00B0               	movwf	Map@x+1
  5496  02F8  084A               	movf	lutInit@position,w
  5497  02F9  00AF               	movwf	Map@x
  5498  02FA  0844               	movf	lutInit@lyMin,w
  5499  02FB  00B9               	movwf	??_lutInit
  5500  02FC  01BA               	clrf	??_lutInit+1
  5501  02FD  0839               	movf	??_lutInit,w
  5502  02FE  00B1               	movwf	Map@inMin
  5503  02FF  083A               	movf	??_lutInit+1,w
  5504  0300  00B2               	movwf	Map@inMin+1
  5505  0301  0845               	movf	lutInit@lyMax,w
  5506  0302  00BB               	movwf	??_lutInit+2
  5507  0303  01BC               	clrf	??_lutInit+3
  5508  0304  083B               	movf	??_lutInit+2,w
  5509  0305  00B3               	movwf	Map@inMax
  5510  0306  083C               	movf	??_lutInit+3,w
  5511  0307  00B4               	movwf	Map@inMax+1
  5512  0308  3000               	movlw	0
  5513  0309  00B5               	movwf	Map@outMin
  5514  030A  00B6               	movwf	Map@outMin+1
  5515  030B  30FF               	movlw	255
  5516  030C  00B7               	movwf	Map@outMax
  5517  030D  3000               	movlw	0
  5518  030E  00B8               	movwf	Map@outMax+1
  5519  030F  318E  266B  3182   	fcall	_Map
  5520  0312  0020               	movlb	0	; select bank0
  5521  0313  00BD               	movwf	??_lutInit+4
  5522  0314  30F0               	movlw	240
  5523  0315  00BE               	movwf	??_lutInit+5
  5524  0316  3025               	movlw	37
  5525  0317  00BF               	movwf	??_lutInit+6
  5526  0318  084A               	movf	lutInit@position,w
  5527  0319  073E               	addwf	??_lutInit+5,w
  5528  031A  00C0               	movwf	??_lutInit+7
  5529  031B  084B               	movf	lutInit@position+1,w
  5530  031C  3D3F               	addwfc	??_lutInit+6,w
  5531  031D  00C1               	movwf	??_lutInit+8
  5532  031E  0840               	movf	??_lutInit+7,w
  5533  031F  0086               	movwf	6
  5534  0320  0841               	movf	??_lutInit+8,w
  5535  0321  0087               	movwf	7
  5536  0322  083D               	movf	??_lutInit+4,w
  5537  0323  0081               	movwf	1
  5538  0324                     l2523:	
  5539                           
  5540                           ;Controller.c: 129: };Controller.c: 132: if (position < rxMin) {
  5541  0324  084B               	movf	lutInit@position+1,w
  5542  0325  3A80               	xorlw	128
  5543  0326  00B9               	movwf	??_lutInit
  5544  0327  3080               	movlw	128
  5545  0328  0239               	subwf	??_lutInit,w
  5546  0329  1D03               	skipz
  5547  032A  2B2D               	goto	u2155
  5548  032B  0846               	movf	lutInit@rxMin,w
  5549  032C  024A               	subwf	lutInit@position,w
  5550  032D                     u2155:	
  5551  032D  1803               	skipnc
  5552  032E  2B30               	goto	u2151
  5553  032F  2B31               	goto	u2150
  5554  0330                     u2151:	
  5555  0330  2B3E               	goto	l2527
  5556  0331                     u2150:	
  5557  0331                     l2525:	
  5558                           
  5559                           ;Controller.c: 133: lutRX[position] = 0;
  5560  0331  30F0               	movlw	240
  5561  0332  0020               	movlb	0	; select bank0
  5562  0333  00B9               	movwf	??_lutInit
  5563  0334  3024               	movlw	36
  5564  0335  00BA               	movwf	??_lutInit+1
  5565  0336  084A               	movf	lutInit@position,w
  5566  0337  0739               	addwf	??_lutInit,w
  5567  0338  0086               	movwf	6
  5568  0339  084B               	movf	lutInit@position+1,w
  5569  033A  3D3A               	addwfc	??_lutInit+1,w
  5570  033B  0087               	movwf	7
  5571  033C  0181               	clrf	1
  5572                           
  5573                           ;Controller.c: 134: } else if (position > rxMax) {
  5574  033D  2B8B               	goto	l2533
  5575  033E                     l2527:	
  5576  033E  0020               	movlb	0	; select bank0
  5577  033F  084B               	movf	lutInit@position+1,w
  5578  0340  3A80               	xorlw	128
  5579  0341  3C80               	sublw	128
  5580  0342  1D03               	skipz
  5581  0343  2B46               	goto	u2165
  5582  0344  084A               	movf	lutInit@position,w
  5583  0345  0247               	subwf	lutInit@rxMax,w
  5584  0346                     u2165:	
  5585  0346  1803               	skipnc
  5586  0347  2B49               	goto	u2161
  5587  0348  2B4A               	goto	u2160
  5588  0349                     u2161:	
  5589  0349  2B5C               	goto	l2531
  5590  034A                     u2160:	
  5591  034A                     l2529:	
  5592                           
  5593                           ;Controller.c: 135: lutRX[position] = 255;
  5594  034A  30F0               	movlw	240
  5595  034B  0020               	movlb	0	; select bank0
  5596  034C  00B9               	movwf	??_lutInit
  5597  034D  3024               	movlw	36
  5598  034E  00BA               	movwf	??_lutInit+1
  5599  034F  084A               	movf	lutInit@position,w
  5600  0350  0739               	addwf	??_lutInit,w
  5601  0351  00BB               	movwf	??_lutInit+2
  5602  0352  084B               	movf	lutInit@position+1,w
  5603  0353  3D3A               	addwfc	??_lutInit+1,w
  5604  0354  00BC               	movwf	??_lutInit+3
  5605  0355  083B               	movf	??_lutInit+2,w
  5606  0356  0086               	movwf	6
  5607  0357  083C               	movf	??_lutInit+3,w
  5608  0358  0087               	movwf	7
  5609  0359  30FF               	movlw	255
  5610  035A  0081               	movwf	1
  5611                           
  5612                           ;Controller.c: 137: } else {
  5613  035B  2B8B               	goto	l2533
  5614  035C                     l2531:	
  5615                           
  5616                           ;Controller.c: 138: lutRX[position] = Map(position, rxMin, rxMax, 0, 255);
  5617  035C  0020               	movlb	0	; select bank0
  5618  035D  084B               	movf	lutInit@position+1,w
  5619  035E  00B0               	movwf	Map@x+1
  5620  035F  084A               	movf	lutInit@position,w
  5621  0360  00AF               	movwf	Map@x
  5622  0361  0846               	movf	lutInit@rxMin,w
  5623  0362  00B9               	movwf	??_lutInit
  5624  0363  01BA               	clrf	??_lutInit+1
  5625  0364  0839               	movf	??_lutInit,w
  5626  0365  00B1               	movwf	Map@inMin
  5627  0366  083A               	movf	??_lutInit+1,w
  5628  0367  00B2               	movwf	Map@inMin+1
  5629  0368  0847               	movf	lutInit@rxMax,w
  5630  0369  00BB               	movwf	??_lutInit+2
  5631  036A  01BC               	clrf	??_lutInit+3
  5632  036B  083B               	movf	??_lutInit+2,w
  5633  036C  00B3               	movwf	Map@inMax
  5634  036D  083C               	movf	??_lutInit+3,w
  5635  036E  00B4               	movwf	Map@inMax+1
  5636  036F  3000               	movlw	0
  5637  0370  00B5               	movwf	Map@outMin
  5638  0371  00B6               	movwf	Map@outMin+1
  5639  0372  30FF               	movlw	255
  5640  0373  00B7               	movwf	Map@outMax
  5641  0374  3000               	movlw	0
  5642  0375  00B8               	movwf	Map@outMax+1
  5643  0376  318E  266B  3182   	fcall	_Map
  5644  0379  0020               	movlb	0	; select bank0
  5645  037A  00BD               	movwf	??_lutInit+4
  5646  037B  30F0               	movlw	240
  5647  037C  00BE               	movwf	??_lutInit+5
  5648  037D  3024               	movlw	36
  5649  037E  00BF               	movwf	??_lutInit+6
  5650  037F  084A               	movf	lutInit@position,w
  5651  0380  073E               	addwf	??_lutInit+5,w
  5652  0381  00C0               	movwf	??_lutInit+7
  5653  0382  084B               	movf	lutInit@position+1,w
  5654  0383  3D3F               	addwfc	??_lutInit+6,w
  5655  0384  00C1               	movwf	??_lutInit+8
  5656  0385  0840               	movf	??_lutInit+7,w
  5657  0386  0086               	movwf	6
  5658  0387  0841               	movf	??_lutInit+8,w
  5659  0388  0087               	movwf	7
  5660  0389  083D               	movf	??_lutInit+4,w
  5661  038A  0081               	movwf	1
  5662  038B                     l2533:	
  5663                           
  5664                           ;Controller.c: 139: };Controller.c: 142: if (position < ryMin) {
  5665  038B  084B               	movf	lutInit@position+1,w
  5666  038C  3A80               	xorlw	128
  5667  038D  00B9               	movwf	??_lutInit
  5668  038E  3080               	movlw	128
  5669  038F  0239               	subwf	??_lutInit,w
  5670  0390  1D03               	skipz
  5671  0391  2B94               	goto	u2175
  5672  0392  0848               	movf	lutInit@ryMin,w
  5673  0393  024A               	subwf	lutInit@position,w
  5674  0394                     u2175:	
  5675  0394  1803               	skipnc
  5676  0395  2B97               	goto	u2171
  5677  0396  2B98               	goto	u2170
  5678  0397                     u2171:	
  5679  0397  2BA5               	goto	l2537
  5680  0398                     u2170:	
  5681  0398                     l2535:	
  5682                           
  5683                           ;Controller.c: 143: lutRY[position] = 0;
  5684  0398  30F0               	movlw	240
  5685  0399  0020               	movlb	0	; select bank0
  5686  039A  00B9               	movwf	??_lutInit
  5687  039B  3023               	movlw	35
  5688  039C  00BA               	movwf	??_lutInit+1
  5689  039D  084A               	movf	lutInit@position,w
  5690  039E  0739               	addwf	??_lutInit,w
  5691  039F  0086               	movwf	6
  5692  03A0  084B               	movf	lutInit@position+1,w
  5693  03A1  3D3A               	addwfc	??_lutInit+1,w
  5694  03A2  0087               	movwf	7
  5695  03A3  0181               	clrf	1
  5696                           
  5697                           ;Controller.c: 144: } else if (position > ryMax) {
  5698  03A4  2BF2               	goto	l2543
  5699  03A5                     l2537:	
  5700  03A5  0020               	movlb	0	; select bank0
  5701  03A6  084B               	movf	lutInit@position+1,w
  5702  03A7  3A80               	xorlw	128
  5703  03A8  3C80               	sublw	128
  5704  03A9  1D03               	skipz
  5705  03AA  2BAD               	goto	u2185
  5706  03AB  084A               	movf	lutInit@position,w
  5707  03AC  0249               	subwf	lutInit@ryMax,w
  5708  03AD                     u2185:	
  5709  03AD  1803               	skipnc
  5710  03AE  2BB0               	goto	u2181
  5711  03AF  2BB1               	goto	u2180
  5712  03B0                     u2181:	
  5713  03B0  2BC3               	goto	l2541
  5714  03B1                     u2180:	
  5715  03B1                     l2539:	
  5716                           
  5717                           ;Controller.c: 145: lutRY[position] = 255;
  5718  03B1  30F0               	movlw	240
  5719  03B2  0020               	movlb	0	; select bank0
  5720  03B3  00B9               	movwf	??_lutInit
  5721  03B4  3023               	movlw	35
  5722  03B5  00BA               	movwf	??_lutInit+1
  5723  03B6  084A               	movf	lutInit@position,w
  5724  03B7  0739               	addwf	??_lutInit,w
  5725  03B8  00BB               	movwf	??_lutInit+2
  5726  03B9  084B               	movf	lutInit@position+1,w
  5727  03BA  3D3A               	addwfc	??_lutInit+1,w
  5728  03BB  00BC               	movwf	??_lutInit+3
  5729  03BC  083B               	movf	??_lutInit+2,w
  5730  03BD  0086               	movwf	6
  5731  03BE  083C               	movf	??_lutInit+3,w
  5732  03BF  0087               	movwf	7
  5733  03C0  30FF               	movlw	255
  5734  03C1  0081               	movwf	1
  5735                           
  5736                           ;Controller.c: 147: } else {
  5737  03C2  2BF2               	goto	l2543
  5738  03C3                     l2541:	
  5739                           
  5740                           ;Controller.c: 148: lutRY[position] = Map(position, ryMin, ryMax, 0, 255);
  5741  03C3  0020               	movlb	0	; select bank0
  5742  03C4  084B               	movf	lutInit@position+1,w
  5743  03C5  00B0               	movwf	Map@x+1
  5744  03C6  084A               	movf	lutInit@position,w
  5745  03C7  00AF               	movwf	Map@x
  5746  03C8  0848               	movf	lutInit@ryMin,w
  5747  03C9  00B9               	movwf	??_lutInit
  5748  03CA  01BA               	clrf	??_lutInit+1
  5749  03CB  0839               	movf	??_lutInit,w
  5750  03CC  00B1               	movwf	Map@inMin
  5751  03CD  083A               	movf	??_lutInit+1,w
  5752  03CE  00B2               	movwf	Map@inMin+1
  5753  03CF  0849               	movf	lutInit@ryMax,w
  5754  03D0  00BB               	movwf	??_lutInit+2
  5755  03D1  01BC               	clrf	??_lutInit+3
  5756  03D2  083B               	movf	??_lutInit+2,w
  5757  03D3  00B3               	movwf	Map@inMax
  5758  03D4  083C               	movf	??_lutInit+3,w
  5759  03D5  00B4               	movwf	Map@inMax+1
  5760  03D6  3000               	movlw	0
  5761  03D7  00B5               	movwf	Map@outMin
  5762  03D8  00B6               	movwf	Map@outMin+1
  5763  03D9  30FF               	movlw	255
  5764  03DA  00B7               	movwf	Map@outMax
  5765  03DB  3000               	movlw	0
  5766  03DC  00B8               	movwf	Map@outMax+1
  5767  03DD  318E  266B  3182   	fcall	_Map
  5768  03E0  0020               	movlb	0	; select bank0
  5769  03E1  00BD               	movwf	??_lutInit+4
  5770  03E2  30F0               	movlw	240
  5771  03E3  00BE               	movwf	??_lutInit+5
  5772  03E4  3023               	movlw	35
  5773  03E5  00BF               	movwf	??_lutInit+6
  5774  03E6  084A               	movf	lutInit@position,w
  5775  03E7  073E               	addwf	??_lutInit+5,w
  5776  03E8  00C0               	movwf	??_lutInit+7
  5777  03E9  084B               	movf	lutInit@position+1,w
  5778  03EA  3D3F               	addwfc	??_lutInit+6,w
  5779  03EB  00C1               	movwf	??_lutInit+8
  5780  03EC  0840               	movf	??_lutInit+7,w
  5781  03ED  0086               	movwf	6
  5782  03EE  0841               	movf	??_lutInit+8,w
  5783  03EF  0087               	movwf	7
  5784  03F0  083D               	movf	??_lutInit+4,w
  5785  03F1  0081               	movwf	1
  5786  03F2                     l2543:	
  5787  03F2  3001               	movlw	1
  5788  03F3  07CA               	addwf	lutInit@position,f
  5789  03F4  3000               	movlw	0
  5790  03F5  3DCB               	addwfc	lutInit@position+1,f
  5791  03F6                     l2545:	
  5792  03F6  084B               	movf	lutInit@position+1,w
  5793  03F7  3A80               	xorlw	128
  5794  03F8  00B9               	movwf	??_lutInit
  5795  03F9  3081               	movlw	129
  5796  03FA  0239               	subwf	??_lutInit,w
  5797  03FB  1D03               	skipz
  5798  03FC  2BFF               	goto	u2195
  5799  03FD  3000               	movlw	0
  5800  03FE  024A               	subwf	lutInit@position,w
  5801  03FF                     u2195:	
  5802  03FF  1C03               	skipc
  5803  0400  2C02               	goto	u2191
  5804  0401  2C03               	goto	u2190
  5805  0402                     u2191:	
  5806  0402  2A55               	goto	l2503
  5807  0403                     u2190:	
  5808  0403                     l298:	
  5809  0403  0008               	return
  5810  0404                     __end_of_lutInit:	
  5811                           
  5812                           	psect	text6
  5813  07ED                     __ptext6:	
  5814 ;; *************** function _eepromRead *****************
  5815 ;; Defined at:
  5816 ;;		line 31 in file "Nvm.c"
  5817 ;; Parameters:    Size  Location     Type
  5818 ;;  address         1    wreg     unsigned char 
  5819 ;; Auto vars:     Size  Location     Type
  5820 ;;  address         1    1[BANK0 ] unsigned char 
  5821 ;;  data            1    2[BANK0 ] unsigned char 
  5822 ;; Return value:  Size  Location     Type
  5823 ;;                  1    wreg      unsigned char 
  5824 ;; Registers used:
  5825 ;;		wreg
  5826 ;; Tracked objects:
  5827 ;;		On entry : 0/0
  5828 ;;		On exit  : 0/0
  5829 ;;		Unchanged: 0/0
  5830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5832 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5833 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5834 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5835 ;;Total ram usage:        3 bytes
  5836 ;; Hardware stack levels used:    1
  5837 ;; Hardware stack levels required when called:    3
  5838 ;; This function calls:
  5839 ;;		Nothing
  5840 ;; This function is called by:
  5841 ;;		_lutInit
  5842 ;; This function uses a non-reentrant model
  5843 ;;
  5844                           
  5845                           
  5846                           ;psect for function _eepromRead
  5847  07ED                     _eepromRead:	
  5848                           
  5849                           ;incstack = 0
  5850                           ; Regs used in _eepromRead: [wreg]
  5851                           ;eepromRead@address stored from wreg
  5852  07ED  0020               	movlb	0	; select bank0
  5853  07EE  00A1               	movwf	eepromRead@address
  5854  07EF                     l2399:	
  5855                           
  5856                           ;Nvm.c: 33: char data;;Nvm.c: 35: NVMCON1bits.NVMREGS = 1;
  5857  07EF  0030               	movlb	16	; select bank16
  5858  07F0  171E               	bsf	30,6	;volsfr
  5859  07F1                     l2401:	
  5860                           
  5861                           ;Nvm.c: 36: NVMADRH = 0xF0;
  5862  07F1  30F0               	movlw	240
  5863  07F2  009B               	movwf	27	;volatile
  5864                           
  5865                           ;Nvm.c: 37: NVMADRL = address;
  5866  07F3  0020               	movlb	0	; select bank0
  5867  07F4  0821               	movf	eepromRead@address,w
  5868  07F5  0030               	movlb	16	; select bank16
  5869  07F6  009A               	movwf	26	;volatile
  5870  07F7                     l2403:	
  5871                           
  5872                           ;Nvm.c: 38: NVMCON1bits.RD = 1;
  5873  07F7  141E               	bsf	30,0	;volsfr
  5874                           
  5875                           ;Nvm.c: 40: data = NVMDATL;
  5876  07F8  081C               	movf	28,w	;volatile
  5877  07F9  0020               	movlb	0	; select bank0
  5878  07FA  00A0               	movwf	??_eepromRead
  5879  07FB  0820               	movf	??_eepromRead,w
  5880  07FC  00A2               	movwf	eepromRead@data
  5881                           
  5882                           ;Nvm.c: 42: return data;
  5883  07FD  0822               	movf	eepromRead@data,w
  5884  07FE                     l409:	
  5885  07FE  0008               	return
  5886  07FF                     __end_of_eepromRead:	
  5887                           
  5888                           	psect	text7
  5889  0E6B                     __ptext7:	
  5890 ;; *************** function _Map *****************
  5891 ;; Defined at:
  5892 ;;		line 91 in file "Controller.c"
  5893 ;; Parameters:    Size  Location     Type
  5894 ;;  x               2   15[BANK0 ] int 
  5895 ;;  inMin           2   17[BANK0 ] int 
  5896 ;;  inMax           2   19[BANK0 ] int 
  5897 ;;  outMin          2   21[BANK0 ] int 
  5898 ;;  outMax          2   23[BANK0 ] int 
  5899 ;; Auto vars:     Size  Location     Type
  5900 ;;		None
  5901 ;; Return value:  Size  Location     Type
  5902 ;;                  1    wreg      unsigned char 
  5903 ;; Registers used:
  5904 ;;		wreg, status,2, status,0, pclath, cstack
  5905 ;; Tracked objects:
  5906 ;;		On entry : 0/0
  5907 ;;		On exit  : 0/0
  5908 ;;		Unchanged: 0/0
  5909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5910 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5913 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5914 ;;Total ram usage:       10 bytes
  5915 ;; Hardware stack levels used:    1
  5916 ;; Hardware stack levels required when called:    4
  5917 ;; This function calls:
  5918 ;;		___awdiv
  5919 ;;		___wmul
  5920 ;; This function is called by:
  5921 ;;		_lutInit
  5922 ;; This function uses a non-reentrant model
  5923 ;;
  5924                           
  5925                           
  5926                           ;psect for function _Map
  5927  0E6B                     _Map:	
  5928  0E6B                     l2395:	
  5929                           ;incstack = 0
  5930                           ; Regs used in _Map: [wreg+status,2+status,0+pclath+cstack]
  5931                           
  5932                           
  5933                           ;Controller.c: 93: return (((x - inMin) * (outMax - outMin)) / (inMax - inMin)) + outMin
      +                          ;
  5934  0E6B  0020               	movlb	0	; select bank0
  5935  0E6C  0831               	movf	Map@inMin,w
  5936  0E6D  0233               	subwf	Map@inMax,w
  5937  0E6E  00A6               	movwf	___awdiv@divisor
  5938  0E6F  0832               	movf	Map@inMin+1,w
  5939  0E70  3B34               	subwfb	Map@inMax+1,w
  5940  0E71  00A7               	movwf	___awdiv@divisor+1
  5941  0E72  0831               	movf	Map@inMin,w
  5942  0E73  022F               	subwf	Map@x,w
  5943  0E74  00A0               	movwf	___wmul@multiplier
  5944  0E75  0832               	movf	Map@inMin+1,w
  5945  0E76  3B30               	subwfb	Map@x+1,w
  5946  0E77  00A1               	movwf	___wmul@multiplier+1
  5947  0E78  0835               	movf	Map@outMin,w
  5948  0E79  0237               	subwf	Map@outMax,w
  5949  0E7A  00A2               	movwf	___wmul@multiplicand
  5950  0E7B  0836               	movf	Map@outMin+1,w
  5951  0E7C  3B38               	subwfb	Map@outMax+1,w
  5952  0E7D  00A3               	movwf	___wmul@multiplicand+1
  5953  0E7E  318E  264B  318E   	fcall	___wmul
  5954  0E81  0020               	movlb	0	; select bank0
  5955  0E82  0821               	movf	?___wmul+1,w
  5956  0E83  00A9               	movwf	___awdiv@dividend+1
  5957  0E84  0820               	movf	?___wmul,w
  5958  0E85  00A8               	movwf	___awdiv@dividend
  5959  0E86  318F  273B  318E   	fcall	___awdiv
  5960  0E89  0020               	movlb	0	; select bank0
  5961  0E8A  0826               	movf	?___awdiv,w
  5962  0E8B  0735               	addwf	Map@outMin,w
  5963  0E8C                     l277:	
  5964  0E8C  0008               	return
  5965  0E8D                     __end_of_Map:	
  5966                           
  5967                           	psect	text8
  5968  0E4B                     __ptext8:	
  5969 ;; *************** function ___wmul *****************
  5970 ;; Defined at:
  5971 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  5972 ;; Parameters:    Size  Location     Type
  5973 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5974 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5975 ;; Auto vars:     Size  Location     Type
  5976 ;;  product         2    4[BANK0 ] unsigned int 
  5977 ;; Return value:  Size  Location     Type
  5978 ;;                  2    0[BANK0 ] unsigned int 
  5979 ;; Registers used:
  5980 ;;		wreg, status,2, status,0
  5981 ;; Tracked objects:
  5982 ;;		On entry : 0/0
  5983 ;;		On exit  : 0/0
  5984 ;;		Unchanged: 0/0
  5985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5986 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5987 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5989 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5990 ;;Total ram usage:        6 bytes
  5991 ;; Hardware stack levels used:    1
  5992 ;; Hardware stack levels required when called:    3
  5993 ;; This function calls:
  5994 ;;		Nothing
  5995 ;; This function is called by:
  5996 ;;		_Map
  5997 ;; This function uses a non-reentrant model
  5998 ;;
  5999                           
  6000                           
  6001                           ;psect for function ___wmul
  6002  0E4B                     ___wmul:	
  6003  0E4B                     l2333:	
  6004                           ;incstack = 0
  6005                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6006                           
  6007  0E4B  0020               	movlb	0	; select bank0
  6008  0E4C  01A4               	clrf	___wmul@product
  6009  0E4D  01A5               	clrf	___wmul@product+1
  6010  0E4E                     l2335:	
  6011  0E4E  1C20               	btfss	___wmul@multiplier,0
  6012  0E4F  2E51               	goto	u1811
  6013  0E50  2E52               	goto	u1810
  6014  0E51                     u1811:	
  6015  0E51  2E56               	goto	l607
  6016  0E52                     u1810:	
  6017  0E52                     l2337:	
  6018  0E52  0822               	movf	___wmul@multiplicand,w
  6019  0E53  07A4               	addwf	___wmul@product,f
  6020  0E54  0823               	movf	___wmul@multiplicand+1,w
  6021  0E55  3DA5               	addwfc	___wmul@product+1,f
  6022  0E56                     l607:	
  6023  0E56  3001               	movlw	1
  6024  0E57                     u1825:	
  6025  0E57  35A2               	lslf	___wmul@multiplicand,f
  6026  0E58  0DA3               	rlf	___wmul@multiplicand+1,f
  6027  0E59  0B89               	decfsz	9,f
  6028  0E5A  2E57               	goto	u1825
  6029  0E5B                     l2339:	
  6030  0E5B  3001               	movlw	1
  6031  0E5C                     u1835:	
  6032  0E5C  36A1               	lsrf	___wmul@multiplier+1,f
  6033  0E5D  0CA0               	rrf	___wmul@multiplier,f
  6034  0E5E  0B89               	decfsz	9,f
  6035  0E5F  2E5C               	goto	u1835
  6036  0E60                     l2341:	
  6037  0E60  0820               	movf	___wmul@multiplier,w
  6038  0E61  0421               	iorwf	___wmul@multiplier+1,w
  6039  0E62  1D03               	btfss	3,2
  6040  0E63  2E65               	goto	u1841
  6041  0E64  2E66               	goto	u1840
  6042  0E65                     u1841:	
  6043  0E65  2E4E               	goto	l2335
  6044  0E66                     u1840:	
  6045  0E66                     l2343:	
  6046  0E66  0825               	movf	___wmul@product+1,w
  6047  0E67  00A1               	movwf	?___wmul+1
  6048  0E68  0824               	movf	___wmul@product,w
  6049  0E69  00A0               	movwf	?___wmul
  6050  0E6A                     l609:	
  6051  0E6A  0008               	return
  6052  0E6B                     __end_of___wmul:	
  6053                           
  6054                           	psect	text9
  6055  0F3B                     __ptext9:	
  6056 ;; *************** function ___awdiv *****************
  6057 ;; Defined at:
  6058 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  6059 ;; Parameters:    Size  Location     Type
  6060 ;;  divisor         2    6[BANK0 ] int 
  6061 ;;  dividend        2    8[BANK0 ] int 
  6062 ;; Auto vars:     Size  Location     Type
  6063 ;;  quotient        2   13[BANK0 ] int 
  6064 ;;  sign            1   12[BANK0 ] unsigned char 
  6065 ;;  counter         1   11[BANK0 ] unsigned char 
  6066 ;; Return value:  Size  Location     Type
  6067 ;;                  2    6[BANK0 ] int 
  6068 ;; Registers used:
  6069 ;;		wreg, status,2, status,0
  6070 ;; Tracked objects:
  6071 ;;		On entry : 0/0
  6072 ;;		On exit  : 0/0
  6073 ;;		Unchanged: 0/0
  6074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6075 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6076 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6077 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6078 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6079 ;;Total ram usage:        9 bytes
  6080 ;; Hardware stack levels used:    1
  6081 ;; Hardware stack levels required when called:    3
  6082 ;; This function calls:
  6083 ;;		Nothing
  6084 ;; This function is called by:
  6085 ;;		_Map
  6086 ;; This function uses a non-reentrant model
  6087 ;;
  6088                           
  6089                           
  6090                           ;psect for function ___awdiv
  6091  0F3B                     ___awdiv:	
  6092  0F3B                     l1739:	
  6093                           ;incstack = 0
  6094                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6095                           
  6096  0F3B  0020               	movlb	0	; select bank0
  6097  0F3C  01AC               	clrf	___awdiv@sign
  6098  0F3D                     l1741:	
  6099  0F3D  1FA7               	btfss	___awdiv@divisor+1,7
  6100  0F3E  2F40               	goto	u951
  6101  0F3F  2F41               	goto	u950
  6102  0F40                     u951:	
  6103  0F40  2F48               	goto	l1747
  6104  0F41                     u950:	
  6105  0F41                     l1743:	
  6106  0F41  09A6               	comf	___awdiv@divisor,f
  6107  0F42  09A7               	comf	___awdiv@divisor+1,f
  6108  0F43  0AA6               	incf	___awdiv@divisor,f
  6109  0F44  1903               	skipnz
  6110  0F45  0AA7               	incf	___awdiv@divisor+1,f
  6111  0F46                     l1745:	
  6112  0F46  01AC               	clrf	___awdiv@sign
  6113  0F47  0AAC               	incf	___awdiv@sign,f
  6114  0F48                     l1747:	
  6115  0F48  1FA9               	btfss	___awdiv@dividend+1,7
  6116  0F49  2F4B               	goto	u961
  6117  0F4A  2F4C               	goto	u960
  6118  0F4B                     u961:	
  6119  0F4B  2F55               	goto	l1753
  6120  0F4C                     u960:	
  6121  0F4C                     l1749:	
  6122  0F4C  09A8               	comf	___awdiv@dividend,f
  6123  0F4D  09A9               	comf	___awdiv@dividend+1,f
  6124  0F4E  0AA8               	incf	___awdiv@dividend,f
  6125  0F4F  1903               	skipnz
  6126  0F50  0AA9               	incf	___awdiv@dividend+1,f
  6127  0F51                     l1751:	
  6128  0F51  3001               	movlw	1
  6129  0F52  00AA               	movwf	??___awdiv
  6130  0F53  082A               	movf	??___awdiv,w
  6131  0F54  06AC               	xorwf	___awdiv@sign,f
  6132  0F55                     l1753:	
  6133  0F55  01AD               	clrf	___awdiv@quotient
  6134  0F56  01AE               	clrf	___awdiv@quotient+1
  6135  0F57                     l1755:	
  6136  0F57  0826               	movf	___awdiv@divisor,w
  6137  0F58  0427               	iorwf	___awdiv@divisor+1,w
  6138  0F59  1903               	btfsc	3,2
  6139  0F5A  2F5C               	goto	u971
  6140  0F5B  2F5D               	goto	u970
  6141  0F5C                     u971:	
  6142  0F5C  2F8C               	goto	l1775
  6143  0F5D                     u970:	
  6144  0F5D                     l1757:	
  6145  0F5D  01AB               	clrf	___awdiv@counter
  6146  0F5E  0AAB               	incf	___awdiv@counter,f
  6147  0F5F  2F69               	goto	l1763
  6148  0F60                     l1759:	
  6149  0F60  3001               	movlw	1
  6150  0F61                     u985:	
  6151  0F61  35A6               	lslf	___awdiv@divisor,f
  6152  0F62  0DA7               	rlf	___awdiv@divisor+1,f
  6153  0F63  0B89               	decfsz	9,f
  6154  0F64  2F61               	goto	u985
  6155  0F65                     l1761:	
  6156  0F65  3001               	movlw	1
  6157  0F66  00AA               	movwf	??___awdiv
  6158  0F67  082A               	movf	??___awdiv,w
  6159  0F68  07AB               	addwf	___awdiv@counter,f
  6160  0F69                     l1763:	
  6161  0F69  1FA7               	btfss	___awdiv@divisor+1,7
  6162  0F6A  2F6C               	goto	u991
  6163  0F6B  2F6D               	goto	u990
  6164  0F6C                     u991:	
  6165  0F6C  2F60               	goto	l1759
  6166  0F6D                     u990:	
  6167  0F6D                     l1765:	
  6168  0F6D  3001               	movlw	1
  6169  0F6E                     u1005:	
  6170  0F6E  35AD               	lslf	___awdiv@quotient,f
  6171  0F6F  0DAE               	rlf	___awdiv@quotient+1,f
  6172  0F70  0B89               	decfsz	9,f
  6173  0F71  2F6E               	goto	u1005
  6174  0F72  0827               	movf	___awdiv@divisor+1,w
  6175  0F73  0229               	subwf	___awdiv@dividend+1,w
  6176  0F74  1D03               	skipz
  6177  0F75  2F78               	goto	u1015
  6178  0F76  0826               	movf	___awdiv@divisor,w
  6179  0F77  0228               	subwf	___awdiv@dividend,w
  6180  0F78                     u1015:	
  6181  0F78  1C03               	skipc
  6182  0F79  2F7B               	goto	u1011
  6183  0F7A  2F7C               	goto	u1010
  6184  0F7B                     u1011:	
  6185  0F7B  2F81               	goto	l1771
  6186  0F7C                     u1010:	
  6187  0F7C                     l1767:	
  6188  0F7C  0826               	movf	___awdiv@divisor,w
  6189  0F7D  02A8               	subwf	___awdiv@dividend,f
  6190  0F7E  0827               	movf	___awdiv@divisor+1,w
  6191  0F7F  3BA9               	subwfb	___awdiv@dividend+1,f
  6192  0F80                     l1769:	
  6193  0F80  142D               	bsf	___awdiv@quotient,0
  6194  0F81                     l1771:	
  6195  0F81  3001               	movlw	1
  6196  0F82                     u1025:	
  6197  0F82  36A7               	lsrf	___awdiv@divisor+1,f
  6198  0F83  0CA6               	rrf	___awdiv@divisor,f
  6199  0F84  0B89               	decfsz	9,f
  6200  0F85  2F82               	goto	u1025
  6201  0F86                     l1773:	
  6202  0F86  3001               	movlw	1
  6203  0F87  02AB               	subwf	___awdiv@counter,f
  6204  0F88  1D03               	btfss	3,2
  6205  0F89  2F8B               	goto	u1031
  6206  0F8A  2F8C               	goto	u1030
  6207  0F8B                     u1031:	
  6208  0F8B  2F6D               	goto	l1765
  6209  0F8C                     u1030:	
  6210  0F8C                     l1775:	
  6211  0F8C  082C               	movf	___awdiv@sign,w
  6212  0F8D  1903               	btfsc	3,2
  6213  0F8E  2F90               	goto	u1041
  6214  0F8F  2F91               	goto	u1040
  6215  0F90                     u1041:	
  6216  0F90  2F96               	goto	l1779
  6217  0F91                     u1040:	
  6218  0F91                     l1777:	
  6219  0F91  09AD               	comf	___awdiv@quotient,f
  6220  0F92  09AE               	comf	___awdiv@quotient+1,f
  6221  0F93  0AAD               	incf	___awdiv@quotient,f
  6222  0F94  1903               	skipnz
  6223  0F95  0AAE               	incf	___awdiv@quotient+1,f
  6224  0F96                     l1779:	
  6225  0F96  082E               	movf	___awdiv@quotient+1,w
  6226  0F97  00A7               	movwf	?___awdiv+1
  6227  0F98  082D               	movf	___awdiv@quotient,w
  6228  0F99  00A6               	movwf	?___awdiv
  6229  0F9A                     l760:	
  6230  0F9A  0008               	return
  6231  0F9B                     __end_of___awdiv:	
  6232                           
  6233                           	psect	text10
  6234  0404                     __ptext10:	
  6235 ;; *************** function _configureController *****************
  6236 ;; Defined at:
  6237 ;;		line 182 in file "Controller.c"
  6238 ;; Parameters:    Size  Location     Type
  6239 ;;		None
  6240 ;; Auto vars:     Size  Location     Type
  6241 ;;  ry              1   21[BANK0 ] unsigned char 
  6242 ;;  rx              1   20[BANK0 ] unsigned char 
  6243 ;;  ly              1   19[BANK0 ] unsigned char 
  6244 ;;  lx              1   18[BANK0 ] unsigned char 
  6245 ;;  ryMax           1   17[BANK0 ] unsigned char 
  6246 ;;  ryMin           1   16[BANK0 ] unsigned char 
  6247 ;;  rxMax           1   15[BANK0 ] unsigned char 
  6248 ;;  rxMin           1   14[BANK0 ] unsigned char 
  6249 ;;  lyMax           1   13[BANK0 ] unsigned char 
  6250 ;;  lyMin           1   12[BANK0 ] unsigned char 
  6251 ;;  lxMax           1   11[BANK0 ] unsigned char 
  6252 ;;  lxMin           1   10[BANK0 ] unsigned char 
  6253 ;; Return value:  Size  Location     Type
  6254 ;;                  1    wreg      void 
  6255 ;; Registers used:
  6256 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6257 ;; Tracked objects:
  6258 ;;		On entry : 0/0
  6259 ;;		On exit  : 0/0
  6260 ;;		Unchanged: 0/0
  6261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6263 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6264 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6265 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6266 ;;Total ram usage:       13 bytes
  6267 ;; Hardware stack levels used:    1
  6268 ;; Hardware stack levels required when called:    5
  6269 ;; This function calls:
  6270 ;;		_eepromWrite
  6271 ;;		_readADC
  6272 ;;		_readController
  6273 ;; This function is called by:
  6274 ;;		_main
  6275 ;; This function uses a non-reentrant model
  6276 ;;
  6277                           
  6278                           
  6279                           ;psect for function _configureController
  6280  0404                     _configureController:	
  6281  0404                     l2547:	
  6282                           ;incstack = 0
  6283                           ; Regs used in _configureController: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6284                           
  6285                           
  6286                           ;Controller.c: 184: INTCONbits.GIE = 0;
  6287  0404  138B               	bcf	11,7	;volatile
  6288                           
  6289                           ;Controller.c: 185: INTCONbits.PEIE = 0;
  6290  0405  130B               	bcf	11,6	;volatile
  6291  0406                     l2549:	
  6292                           
  6293                           ;Controller.c: 187: char lxMin = readADC(0b10001);
  6294  0406  3011               	movlw	17
  6295  0407  0020               	movlb	0	; select bank0
  6296  0408  00A0               	movwf	readADC@channel
  6297  0409  3000               	movlw	0
  6298  040A  00A1               	movwf	readADC@channel+1
  6299  040B  318E  26DA  3184   	fcall	_readADC
  6300  040E  0020               	movlb	0	; select bank0
  6301  040F  0820               	movf	?_readADC,w
  6302  0410  00A9               	movwf	??_configureController
  6303  0411  0829               	movf	??_configureController,w
  6304  0412  00AA               	movwf	configureController@lxMin
  6305                           
  6306                           ;Controller.c: 188: char lxMax = readADC(0b10001);
  6307  0413  3011               	movlw	17
  6308  0414  00A0               	movwf	readADC@channel
  6309  0415  3000               	movlw	0
  6310  0416  00A1               	movwf	readADC@channel+1
  6311  0417  318E  26DA  3184   	fcall	_readADC
  6312  041A  0020               	movlb	0	; select bank0
  6313  041B  0820               	movf	?_readADC,w
  6314  041C  00A9               	movwf	??_configureController
  6315  041D  0829               	movf	??_configureController,w
  6316  041E  00AB               	movwf	configureController@lxMax
  6317                           
  6318                           ;Controller.c: 189: char lyMin = readADC(0b010000);
  6319  041F  3010               	movlw	16
  6320  0420  00A0               	movwf	readADC@channel
  6321  0421  3000               	movlw	0
  6322  0422  00A1               	movwf	readADC@channel+1
  6323  0423  318E  26DA  3184   	fcall	_readADC
  6324  0426  0020               	movlb	0	; select bank0
  6325  0427  0820               	movf	?_readADC,w
  6326  0428  00A9               	movwf	??_configureController
  6327  0429  0829               	movf	??_configureController,w
  6328  042A  00AC               	movwf	configureController@lyMin
  6329                           
  6330                           ;Controller.c: 190: char lyMax = readADC(0b010000);
  6331  042B  3010               	movlw	16
  6332  042C  00A0               	movwf	readADC@channel
  6333  042D  3000               	movlw	0
  6334  042E  00A1               	movwf	readADC@channel+1
  6335  042F  318E  26DA  3184   	fcall	_readADC
  6336  0432  0020               	movlb	0	; select bank0
  6337  0433  0820               	movf	?_readADC,w
  6338  0434  00A9               	movwf	??_configureController
  6339  0435  0829               	movf	??_configureController,w
  6340  0436  00AD               	movwf	configureController@lyMax
  6341                           
  6342                           ;Controller.c: 192: char rxMin = readADC(0b010110);
  6343  0437  3016               	movlw	22
  6344  0438  00A0               	movwf	readADC@channel
  6345  0439  3000               	movlw	0
  6346  043A  00A1               	movwf	readADC@channel+1
  6347  043B  318E  26DA  3184   	fcall	_readADC
  6348  043E  0020               	movlb	0	; select bank0
  6349  043F  0820               	movf	?_readADC,w
  6350  0440  00A9               	movwf	??_configureController
  6351  0441  0829               	movf	??_configureController,w
  6352  0442  00AE               	movwf	configureController@rxMin
  6353                           
  6354                           ;Controller.c: 193: char rxMax = readADC(0b010110);
  6355  0443  3016               	movlw	22
  6356  0444  00A0               	movwf	readADC@channel
  6357  0445  3000               	movlw	0
  6358  0446  00A1               	movwf	readADC@channel+1
  6359  0447  318E  26DA  3184   	fcall	_readADC
  6360  044A  0020               	movlb	0	; select bank0
  6361  044B  0820               	movf	?_readADC,w
  6362  044C  00A9               	movwf	??_configureController
  6363  044D  0829               	movf	??_configureController,w
  6364  044E  00AF               	movwf	configureController@rxMax
  6365                           
  6366                           ;Controller.c: 194: char ryMin = readADC(0b010111);
  6367  044F  3017               	movlw	23
  6368  0450  00A0               	movwf	readADC@channel
  6369  0451  3000               	movlw	0
  6370  0452  00A1               	movwf	readADC@channel+1
  6371  0453  318E  26DA  3184   	fcall	_readADC
  6372  0456  0020               	movlb	0	; select bank0
  6373  0457  0820               	movf	?_readADC,w
  6374  0458  00A9               	movwf	??_configureController
  6375  0459  0829               	movf	??_configureController,w
  6376  045A  00B0               	movwf	configureController@ryMin
  6377                           
  6378                           ;Controller.c: 195: char ryMax = readADC(0b010111);
  6379  045B  3017               	movlw	23
  6380  045C  00A0               	movwf	readADC@channel
  6381  045D  3000               	movlw	0
  6382  045E  00A1               	movwf	readADC@channel+1
  6383  045F  318E  26DA  3184   	fcall	_readADC
  6384  0462  0020               	movlb	0	; select bank0
  6385  0463  0820               	movf	?_readADC,w
  6386  0464  00A9               	movwf	??_configureController
  6387  0465  0829               	movf	??_configureController,w
  6388  0466  00B1               	movwf	configureController@ryMax
  6389  0467                     l2551:	
  6390                           
  6391                           ;Controller.c: 205: readController(0);
  6392  0467  3000               	movlw	0
  6393  0468  3185  2565  3184   	fcall	_readController
  6394  046B                     l2553:	
  6395                           
  6396                           ;Controller.c: 207: if (digitalStateFirst == 0x6F && digitalStateSecond == 0x3F) {
  6397  046B  306F               	movlw	111
  6398  046C  0020               	movlb	0	; select bank0
  6399  046D  0656               	xorwf	_digitalStateFirst,w
  6400  046E  1D03               	btfss	3,2
  6401  046F  2C71               	goto	u2201
  6402  0470  2C72               	goto	u2200
  6403  0471                     u2201:	
  6404  0471  2C8D               	goto	l2569
  6405  0472                     u2200:	
  6406  0472                     l2555:	
  6407  0472  303F               	movlw	63
  6408  0473  0655               	xorwf	_digitalStateSecond,w
  6409  0474  1D03               	btfss	3,2
  6410  0475  2C77               	goto	u2211
  6411  0476  2C78               	goto	u2210
  6412  0477                     u2211:	
  6413  0477  2C8D               	goto	l2569
  6414  0478                     u2210:	
  6415  0478                     l2557:	
  6416                           
  6417                           ;Controller.c: 210: lxMin = 0;
  6418  0478  01AA               	clrf	configureController@lxMin
  6419  0479                     l2559:	
  6420                           
  6421                           ;Controller.c: 211: lxMax = 255;
  6422  0479  30FF               	movlw	255
  6423  047A  00A9               	movwf	??_configureController
  6424  047B  0829               	movf	??_configureController,w
  6425  047C  00AB               	movwf	configureController@lxMax
  6426  047D                     l2561:	
  6427                           
  6428                           ;Controller.c: 212: lyMin = 0;
  6429  047D  01AC               	clrf	configureController@lyMin
  6430                           
  6431                           ;Controller.c: 213: lyMax = 255;
  6432  047E  30FF               	movlw	255
  6433  047F  00A9               	movwf	??_configureController
  6434  0480  0829               	movf	??_configureController,w
  6435  0481  00AD               	movwf	configureController@lyMax
  6436  0482                     l2563:	
  6437                           
  6438                           ;Controller.c: 215: rxMin = 0;
  6439  0482  01AE               	clrf	configureController@rxMin
  6440  0483                     l2565:	
  6441                           
  6442                           ;Controller.c: 216: rxMax = 255;
  6443  0483  30FF               	movlw	255
  6444  0484  00A9               	movwf	??_configureController
  6445  0485  0829               	movf	??_configureController,w
  6446  0486  00AF               	movwf	configureController@rxMax
  6447                           
  6448                           ;Controller.c: 217: ryMin = 0;
  6449  0487  01B0               	clrf	configureController@ryMin
  6450  0488                     l2567:	
  6451                           
  6452                           ;Controller.c: 218: ryMax = 255;
  6453  0488  30FF               	movlw	255
  6454  0489  00A9               	movwf	??_configureController
  6455  048A  0829               	movf	??_configureController,w
  6456  048B  00B1               	movwf	configureController@ryMax
  6457                           
  6458                           ;Controller.c: 220: break;
  6459  048C  2D1B               	goto	l2595
  6460  048D                     l2569:	
  6461                           
  6462                           ;Controller.c: 221: };Controller.c: 223: if (digitalStateFirst == 0x7F && digitalStateSe
      +                          cond == 0xCF) {
  6463  048D  307F               	movlw	127
  6464  048E  0656               	xorwf	_digitalStateFirst,w
  6465  048F  1D03               	btfss	3,2
  6466  0490  2C92               	goto	u2221
  6467  0491  2C93               	goto	u2220
  6468  0492                     u2221:	
  6469  0492  2C9A               	goto	l2575
  6470  0493                     u2220:	
  6471  0493                     l2571:	
  6472  0493  30CF               	movlw	207
  6473  0494  0655               	xorwf	_digitalStateSecond,w
  6474  0495  1D03               	btfss	3,2
  6475  0496  2C98               	goto	u2231
  6476  0497  2C99               	goto	u2230
  6477  0498                     u2231:	
  6478  0498  2C9A               	goto	l2575
  6479  0499                     u2230:	
  6480  0499  2D1B               	goto	l2595
  6481  049A                     l2575:	
  6482                           
  6483                           ;Controller.c: 226: };Controller.c: 228: lx = readADC(0b10001);
  6484  049A  3011               	movlw	17
  6485  049B  00A0               	movwf	readADC@channel
  6486  049C  3000               	movlw	0
  6487  049D  00A1               	movwf	readADC@channel+1
  6488  049E  318E  26DA  3184   	fcall	_readADC
  6489  04A1  0020               	movlb	0	; select bank0
  6490  04A2  0820               	movf	?_readADC,w
  6491  04A3  00A9               	movwf	??_configureController
  6492  04A4  0829               	movf	??_configureController,w
  6493  04A5  00B2               	movwf	configureController@lx
  6494                           
  6495                           ;Controller.c: 229: ly = readADC(0b010000);
  6496  04A6  3010               	movlw	16
  6497  04A7  00A0               	movwf	readADC@channel
  6498  04A8  3000               	movlw	0
  6499  04A9  00A1               	movwf	readADC@channel+1
  6500  04AA  318E  26DA  3184   	fcall	_readADC
  6501  04AD  0020               	movlb	0	; select bank0
  6502  04AE  0820               	movf	?_readADC,w
  6503  04AF  00A9               	movwf	??_configureController
  6504  04B0  0829               	movf	??_configureController,w
  6505  04B1  00B3               	movwf	configureController@ly
  6506                           
  6507                           ;Controller.c: 231: rx = readADC(0b010110);
  6508  04B2  3016               	movlw	22
  6509  04B3  00A0               	movwf	readADC@channel
  6510  04B4  3000               	movlw	0
  6511  04B5  00A1               	movwf	readADC@channel+1
  6512  04B6  318E  26DA  3184   	fcall	_readADC
  6513  04B9  0020               	movlb	0	; select bank0
  6514  04BA  0820               	movf	?_readADC,w
  6515  04BB  00A9               	movwf	??_configureController
  6516  04BC  0829               	movf	??_configureController,w
  6517  04BD  00B4               	movwf	configureController@rx
  6518                           
  6519                           ;Controller.c: 232: ry = readADC(0b010111);
  6520  04BE  3017               	movlw	23
  6521  04BF  00A0               	movwf	readADC@channel
  6522  04C0  3000               	movlw	0
  6523  04C1  00A1               	movwf	readADC@channel+1
  6524  04C2  318E  26DA  3184   	fcall	_readADC
  6525  04C5  0020               	movlb	0	; select bank0
  6526  04C6  0820               	movf	?_readADC,w
  6527  04C7  00A9               	movwf	??_configureController
  6528  04C8  0829               	movf	??_configureController,w
  6529  04C9  00B5               	movwf	configureController@ry
  6530  04CA                     l2577:	
  6531                           
  6532                           ;Controller.c: 235: if (ly > lyMax) {
  6533  04CA  0833               	movf	configureController@ly,w
  6534  04CB  022D               	subwf	configureController@lyMax,w
  6535  04CC  1803               	skipnc
  6536  04CD  2CCF               	goto	u2241
  6537  04CE  2CD0               	goto	u2240
  6538  04CF                     u2241:	
  6539  04CF  2CD4               	goto	l317
  6540  04D0                     u2240:	
  6541  04D0                     l2579:	
  6542                           
  6543                           ;Controller.c: 236: lyMax = ly;
  6544  04D0  0833               	movf	configureController@ly,w
  6545  04D1  00A9               	movwf	??_configureController
  6546  04D2  0829               	movf	??_configureController,w
  6547  04D3  00AD               	movwf	configureController@lyMax
  6548  04D4                     l317:	
  6549                           
  6550                           ;Controller.c: 237: };Controller.c: 239: if (ly < lyMin) {
  6551  04D4  082C               	movf	configureController@lyMin,w
  6552  04D5  0233               	subwf	configureController@ly,w
  6553  04D6  1803               	skipnc
  6554  04D7  2CD9               	goto	u2251
  6555  04D8  2CDA               	goto	u2250
  6556  04D9                     u2251:	
  6557  04D9  2CDE               	goto	l318
  6558  04DA                     u2250:	
  6559  04DA                     l2581:	
  6560                           
  6561                           ;Controller.c: 240: lyMin = ly;
  6562  04DA  0833               	movf	configureController@ly,w
  6563  04DB  00A9               	movwf	??_configureController
  6564  04DC  0829               	movf	??_configureController,w
  6565  04DD  00AC               	movwf	configureController@lyMin
  6566  04DE                     l318:	
  6567                           
  6568                           ;Controller.c: 241: };Controller.c: 243: if (lx > lxMax) {
  6569  04DE  0832               	movf	configureController@lx,w
  6570  04DF  022B               	subwf	configureController@lxMax,w
  6571  04E0  1803               	skipnc
  6572  04E1  2CE3               	goto	u2261
  6573  04E2  2CE4               	goto	u2260
  6574  04E3                     u2261:	
  6575  04E3  2CE8               	goto	l319
  6576  04E4                     u2260:	
  6577  04E4                     l2583:	
  6578                           
  6579                           ;Controller.c: 244: lxMax = lx;
  6580  04E4  0832               	movf	configureController@lx,w
  6581  04E5  00A9               	movwf	??_configureController
  6582  04E6  0829               	movf	??_configureController,w
  6583  04E7  00AB               	movwf	configureController@lxMax
  6584  04E8                     l319:	
  6585                           
  6586                           ;Controller.c: 245: };Controller.c: 247: if (lx < lxMin) {
  6587  04E8  082A               	movf	configureController@lxMin,w
  6588  04E9  0232               	subwf	configureController@lx,w
  6589  04EA  1803               	skipnc
  6590  04EB  2CED               	goto	u2271
  6591  04EC  2CEE               	goto	u2270
  6592  04ED                     u2271:	
  6593  04ED  2CF2               	goto	l320
  6594  04EE                     u2270:	
  6595  04EE                     l2585:	
  6596                           
  6597                           ;Controller.c: 248: lxMin = lx;
  6598  04EE  0832               	movf	configureController@lx,w
  6599  04EF  00A9               	movwf	??_configureController
  6600  04F0  0829               	movf	??_configureController,w
  6601  04F1  00AA               	movwf	configureController@lxMin
  6602  04F2                     l320:	
  6603                           
  6604                           ;Controller.c: 249: };Controller.c: 253: if (ry > ryMax) {
  6605  04F2  0835               	movf	configureController@ry,w
  6606  04F3  0231               	subwf	configureController@ryMax,w
  6607  04F4  1803               	skipnc
  6608  04F5  2CF7               	goto	u2281
  6609  04F6  2CF8               	goto	u2280
  6610  04F7                     u2281:	
  6611  04F7  2CFC               	goto	l321
  6612  04F8                     u2280:	
  6613  04F8                     l2587:	
  6614                           
  6615                           ;Controller.c: 254: ryMax = ry;
  6616  04F8  0835               	movf	configureController@ry,w
  6617  04F9  00A9               	movwf	??_configureController
  6618  04FA  0829               	movf	??_configureController,w
  6619  04FB  00B1               	movwf	configureController@ryMax
  6620  04FC                     l321:	
  6621                           
  6622                           ;Controller.c: 255: };Controller.c: 257: if (ry < ryMin) {
  6623  04FC  0830               	movf	configureController@ryMin,w
  6624  04FD  0235               	subwf	configureController@ry,w
  6625  04FE  1803               	skipnc
  6626  04FF  2D01               	goto	u2291
  6627  0500  2D02               	goto	u2290
  6628  0501                     u2291:	
  6629  0501  2D06               	goto	l322
  6630  0502                     u2290:	
  6631  0502                     l2589:	
  6632                           
  6633                           ;Controller.c: 258: ryMin = ry;
  6634  0502  0835               	movf	configureController@ry,w
  6635  0503  00A9               	movwf	??_configureController
  6636  0504  0829               	movf	??_configureController,w
  6637  0505  00B0               	movwf	configureController@ryMin
  6638  0506                     l322:	
  6639                           
  6640                           ;Controller.c: 259: };Controller.c: 261: if (rx > rxMax) {
  6641  0506  0834               	movf	configureController@rx,w
  6642  0507  022F               	subwf	configureController@rxMax,w
  6643  0508  1803               	skipnc
  6644  0509  2D0B               	goto	u2301
  6645  050A  2D0C               	goto	u2300
  6646  050B                     u2301:	
  6647  050B  2D10               	goto	l323
  6648  050C                     u2300:	
  6649  050C                     l2591:	
  6650                           
  6651                           ;Controller.c: 262: rxMax = rx;
  6652  050C  0834               	movf	configureController@rx,w
  6653  050D  00A9               	movwf	??_configureController
  6654  050E  0829               	movf	??_configureController,w
  6655  050F  00AF               	movwf	configureController@rxMax
  6656  0510                     l323:	
  6657                           
  6658                           ;Controller.c: 263: };Controller.c: 265: if (rx < rxMin) {
  6659  0510  082E               	movf	configureController@rxMin,w
  6660  0511  0234               	subwf	configureController@rx,w
  6661  0512  1803               	skipnc
  6662  0513  2D15               	goto	u2311
  6663  0514  2D16               	goto	u2310
  6664  0515                     u2311:	
  6665  0515  2C67               	goto	l2551
  6666  0516                     u2310:	
  6667  0516                     l2593:	
  6668                           
  6669                           ;Controller.c: 266: rxMin = rx;
  6670  0516  0834               	movf	configureController@rx,w
  6671  0517  00A9               	movwf	??_configureController
  6672  0518  0829               	movf	??_configureController,w
  6673  0519  00AE               	movwf	configureController@rxMin
  6674  051A  2C67               	goto	l2551
  6675  051B                     l2595:	
  6676                           
  6677                           ;Controller.c: 267: };Controller.c: 269: };Controller.c: 271: eepromWrite(0x60, lxMin);
  6678  051B  082A               	movf	configureController@lxMin,w
  6679  051C  00A9               	movwf	??_configureController
  6680  051D  0829               	movf	??_configureController,w
  6681  051E  00A0               	movwf	eepromWrite@data
  6682  051F  3060               	movlw	96
  6683  0520  318E  268D  3184   	fcall	_eepromWrite
  6684                           
  6685                           ;Controller.c: 272: eepromWrite(0x61, lxMax);
  6686  0523  0020               	movlb	0	; select bank0
  6687  0524  082B               	movf	configureController@lxMax,w
  6688  0525  00A9               	movwf	??_configureController
  6689  0526  0829               	movf	??_configureController,w
  6690  0527  00A0               	movwf	eepromWrite@data
  6691  0528  3061               	movlw	97
  6692  0529  318E  268D  3184   	fcall	_eepromWrite
  6693                           
  6694                           ;Controller.c: 273: eepromWrite(0x62, lyMin);
  6695  052C  0020               	movlb	0	; select bank0
  6696  052D  082C               	movf	configureController@lyMin,w
  6697  052E  00A9               	movwf	??_configureController
  6698  052F  0829               	movf	??_configureController,w
  6699  0530  00A0               	movwf	eepromWrite@data
  6700  0531  3062               	movlw	98
  6701  0532  318E  268D  3184   	fcall	_eepromWrite
  6702                           
  6703                           ;Controller.c: 274: eepromWrite(0x63, lyMax);
  6704  0535  0020               	movlb	0	; select bank0
  6705  0536  082D               	movf	configureController@lyMax,w
  6706  0537  00A9               	movwf	??_configureController
  6707  0538  0829               	movf	??_configureController,w
  6708  0539  00A0               	movwf	eepromWrite@data
  6709  053A  3063               	movlw	99
  6710  053B  318E  268D  3184   	fcall	_eepromWrite
  6711                           
  6712                           ;Controller.c: 276: eepromWrite(0x64, rxMin);
  6713  053E  0020               	movlb	0	; select bank0
  6714  053F  082E               	movf	configureController@rxMin,w
  6715  0540  00A9               	movwf	??_configureController
  6716  0541  0829               	movf	??_configureController,w
  6717  0542  00A0               	movwf	eepromWrite@data
  6718  0543  3064               	movlw	100
  6719  0544  318E  268D  3184   	fcall	_eepromWrite
  6720                           
  6721                           ;Controller.c: 277: eepromWrite(0x65, rxMax);
  6722  0547  0020               	movlb	0	; select bank0
  6723  0548  082F               	movf	configureController@rxMax,w
  6724  0549  00A9               	movwf	??_configureController
  6725  054A  0829               	movf	??_configureController,w
  6726  054B  00A0               	movwf	eepromWrite@data
  6727  054C  3065               	movlw	101
  6728  054D  318E  268D  3184   	fcall	_eepromWrite
  6729                           
  6730                           ;Controller.c: 278: eepromWrite(0x66, ryMin);
  6731  0550  0020               	movlb	0	; select bank0
  6732  0551  0830               	movf	configureController@ryMin,w
  6733  0552  00A9               	movwf	??_configureController
  6734  0553  0829               	movf	??_configureController,w
  6735  0554  00A0               	movwf	eepromWrite@data
  6736  0555  3066               	movlw	102
  6737  0556  318E  268D  3184   	fcall	_eepromWrite
  6738                           
  6739                           ;Controller.c: 279: eepromWrite(0x67, ryMax);
  6740  0559  0020               	movlb	0	; select bank0
  6741  055A  0831               	movf	configureController@ryMax,w
  6742  055B  00A9               	movwf	??_configureController
  6743  055C  0829               	movf	??_configureController,w
  6744  055D  00A0               	movwf	eepromWrite@data
  6745  055E  3067               	movlw	103
  6746  055F  318E  268D  3184   	fcall	_eepromWrite
  6747  0562                     l2597:	
  6748                           
  6749                           ;Controller.c: 281: INTCONbits.GIE = 1;
  6750  0562  178B               	bsf	11,7	;volatile
  6751  0563                     l2599:	
  6752                           
  6753                           ;Controller.c: 282: INTCONbits.PEIE = 1;
  6754  0563  170B               	bsf	11,6	;volatile
  6755  0564                     l326:	
  6756  0564  0008               	return
  6757  0565                     __end_of_configureController:	
  6758                           
  6759                           	psect	text11
  6760  0565                     __ptext11:	
  6761 ;; *************** function _readController *****************
  6762 ;; Defined at:
  6763 ;;		line 12 in file "Controller.c"
  6764 ;; Parameters:    Size  Location     Type
  6765 ;;  analogMode      1    wreg     unsigned char 
  6766 ;; Auto vars:     Size  Location     Type
  6767 ;;  analogMode      1    2[BANK0 ] unsigned char 
  6768 ;; Return value:  Size  Location     Type
  6769 ;;                  1    wreg      void 
  6770 ;; Registers used:
  6771 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6772 ;; Tracked objects:
  6773 ;;		On entry : 0/0
  6774 ;;		On exit  : 0/0
  6775 ;;		Unchanged: 0/0
  6776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6778 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6779 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6780 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6781 ;;Total ram usage:        3 bytes
  6782 ;; Hardware stack levels used:    1
  6783 ;; Hardware stack levels required when called:    3
  6784 ;; This function calls:
  6785 ;;		Nothing
  6786 ;; This function is called by:
  6787 ;;		_main
  6788 ;;		_configureController
  6789 ;; This function uses a non-reentrant model
  6790 ;;
  6791                           
  6792                           
  6793                           ;psect for function _readController
  6794  0565                     _readController:	
  6795                           
  6796                           ;incstack = 0
  6797                           ; Regs used in _readController: [wreg-fsr1h+status,2+status,0]
  6798                           ;readController@analogMode stored from wreg
  6799  0565  0020               	movlb	0	; select bank0
  6800  0566  00A2               	movwf	readController@analogMode
  6801  0567                     l2353:	
  6802                           
  6803                           ;Controller.c: 15: DigitalControllerByte1[DDown] = RA7;
  6804  0567  3000               	movlw	0
  6805  0568  1B8C               	btfsc	12,7	;volatile
  6806  0569  3001               	movlw	1
  6807  056A  0021               	movlb	1	; select bank1
  6808  056B  00C9               	movwf	(_DigitalControllerByte1^(0+128)+1)
  6809                           
  6810                           ;Controller.c: 16: DigitalControllerByte1[DUp] = RA6;
  6811  056C  3000               	movlw	0
  6812  056D  0020               	movlb	0	; select bank0
  6813  056E  1B0C               	btfsc	12,6	;volatile
  6814  056F  3001               	movlw	1
  6815  0570  0021               	movlb	1	; select bank1
  6816  0571  00CB               	movwf	(_DigitalControllerByte1^(0+128)+3)
  6817                           
  6818                           ;Controller.c: 17: DigitalControllerByte1[DLeft] = RB0;
  6819  0572  3000               	movlw	0
  6820  0573  0020               	movlb	0	; select bank0
  6821  0574  180D               	btfsc	13,0	;volatile
  6822  0575  3001               	movlw	1
  6823  0576  0021               	movlb	1	; select bank1
  6824  0577  00C8               	movwf	_DigitalControllerByte1^(0+128)
  6825                           
  6826                           ;Controller.c: 18: DigitalControllerByte1[DRight] = RB1;
  6827  0578  3000               	movlw	0
  6828  0579  0020               	movlb	0	; select bank0
  6829  057A  188D               	btfsc	13,1	;volatile
  6830  057B  3001               	movlw	1
  6831  057C  0021               	movlb	1	; select bank1
  6832  057D  00CA               	movwf	(_DigitalControllerByte1^(0+128)+2)
  6833                           
  6834                           ;Controller.c: 19: DigitalControllerByte1[R3] = RD0;
  6835  057E  3000               	movlw	0
  6836  057F  0020               	movlb	0	; select bank0
  6837  0580  180F               	btfsc	15,0	;volatile
  6838  0581  3001               	movlw	1
  6839  0582  0021               	movlb	1	; select bank1
  6840  0583  00CD               	movwf	(_DigitalControllerByte1^(0+128)+5)
  6841                           
  6842                           ;Controller.c: 20: DigitalControllerByte1[L3] = RC2;
  6843  0584  3000               	movlw	0
  6844  0585  0020               	movlb	0	; select bank0
  6845  0586  190E               	btfsc	14,2	;volatile
  6846  0587  3001               	movlw	1
  6847  0588  0021               	movlb	1	; select bank1
  6848  0589  00CE               	movwf	(_DigitalControllerByte1^(0+128)+6)
  6849                           
  6850                           ;Controller.c: 21: DigitalControllerByte1[Start] = RB6;
  6851  058A  3000               	movlw	0
  6852  058B  0020               	movlb	0	; select bank0
  6853  058C  1B0D               	btfsc	13,6	;volatile
  6854  058D  3001               	movlw	1
  6855  058E  0021               	movlb	1	; select bank1
  6856  058F  00CC               	movwf	(_DigitalControllerByte1^(0+128)+4)
  6857                           
  6858                           ;Controller.c: 22: DigitalControllerByte1[Select] = RB7;
  6859  0590  3000               	movlw	0
  6860  0591  0020               	movlb	0	; select bank0
  6861  0592  1B8D               	btfsc	13,7	;volatile
  6862  0593  3001               	movlw	1
  6863  0594  0021               	movlb	1	; select bank1
  6864  0595  00CF               	movwf	(_DigitalControllerByte1^(0+128)+7)
  6865                           
  6866                           ;Controller.c: 24: DigitalControllerByte2[Square] = RA0;
  6867  0596  3000               	movlw	0
  6868  0597  0020               	movlb	0	; select bank0
  6869  0598  180C               	btfsc	12,0	;volatile
  6870  0599  3001               	movlw	1
  6871  059A  0021               	movlb	1	; select bank1
  6872  059B  00C0               	movwf	_DigitalControllerByte2^(0+128)
  6873                           
  6874                           ;Controller.c: 25: DigitalControllerByte2[Circle] = RA3;
  6875  059C  3000               	movlw	0
  6876  059D  0020               	movlb	0	; select bank0
  6877  059E  198C               	btfsc	12,3	;volatile
  6878  059F  3001               	movlw	1
  6879  05A0  0021               	movlb	1	; select bank1
  6880  05A1  00C2               	movwf	(_DigitalControllerByte2^(0+128)+2)
  6881                           
  6882                           ;Controller.c: 26: DigitalControllerByte2[X] = RA2;
  6883  05A2  3000               	movlw	0
  6884  05A3  0020               	movlb	0	; select bank0
  6885  05A4  190C               	btfsc	12,2	;volatile
  6886  05A5  3001               	movlw	1
  6887  05A6  0021               	movlb	1	; select bank1
  6888  05A7  00C1               	movwf	(_DigitalControllerByte2^(0+128)+1)
  6889                           
  6890                           ;Controller.c: 27: DigitalControllerByte2[Triangle] = RA1;
  6891  05A8  3000               	movlw	0
  6892  05A9  0020               	movlb	0	; select bank0
  6893  05AA  188C               	btfsc	12,1	;volatile
  6894  05AB  3001               	movlw	1
  6895  05AC  0021               	movlb	1	; select bank1
  6896  05AD  00C3               	movwf	(_DigitalControllerByte2^(0+128)+3)
  6897                           
  6898                           ;Controller.c: 28: DigitalControllerByte2[R1] = RB4;
  6899  05AE  3000               	movlw	0
  6900  05AF  0020               	movlb	0	; select bank0
  6901  05B0  1A0D               	btfsc	13,4	;volatile
  6902  05B1  3001               	movlw	1
  6903  05B2  0021               	movlb	1	; select bank1
  6904  05B3  00C4               	movwf	(_DigitalControllerByte2^(0+128)+4)
  6905                           
  6906                           ;Controller.c: 29: DigitalControllerByte2[R2] = RB5;
  6907  05B4  3000               	movlw	0
  6908  05B5  0020               	movlb	0	; select bank0
  6909  05B6  1A8D               	btfsc	13,5	;volatile
  6910  05B7  3001               	movlw	1
  6911  05B8  0021               	movlb	1	; select bank1
  6912  05B9  00C6               	movwf	(_DigitalControllerByte2^(0+128)+6)
  6913                           
  6914                           ;Controller.c: 30: DigitalControllerByte2[L1] = RB2;
  6915  05BA  3000               	movlw	0
  6916  05BB  0020               	movlb	0	; select bank0
  6917  05BC  190D               	btfsc	13,2	;volatile
  6918  05BD  3001               	movlw	1
  6919  05BE  0021               	movlb	1	; select bank1
  6920  05BF  00C5               	movwf	(_DigitalControllerByte2^(0+128)+5)
  6921                           
  6922                           ;Controller.c: 31: DigitalControllerByte2[L2] = RB3;
  6923  05C0  3000               	movlw	0
  6924  05C1  0020               	movlb	0	; select bank0
  6925  05C2  198D               	btfsc	13,3	;volatile
  6926  05C3  3001               	movlw	1
  6927  05C4  0021               	movlb	1	; select bank1
  6928  05C5  00C7               	movwf	(_DigitalControllerByte2^(0+128)+7)
  6929  05C6                     l2355:	
  6930                           
  6931                           ;Controller.c: 34: if (index > Select) {
  6932  05C6  3008               	movlw	8
  6933  05C7  027A               	subwf	_index,w
  6934  05C8  1C03               	skipc
  6935  05C9  2DCB               	goto	u1901
  6936  05CA  2DCC               	goto	u1900
  6937  05CB                     u1901:	
  6938  05CB  2DCD               	goto	l2359
  6939  05CC                     u1900:	
  6940  05CC                     l2357:	
  6941                           
  6942                           ;Controller.c: 35: index = 0;
  6943  05CC  01FA               	clrf	_index
  6944  05CD                     l2359:	
  6945                           
  6946                           ;Controller.c: 36: };Controller.c: 39: if (!DigitalControllerByte1[index]) {
  6947  05CD  087A               	movf	_index,w
  6948  05CE  3EC8               	addlw	(low (_DigitalControllerByte1| 0))& (0+255)
  6949  05CF  0086               	movwf	6
  6950  05D0  0187               	clrf	7
  6951  05D1  0801               	movf	1,w
  6952  05D2  1D03               	btfss	3,2
  6953  05D3  2DD5               	goto	u1911
  6954  05D4  2DD6               	goto	u1910
  6955  05D5                     u1911:	
  6956  05D5  2DDF               	goto	l264
  6957  05D6                     u1910:	
  6958  05D6                     l2361:	
  6959                           
  6960                           ;Controller.c: 40: IndexDigitalByte1[index]++;
  6961  05D6  3001               	movlw	1
  6962  05D7  0020               	movlb	0	; select bank0
  6963  05D8  00A0               	movwf	??_readController
  6964  05D9  087A               	movf	_index,w
  6965  05DA  3EA8               	addlw	(low (_IndexDigitalByte1| 0))& (0+255)
  6966  05DB  0086               	movwf	6
  6967  05DC  0187               	clrf	7
  6968  05DD  0820               	movf	??_readController,w
  6969  05DE  0781               	addwf	1,f
  6970  05DF                     l264:	
  6971                           
  6972                           ;Controller.c: 41: };Controller.c: 42: if (!DigitalControllerByte2[index]) {
  6973  05DF  087A               	movf	_index,w
  6974  05E0  3EC0               	addlw	(low (_DigitalControllerByte2| 0))& (0+255)
  6975  05E1  0086               	movwf	6
  6976  05E2  0187               	clrf	7
  6977  05E3  0801               	movf	1,w
  6978  05E4  1D03               	btfss	3,2
  6979  05E5  2DE7               	goto	u1921
  6980  05E6  2DE8               	goto	u1920
  6981  05E7                     u1921:	
  6982  05E7  2DF1               	goto	l2365
  6983  05E8                     u1920:	
  6984  05E8                     l2363:	
  6985                           
  6986                           ;Controller.c: 43: IndexDigitalByte2[index]++;
  6987  05E8  3001               	movlw	1
  6988  05E9  0020               	movlb	0	; select bank0
  6989  05EA  00A0               	movwf	??_readController
  6990  05EB  087A               	movf	_index,w
  6991  05EC  3EA0               	addlw	(low (_IndexDigitalByte2| 0))& (0+255)
  6992  05ED  0086               	movwf	6
  6993  05EE  0187               	clrf	7
  6994  05EF  0820               	movf	??_readController,w
  6995  05F0  0781               	addwf	1,f
  6996  05F1                     l2365:	
  6997                           
  6998                           ;Controller.c: 44: };Controller.c: 47: if (DigitalControllerByte1[index] ^ PreviousDigit
      +                          alByte1[index]) {
  6999  05F1  087A               	movf	_index,w
  7000  05F2  3EB8               	addlw	(low (_PreviousDigitalByte1| 0))& (0+255)
  7001  05F3  0086               	movwf	6
  7002  05F4  0187               	clrf	7
  7003  05F5  087A               	movf	_index,w
  7004  05F6  3EC8               	addlw	(low (_DigitalControllerByte1| 0))& (0+255)
  7005  05F7  0084               	movwf	4
  7006  05F8  0185               	clrf	5
  7007  05F9  0800               	movf	0,w
  7008  05FA  0601               	xorwf	1,w
  7009  05FB  1903               	btfsc	3,2
  7010  05FC  2DFE               	goto	u1931
  7011  05FD  2DFF               	goto	u1930
  7012  05FE                     u1931:	
  7013  05FE  2E1A               	goto	l2375
  7014  05FF                     u1930:	
  7015  05FF                     l2367:	
  7016                           
  7017                           ;Controller.c: 48: IndexDigitalByte1[index] = 0;
  7018  05FF  087A               	movf	_index,w
  7019  0600  3EA8               	addlw	(low (_IndexDigitalByte1| 0))& (0+255)
  7020  0601  0086               	movwf	6
  7021  0602  0187               	clrf	7
  7022  0603  0181               	clrf	1
  7023  0604                     l2369:	
  7024                           
  7025                           ;Controller.c: 49: digitalStateFirst |= 1 << index;
  7026  0604  3001               	movlw	1
  7027  0605  0020               	movlb	0	; select bank0
  7028  0606  00A0               	movwf	??_readController
  7029  0607  0A7A               	incf	_index,w
  7030  0608  2E0A               	goto	u1944
  7031  0609                     u1945:	
  7032  0609  35A0               	lslf	??_readController,f
  7033  060A                     u1944:	
  7034  060A  0B89               	decfsz	9,f
  7035  060B  2E09               	goto	u1945
  7036  060C  0820               	movf	??_readController,w
  7037  060D  00A1               	movwf	??_readController+1
  7038  060E  0821               	movf	??_readController+1,w
  7039  060F  04D6               	iorwf	_digitalStateFirst,f
  7040  0610                     l2371:	
  7041                           
  7042                           ;Controller.c: 51: if (analogMode >= 1) {
  7043  0610  0822               	movf	readController@analogMode,w
  7044  0611  1903               	btfsc	3,2
  7045  0612  2E14               	goto	u1951
  7046  0613  2E15               	goto	u1950
  7047  0614                     u1951:	
  7048  0614  2E1A               	goto	l2375
  7049  0615                     u1950:	
  7050  0615                     l2373:	
  7051                           
  7052                           ;Controller.c: 52: analogStateFirst[index] = 0x00;
  7053  0615  087A               	movf	_index,w
  7054  0616  3ED8               	addlw	(low (_analogStateFirst| 0))& (0+255)
  7055  0617  0086               	movwf	6
  7056  0618  0187               	clrf	7
  7057  0619  0181               	clrf	1
  7058  061A                     l2375:	
  7059                           
  7060                           ;Controller.c: 53: };Controller.c: 55: };Controller.c: 56: if (DigitalControllerByte2[in
      +                          dex] ^ PreviousDigitalByte2[index]) {
  7061  061A  087A               	movf	_index,w
  7062  061B  3EB0               	addlw	(low (_PreviousDigitalByte2| 0))& (0+255)
  7063  061C  0086               	movwf	6
  7064  061D  0187               	clrf	7
  7065  061E  087A               	movf	_index,w
  7066  061F  3EC0               	addlw	(low (_DigitalControllerByte2| 0))& (0+255)
  7067  0620  0084               	movwf	4
  7068  0621  0185               	clrf	5
  7069  0622  0800               	movf	0,w
  7070  0623  0601               	xorwf	1,w
  7071  0624  1903               	btfsc	3,2
  7072  0625  2E27               	goto	u1961
  7073  0626  2E28               	goto	u1960
  7074  0627                     u1961:	
  7075  0627  2E43               	goto	l268
  7076  0628                     u1960:	
  7077  0628                     l2377:	
  7078                           
  7079                           ;Controller.c: 57: IndexDigitalByte2[index] = 0;
  7080  0628  087A               	movf	_index,w
  7081  0629  3EA0               	addlw	(low (_IndexDigitalByte2| 0))& (0+255)
  7082  062A  0086               	movwf	6
  7083  062B  0187               	clrf	7
  7084  062C  0181               	clrf	1
  7085  062D                     l2379:	
  7086                           
  7087                           ;Controller.c: 58: digitalStateSecond |= 1 << index;
  7088  062D  3001               	movlw	1
  7089  062E  0020               	movlb	0	; select bank0
  7090  062F  00A0               	movwf	??_readController
  7091  0630  0A7A               	incf	_index,w
  7092  0631  2E33               	goto	u1974
  7093  0632                     u1975:	
  7094  0632  35A0               	lslf	??_readController,f
  7095  0633                     u1974:	
  7096  0633  0B89               	decfsz	9,f
  7097  0634  2E32               	goto	u1975
  7098  0635  0820               	movf	??_readController,w
  7099  0636  00A1               	movwf	??_readController+1
  7100  0637  0821               	movf	??_readController+1,w
  7101  0638  04D5               	iorwf	_digitalStateSecond,f
  7102  0639                     l2381:	
  7103                           
  7104                           ;Controller.c: 60: if (analogMode >= 1) {
  7105  0639  0822               	movf	readController@analogMode,w
  7106  063A  1903               	btfsc	3,2
  7107  063B  2E3D               	goto	u1981
  7108  063C  2E3E               	goto	u1980
  7109  063D                     u1981:	
  7110  063D  2E43               	goto	l268
  7111  063E                     u1980:	
  7112  063E                     l2383:	
  7113                           
  7114                           ;Controller.c: 61: analogStateSecond[index] = 0x00;
  7115  063E  087A               	movf	_index,w
  7116  063F  3ED0               	addlw	(low (_analogStateSecond| 0))& (0+255)
  7117  0640  0086               	movwf	6
  7118  0641  0187               	clrf	7
  7119  0642  0181               	clrf	1
  7120  0643                     l268:	
  7121  0643  087A               	movf	_index,w
  7122  0644  3EA8               	addlw	(low (_IndexDigitalByte1| 0))& (0+255)
  7123  0645  0086               	movwf	6
  7124  0646  0187               	clrf	7
  7125  0647  3003               	movlw	3
  7126  0648  0201               	subwf	1,w
  7127  0649  1C03               	skipc
  7128  064A  2E4C               	goto	u1991
  7129  064B  2E4D               	goto	u1990
  7130  064C                     u1991:	
  7131  064C  2E67               	goto	l270
  7132  064D                     u1990:	
  7133  064D                     l2385:	
  7134                           
  7135                           ;Controller.c: 68: digitalStateFirst &= ~(1 << index);
  7136  064D  3001               	movlw	1
  7137  064E  0020               	movlb	0	; select bank0
  7138  064F  00A0               	movwf	??_readController
  7139  0650  0A7A               	incf	_index,w
  7140  0651  2E53               	goto	u2004
  7141  0652                     u2005:	
  7142  0652  35A0               	lslf	??_readController,f
  7143  0653                     u2004:	
  7144  0653  0B89               	decfsz	9,f
  7145  0654  2E52               	goto	u2005
  7146  0655  0820               	movf	??_readController,w
  7147  0656  3AFF               	xorlw	255
  7148  0657  00A1               	movwf	??_readController+1
  7149  0658  0821               	movf	??_readController+1,w
  7150  0659  05D6               	andwf	_digitalStateFirst,f
  7151                           
  7152                           ;Controller.c: 70: if (analogMode >= 1) {
  7153  065A  0822               	movf	readController@analogMode,w
  7154  065B  1903               	btfsc	3,2
  7155  065C  2E5E               	goto	u2011
  7156  065D  2E5F               	goto	u2010
  7157  065E                     u2011:	
  7158  065E  2E67               	goto	l270
  7159  065F                     u2010:	
  7160  065F                     l2387:	
  7161                           
  7162                           ;Controller.c: 71: analogStateFirst[index] = 0xFF;
  7163  065F  30FF               	movlw	255
  7164  0660  00A0               	movwf	??_readController
  7165  0661  087A               	movf	_index,w
  7166  0662  3ED8               	addlw	(low (_analogStateFirst| 0))& (0+255)
  7167  0663  0086               	movwf	6
  7168  0664  0187               	clrf	7
  7169  0665  0820               	movf	??_readController,w
  7170  0666  0081               	movwf	1
  7171  0667                     l270:	
  7172  0667  087A               	movf	_index,w
  7173  0668  3EA0               	addlw	(low (_IndexDigitalByte2| 0))& (0+255)
  7174  0669  0086               	movwf	6
  7175  066A  0187               	clrf	7
  7176  066B  3003               	movlw	3
  7177  066C  0201               	subwf	1,w
  7178  066D  1C03               	skipc
  7179  066E  2E70               	goto	u2021
  7180  066F  2E71               	goto	u2020
  7181  0670                     u2021:	
  7182  0670  2E8B               	goto	l272
  7183  0671                     u2020:	
  7184  0671                     l2389:	
  7185                           
  7186                           ;Controller.c: 76: digitalStateSecond &= ~(1 << index);
  7187  0671  3001               	movlw	1
  7188  0672  0020               	movlb	0	; select bank0
  7189  0673  00A0               	movwf	??_readController
  7190  0674  0A7A               	incf	_index,w
  7191  0675  2E77               	goto	u2034
  7192  0676                     u2035:	
  7193  0676  35A0               	lslf	??_readController,f
  7194  0677                     u2034:	
  7195  0677  0B89               	decfsz	9,f
  7196  0678  2E76               	goto	u2035
  7197  0679  0820               	movf	??_readController,w
  7198  067A  3AFF               	xorlw	255
  7199  067B  00A1               	movwf	??_readController+1
  7200  067C  0821               	movf	??_readController+1,w
  7201  067D  05D5               	andwf	_digitalStateSecond,f
  7202                           
  7203                           ;Controller.c: 78: if (analogMode >= 1) {
  7204  067E  0822               	movf	readController@analogMode,w
  7205  067F  1903               	btfsc	3,2
  7206  0680  2E82               	goto	u2041
  7207  0681  2E83               	goto	u2040
  7208  0682                     u2041:	
  7209  0682  2E8B               	goto	l272
  7210  0683                     u2040:	
  7211  0683                     l2391:	
  7212                           
  7213                           ;Controller.c: 79: analogStateSecond[index] = 0xFF;
  7214  0683  30FF               	movlw	255
  7215  0684  00A0               	movwf	??_readController
  7216  0685  087A               	movf	_index,w
  7217  0686  3ED0               	addlw	(low (_analogStateSecond| 0))& (0+255)
  7218  0687  0086               	movwf	6
  7219  0688  0187               	clrf	7
  7220  0689  0820               	movf	??_readController,w
  7221  068A  0081               	movwf	1
  7222  068B                     l272:	
  7223                           
  7224                           ;Controller.c: 80: };Controller.c: 82: };Controller.c: 85: PreviousDigitalByte1[index] =
      +                           DigitalControllerByte1[index];
  7225  068B  087A               	movf	_index,w
  7226  068C  3EC8               	addlw	(low (_DigitalControllerByte1| 0))& (0+255)
  7227  068D  0086               	movwf	6
  7228  068E  0187               	clrf	7
  7229  068F  0801               	movf	1,w
  7230  0690  0020               	movlb	0	; select bank0
  7231  0691  00A0               	movwf	??_readController
  7232  0692  087A               	movf	_index,w
  7233  0693  3EB8               	addlw	(low (_PreviousDigitalByte1| 0))& (0+255)
  7234  0694  0086               	movwf	6
  7235  0695  0187               	clrf	7
  7236  0696  0820               	movf	??_readController,w
  7237  0697  0081               	movwf	1
  7238                           
  7239                           ;Controller.c: 86: PreviousDigitalByte2[index] = DigitalControllerByte2[index];
  7240  0698  087A               	movf	_index,w
  7241  0699  3EC0               	addlw	(low (_DigitalControllerByte2| 0))& (0+255)
  7242  069A  0086               	movwf	6
  7243  069B  0187               	clrf	7
  7244  069C  0801               	movf	1,w
  7245  069D  00A0               	movwf	??_readController
  7246  069E  087A               	movf	_index,w
  7247  069F  3EB0               	addlw	(low (_PreviousDigitalByte2| 0))& (0+255)
  7248  06A0  0086               	movwf	6
  7249  06A1  0187               	clrf	7
  7250  06A2  0820               	movf	??_readController,w
  7251  06A3  0081               	movwf	1
  7252  06A4                     l2393:	
  7253                           
  7254                           ;Controller.c: 88: index++;
  7255  06A4  3001               	movlw	1
  7256  06A5  00A0               	movwf	??_readController
  7257  06A6  0820               	movf	??_readController,w
  7258  06A7  07FA               	addwf	_index,f
  7259  06A8                     l274:	
  7260  06A8  0008               	return
  7261  06A9                     __end_of_readController:	
  7262                           
  7263                           	psect	text12
  7264  0EDA                     __ptext12:	
  7265 ;; *************** function _readADC *****************
  7266 ;; Defined at:
  7267 ;;		line 154 in file "Controller.c"
  7268 ;; Parameters:    Size  Location     Type
  7269 ;;  channel         2    0[BANK0 ] int 
  7270 ;; Auto vars:     Size  Location     Type
  7271 ;;		None
  7272 ;; Return value:  Size  Location     Type
  7273 ;;                  2    0[BANK0 ] unsigned int 
  7274 ;; Registers used:
  7275 ;;		wreg, status,2, status,0
  7276 ;; Tracked objects:
  7277 ;;		On entry : 0/0
  7278 ;;		On exit  : 0/0
  7279 ;;		Unchanged: 0/0
  7280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7281 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7283 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7284 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7285 ;;Total ram usage:        9 bytes
  7286 ;; Hardware stack levels used:    1
  7287 ;; Hardware stack levels required when called:    3
  7288 ;; This function calls:
  7289 ;;		Nothing
  7290 ;; This function is called by:
  7291 ;;		_readControllerAnalog
  7292 ;;		_configureController
  7293 ;; This function uses a non-reentrant model
  7294 ;;
  7295                           
  7296                           
  7297                           ;psect for function _readADC
  7298  0EDA                     _readADC:	
  7299  0EDA                     l2407:	
  7300                           ;incstack = 0
  7301                           ; Regs used in _readADC: [wreg+status,2+status,0]
  7302                           
  7303                           
  7304                           ;Controller.c: 155: ADPCH = channel;
  7305  0EDA  0020               	movlb	0	; select bank0
  7306  0EDB  0820               	movf	readADC@channel,w
  7307  0EDC  0021               	movlb	1	; select bank1
  7308  0EDD  009E               	movwf	30	;volatile
  7309  0EDE                     l2409:	
  7310                           
  7311                           ;Controller.c: 156: ADPRE = 0x00;
  7312  0EDE  019C               	clrf	28	;volatile
  7313  0EDF                     l2411:	
  7314                           
  7315                           ;Controller.c: 157: ADACQ = 0x3F;
  7316  0EDF  303F               	movlw	63
  7317  0EE0  009D               	movwf	29	;volatile
  7318  0EE1                     l2413:	
  7319                           
  7320                           ;Controller.c: 159: ADCON0bits.ADGO = 1;
  7321  0EE1  1413               	bsf	19,0	;volatile
  7322  0EE2                     l301:	
  7323                           ;Controller.c: 160: while (ADCON0bits.ADGO);
  7324                           
  7325  0EE2  1813               	btfsc	19,0	;volatile
  7326  0EE3  2EE5               	goto	u2051
  7327  0EE4  2EE6               	goto	u2050
  7328  0EE5                     u2051:	
  7329  0EE5  2EE2               	goto	l301
  7330  0EE6                     u2050:	
  7331  0EE6                     l2415:	
  7332                           
  7333                           ;Controller.c: 162: return ((ADRESH << 6) | (ADRESL >> 2));
  7334  0EE6  080C               	movf	12,w	;volatile
  7335  0EE7  0020               	movlb	0	; select bank0
  7336  0EE8  00A2               	movwf	??_readADC
  7337  0EE9  3002               	movlw	2
  7338  0EEA                     u2065:	
  7339  0EEA  36A2               	lsrf	??_readADC,f
  7340  0EEB  0B89               	decfsz	9,f
  7341  0EEC  2EEA               	goto	u2065
  7342  0EED  0822               	movf	??_readADC,w
  7343  0EEE  00A3               	movwf	??_readADC+1
  7344  0EEF  01A4               	clrf	??_readADC+2
  7345  0EF0  0021               	movlb	1	; select bank1
  7346  0EF1  080D               	movf	13,w	;volatile
  7347  0EF2  0020               	movlb	0	; select bank0
  7348  0EF3  00A5               	movwf	??_readADC+3
  7349  0EF4  01A6               	clrf	??_readADC+4
  7350  0EF5  3006               	movlw	6
  7351  0EF6                     u2075:	
  7352  0EF6  35A5               	lslf	??_readADC+3,f
  7353  0EF7  0DA6               	rlf	??_readADC+4,f
  7354  0EF8  0B89               	decfsz	9,f
  7355  0EF9  2EF6               	goto	u2075
  7356  0EFA  0823               	movf	??_readADC+1,w
  7357  0EFB  0425               	iorwf	??_readADC+3,w
  7358  0EFC  00A7               	movwf	??_readADC+5
  7359  0EFD  0824               	movf	??_readADC+2,w
  7360  0EFE  0426               	iorwf	??_readADC+4,w
  7361  0EFF  00A8               	movwf	??_readADC+6
  7362  0F00  0827               	movf	??_readADC+5,w
  7363  0F01  00A0               	movwf	?_readADC
  7364  0F02  0828               	movf	??_readADC+6,w
  7365  0F03  00A1               	movwf	?_readADC+1
  7366  0F04                     l304:	
  7367  0F04  0008               	return
  7368  0F05                     __end_of_readADC:	
  7369                           
  7370                           	psect	text13
  7371  0E8D                     __ptext13:	
  7372 ;; *************** function _eepromWrite *****************
  7373 ;; Defined at:
  7374 ;;		line 8 in file "Nvm.c"
  7375 ;; Parameters:    Size  Location     Type
  7376 ;;  address         1    wreg     unsigned char 
  7377 ;;  data            1    0[BANK0 ] unsigned char 
  7378 ;; Auto vars:     Size  Location     Type
  7379 ;;  address         1    1[BANK0 ] unsigned char 
  7380 ;;  interruptSta    1    2[BANK0 ] unsigned char 
  7381 ;; Return value:  Size  Location     Type
  7382 ;;                  1    wreg      void 
  7383 ;; Registers used:
  7384 ;;		wreg, status,2, status,0, pclath, cstack
  7385 ;; Tracked objects:
  7386 ;;		On entry : 0/0
  7387 ;;		On exit  : 0/0
  7388 ;;		Unchanged: 0/0
  7389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7390 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7391 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7393 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7394 ;;Total ram usage:        3 bytes
  7395 ;; Hardware stack levels used:    1
  7396 ;; Hardware stack levels required when called:    4
  7397 ;; This function calls:
  7398 ;;		_nvmUnlock
  7399 ;; This function is called by:
  7400 ;;		_configureController
  7401 ;; This function uses a non-reentrant model
  7402 ;;
  7403                           
  7404                           
  7405                           ;psect for function _eepromWrite
  7406  0E8D                     _eepromWrite:	
  7407                           
  7408                           ;incstack = 0
  7409                           ; Regs used in _eepromWrite: [wreg+status,2+status,0+pclath+cstack]
  7410                           ;eepromWrite@address stored from wreg
  7411  0E8D  0020               	movlb	0	; select bank0
  7412  0E8E  00A1               	movwf	eepromWrite@address
  7413  0E8F                     l2419:	
  7414                           
  7415                           ;Nvm.c: 10: unsigned char interruptStatus = INTCONbits.GIE;
  7416  0E8F  3000               	movlw	0
  7417  0E90  1B8B               	btfsc	11,7	;volatile
  7418  0E91  3001               	movlw	1
  7419  0E92  00A2               	movwf	eepromWrite@interruptStatus
  7420  0E93                     l2421:	
  7421                           
  7422                           ;Nvm.c: 12: INTCONbits.GIE = 0;
  7423  0E93  138B               	bcf	11,7	;volatile
  7424  0E94                     l2423:	
  7425                           
  7426                           ;Nvm.c: 14: NVMCON1bits.NVMREGS = 1;
  7427  0E94  0030               	movlb	16	; select bank16
  7428  0E95  171E               	bsf	30,6	;volsfr
  7429  0E96                     l2425:	
  7430                           
  7431                           ;Nvm.c: 15: NVMCON1bits.WREN = 1;
  7432  0E96  151E               	bsf	30,2	;volsfr
  7433  0E97                     l2427:	
  7434                           
  7435                           ;Nvm.c: 17: NVMADRH = 0xF0;
  7436  0E97  30F0               	movlw	240
  7437  0E98  009B               	movwf	27	;volatile
  7438  0E99                     l2429:	
  7439                           
  7440                           ;Nvm.c: 18: NVMADRL = address;
  7441  0E99  0020               	movlb	0	; select bank0
  7442  0E9A  0821               	movf	eepromWrite@address,w
  7443  0E9B  0030               	movlb	16	; select bank16
  7444  0E9C  009A               	movwf	26	;volatile
  7445  0E9D                     l2431:	
  7446                           
  7447                           ;Nvm.c: 20: NVMDATL = data;
  7448  0E9D  0020               	movlb	0	; select bank0
  7449  0E9E  0820               	movf	eepromWrite@data,w
  7450  0E9F  0030               	movlb	16	; select bank16
  7451  0EA0  009C               	movwf	28	;volatile
  7452  0EA1                     l2433:	
  7453                           
  7454                           ;Nvm.c: 22: nvmUnlock();
  7455  0EA1  318D  25D7  318E   	fcall	_nvmUnlock
  7456  0EA4                     l402:	
  7457                           ;Nvm.c: 24: while (NVMCON1bits.WR);
  7458                           
  7459  0EA4  0030               	movlb	16	; select bank16
  7460  0EA5  189E               	btfsc	30,1	;volsfr
  7461  0EA6  2EA8               	goto	u2081
  7462  0EA7  2EA9               	goto	u2080
  7463  0EA8                     u2081:	
  7464  0EA8  2EA4               	goto	l402
  7465  0EA9                     u2080:	
  7466  0EA9                     l404:	
  7467                           
  7468                           ;Nvm.c: 26: NVMCON1bits.WREN = 0;
  7469  0EA9  111E               	bcf	30,2	;volsfr
  7470  0EAA                     l2435:	
  7471                           
  7472                           ;Nvm.c: 28: if (interruptStatus) INTCONbits.GIE = 1;
  7473  0EAA  0020               	movlb	0	; select bank0
  7474  0EAB  0822               	movf	eepromWrite@interruptStatus,w
  7475  0EAC  1903               	btfsc	3,2
  7476  0EAD  2EAF               	goto	u2091
  7477  0EAE  2EB0               	goto	u2090
  7478  0EAF                     u2091:	
  7479  0EAF  2EB1               	goto	l406
  7480  0EB0                     u2090:	
  7481  0EB0                     l2437:	
  7482  0EB0  178B               	bsf	11,7	;volatile
  7483  0EB1                     l406:	
  7484  0EB1  0008               	return
  7485  0EB2                     __end_of_eepromWrite:	
  7486                           
  7487                           	psect	text14
  7488  0DD7                     __ptext14:	
  7489 ;; *************** function _nvmUnlock *****************
  7490 ;; Defined at:
  7491 ;;		line 45 in file "Nvm.c"
  7492 ;; Parameters:    Size  Location     Type
  7493 ;;		None
  7494 ;; Auto vars:     Size  Location     Type
  7495 ;;		None
  7496 ;; Return value:  Size  Location     Type
  7497 ;;                  1    wreg      void 
  7498 ;; Registers used:
  7499 ;;		wreg
  7500 ;; Tracked objects:
  7501 ;;		On entry : 0/0
  7502 ;;		On exit  : 0/0
  7503 ;;		Unchanged: 0/0
  7504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7509 ;;Total ram usage:        0 bytes
  7510 ;; Hardware stack levels used:    1
  7511 ;; Hardware stack levels required when called:    3
  7512 ;; This function calls:
  7513 ;;		Nothing
  7514 ;; This function is called by:
  7515 ;;		_eepromWrite
  7516 ;; This function uses a non-reentrant model
  7517 ;;
  7518                           
  7519                           
  7520                           ;psect for function _nvmUnlock
  7521  0DD7                     _nvmUnlock:	
  7522  0DD7                     l2329:	
  7523                           ;incstack = 0
  7524                           ; Regs used in _nvmUnlock: [wreg]
  7525                           
  7526                           
  7527                           ;Nvm.c: 47: NVMCON2 = 0x55;
  7528  0DD7  3055               	movlw	85
  7529  0DD8  0030               	movlb	16	; select bank16
  7530  0DD9  009F               	movwf	31	;volsfr
  7531                           
  7532                           ;Nvm.c: 48: NVMCON2 = 0xAA;
  7533  0DDA  30AA               	movlw	170
  7534  0DDB  009F               	movwf	31	;volsfr
  7535  0DDC                     l2331:	
  7536                           
  7537                           ;Nvm.c: 49: NVMCON1bits.WR = 1;
  7538  0DDC  149E               	bsf	30,1	;volsfr
  7539  0DDD                     l412:	
  7540  0DDD  0008               	return
  7541  0DDE                     __end_of_nvmUnlock:	
  7542                           
  7543                           	psect	text15
  7544  0DE6                     __ptext15:	
  7545 ;; *************** function _adcInit *****************
  7546 ;; Defined at:
  7547 ;;		line 21 in file "PicConfig.c"
  7548 ;; Parameters:    Size  Location     Type
  7549 ;;		None
  7550 ;; Auto vars:     Size  Location     Type
  7551 ;;		None
  7552 ;; Return value:  Size  Location     Type
  7553 ;;                  1    wreg      void 
  7554 ;; Registers used:
  7555 ;;		wreg, status,2
  7556 ;; Tracked objects:
  7557 ;;		On entry : 0/0
  7558 ;;		On exit  : 0/0
  7559 ;;		Unchanged: 0/0
  7560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7565 ;;Total ram usage:        0 bytes
  7566 ;; Hardware stack levels used:    1
  7567 ;; Hardware stack levels required when called:    3
  7568 ;; This function calls:
  7569 ;;		Nothing
  7570 ;; This function is called by:
  7571 ;;		_main
  7572 ;; This function uses a non-reentrant model
  7573 ;;
  7574                           
  7575                           
  7576                           ;psect for function _adcInit
  7577  0DE6                     _adcInit:	
  7578  0DE6                     l2483:	
  7579                           ;incstack = 0
  7580                           ; Regs used in _adcInit: [wreg+status,2]
  7581                           
  7582                           
  7583                           ;PicConfig.c: 22: ADCON0 = 0x04;
  7584  0DE6  3004               	movlw	4
  7585  0DE7  0021               	movlb	1	; select bank1
  7586  0DE8  0093               	movwf	19	;volatile
  7587  0DE9                     l2485:	
  7588                           
  7589                           ;PicConfig.c: 23: ADCON1 = 0;
  7590  0DE9  0194               	clrf	20	;volatile
  7591  0DEA                     l2487:	
  7592                           
  7593                           ;PicConfig.c: 24: ADCON2 = 0;
  7594  0DEA  0195               	clrf	21	;volatile
  7595  0DEB                     l2489:	
  7596                           
  7597                           ;PicConfig.c: 25: ADREF = 0;
  7598  0DEB  019A               	clrf	26	;volatile
  7599  0DEC                     l2491:	
  7600                           
  7601                           ;PicConfig.c: 26: ADCLK = 0x3F;
  7602  0DEC  303F               	movlw	63
  7603  0DED  0098               	movwf	24	;volatile
  7604  0DEE                     l2493:	
  7605                           
  7606                           ;PicConfig.c: 27: ADCON0bits.ADON = 1;
  7607  0DEE  1793               	bsf	19,7	;volatile
  7608  0DEF                     l357:	
  7609  0DEF  0008               	return
  7610  0DF0                     __end_of_adcInit:	
  7611                           
  7612                           	psect	text16
  7613  0EB2                     __ptext16:	
  7614 ;; *************** function _IO_MAPPING *****************
  7615 ;; Defined at:
  7616 ;;		line 88 in file "MAPPING.c"
  7617 ;; Parameters:    Size  Location     Type
  7618 ;;		None
  7619 ;; Auto vars:     Size  Location     Type
  7620 ;;		None
  7621 ;; Return value:  Size  Location     Type
  7622 ;;                  1    wreg      void 
  7623 ;; Registers used:
  7624 ;;		wreg, status,2, status,0, pclath, cstack
  7625 ;; Tracked objects:
  7626 ;;		On entry : 0/0
  7627 ;;		On exit  : 0/0
  7628 ;;		Unchanged: 0/0
  7629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7634 ;;Total ram usage:        0 bytes
  7635 ;; Hardware stack levels used:    1
  7636 ;; Hardware stack levels required when called:    4
  7637 ;; This function calls:
  7638 ;;		_ppsLock
  7639 ;;		_ppsUnlock
  7640 ;; This function is called by:
  7641 ;;		_main
  7642 ;; This function uses a non-reentrant model
  7643 ;;
  7644                           
  7645                           
  7646                           ;psect for function _IO_MAPPING
  7647  0EB2                     _IO_MAPPING:	
  7648  0EB2                     l2461:	
  7649                           ;incstack = 0
  7650                           ; Regs used in _IO_MAPPING: [wreg+status,2+status,0+pclath+cstack]
  7651                           
  7652                           
  7653                           ;MAPPING.c: 90: TRISA = 0xFF;
  7654  0EB2  30FF               	movlw	255
  7655  0EB3  0020               	movlb	0	; select bank0
  7656  0EB4  0091               	movwf	17	;volatile
  7657                           
  7658                           ;MAPPING.c: 91: TRISB = 0xFF;
  7659  0EB5  30FF               	movlw	255
  7660  0EB6  0092               	movwf	18	;volatile
  7661                           
  7662                           ;MAPPING.c: 92: TRISC = 0xFF;
  7663  0EB7  30FF               	movlw	255
  7664  0EB8  0093               	movwf	19	;volatile
  7665                           
  7666                           ;MAPPING.c: 93: TRISD = 0xEF;
  7667  0EB9  30EF               	movlw	239
  7668  0EBA  0094               	movwf	20	;volatile
  7669                           
  7670                           ;MAPPING.c: 94: TRISE = 0xFF;
  7671  0EBB  30FF               	movlw	255
  7672  0EBC  0095               	movwf	21	;volatile
  7673  0EBD                     l2463:	
  7674                           
  7675                           ;MAPPING.c: 97: ANSELA = 0;
  7676  0EBD  003E               	movlb	30	; select bank30
  7677  0EBE  01B8               	clrf	56	;volatile
  7678  0EBF                     l2465:	
  7679                           
  7680                           ;MAPPING.c: 98: ANSELB = 0;
  7681  0EBF  01C3               	clrf	67	;volatile
  7682                           
  7683                           ;MAPPING.c: 99: ANSELC = 0xC3;
  7684  0EC0  30C3               	movlw	195
  7685  0EC1  00CE               	movwf	78	;volatile
  7686  0EC2                     l2467:	
  7687                           
  7688                           ;MAPPING.c: 100: ANSELD = 0;
  7689  0EC2  01D9               	clrf	89	;volatile
  7690  0EC3                     l2469:	
  7691                           
  7692                           ;MAPPING.c: 101: ANSELE = 0;
  7693  0EC3  01E4               	clrf	100	;volatile
  7694                           
  7695                           ;MAPPING.c: 104: WPUA = 0xCF;
  7696  0EC4  30CF               	movlw	207
  7697  0EC5  00B9               	movwf	57	;volatile
  7698                           
  7699                           ;MAPPING.c: 105: WPUB = 0xFF;
  7700  0EC6  30FF               	movlw	255
  7701  0EC7  00C4               	movwf	68	;volatile
  7702                           
  7703                           ;MAPPING.c: 106: WPUC = 0x04;
  7704  0EC8  3004               	movlw	4
  7705  0EC9  00CF               	movwf	79	;volatile
  7706                           
  7707                           ;MAPPING.c: 107: WPUD = 0x01;
  7708  0ECA  3001               	movlw	1
  7709  0ECB  00DA               	movwf	90	;volatile
  7710  0ECC                     l2471:	
  7711                           
  7712                           ;MAPPING.c: 108: WPUE = 0;
  7713  0ECC  01E5               	clrf	101	;volatile
  7714  0ECD                     l2473:	
  7715                           
  7716                           ;MAPPING.c: 110: TRISCbits.TRISC5 = 0;
  7717  0ECD  0020               	movlb	0	; select bank0
  7718  0ECE  1293               	bcf	19,5	;volatile
  7719  0ECF                     l2475:	
  7720                           
  7721                           ;MAPPING.c: 111: TRISAbits.TRISA4 = 0;
  7722  0ECF  1211               	bcf	17,4	;volatile
  7723  0ED0                     l2477:	
  7724                           
  7725                           ;MAPPING.c: 112: ppsUnlock();
  7726  0ED0  318D  25D0  318E   	fcall	_ppsUnlock
  7727  0ED3                     l2479:	
  7728                           
  7729                           ;MAPPING.c: 113: RC5PPS = 0x15;
  7730  0ED3  3015               	movlw	21
  7731  0ED4  003E               	movlb	30	; select bank30
  7732  0ED5  00A5               	movwf	37	;volatile
  7733  0ED6                     l2481:	
  7734                           
  7735                           ;MAPPING.c: 114: ppsLock();
  7736  0ED6  318D  25DE  318E   	fcall	_ppsLock
  7737  0ED9                     l455:	
  7738  0ED9  0008               	return
  7739  0EDA                     __end_of_IO_MAPPING:	
  7740                           
  7741                           	psect	text17
  7742  0DD0                     __ptext17:	
  7743 ;; *************** function _ppsUnlock *****************
  7744 ;; Defined at:
  7745 ;;		line 9 in file "PicConfig.c"
  7746 ;; Parameters:    Size  Location     Type
  7747 ;;		None
  7748 ;; Auto vars:     Size  Location     Type
  7749 ;;		None
  7750 ;; Return value:  Size  Location     Type
  7751 ;;                  1    wreg      void 
  7752 ;; Registers used:
  7753 ;;		wreg, status,2
  7754 ;; Tracked objects:
  7755 ;;		On entry : 0/0
  7756 ;;		On exit  : 0/0
  7757 ;;		Unchanged: 0/0
  7758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7763 ;;Total ram usage:        0 bytes
  7764 ;; Hardware stack levels used:    1
  7765 ;; Hardware stack levels required when called:    3
  7766 ;; This function calls:
  7767 ;;		Nothing
  7768 ;; This function is called by:
  7769 ;;		_IO_MAPPING
  7770 ;; This function uses a non-reentrant model
  7771 ;;
  7772                           
  7773                           
  7774                           ;psect for function _ppsUnlock
  7775  0DD0                     _ppsUnlock:	
  7776  0DD0                     l2439:	
  7777                           ;incstack = 0
  7778                           ; Regs used in _ppsUnlock: [wreg+status,2]
  7779                           
  7780                           
  7781                           ;PicConfig.c: 10: PPSLOCK = 0x55;
  7782  0DD0  3055               	movlw	85
  7783  0DD1  003D               	movlb	29	; select bank29
  7784  0DD2  008F               	movwf	15	;volsfr
  7785                           
  7786                           ;PicConfig.c: 11: PPSLOCK = 0xAA;
  7787  0DD3  30AA               	movlw	170
  7788  0DD4  008F               	movwf	15	;volsfr
  7789  0DD5                     l2441:	
  7790                           
  7791                           ;PicConfig.c: 12: PPSLOCK = 0;
  7792  0DD5  018F               	clrf	15	;volsfr
  7793  0DD6                     l351:	
  7794  0DD6  0008               	return
  7795  0DD7                     __end_of_ppsUnlock:	
  7796                           
  7797                           	psect	text18
  7798  0DDE                     __ptext18:	
  7799 ;; *************** function _ppsLock *****************
  7800 ;; Defined at:
  7801 ;;		line 15 in file "PicConfig.c"
  7802 ;; Parameters:    Size  Location     Type
  7803 ;;		None
  7804 ;; Auto vars:     Size  Location     Type
  7805 ;;		None
  7806 ;; Return value:  Size  Location     Type
  7807 ;;                  1    wreg      void 
  7808 ;; Registers used:
  7809 ;;		wreg
  7810 ;; Tracked objects:
  7811 ;;		On entry : 0/0
  7812 ;;		On exit  : 0/0
  7813 ;;		Unchanged: 0/0
  7814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7819 ;;Total ram usage:        0 bytes
  7820 ;; Hardware stack levels used:    1
  7821 ;; Hardware stack levels required when called:    3
  7822 ;; This function calls:
  7823 ;;		Nothing
  7824 ;; This function is called by:
  7825 ;;		_IO_MAPPING
  7826 ;; This function uses a non-reentrant model
  7827 ;;
  7828                           
  7829                           
  7830                           ;psect for function _ppsLock
  7831  0DDE                     _ppsLock:	
  7832  0DDE                     l2443:	
  7833                           ;incstack = 0
  7834                           ; Regs used in _ppsLock: [wreg]
  7835                           
  7836                           
  7837                           ;PicConfig.c: 16: PPSLOCK = 0x55;
  7838  0DDE  3055               	movlw	85
  7839  0DDF  003D               	movlb	29	; select bank29
  7840  0DE0  008F               	movwf	15	;volsfr
  7841                           
  7842                           ;PicConfig.c: 17: PPSLOCK = 0xAA;
  7843  0DE1  30AA               	movlw	170
  7844  0DE2  008F               	movwf	15	;volsfr
  7845                           
  7846                           ;PicConfig.c: 18: PPSLOCK = 1;
  7847  0DE3  3001               	movlw	1
  7848  0DE4  008F               	movwf	15	;volsfr
  7849  0DE5                     l354:	
  7850  0DE5  0008               	return
  7851  0DE6                     __end_of_ppsLock:	
  7852                           
  7853                           	psect	intentry
  7854  0004                     __pintentry:	
  7855 ;; *************** function _PS2Command *****************
  7856 ;; Defined at:
  7857 ;;		line 53 in file "main.c"
  7858 ;; Parameters:    Size  Location     Type
  7859 ;;		None
  7860 ;; Auto vars:     Size  Location     Type
  7861 ;;  cmd             1    5[COMMON] unsigned char 
  7862 ;; Return value:  Size  Location     Type
  7863 ;;                  1    wreg      void 
  7864 ;; Registers used:
  7865 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7866 ;; Tracked objects:
  7867 ;;		On entry : 0/0
  7868 ;;		On exit  : 0/0
  7869 ;;		Unchanged: 0/0
  7870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7872 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7873 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7874 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7875 ;;Total ram usage:        2 bytes
  7876 ;; Hardware stack levels used:    1
  7877 ;; Hardware stack levels required when called:    2
  7878 ;; This function calls:
  7879 ;;		_pollController
  7880 ;;		_spiRead
  7881 ;;		_spiWrite
  7882 ;;		i1_reversebyte
  7883 ;; This function is called by:
  7884 ;;		Interrupt level 1
  7885 ;; This function uses a non-reentrant model
  7886 ;;
  7887                           
  7888  0004                     _PS2Command:	
  7889                           
  7890                           ;incstack = 0
  7891  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  7892                           
  7893                           ; Regs used in _PS2Command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7894  0005  3180               	pagesel	$
  7895  0006                     i1l2087:	
  7896                           
  7897                           ;main.c: 55: if (SSP1IF) {
  7898  0006  002E               	movlb	14	; select bank14
  7899  0007  1C0F               	btfss	15,0	;volatile
  7900  0008  280A               	goto	u159_21
  7901  0009  280B               	goto	u159_20
  7902  000A                     u159_21:	
  7903  000A  29DC               	goto	i1l155
  7904  000B                     u159_20:	
  7905  000B                     i1l2089:	
  7906                           
  7907                           ;main.c: 56: char cmd = spiRead();
  7908  000B  318D  25CA  3180   	fcall	_spiRead
  7909  000E  00F4               	movwf	??_PS2Command
  7910  000F  0874               	movf	??_PS2Command,w
  7911  0010  00F5               	movwf	PS2Command@cmd
  7912                           
  7913                           ;main.c: 58: switch (cmdCounter) {
  7914  0011  2992               	goto	i1l2255
  7915  0012                     i1l2091:	
  7916                           
  7917                           ;main.c: 62: INIT_PRESSURE_SENSOR_byte3 = cmd;
  7918  0012  0875               	movf	PS2Command@cmd,w
  7919  0013  00F4               	movwf	??_PS2Command
  7920  0014  0874               	movf	??_PS2Command,w
  7921  0015  0020               	movlb	0	; select bank0
  7922  0016  00EC               	movwf	_INIT_PRESSURE_SENSOR_byte3
  7923                           
  7924                           ;main.c: 63: break;
  7925  0017  299A               	goto	i1l2257
  7926  0018                     i1l2093:	
  7927                           
  7928                           ;main.c: 65: if(cmd == 0xFF) RD4 = 1;
  7929  0018  0A75               	incf	PS2Command@cmd,w
  7930  0019  1D03               	btfss	3,2
  7931  001A  281C               	goto	u160_21
  7932  001B  281D               	goto	u160_20
  7933  001C                     u160_21:	
  7934  001C  2820               	goto	i1l105
  7935  001D                     u160_20:	
  7936  001D                     i1l2095:	
  7937  001D  0020               	movlb	0	; select bank0
  7938  001E  160F               	bsf	15,4	;volatile
  7939  001F  299A               	goto	i1l2257
  7940  0020                     i1l105:	
  7941                           
  7942                           ;main.c: 66: else RD4 = 0;
  7943  0020  0020               	movlb	0	; select bank0
  7944  0021  120F               	bcf	15,4	;volatile
  7945  0022  299A               	goto	i1l2257
  7946  0023                     i1l2097:	
  7947                           
  7948                           ;main.c: 69: if (cmd == 0x80) escapeMode = 1;
  7949  0023  3080               	movlw	128
  7950  0024  0675               	xorwf	PS2Command@cmd,w
  7951  0025  1D03               	btfss	3,2
  7952  0026  2828               	goto	u161_21
  7953  0027  2829               	goto	u161_20
  7954  0028                     u161_21:	
  7955  0028  282C               	goto	i1l2101
  7956  0029                     u161_20:	
  7957  0029                     i1l2099:	
  7958  0029  01F7               	clrf	_escapeMode
  7959  002A  0AF7               	incf	_escapeMode,f
  7960  002B  299A               	goto	i1l2257
  7961  002C                     i1l2101:	
  7962                           
  7963                           ;main.c: 70: else escapeMode = 0;
  7964  002C  01F7               	clrf	_escapeMode
  7965  002D  299A               	goto	i1l2257
  7966  002E                     i1l2103:	
  7967                           
  7968                           ;main.c: 73: if (cmd == 0x80) analogMode = 1;
  7969  002E  3080               	movlw	128
  7970  002F  0675               	xorwf	PS2Command@cmd,w
  7971  0030  1D03               	btfss	3,2
  7972  0031  2833               	goto	u162_21
  7973  0032  2834               	goto	u162_20
  7974  0033                     u162_21:	
  7975  0033  2837               	goto	i1l2107
  7976  0034                     u162_20:	
  7977  0034                     i1l2105:	
  7978  0034  01F8               	clrf	_analogMode
  7979  0035  0AF8               	incf	_analogMode,f
  7980  0036  299A               	goto	i1l2257
  7981  0037                     i1l2107:	
  7982                           
  7983                           ;main.c: 74: else analogMode = 0;
  7984  0037  01F8               	clrf	_analogMode
  7985  0038  299A               	goto	i1l2257
  7986  0039                     i1l2109:	
  7987                           
  7988                           ;main.c: 77: if (cmd == 0x80) {
  7989  0039  3080               	movlw	128
  7990  003A  0675               	xorwf	PS2Command@cmd,w
  7991  003B  1D03               	btfss	3,2
  7992  003C  283E               	goto	u163_21
  7993  003D  283F               	goto	u163_20
  7994  003E                     u163_21:	
  7995  003E  2853               	goto	i1l2121
  7996  003F                     u163_20:	
  7997  003F                     i1l2111:	
  7998                           
  7999                           ;main.c: 78: response[2] = 0x00;
  8000  003F  0020               	movlb	0	; select bank0
  8001  0040  01D9               	clrf	_response+2
  8002                           
  8003                           ;main.c: 79: response[3] = 0x00;
  8004  0041  01DA               	clrf	_response+3
  8005  0042                     i1l2113:	
  8006                           
  8007                           ;main.c: 80: response[4] = 0x80;
  8008  0042  3080               	movlw	128
  8009  0043  00F4               	movwf	??_PS2Command
  8010  0044  0874               	movf	??_PS2Command,w
  8011  0045  00DB               	movwf	_response+4
  8012  0046                     i1l2115:	
  8013                           
  8014                           ;main.c: 81: response[5] = 0x80;
  8015  0046  3080               	movlw	128
  8016  0047  00F4               	movwf	??_PS2Command
  8017  0048  0874               	movf	??_PS2Command,w
  8018  0049  00DC               	movwf	_response+5
  8019  004A                     i1l2117:	
  8020                           
  8021                           ;main.c: 82: response[6] = 0x80;
  8022  004A  3080               	movlw	128
  8023  004B  00F4               	movwf	??_PS2Command
  8024  004C  0874               	movf	??_PS2Command,w
  8025  004D  00DD               	movwf	_response+6
  8026  004E                     i1l2119:	
  8027                           
  8028                           ;main.c: 83: response[7] = 0x28;
  8029  004E  3028               	movlw	40
  8030  004F  00F4               	movwf	??_PS2Command
  8031  0050  0874               	movf	??_PS2Command,w
  8032  0051  00DE               	movwf	_response+7
  8033                           
  8034                           ;main.c: 84: } else {
  8035  0052  299A               	goto	i1l2257
  8036  0053                     i1l2121:	
  8037                           
  8038                           ;main.c: 85: response[2] = 0x00;
  8039  0053  0020               	movlb	0	; select bank0
  8040  0054  01D9               	clrf	_response+2
  8041                           
  8042                           ;main.c: 86: response[3] = 0x00;
  8043  0055  01DA               	clrf	_response+3
  8044  0056                     i1l2123:	
  8045                           
  8046                           ;main.c: 87: response[4] = 0x80;
  8047  0056  3080               	movlw	128
  8048  0057  00F4               	movwf	??_PS2Command
  8049  0058  0874               	movf	??_PS2Command,w
  8050  0059  00DB               	movwf	_response+4
  8051  005A                     i1l2125:	
  8052                           
  8053                           ;main.c: 88: response[5] = 0x40;
  8054  005A  3040               	movlw	64
  8055  005B  00F4               	movwf	??_PS2Command
  8056  005C  0874               	movf	??_PS2Command,w
  8057  005D  00DC               	movwf	_response+5
  8058                           
  8059                           ;main.c: 89: response[6] = 0x00;
  8060  005E  01DD               	clrf	_response+6
  8061  005F                     i1l2127:	
  8062                           
  8063                           ;main.c: 90: response[7] = 0x50;
  8064  005F  3050               	movlw	80
  8065  0060  00F4               	movwf	??_PS2Command
  8066  0061  0874               	movf	??_PS2Command,w
  8067  0062  00DE               	movwf	_response+7
  8068  0063  299A               	goto	i1l2257
  8069  0064                     i1l2129:	
  8070                           
  8071                           ;main.c: 94: if (cmd == 0x80) {
  8072  0064  3080               	movlw	128
  8073  0065  0675               	xorwf	PS2Command@cmd,w
  8074  0066  1D03               	btfss	3,2
  8075  0067  2869               	goto	u164_21
  8076  0068  286A               	goto	u164_20
  8077  0069                     u164_21:	
  8078  0069  2875               	goto	i1l2139
  8079  006A                     u164_20:	
  8080  006A                     i1l2131:	
  8081                           
  8082                           ;main.c: 95: response[2] = 0x00;
  8083  006A  0020               	movlb	0	; select bank0
  8084  006B  01D9               	clrf	_response+2
  8085                           
  8086                           ;main.c: 96: response[3] = 0x00;
  8087  006C  01DA               	clrf	_response+3
  8088                           
  8089                           ;main.c: 97: response[4] = 0x00;
  8090  006D  01DB               	clrf	_response+4
  8091  006E                     i1l2133:	
  8092                           
  8093                           ;main.c: 98: response[5] = 0xE0;
  8094  006E  30E0               	movlw	224
  8095  006F  00F4               	movwf	??_PS2Command
  8096  0070  0874               	movf	??_PS2Command,w
  8097  0071  00DC               	movwf	_response+5
  8098  0072                     i1l2135:	
  8099                           
  8100                           ;main.c: 99: response[6] = 0x00;
  8101  0072  01DD               	clrf	_response+6
  8102  0073                     i1l2137:	
  8103                           
  8104                           ;main.c: 100: response[7] = 0x00;
  8105  0073  01DE               	clrf	_response+7
  8106                           
  8107                           ;main.c: 101: } else {
  8108  0074  299A               	goto	i1l2257
  8109  0075                     i1l2139:	
  8110                           
  8111                           ;main.c: 102: response[2] = 0x00;
  8112  0075  0020               	movlb	0	; select bank0
  8113  0076  01D9               	clrf	_response+2
  8114                           
  8115                           ;main.c: 103: response[3] = 0x00;
  8116  0077  01DA               	clrf	_response+3
  8117                           
  8118                           ;main.c: 104: response[4] = 0x00;
  8119  0078  01DB               	clrf	_response+4
  8120  0079                     i1l2141:	
  8121                           
  8122                           ;main.c: 105: response[5] = 0x20;
  8123  0079  3020               	movlw	32
  8124  007A  00F4               	movwf	??_PS2Command
  8125  007B  0874               	movf	??_PS2Command,w
  8126  007C  00DC               	movwf	_response+5
  8127  007D  2872               	goto	i1l2135
  8128  007E                     i1l2149:	
  8129  007E  0876               	movf	_previousCmd,w
  8130                           
  8131                           ; Switch size 1, requested type "simple"
  8132                           ; Number of cases is 7, Range of values is 2 to 242
  8133                           ; switch strategies available:
  8134                           ; Name         Instructions Cycles
  8135                           ; simple_byte           22    12 (average)
  8136                           ; jumptable            263     9 (fixed)
  8137                           ;	Chosen strategy is simple_byte
  8138  007F  3A02               	xorlw	2	; case 2
  8139  0080  1903               	skipnz
  8140  0081  2812               	goto	i1l2091
  8141  0082  3A20               	xorlw	32	; case 34
  8142  0083  1903               	skipnz
  8143  0084  282E               	goto	i1l2103
  8144  0085  3A10               	xorlw	16	; case 50
  8145  0086  1903               	skipnz
  8146  0087  2864               	goto	i1l2129
  8147  0088  3A70               	xorlw	112	; case 66
  8148  0089  1903               	skipnz
  8149  008A  2818               	goto	i1l2093
  8150  008B  3A20               	xorlw	32	; case 98
  8151  008C  1903               	skipnz
  8152  008D  2839               	goto	i1l2109
  8153  008E  3AA0               	xorlw	160	; case 194
  8154  008F  1903               	skipnz
  8155  0090  2823               	goto	i1l2097
  8156  0091  3A30               	xorlw	48	; case 242
  8157  0092  1903               	skipnz
  8158  0093  299A               	goto	i1l2257
  8159  0094  299A               	goto	i1l2257
  8160  0095                     i1l2151:	
  8161                           
  8162                           ;main.c: 119: INIT_PRESSURE_SENSOR_byte4 = cmd;
  8163  0095  0875               	movf	PS2Command@cmd,w
  8164  0096  00F4               	movwf	??_PS2Command
  8165  0097  0874               	movf	??_PS2Command,w
  8166  0098  0020               	movlb	0	; select bank0
  8167  0099  00EB               	movwf	_INIT_PRESSURE_SENSOR_byte4
  8168                           
  8169                           ;main.c: 120: break;
  8170  009A  299A               	goto	i1l2257
  8171  009B                     i1l2153:	
  8172                           
  8173                           ;main.c: 122: if (reversebyte(cmd) >= 0x40) RD4 = 1;
  8174  009B  0875               	movf	PS2Command@cmd,w
  8175  009C  318F  2705  3180   	fcall	i1_reversebyte
  8176  009F  00F4               	movwf	??_PS2Command
  8177  00A0  3040               	movlw	64
  8178  00A1  0274               	subwf	??_PS2Command,w
  8179  00A2  1C03               	skipc
  8180  00A3  28A5               	goto	u165_21
  8181  00A4  28A6               	goto	u165_20
  8182  00A5                     u165_21:	
  8183  00A5  2820               	goto	i1l105
  8184  00A6                     u165_20:	
  8185  00A6  281D               	goto	i1l2095
  8186  00A7                     i1l2159:	
  8187  00A7  0876               	movf	_previousCmd,w
  8188                           
  8189                           ; Switch size 1, requested type "simple"
  8190                           ; Number of cases is 3, Range of values is 2 to 242
  8191                           ; switch strategies available:
  8192                           ; Name         Instructions Cycles
  8193                           ; simple_byte           10     6 (average)
  8194                           ; jumptable            263     9 (fixed)
  8195                           ;	Chosen strategy is simple_byte
  8196  00A8  3A02               	xorlw	2	; case 2
  8197  00A9  1903               	skipnz
  8198  00AA  2895               	goto	i1l2151
  8199  00AB  3A40               	xorlw	64	; case 66
  8200  00AC  1903               	skipnz
  8201  00AD  289B               	goto	i1l2153
  8202  00AE  3AB0               	xorlw	176	; case 242
  8203  00AF  1903               	skipnz
  8204  00B0  299A               	goto	i1l2257
  8205  00B1  299A               	goto	i1l2257
  8206  00B2                     i1l2161:	
  8207                           
  8208                           ;main.c: 137: response[2] = 0x00;
  8209  00B2  0020               	movlb	0	; select bank0
  8210  00B3  01D9               	clrf	_response+2
  8211                           
  8212                           ;main.c: 138: response[3] = 0x00;
  8213  00B4  01DA               	clrf	_response+3
  8214  00B5                     i1l2163:	
  8215                           
  8216                           ;main.c: 139: response[4] = 0x40;
  8217  00B5  3040               	movlw	64
  8218  00B6  00F4               	movwf	??_PS2Command
  8219  00B7  0874               	movf	??_PS2Command,w
  8220  00B8  00DB               	movwf	_response+4
  8221  00B9                     i1l2165:	
  8222                           
  8223                           ;main.c: 140: response[5] = 0x00;
  8224  00B9  01DC               	clrf	_response+5
  8225  00BA                     i1l2167:	
  8226                           
  8227                           ;main.c: 141: response[6] = 0x00;
  8228  00BA  01DD               	clrf	_response+6
  8229  00BB                     i1l2169:	
  8230                           
  8231                           ;main.c: 142: response[7] = 0x5A;
  8232  00BB  305A               	movlw	90
  8233  00BC  00F4               	movwf	??_PS2Command
  8234  00BD  0874               	movf	??_PS2Command,w
  8235  00BE  00DE               	movwf	_response+7
  8236  00BF                     i1l2171:	
  8237                           
  8238                           ;main.c: 143: analogMode = 2;
  8239  00BF  3002               	movlw	2
  8240  00C0  00F4               	movwf	??_PS2Command
  8241  00C1  0874               	movf	??_PS2Command,w
  8242  00C2  00F8               	movwf	_analogMode
  8243  00C3                     i1l2173:	
  8244                           
  8245                           ;main.c: 144: previousCmd = cmd;
  8246  00C3  0875               	movf	PS2Command@cmd,w
  8247  00C4  00F4               	movwf	??_PS2Command
  8248  00C5  0874               	movf	??_PS2Command,w
  8249  00C6  00F6               	movwf	_previousCmd
  8250                           
  8251                           ;main.c: 145: break;
  8252  00C7  299A               	goto	i1l2257
  8253  00C8                     i1l2175:	
  8254                           
  8255                           ;main.c: 152: if (analogMode >= 1) {
  8256  00C8  0878               	movf	_analogMode,w
  8257  00C9  1903               	btfsc	3,2
  8258  00CA  28CC               	goto	u166_21
  8259  00CB  28CD               	goto	u166_20
  8260  00CC                     u166_21:	
  8261  00CC  28E1               	goto	i1l2183
  8262  00CD                     u166_20:	
  8263  00CD                     i1l2177:	
  8264                           
  8265                           ;main.c: 153: response[2] = 0xFF;
  8266  00CD  30FF               	movlw	255
  8267  00CE  00F4               	movwf	??_PS2Command
  8268  00CF  0874               	movf	??_PS2Command,w
  8269  00D0  0020               	movlb	0	; select bank0
  8270  00D1  00D9               	movwf	_response+2
  8271                           
  8272                           ;main.c: 154: response[3] = 0xFF;
  8273  00D2  30FF               	movlw	255
  8274  00D3  00F4               	movwf	??_PS2Command
  8275  00D4  0874               	movf	??_PS2Command,w
  8276  00D5  00DA               	movwf	_response+3
  8277                           
  8278                           ;main.c: 155: response[4] = 0xC0;
  8279  00D6  30C0               	movlw	192
  8280  00D7  00F4               	movwf	??_PS2Command
  8281  00D8  0874               	movf	??_PS2Command,w
  8282  00D9  00DB               	movwf	_response+4
  8283  00DA                     i1l2179:	
  8284                           
  8285                           ;main.c: 156: response[5] = 0x00;
  8286  00DA  01DC               	clrf	_response+5
  8287  00DB                     i1l2181:	
  8288                           
  8289                           ;main.c: 157: response[6] = 0x00;
  8290  00DB  01DD               	clrf	_response+6
  8291                           
  8292                           ;main.c: 158: response[7] = 0x5A;
  8293  00DC  305A               	movlw	90
  8294  00DD  00F4               	movwf	??_PS2Command
  8295  00DE  0874               	movf	??_PS2Command,w
  8296  00DF  00DE               	movwf	_response+7
  8297                           
  8298                           ;main.c: 159: } else {
  8299  00E0  299A               	goto	i1l2257
  8300  00E1                     i1l2183:	
  8301                           
  8302                           ;main.c: 160: response[2] = 0x00;
  8303  00E1  0020               	movlb	0	; select bank0
  8304  00E2  01D9               	clrf	_response+2
  8305                           
  8306                           ;main.c: 161: response[3] = 0x00;
  8307  00E3  01DA               	clrf	_response+3
  8308                           
  8309                           ;main.c: 162: response[4] = 0x00;
  8310  00E4  01DB               	clrf	_response+4
  8311                           
  8312                           ;main.c: 163: response[5] = 0x00;
  8313  00E5  01DC               	clrf	_response+5
  8314                           
  8315                           ;main.c: 164: response[6] = 0x00;
  8316  00E6  01DD               	clrf	_response+6
  8317                           
  8318                           ;main.c: 165: response[7] = 0x00;
  8319  00E7  01DE               	clrf	_response+7
  8320  00E8  299A               	goto	i1l2257
  8321  00E9                     i1l2185:	
  8322                           
  8323                           ;main.c: 173: pollController(response);
  8324  00E9  3057               	movlw	(low (_response| 0))& (0+255)
  8325  00EA  3186  26A9  3180   	fcall	_pollController
  8326  00ED  28C3               	goto	i1l2173
  8327  00EE                     i1l2189:	
  8328                           
  8329                           ;main.c: 182: if(escapeMode) {
  8330  00EE  0877               	movf	_escapeMode,w
  8331  00EF  1903               	btfsc	3,2
  8332  00F0  28F2               	goto	u167_21
  8333  00F1  28F3               	goto	u167_20
  8334  00F2                     u167_21:	
  8335  00F2  28FB               	goto	i1l2193
  8336  00F3                     u167_20:	
  8337  00F3                     i1l2191:	
  8338                           
  8339                           ;main.c: 183: response[2] = 0x00;
  8340  00F3  0020               	movlb	0	; select bank0
  8341  00F4  01D9               	clrf	_response+2
  8342                           
  8343                           ;main.c: 184: response[3] = 0x00;
  8344  00F5  01DA               	clrf	_response+3
  8345                           
  8346                           ;main.c: 185: response[4] = 0x00;
  8347  00F6  01DB               	clrf	_response+4
  8348                           
  8349                           ;main.c: 186: response[5] = 0x00;
  8350  00F7  01DC               	clrf	_response+5
  8351                           
  8352                           ;main.c: 187: response[6] = 0x00;
  8353  00F8  01DD               	clrf	_response+6
  8354                           
  8355                           ;main.c: 188: response[7] = 0x00;
  8356  00F9  01DE               	clrf	_response+7
  8357                           
  8358                           ;main.c: 189: }
  8359  00FA  28C3               	goto	i1l2173
  8360  00FB                     i1l2193:	
  8361                           
  8362                           ;main.c: 190: else {;main.c: 191: pollController(response);
  8363  00FB  3057               	movlw	(low (_response| 0))& (0+255)
  8364  00FC  3186  26A9  3180   	fcall	_pollController
  8365  00FF  28C3               	goto	i1l2173
  8366  0100                     i1l2201:	
  8367                           
  8368                           ;main.c: 215: response[2] = 0xC0;
  8369  0100  30C0               	movlw	192
  8370  0101  00F4               	movwf	??_PS2Command
  8371  0102  0874               	movf	??_PS2Command,w
  8372  0103  0020               	movlb	0	; select bank0
  8373  0104  00D9               	movwf	_response+2
  8374                           
  8375                           ;main.c: 216: response[3] = 0x40;
  8376  0105  3040               	movlw	64
  8377  0106  00F4               	movwf	??_PS2Command
  8378  0107  0874               	movf	??_PS2Command,w
  8379  0108  00DA               	movwf	_response+3
  8380  0109                     i1l2203:	
  8381                           
  8382                           ;main.c: 217: if (analogMode >= 1) response[4] = 0x80;
  8383  0109  0878               	movf	_analogMode,w
  8384  010A  1903               	btfsc	3,2
  8385  010B  290D               	goto	u168_21
  8386  010C  290E               	goto	u168_20
  8387  010D                     u168_21:	
  8388  010D  2913               	goto	i1l2207
  8389  010E                     u168_20:	
  8390  010E                     i1l2205:	
  8391  010E  3080               	movlw	128
  8392  010F  00F4               	movwf	??_PS2Command
  8393  0110  0874               	movf	??_PS2Command,w
  8394  0111  00DB               	movwf	_response+4
  8395  0112  2914               	goto	i1l2209
  8396  0113                     i1l2207:	
  8397                           
  8398                           ;main.c: 218: else response[4] = 0x00;
  8399  0113  01DB               	clrf	_response+4
  8400  0114                     i1l2209:	
  8401                           
  8402                           ;main.c: 219: response[5] = 0x40;
  8403  0114  3040               	movlw	64
  8404  0115  00F4               	movwf	??_PS2Command
  8405  0116  0874               	movf	??_PS2Command,w
  8406  0117  00DC               	movwf	_response+5
  8407  0118                     i1l2211:	
  8408                           
  8409                           ;main.c: 220: response[6] = 0x80;
  8410  0118  3080               	movlw	128
  8411  0119  00F4               	movwf	??_PS2Command
  8412  011A  0874               	movf	??_PS2Command,w
  8413  011B  00DD               	movwf	_response+6
  8414                           
  8415                           ;main.c: 221: response[7] = 0x00;
  8416  011C  01DE               	clrf	_response+7
  8417                           
  8418                           ;main.c: 222: break;
  8419  011D  299A               	goto	i1l2257
  8420  011E                     i1l2213:	
  8421                           
  8422                           ;main.c: 229: response[2] = 0x00;
  8423  011E  0020               	movlb	0	; select bank0
  8424  011F  01D9               	clrf	_response+2
  8425                           
  8426                           ;main.c: 230: response[3] = 0x00;
  8427  0120  01DA               	clrf	_response+3
  8428  0121                     i1l2215:	
  8429                           
  8430                           ;main.c: 231: response[4] = 0x80;
  8431  0121  3080               	movlw	128
  8432  0122  00F4               	movwf	??_PS2Command
  8433  0123  0874               	movf	??_PS2Command,w
  8434  0124  00DB               	movwf	_response+4
  8435  0125                     i1l2217:	
  8436                           
  8437                           ;main.c: 232: response[5] = 0x80;
  8438  0125  3080               	movlw	128
  8439  0126  00F4               	movwf	??_PS2Command
  8440  0127  0874               	movf	??_PS2Command,w
  8441  0128  00DC               	movwf	_response+5
  8442  0129                     i1l2219:	
  8443                           
  8444                           ;main.c: 233: response[6] = 0x80;
  8445  0129  3080               	movlw	128
  8446  012A  00F4               	movwf	??_PS2Command
  8447  012B  0874               	movf	??_PS2Command,w
  8448  012C  00DD               	movwf	_response+6
  8449  012D                     i1l2221:	
  8450                           
  8451                           ;main.c: 234: response[7] = 0x50;
  8452  012D  3050               	movlw	80
  8453  012E  00F4               	movwf	??_PS2Command
  8454  012F  0874               	movf	??_PS2Command,w
  8455  0130  00DE               	movwf	_response+7
  8456  0131  28C3               	goto	i1l2173
  8457  0132                     i1l2225:	
  8458                           
  8459                           ;main.c: 243: response[2] = 0x00;
  8460  0132  0020               	movlb	0	; select bank0
  8461  0133  01D9               	clrf	_response+2
  8462                           
  8463                           ;main.c: 244: response[3] = 0x00;
  8464  0134  01DA               	clrf	_response+3
  8465  0135                     i1l2227:	
  8466                           
  8467                           ;main.c: 245: response[4] = 0x40;
  8468  0135  3040               	movlw	64
  8469  0136  00F4               	movwf	??_PS2Command
  8470  0137  0874               	movf	??_PS2Command,w
  8471  0138  00DB               	movwf	_response+4
  8472  0139                     i1l2229:	
  8473                           
  8474                           ;main.c: 246: response[5] = 0x00;
  8475  0139  01DC               	clrf	_response+5
  8476                           
  8477                           ;main.c: 247: response[6] = 0x80;
  8478  013A  3080               	movlw	128
  8479  013B  00F4               	movwf	??_PS2Command
  8480  013C  0874               	movf	??_PS2Command,w
  8481  013D  00DD               	movwf	_response+6
  8482  013E  2873               	goto	i1l2137
  8483  013F                     i1l2233:	
  8484                           
  8485                           ;main.c: 256: response[2] = 0x00;
  8486  013F  0020               	movlb	0	; select bank0
  8487  0140  01D9               	clrf	_response+2
  8488                           
  8489                           ;main.c: 257: response[3] = 0x00;
  8490  0141  01DA               	clrf	_response+3
  8491                           
  8492                           ;main.c: 258: response[4] = 0x00;
  8493  0142  01DB               	clrf	_response+4
  8494  0143                     i1l2235:	
  8495                           
  8496                           ;main.c: 259: response[5] = 0x20;
  8497  0143  3020               	movlw	32
  8498  0144  00F4               	movwf	??_PS2Command
  8499  0145  0874               	movf	??_PS2Command,w
  8500  0146  00DC               	movwf	_response+5
  8501  0147                     i1l2237:	
  8502                           
  8503                           ;main.c: 260: response[6] = 0x00;
  8504  0147  01DD               	clrf	_response+6
  8505  0148                     i1l2239:	
  8506                           
  8507                           ;main.c: 261: response[7] = 0x00;
  8508  0148  01DE               	clrf	_response+7
  8509  0149  28C3               	goto	i1l2173
  8510  014A                     i1l2243:	
  8511                           
  8512                           ;main.c: 271: response[2] = 0xFF;
  8513  014A  30FF               	movlw	255
  8514  014B  00F4               	movwf	??_PS2Command
  8515  014C  0874               	movf	??_PS2Command,w
  8516  014D  0020               	movlb	0	; select bank0
  8517  014E  00D9               	movwf	_response+2
  8518                           
  8519                           ;main.c: 272: response[3] = 0xFF;
  8520  014F  30FF               	movlw	255
  8521  0150  00F4               	movwf	??_PS2Command
  8522  0151  0874               	movf	??_PS2Command,w
  8523  0152  00DA               	movwf	_response+3
  8524                           
  8525                           ;main.c: 273: response[4] = 0xFF;
  8526  0153  30FF               	movlw	255
  8527  0154  00F4               	movwf	??_PS2Command
  8528  0155  0874               	movf	??_PS2Command,w
  8529  0156  00DB               	movwf	_response+4
  8530                           
  8531                           ;main.c: 274: response[5] = 0xFF;
  8532  0157  30FF               	movlw	255
  8533  0158  00F4               	movwf	??_PS2Command
  8534  0159  0874               	movf	??_PS2Command,w
  8535  015A  00DC               	movwf	_response+5
  8536                           
  8537                           ;main.c: 275: response[6] = 0xFF;
  8538  015B  30FF               	movlw	255
  8539  015C  00F4               	movwf	??_PS2Command
  8540  015D  0874               	movf	??_PS2Command,w
  8541  015E  00DD               	movwf	_response+6
  8542                           
  8543                           ;main.c: 276: response[7] = 0xFF;
  8544  015F  30FF               	movlw	255
  8545  0160  00F4               	movwf	??_PS2Command
  8546  0161  0874               	movf	??_PS2Command,w
  8547  0162  00DE               	movwf	_response+7
  8548                           
  8549                           ;main.c: 277: break;
  8550  0163  299A               	goto	i1l2257
  8551  0164                     i1l2245:	
  8552                           
  8553                           ;main.c: 285: response[2] = 0x00;
  8554  0164  0020               	movlb	0	; select bank0
  8555  0165  01D9               	clrf	_response+2
  8556                           
  8557                           ;main.c: 286: response[3] = 0x00;
  8558  0166  01DA               	clrf	_response+3
  8559                           
  8560                           ;main.c: 287: response[4] = 0x00;
  8561  0167  01DB               	clrf	_response+4
  8562                           
  8563                           ;main.c: 288: response[5] = 0x00;
  8564  0168  01DC               	clrf	_response+5
  8565                           
  8566                           ;main.c: 289: response[6] = 0x00;
  8567  0169  01DD               	clrf	_response+6
  8568  016A                     i1l2247:	
  8569                           
  8570                           ;main.c: 290: response[7] = 0x5A;
  8571  016A  305A               	movlw	90
  8572  016B  00F4               	movwf	??_PS2Command
  8573  016C  0874               	movf	??_PS2Command,w
  8574  016D  00DE               	movwf	_response+7
  8575                           
  8576                           ;main.c: 291: break;
  8577  016E  299A               	goto	i1l2257
  8578  016F                     i1l2251:	
  8579  016F  0875               	movf	PS2Command@cmd,w
  8580                           
  8581                           ; Switch size 1, requested type "simple"
  8582                           ; Number of cases is 11, Range of values is 2 to 242
  8583                           ; switch strategies available:
  8584                           ; Name         Instructions Cycles
  8585                           ; simple_byte           34    18 (average)
  8586                           ; jumptable            263     9 (fixed)
  8587                           ;	Chosen strategy is simple_byte
  8588  0170  3A02               	xorlw	2	; case 2
  8589  0171  1903               	skipnz
  8590  0172  28B2               	goto	i1l2161
  8591  0173  3A20               	xorlw	32	; case 34
  8592  0174  1903               	skipnz
  8593  0175  28F3               	goto	i1l2191
  8594  0176  3A10               	xorlw	16	; case 50
  8595  0177  1903               	skipnz
  8596  0178  293F               	goto	i1l2233
  8597  0179  3A70               	xorlw	112	; case 66
  8598  017A  1903               	skipnz
  8599  017B  28E9               	goto	i1l2185
  8600  017C  3A20               	xorlw	32	; case 98
  8601  017D  1903               	skipnz
  8602  017E  291E               	goto	i1l2213
  8603  017F  3AE0               	xorlw	224	; case 130
  8604  0180  1903               	skipnz
  8605  0181  28C8               	goto	i1l2175
  8606  0182  3A20               	xorlw	32	; case 162
  8607  0183  1903               	skipnz
  8608  0184  2900               	goto	i1l2201
  8609  0185  3A10               	xorlw	16	; case 178
  8610  0186  1903               	skipnz
  8611  0187  294A               	goto	i1l2243
  8612  0188  3A70               	xorlw	112	; case 194
  8613  0189  1903               	skipnz
  8614  018A  28EE               	goto	i1l2189
  8615  018B  3A20               	xorlw	32	; case 226
  8616  018C  1903               	skipnz
  8617  018D  2932               	goto	i1l2225
  8618  018E  3A10               	xorlw	16	; case 242
  8619  018F  1903               	skipnz
  8620  0190  2964               	goto	i1l2245
  8621  0191  299A               	goto	i1l2257
  8622  0192                     i1l2255:	
  8623  0192  0879               	movf	_cmdCounter,w
  8624                           
  8625                           ; Switch size 1, requested type "simple"
  8626                           ; Number of cases is 2, Range of values is 3 to 4
  8627                           ; switch strategies available:
  8628                           ; Name         Instructions Cycles
  8629                           ; simple_byte            7     4 (average)
  8630                           ; direct_byte           13     9 (fixed)
  8631                           ; jumptable            263     9 (fixed)
  8632                           ;	Chosen strategy is simple_byte
  8633  0193  3A03               	xorlw	3	; case 3
  8634  0194  1903               	skipnz
  8635  0195  287E               	goto	i1l2149
  8636  0196  3A07               	xorlw	7	; case 4
  8637  0197  1903               	skipnz
  8638  0198  28A7               	goto	i1l2159
  8639  0199  296F               	goto	i1l2251
  8640  019A                     i1l2257:	
  8641                           
  8642                           ;main.c: 297: spiWrite(response[cmdCounter]);
  8643  019A  0879               	movf	_cmdCounter,w
  8644  019B  3E57               	addlw	(low (_response| 0))& (0+255)
  8645  019C  0086               	movwf	6
  8646  019D  0187               	clrf	7
  8647  019E  0801               	movf	1,w
  8648  019F  318D  25BF  3180   	fcall	_spiWrite
  8649  01A2                     i1l2259:	
  8650                           
  8651                           ;main.c: 299: RA4 = 0;
  8652  01A2  0020               	movlb	0	; select bank0
  8653  01A3  120C               	bcf	12,4	;volatile
  8654  01A4                     i1l2261:	
  8655                           
  8656                           ;main.c: 300: _delay((unsigned long)((1)*(32000000/4000000.0)));
  8657  01A4  3200               	nop2	;2 cycle nop
  8658  01A5  3200               	nop2	;2 cycle nop
  8659  01A6  3200               	nop2	;2 cycle nop
  8660  01A7  3200               	nop2	;2 cycle nop
  8661  01A8                     i1l2263:	
  8662                           
  8663                           ;main.c: 301: RA4 = 1;
  8664  01A8  0020               	movlb	0	; select bank0
  8665  01A9  160C               	bsf	12,4	;volatile
  8666  01AA                     i1l2265:	
  8667                           
  8668                           ;main.c: 304: if (cmdCounter < responseLength) {
  8669  01AA  0850               	movf	_responseLength,w
  8670  01AB  0279               	subwf	_cmdCounter,w
  8671  01AC  1803               	skipnc
  8672  01AD  29AF               	goto	u169_21
  8673  01AE  29B0               	goto	u169_20
  8674  01AF                     u169_21:	
  8675  01AF  29B4               	goto	i1l149
  8676  01B0                     u169_20:	
  8677  01B0                     i1l2267:	
  8678                           
  8679                           ;main.c: 305: cmdCounter++;
  8680  01B0  3001               	movlw	1
  8681  01B1  00F4               	movwf	??_PS2Command
  8682  01B2  0874               	movf	??_PS2Command,w
  8683  01B3  07F9               	addwf	_cmdCounter,f
  8684  01B4                     i1l149:	
  8685                           
  8686                           ;main.c: 306: };main.c: 309: if (escapeMode) {
  8687  01B4  0877               	movf	_escapeMode,w
  8688  01B5  1903               	btfsc	3,2
  8689  01B6  29B8               	goto	u170_21
  8690  01B7  29B9               	goto	u170_20
  8691  01B8                     u170_21:	
  8692  01B8  29BE               	goto	i1l2271
  8693  01B9                     u170_20:	
  8694  01B9                     i1l2269:	
  8695                           
  8696                           ;main.c: 310: response[0] = 0xCF;
  8697  01B9  30CF               	movlw	207
  8698  01BA  00F4               	movwf	??_PS2Command
  8699  01BB  0874               	movf	??_PS2Command,w
  8700  01BC  00D7               	movwf	_response
  8701                           
  8702                           ;main.c: 311: }
  8703  01BD  29DA               	goto	i1l2281
  8704  01BE                     i1l2271:	
  8705                           
  8706                           ;main.c: 312: else {;main.c: 313: if(analogMode == 0) response[0] = 0x82;
  8707  01BE  0878               	movf	_analogMode,w
  8708  01BF  1D03               	btfss	3,2
  8709  01C0  29C2               	goto	u171_21
  8710  01C1  29C3               	goto	u171_20
  8711  01C2                     u171_21:	
  8712  01C2  29C7               	goto	i1l2275
  8713  01C3                     u171_20:	
  8714  01C3                     i1l2273:	
  8715  01C3  3082               	movlw	130
  8716  01C4  00F4               	movwf	??_PS2Command
  8717  01C5  0874               	movf	??_PS2Command,w
  8718  01C6  00D7               	movwf	_response
  8719  01C7                     i1l2275:	
  8720                           
  8721                           ;main.c: 314: if(analogMode == 1) response[0] = 0xCE;
  8722  01C7  0378               	decf	_analogMode,w
  8723  01C8  1D03               	btfss	3,2
  8724  01C9  29CB               	goto	u172_21
  8725  01CA  29CC               	goto	u172_20
  8726  01CB                     u172_21:	
  8727  01CB  29D0               	goto	i1l153
  8728  01CC                     u172_20:	
  8729  01CC                     i1l2277:	
  8730  01CC  30CE               	movlw	206
  8731  01CD  00F4               	movwf	??_PS2Command
  8732  01CE  0874               	movf	??_PS2Command,w
  8733  01CF  00D7               	movwf	_response
  8734  01D0                     i1l153:	
  8735                           
  8736                           ;main.c: 315: if(analogMode > 1) response[0] = 0x9E;
  8737  01D0  3002               	movlw	2
  8738  01D1  0278               	subwf	_analogMode,w
  8739  01D2  1C03               	skipc
  8740  01D3  29D5               	goto	u173_21
  8741  01D4  29D6               	goto	u173_20
  8742  01D5                     u173_21:	
  8743  01D5  29DA               	goto	i1l2281
  8744  01D6                     u173_20:	
  8745  01D6                     i1l2279:	
  8746  01D6  309E               	movlw	158
  8747  01D7  00F4               	movwf	??_PS2Command
  8748  01D8  0874               	movf	??_PS2Command,w
  8749  01D9  00D7               	movwf	_response
  8750  01DA                     i1l2281:	
  8751                           
  8752                           ;main.c: 316: };main.c: 318: SSP1IF = 0;
  8753  01DA  002E               	movlb	14	; select bank14
  8754  01DB  100F               	bcf	15,0	;volatile
  8755  01DC                     i1l155:	
  8756  01DC  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8757  01DD  0009               	retfie
  8758  01DE                     __end_of_PS2Command:	
  8759                           
  8760                           	psect	text20
  8761  0F05                     __ptext20:	
  8762 ;; *************** function i1_reversebyte *****************
  8763 ;; Defined at:
  8764 ;;		line 165 in file "Controller.c"
  8765 ;; Parameters:    Size  Location     Type
  8766 ;;  byte            1    wreg     unsigned char 
  8767 ;; Auto vars:     Size  Location     Type
  8768 ;;  byte            1    3[COMMON] unsigned char 
  8769 ;; Return value:  Size  Location     Type
  8770 ;;                  1    wreg      unsigned char 
  8771 ;; Registers used:
  8772 ;;		wreg, status,2, status,0
  8773 ;; Tracked objects:
  8774 ;;		On entry : 0/0
  8775 ;;		On exit  : 0/0
  8776 ;;		Unchanged: 0/0
  8777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8779 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8780 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8781 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8782 ;;Total ram usage:        4 bytes
  8783 ;; Hardware stack levels used:    1
  8784 ;; This function calls:
  8785 ;;		Nothing
  8786 ;; This function is called by:
  8787 ;;		_PS2Command
  8788 ;; This function uses a non-reentrant model
  8789 ;;
  8790                           
  8791                           
  8792                           ;psect for function i1_reversebyte
  8793  0F05                     i1_reversebyte:	
  8794                           
  8795                           ;incstack = 0
  8796                           ; Regs used in i1_reversebyte: [wreg+status,2+status,0]
  8797                           ;i1reversebyte@byte stored from wreg
  8798  0F05  00F3               	movwf	i1reversebyte@byte
  8799  0F06                     i1l2081:	
  8800                           
  8801                           ;Controller.c: 166: byte = (byte & 0xF0) >> 4 | (byte & 0x0F) << 4;
  8802  0F06  0873               	movf	i1reversebyte@byte,w
  8803  0F07  390F               	andlw	15
  8804  0F08  00F0               	movwf	??i1_reversebyte
  8805  0F09  3004               	movlw	4
  8806  0F0A                     u154_25:	
  8807  0F0A  35F0               	lslf	??i1_reversebyte,f
  8808  0F0B  0B89               	decfsz	9,f
  8809  0F0C  2F0A               	goto	u154_25
  8810  0F0D  0873               	movf	i1reversebyte@byte,w
  8811  0F0E  00F1               	movwf	??i1_reversebyte+1
  8812  0F0F  3004               	movlw	4
  8813  0F10                     u155_25:	
  8814  0F10  36F1               	lsrf	??i1_reversebyte+1,f
  8815  0F11  0B89               	decfsz	9,f
  8816  0F12  2F10               	goto	u155_25
  8817  0F13  0871               	movf	??i1_reversebyte+1,w
  8818  0F14  390F               	andlw	15
  8819  0F15  0470               	iorwf	??i1_reversebyte,w
  8820  0F16  00F2               	movwf	??i1_reversebyte+2
  8821  0F17  0872               	movf	??i1_reversebyte+2,w
  8822  0F18  00F3               	movwf	i1reversebyte@byte
  8823                           
  8824                           ;Controller.c: 167: byte = (byte & 0xCC) >> 2 | (byte & 0x33) << 2;
  8825  0F19  0873               	movf	i1reversebyte@byte,w
  8826  0F1A  3933               	andlw	51
  8827  0F1B  00F0               	movwf	??i1_reversebyte
  8828  0F1C  3002               	movlw	2
  8829  0F1D                     u156_25:	
  8830  0F1D  35F0               	lslf	??i1_reversebyte,f
  8831  0F1E  0B89               	decfsz	9,f
  8832  0F1F  2F1D               	goto	u156_25
  8833  0F20  0873               	movf	i1reversebyte@byte,w
  8834  0F21  00F1               	movwf	??i1_reversebyte+1
  8835  0F22  3002               	movlw	2
  8836  0F23                     u157_25:	
  8837  0F23  36F1               	lsrf	??i1_reversebyte+1,f
  8838  0F24  0B89               	decfsz	9,f
  8839  0F25  2F23               	goto	u157_25
  8840  0F26  0871               	movf	??i1_reversebyte+1,w
  8841  0F27  3933               	andlw	51
  8842  0F28  0470               	iorwf	??i1_reversebyte,w
  8843  0F29  00F2               	movwf	??i1_reversebyte+2
  8844  0F2A  0872               	movf	??i1_reversebyte+2,w
  8845  0F2B  00F3               	movwf	i1reversebyte@byte
  8846                           
  8847                           ;Controller.c: 168: byte = (byte & 0xAA) >> 1 | (byte & 0x55) << 1;
  8848  0F2C  0873               	movf	i1reversebyte@byte,w
  8849  0F2D  3955               	andlw	85
  8850  0F2E  00F0               	movwf	??i1_reversebyte
  8851  0F2F  3001               	movlw	1
  8852  0F30                     u158_25:	
  8853  0F30  35F0               	lslf	??i1_reversebyte,f
  8854  0F31  0B89               	decfsz	9,f
  8855  0F32  2F30               	goto	u158_25
  8856  0F33  3673               	lsrf	i1reversebyte@byte,w
  8857  0F34  3955               	andlw	85
  8858  0F35  0470               	iorwf	??i1_reversebyte,w
  8859  0F36  00F1               	movwf	??i1_reversebyte+1
  8860  0F37  0871               	movf	??i1_reversebyte+1,w
  8861  0F38  00F3               	movwf	i1reversebyte@byte
  8862  0F39                     i1l2083:	
  8863                           
  8864                           ;Controller.c: 170: return byte;
  8865  0F39  0873               	movf	i1reversebyte@byte,w
  8866  0F3A                     i1l307:	
  8867  0F3A  0008               	return
  8868  0F3B                     __end_ofi1_reversebyte:	
  8869                           
  8870                           	psect	text21
  8871  0DBF                     __ptext21:	
  8872 ;; *************** function _spiWrite *****************
  8873 ;; Defined at:
  8874 ;;		line 32 in file "Spi.c"
  8875 ;; Parameters:    Size  Location     Type
  8876 ;;  dat             1    wreg     unsigned char 
  8877 ;; Auto vars:     Size  Location     Type
  8878 ;;  dat             1    0[COMMON] unsigned char 
  8879 ;; Return value:  Size  Location     Type
  8880 ;;                  1    wreg      void 
  8881 ;; Registers used:
  8882 ;;		wreg
  8883 ;; Tracked objects:
  8884 ;;		On entry : 0/0
  8885 ;;		On exit  : 0/0
  8886 ;;		Unchanged: 0/0
  8887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8889 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8891 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8892 ;;Total ram usage:        1 bytes
  8893 ;; Hardware stack levels used:    1
  8894 ;; This function calls:
  8895 ;;		Nothing
  8896 ;; This function is called by:
  8897 ;;		_PS2Command
  8898 ;; This function uses a non-reentrant model
  8899 ;;
  8900                           
  8901                           
  8902                           ;psect for function _spiWrite
  8903  0DBF                     _spiWrite:	
  8904                           
  8905                           ;incstack = 0
  8906                           ; Regs used in _spiWrite: [wreg]
  8907                           ;spiWrite@dat stored from wreg
  8908  0DBF  00F0               	movwf	spiWrite@dat
  8909  0DC0                     i1l1927:	
  8910                           
  8911                           ;Spi.c: 34: SSP1BUF = dat;
  8912  0DC0  0870               	movf	spiWrite@dat,w
  8913  0DC1  0023               	movlb	3	; select bank3
  8914  0DC2  008C               	movwf	12	;volatile
  8915  0DC3                     i1l382:	
  8916  0DC3  0008               	return
  8917  0DC4                     __end_of_spiWrite:	
  8918                           
  8919                           	psect	text22
  8920  0DCA                     __ptext22:	
  8921 ;; *************** function _spiRead *****************
  8922 ;; Defined at:
  8923 ;;		line 37 in file "Spi.c"
  8924 ;; Parameters:    Size  Location     Type
  8925 ;;		None
  8926 ;; Auto vars:     Size  Location     Type
  8927 ;;		None
  8928 ;; Return value:  Size  Location     Type
  8929 ;;                  1    wreg      unsigned char 
  8930 ;; Registers used:
  8931 ;;		wreg, status,2, status,0, pclath, cstack
  8932 ;; Tracked objects:
  8933 ;;		On entry : 0/0
  8934 ;;		On exit  : 0/0
  8935 ;;		Unchanged: 0/0
  8936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8941 ;;Total ram usage:        0 bytes
  8942 ;; Hardware stack levels used:    1
  8943 ;; Hardware stack levels required when called:    1
  8944 ;; This function calls:
  8945 ;;		_spiReceiveWait
  8946 ;; This function is called by:
  8947 ;;		_PS2Command
  8948 ;; This function uses a non-reentrant model
  8949 ;;
  8950                           
  8951                           
  8952                           ;psect for function _spiRead
  8953  0DCA                     _spiRead:	
  8954  0DCA                     i1l1921:	
  8955                           ;incstack = 0
  8956                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  8957                           
  8958                           
  8959                           ;Spi.c: 39: spiReceiveWait();
  8960  0DCA  318D  25C4  318D   	fcall	_spiReceiveWait
  8961  0DCD                     i1l1923:	
  8962                           
  8963                           ;Spi.c: 40: return(SSP1BUF);
  8964  0DCD  0023               	movlb	3	; select bank3
  8965  0DCE  080C               	movf	12,w	;volatile
  8966  0DCF                     i1l385:	
  8967  0DCF  0008               	return
  8968  0DD0                     __end_of_spiRead:	
  8969                           
  8970                           	psect	text23
  8971  0DC4                     __ptext23:	
  8972 ;; *************** function _spiReceiveWait *****************
  8973 ;; Defined at:
  8974 ;;		line 27 in file "Spi.c"
  8975 ;; Parameters:    Size  Location     Type
  8976 ;;		None
  8977 ;; Auto vars:     Size  Location     Type
  8978 ;;		None
  8979 ;; Return value:  Size  Location     Type
  8980 ;;                  1    wreg      void 
  8981 ;; Registers used:
  8982 ;;		None
  8983 ;; Tracked objects:
  8984 ;;		On entry : 0/0
  8985 ;;		On exit  : 0/0
  8986 ;;		Unchanged: 0/0
  8987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8992 ;;Total ram usage:        0 bytes
  8993 ;; Hardware stack levels used:    1
  8994 ;; This function calls:
  8995 ;;		Nothing
  8996 ;; This function is called by:
  8997 ;;		_spiRead
  8998 ;; This function uses a non-reentrant model
  8999 ;;
  9000                           
  9001                           
  9002                           ;psect for function _spiReceiveWait
  9003  0DC4                     _spiReceiveWait:	
  9004  0DC4                     i1l1887:	
  9005                           ;incstack = 0
  9006                           ; Regs used in _spiReceiveWait: []
  9007                           
  9008  0DC4                     i1l376:	
  9009                           ;Spi.c: 29: while ( !SSP1STATbits.BF );
  9010                           
  9011  0DC4  0023               	movlb	3	; select bank3
  9012  0DC5  1C0F               	btfss	15,0	;volatile
  9013  0DC6  2DC8               	goto	u131_21
  9014  0DC7  2DC9               	goto	u131_20
  9015  0DC8                     u131_21:	
  9016  0DC8  2DC4               	goto	i1l376
  9017  0DC9                     u131_20:	
  9018  0DC9                     i1l379:	
  9019  0DC9  0008               	return
  9020  0DCA                     __end_of_spiReceiveWait:	
  9021                           
  9022                           	psect	text24
  9023  06A9                     __ptext24:	
  9024 ;; *************** function _pollController *****************
  9025 ;; Defined at:
  9026 ;;		line 26 in file "main.c"
  9027 ;; Parameters:    Size  Location     Type
  9028 ;;  response        1    wreg     PTR unsigned char 
  9029 ;;		 -> response(20), 
  9030 ;; Auto vars:     Size  Location     Type
  9031 ;;  response        1    1[COMMON] PTR unsigned char 
  9032 ;;		 -> response(20), 
  9033 ;; Return value:  Size  Location     Type
  9034 ;;                  1    wreg      void 
  9035 ;; Registers used:
  9036 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9037 ;; Tracked objects:
  9038 ;;		On entry : 0/0
  9039 ;;		On exit  : 0/0
  9040 ;;		Unchanged: 0/0
  9041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9043 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9044 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9045 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9046 ;;Total ram usage:        2 bytes
  9047 ;; Hardware stack levels used:    1
  9048 ;; This function calls:
  9049 ;;		Nothing
  9050 ;; This function is called by:
  9051 ;;		_PS2Command
  9052 ;; This function uses a non-reentrant model
  9053 ;;
  9054                           
  9055                           
  9056                           ;psect for function _pollController
  9057  06A9                     _pollController:	
  9058                           
  9059                           ;incstack = 0
  9060                           ; Regs used in _pollController: [wreg+fsr1l+fsr1h+status,2+status,0]
  9061                           ;pollController@response stored from wreg
  9062  06A9  00F1               	movwf	pollController@response
  9063  06AA                     i1l1889:	
  9064                           
  9065                           ;main.c: 27: response[2] = digitalStateFirst;
  9066  06AA  0020               	movlb	0	; select bank0
  9067  06AB  0856               	movf	_digitalStateFirst,w
  9068  06AC  00F0               	movwf	??_pollController
  9069  06AD  0871               	movf	pollController@response,w
  9070  06AE  3E02               	addlw	2
  9071  06AF  0086               	movwf	6
  9072  06B0  0187               	clrf	7
  9073  06B1  0870               	movf	??_pollController,w
  9074  06B2  0081               	movwf	1
  9075                           
  9076                           ;main.c: 28: response[3] = digitalStateSecond;
  9077  06B3  0855               	movf	_digitalStateSecond,w
  9078  06B4  00F0               	movwf	??_pollController
  9079  06B5  0871               	movf	pollController@response,w
  9080  06B6  3E03               	addlw	3
  9081  06B7  0086               	movwf	6
  9082  06B8  0187               	clrf	7
  9083  06B9  0870               	movf	??_pollController,w
  9084  06BA  0081               	movwf	1
  9085                           
  9086                           ;main.c: 29: response[4] = rxData;
  9087  06BB  087B               	movf	_rxData,w
  9088  06BC  00F0               	movwf	??_pollController
  9089  06BD  0871               	movf	pollController@response,w
  9090  06BE  3E04               	addlw	4
  9091  06BF  0086               	movwf	6
  9092  06C0  0187               	clrf	7
  9093  06C1  0870               	movf	??_pollController,w
  9094  06C2  0081               	movwf	1
  9095                           
  9096                           ;main.c: 30: response[5] = ryData;
  9097  06C3  0854               	movf	_ryData,w
  9098  06C4  00F0               	movwf	??_pollController
  9099  06C5  0871               	movf	pollController@response,w
  9100  06C6  3E05               	addlw	5
  9101  06C7  0086               	movwf	6
  9102  06C8  0187               	clrf	7
  9103  06C9  0870               	movf	??_pollController,w
  9104  06CA  0081               	movwf	1
  9105                           
  9106                           ;main.c: 31: response[6] = lxData;
  9107  06CB  0853               	movf	_lxData,w
  9108  06CC  00F0               	movwf	??_pollController
  9109  06CD  0871               	movf	pollController@response,w
  9110  06CE  3E06               	addlw	6
  9111  06CF  0086               	movwf	6
  9112  06D0  0187               	clrf	7
  9113  06D1  0870               	movf	??_pollController,w
  9114  06D2  0081               	movwf	1
  9115                           
  9116                           ;main.c: 32: response[7] = lyData;
  9117  06D3  0852               	movf	_lyData,w
  9118  06D4  00F0               	movwf	??_pollController
  9119  06D5  0871               	movf	pollController@response,w
  9120  06D6  3E07               	addlw	7
  9121  06D7  0086               	movwf	6
  9122  06D8  0187               	clrf	7
  9123  06D9  0870               	movf	??_pollController,w
  9124  06DA  0081               	movwf	1
  9125  06DB                     i1l1891:	
  9126                           
  9127                           ;main.c: 33: if(analogMode == 2) {
  9128  06DB  3002               	movlw	2
  9129  06DC  0678               	xorwf	_analogMode,w
  9130  06DD  1D03               	btfss	3,2
  9131  06DE  2EE0               	goto	u132_21
  9132  06DF  2EE1               	goto	u132_20
  9133  06E0                     u132_21:	
  9134  06E0  2F47               	goto	i1l1919
  9135  06E1                     u132_20:	
  9136  06E1                     i1l1893:	
  9137                           
  9138                           ;main.c: 34: responseLength = 20;
  9139  06E1  3014               	movlw	20
  9140  06E2  00F0               	movwf	??_pollController
  9141  06E3  0870               	movf	??_pollController,w
  9142  06E4  00D0               	movwf	_responseLength
  9143  06E5                     i1l1895:	
  9144                           
  9145                           ;main.c: 35: response[8] = analogStateFirst[2];
  9146  06E5  0021               	movlb	1	; select bank1
  9147  06E6  085A               	movf	(_analogStateFirst^(0+128)+2),w
  9148  06E7  00F0               	movwf	??_pollController
  9149  06E8  0871               	movf	pollController@response,w
  9150  06E9  3E08               	addlw	8
  9151  06EA  0086               	movwf	6
  9152  06EB  0187               	clrf	7
  9153  06EC  0870               	movf	??_pollController,w
  9154  06ED  0081               	movwf	1
  9155  06EE                     i1l1897:	
  9156                           
  9157                           ;main.c: 36: response[9] = analogStateFirst[0];
  9158  06EE  0858               	movf	_analogStateFirst^(0+128),w
  9159  06EF  00F0               	movwf	??_pollController
  9160  06F0  0871               	movf	pollController@response,w
  9161  06F1  3E09               	addlw	9
  9162  06F2  0086               	movwf	6
  9163  06F3  0187               	clrf	7
  9164  06F4  0870               	movf	??_pollController,w
  9165  06F5  0081               	movwf	1
  9166  06F6                     i1l1899:	
  9167                           
  9168                           ;main.c: 37: response[10] = analogStateFirst[3];
  9169  06F6  085B               	movf	(_analogStateFirst^(0+128)+3),w
  9170  06F7  00F0               	movwf	??_pollController
  9171  06F8  0871               	movf	pollController@response,w
  9172  06F9  3E0A               	addlw	10
  9173  06FA  0086               	movwf	6
  9174  06FB  0187               	clrf	7
  9175  06FC  0870               	movf	??_pollController,w
  9176  06FD  0081               	movwf	1
  9177  06FE                     i1l1901:	
  9178                           
  9179                           ;main.c: 38: response[11] = analogStateFirst[1];
  9180  06FE  0859               	movf	(_analogStateFirst^(0+128)+1),w
  9181  06FF  00F0               	movwf	??_pollController
  9182  0700  0871               	movf	pollController@response,w
  9183  0701  3E0B               	addlw	11
  9184  0702  0086               	movwf	6
  9185  0703  0187               	clrf	7
  9186  0704  0870               	movf	??_pollController,w
  9187  0705  0081               	movwf	1
  9188  0706                     i1l1903:	
  9189                           
  9190                           ;main.c: 39: response[12] = analogStateSecond[3];
  9191  0706  0853               	movf	(_analogStateSecond^(0+128)+3),w
  9192  0707  00F0               	movwf	??_pollController
  9193  0708  0871               	movf	pollController@response,w
  9194  0709  3E0C               	addlw	12
  9195  070A  0086               	movwf	6
  9196  070B  0187               	clrf	7
  9197  070C  0870               	movf	??_pollController,w
  9198  070D  0081               	movwf	1
  9199  070E                     i1l1905:	
  9200                           
  9201                           ;main.c: 40: response[13] = analogStateSecond[2];
  9202  070E  0852               	movf	(_analogStateSecond^(0+128)+2),w
  9203  070F  00F0               	movwf	??_pollController
  9204  0710  0871               	movf	pollController@response,w
  9205  0711  3E0D               	addlw	13
  9206  0712  0086               	movwf	6
  9207  0713  0187               	clrf	7
  9208  0714  0870               	movf	??_pollController,w
  9209  0715  0081               	movwf	1
  9210  0716                     i1l1907:	
  9211                           
  9212                           ;main.c: 41: response[14] = analogStateSecond[1];
  9213  0716  0851               	movf	(_analogStateSecond^(0+128)+1),w
  9214  0717  00F0               	movwf	??_pollController
  9215  0718  0871               	movf	pollController@response,w
  9216  0719  3E0E               	addlw	14
  9217  071A  0086               	movwf	6
  9218  071B  0187               	clrf	7
  9219  071C  0870               	movf	??_pollController,w
  9220  071D  0081               	movwf	1
  9221  071E                     i1l1909:	
  9222                           
  9223                           ;main.c: 42: response[15] = analogStateSecond[0];
  9224  071E  0850               	movf	_analogStateSecond^(0+128),w
  9225  071F  00F0               	movwf	??_pollController
  9226  0720  0871               	movf	pollController@response,w
  9227  0721  3E0F               	addlw	15
  9228  0722  0086               	movwf	6
  9229  0723  0187               	clrf	7
  9230  0724  0870               	movf	??_pollController,w
  9231  0725  0081               	movwf	1
  9232  0726                     i1l1911:	
  9233                           
  9234                           ;main.c: 43: response[16] = analogStateSecond[5];
  9235  0726  0855               	movf	(_analogStateSecond^(0+128)+5),w
  9236  0727  00F0               	movwf	??_pollController
  9237  0728  0871               	movf	pollController@response,w
  9238  0729  3E10               	addlw	16
  9239  072A  0086               	movwf	6
  9240  072B  0187               	clrf	7
  9241  072C  0870               	movf	??_pollController,w
  9242  072D  0081               	movwf	1
  9243  072E                     i1l1913:	
  9244                           
  9245                           ;main.c: 44: response[17] = analogStateSecond[4];
  9246  072E  0854               	movf	(_analogStateSecond^(0+128)+4),w
  9247  072F  00F0               	movwf	??_pollController
  9248  0730  0871               	movf	pollController@response,w
  9249  0731  3E11               	addlw	17
  9250  0732  0086               	movwf	6
  9251  0733  0187               	clrf	7
  9252  0734  0870               	movf	??_pollController,w
  9253  0735  0081               	movwf	1
  9254  0736                     i1l1915:	
  9255                           
  9256                           ;main.c: 45: response[18] = analogStateSecond[7];
  9257  0736  0857               	movf	(_analogStateSecond^(0+128)+7),w
  9258  0737  00F0               	movwf	??_pollController
  9259  0738  0871               	movf	pollController@response,w
  9260  0739  3E12               	addlw	18
  9261  073A  0086               	movwf	6
  9262  073B  0187               	clrf	7
  9263  073C  0870               	movf	??_pollController,w
  9264  073D  0081               	movwf	1
  9265  073E                     i1l1917:	
  9266                           
  9267                           ;main.c: 46: response[19] = analogStateSecond[6];
  9268  073E  0856               	movf	(_analogStateSecond^(0+128)+6),w
  9269  073F  00F0               	movwf	??_pollController
  9270  0740  0871               	movf	pollController@response,w
  9271  0741  3E13               	addlw	19
  9272  0742  0086               	movwf	6
  9273  0743  0187               	clrf	7
  9274  0744  0870               	movf	??_pollController,w
  9275  0745  0081               	movwf	1
  9276                           
  9277                           ;main.c: 47: }
  9278  0746  2F4B               	goto	i1l93
  9279  0747                     i1l1919:	
  9280                           
  9281                           ;main.c: 48: else {;main.c: 49: responseLength = 5;
  9282  0747  3005               	movlw	5
  9283  0748  00F0               	movwf	??_pollController
  9284  0749  0870               	movf	??_pollController,w
  9285  074A  00D0               	movwf	_responseLength
  9286  074B                     i1l93:	
  9287  074B  0008               	return
  9288  074C                     __end_of_pollController:	
  9289  007E                     btemp	set	126	;btemp
  9290  007E                     int$flags	set	126
  9291  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        28
    BSS         71
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     48      77
    BANK1            80      0      64
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    pollController@response	PTR unsigned char  size(1) Largest target is 20
		 -> response(BANK0[20]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _PS2Command in COMMON

    _PS2Command->i1_reversebyte

Critical Paths under _main in BANK0

    _main->_lutInit
    _readControllerAnalog->_readADC
    _picInit->_spiInit
    _lutInit->_Map
    _Map->___awdiv
    ___awdiv->___wmul
    _configureController->_readADC

Critical Paths under _PS2Command in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _PS2Command in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _PS2Command in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _PS2Command in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _PS2Command in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _PS2Command in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _PS2Command in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _PS2Command in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _PS2Command in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _PS2Command in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _PS2Command in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _PS2Command in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _PS2Command in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _PS2Command in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _PS2Command in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _PS2Command in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _PS2Command in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _PS2Command in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _PS2Command in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _PS2Command in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _PS2Command in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _PS2Command in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _PS2Command in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _PS2Command in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _PS2Command in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _PS2Command in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   10150
                                             44 BANK0      4     4      0
                         _IO_MAPPING
                            _adcInit
                _configureController
                            _lutInit
                            _picInit
                     _readController
               _readControllerAnalog
 ---------------------------------------------------------------------------------
 (1) _readControllerAnalog                                 3     3      0    1697
                                              9 BANK0      3     3      0
                            _readADC
                        _reversebyte
 ---------------------------------------------------------------------------------
 (2) _reversebyte                                          4     4      0     226
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _picInit                                              2     2      0     456
                                              4 BANK0      2     2      0
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _lutInit                                             19    19      0    4182
                                             25 BANK0     19    19      0
                                _Map
                         _eepromRead
 ---------------------------------------------------------------------------------
 (2) _eepromRead                                           3     3      0      65
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _Map                                                 10     0     10    2785
                                             15 BANK0     10     0     10
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     452
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _configureController                                 13    13      0    3487
                                              9 BANK0     13    13      0
                        _eepromWrite
                            _readADC
                     _readController
 ---------------------------------------------------------------------------------
 (1) _readController                                       3     3      0     124
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _readADC                                              9     7      2    1471
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) _eepromWrite                                          3     2      1     816
                                              0 BANK0      3     2      1
                          _nvmUnlock
 ---------------------------------------------------------------------------------
 (3) _nvmUnlock                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IO_MAPPING                                           0     0      0       0
                            _ppsLock
                          _ppsUnlock
 ---------------------------------------------------------------------------------
 (2) _ppsUnlock                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ppsLock                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _PS2Command                                           2     2      0     972
                                              4 COMMON     2     2      0
                     _pollController
                            _spiRead
                           _spiWrite
                      i1_reversebyte
 ---------------------------------------------------------------------------------
 (5) i1_reversebyte                                        4     4      0     157
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (5) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (6) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _pollController                                       2     2      0     462
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IO_MAPPING
     _ppsLock
     _ppsUnlock
   _adcInit
   _configureController
     _eepromWrite
       _nvmUnlock
     _readADC
     _readController
   _lutInit
     _Map
       ___awdiv
         ___wmul (ARG)
       ___wmul
     _eepromRead
   _picInit
     _spiInit
   _readController
   _readControllerAnalog
     _readADC
     _reversebyte

 _PS2Command (ROOT)
   _pollController
   _spiRead
     _spiReceiveWait
   _spiWrite
   i1_reversebyte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     30      4D       5       96.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      40       7       80.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      99      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      99      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              30      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14               0      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15               0      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16               0      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17               0      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18               0      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19               0      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20               0      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21               0      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22               0      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23               0      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Dec 04 15:40:47 2021

                  __CFG_CP$OFF 0000                   ___awdiv@sign 002C            ___wmul@multiplicand 0022  
        __end_ofi1_reversebyte 0F3B                            l301 0EE2                            l310 07B5  
                          l304 0F04                            l320 04F2                            l321 04FC  
                          l402 0EA4                            l322 0506                            l162 0FC7  
                          l323 0510                            l307 07EC                            l412 0DDD  
                          l404 0EA9                            l164 0FDC                            l317 04D4  
                          l406 0EB1                            l270 0667                            l326 0564  
                          l318 04DE                            l351 0DD6                            l319 04E8  
                          l272 068B                            l264 05DF                            l360 0E2F  
                          l409 07FE                            l354 0DE5                            l274 06A8  
                          l268 0643                            l372 0E16                            l357 0DEF  
                          l277 0E8C                            l373 0E1B                            l455 0ED9  
                          l607 0E56                            l609 0E6A                            l298 0403  
                          l760 0F9A                            _RA0 0060                            _RA1 0061  
                          _RB0 0068                            _RA2 0062                            _RB1 0069  
                          _RA3 0063                            _RA4 0064                            _RB2 006A  
                          _RA5 0065                            _RB3 006B                            _RA6 0066  
                          _RD0 0078                            _RC2 0072                            _RB4 006C  
                          _RA7 0067                            _RB5 006D                            _RB6 006E  
                          _RB7 006F                            _RD4 007C                   __CFG_CPD$OFF 0000  
                          u950 0F41                            u951 0F40                            u960 0F4C  
                          u961 0F4B                            u970 0F5D                            u971 0F5C  
                          u990 0F6D                            u991 0F6C                            u985 0F61  
                          _Map 0E6B                   __CFG_BORV$LO 0000                            wreg 0009  
               eepromRead@data 0022                   __CFG_LVP$OFF 0000                   __CFG_ZCD$OFF 0000  
                         ?_Map 002F                           l2401 07F1                           l2331 0DDC  
                         l2411 0EDF                           l2403 07F7                           l2421 0E93  
                         l2413 0EE1                           l2341 0E60                           l2333 0E4B  
                         l2431 0E9D                           l2423 0E94                           l2415 0EE6  
                         l2407 0EDA                           l2343 0E66                           l2335 0E4E  
                         l2511 028E                           l2503 0255                           l2441 0DD5  
                         l2329 0DD7                           l2433 0EA1                           l2425 0E96  
                         l2409 0EDE                           l2361 05D6                           l2353 0567  
                         l2337 0E52                           l2521 02F5                           l2513 02BD  
                         l2505 0263                           l2601 074C                           l2443 0DDE  
                         l2435 0EAA                           l2427 0E97                           l2419 0E8F  
                         l2371 0610                           l2363 05E8                           l2355 05C6  
                         l2339 0E5B                           l2531 035C                           l2523 0324  
                         l2515 02CA                           l2507 0270                           l2451 0E1C  
                         l2347 07B8                           l2611 0FAD                           l2603 0F9B  
                         l2461 0EB2                           l2437 0EB0                           l2429 0E99  
                         l2381 0639                           l2373 0615                           l2365 05F1  
                         l2357 05CC                           l1741 0F3D                           l2541 03C3  
                         l2533 038B                           l2525 0331                           l2517 02D7  
                         l2509 027C                           l2445 0E0A                           l2453 0E2A  
                         l2349 07EB                           l2621 0FBF                           l2613 0FAE  
                         l2605 0FA4                           l2439 0DD0                           l2471 0ECC  
                         l2463 0EBD                           l2391 0683                           l2383 063E  
                         l2367 05FF                           l2375 061A                           l2359 05CD  
                         l2551 0467                           l1751 0F51                           l1743 0F41  
                         l2543 03F2                           l2535 0398                           l2527 033E  
                         l2519 02E3                           l2447 0E0E                           l2455 0E2B  
                         l2631 0FD8                           l2623 0FC4                           l2615 0FAF  
                         l2607 0FA7                           l2481 0ED6                           l2473 0ECD  
                         l2465 0EBF                           l2393 06A4                           l2385 064D  
                         l2377 0628                           l2369 0604                           l2561 047D  
                         l2553 046B                           l1761 0F65                           l1753 0F55  
                         l1745 0F46                           l2545 03F6                           l2537 03A5  
                         l2529 034A                           l2449 0E12                           l2457 0E2C  
                         l2641 0FEE                           l2633 0FE2                           l2625 0FC9  
                         l2617 0FB6                           l2609 0FAC                           l2475 0ECF  
                         l2467 0EC2                           l2491 0DEC                           l2483 0DE6  
                         l2387 065F                           l2379 062D                           l2571 0493  
                         l2563 0482                           l2555 0472                           l2547 0404  
                         l1771 0F81                           l1763 0F69                           l1755 0F57  
                         l1747 0F48                           l1739 0F3B                           l2395 0E6B  
                         l2539 03B1                           l2459 0E2E                           l2643 0FF2  
                         l2635 0FE3                           l2627 0FCD                           l2619 0FBC  
                         l2477 0ED0                           l2469 0EC3                           l2493 0DEE  
                         l2485 0DE9                           l2389 0671                           l2581 04DA  
                         l2565 0483                           l2557 0478                           l2549 0406  
                         l1773 0F86                           l1765 0F6D                           l1757 0F5D  
                         l1749 0F4C                           l2645 0FF6                           l2637 0FE7  
                         l2629 0FD2                           l2479 0ED3                           l2487 0DEA  
                         l2591 050C                           l2583 04E4                           l2575 049A  
                         l2567 0488                           l2559 0479                           l1767 0F7C  
                         l1759 0F60                           l1775 0F8C                           l2399 07EF  
                         l2495 0213                           l2647 0FFA                           l2639 0FED  
                         l2489 0DEB                           l2593 0516                           l2585 04EE  
                         l2577 04CA                           l2569 048D                           l1777 0F91  
                         l1769 0F80                           l2497 0253                           l2587 04F8  
                         l2579 04D0                           l2595 051B                           l1779 0F96  
                         l2597 0562                           l2589 0502                           l2599 0563  
                         u1010 0F7C                           u1011 0F7B                           u1005 0F6E  
                         u1030 0F8C                           u1031 0F8B                           u1015 0F78  
                         u1040 0F91                           u1041 0F90                           u1025 0F82  
                         u2010 065F                           u2011 065E                           u2020 0671  
                         u2004 0653                           u2100 0E0E                           u2021 0670  
                         u2005 0652                           u2101 0E0D                           u2110 0263  
                         u2111 0262                           u2040 0683                           u2200 0472  
                         u2120 027C                           u2041 0682                           u2201 0471  
                         u2121 027B                           u2050 0EE6                           u2034 0677  
                         u2210 0478                           u2130 02CA                           u2051 0EE5  
                         u2035 0676                           u2211 0477                           u2131 02C9  
                         u2115 025F                           u2300 050C                           u2220 0493  
                         u2140 02E3                           u2301 050B                           u2221 0492  
                         u2141 02E2                           u2125 0278                           u2310 0516  
                         u2230 0499                           u2150 0331                           u2311 0515  
                         u2231 0498                           u2151 0330                           u2135 02C6  
                         u2080 0EA9                           u2240 04D0                           u2160 034A  
                         u2320 0FB6                           u2081 0EA8                           u2065 0EEA  
                         u2241 04CF                           u2161 0349                           u2145 02DF  
                         u2321 0FB5                           u2090 0EB0                           u2250 04DA  
                         u2170 0398                           u2330 0FBC                           u2091 0EAF  
                         u2075 0EF6                           u2251 04D9                           u2171 0397  
                         u2155 032D                           u2331 0FBB                           u2260 04E4  
                         u2180 03B1                           u2340 0FC4                           u2261 04E3  
                         u2181 03B0                           u2165 0346                           u2341 0FC3  
                         u2270 04EE                           u2190 0403                           u2350 0FD2  
                         u2271 04ED                           u2191 0402                           u2175 0394  
                         u2351 0FD1                           u2280 04F8                           u2360 0FD8  
                         u2281 04F7                           u2185 03AD                           u2361 0FD7  
                         u2290 0502                           u1810 0E52                           u2370 0FE2  
                         u2291 0501                           u1811 0E51                           u2195 03FF  
                         u2371 0FE1                           u1900 05CC                           u2380 0FED  
                         u1901 05CB                           u2381 0FEC                           u1910 05D6  
                         u1911 05D5                           u1920 05E8                           u1840 0E66  
                         u1921 05E7                           u1841 0E65                           u1825 0E57  
                         u1930 05FF                           u1931 05FE                           u1835 0E5C  
                         u1950 0615                           u1951 0614                           u1855 07BC  
                         u1960 0628                           u1944 060A                           u1961 0627  
                         u1945 0609                           u1865 07C2                           u1875 07CF  
                         u1980 063E                           u1981 063D                           u1885 07D5  
                         u1990 064D                           u1974 0633                           u1991 064C  
                         u1975 0632                           u1895 07E2                           i1l93 074B  
                         Map@x 002F                           _WPUA 0F39                           _WPUB 0F44  
                         _WPUC 0F4F                           _WPUD 0F5A                           _WPUE 0F65  
                 __CFG_WRT$OFF 0000                  __CFG_FCMEN$ON 0000                    ?_IO_MAPPING 0070  
                         _main 0F9B                           fsr0h 0005                           fsr1h 0007  
                         indf0 0000                           fsr0l 0004                           indf1 0001  
                         fsr1l 0006                           btemp 007E                  __CFG_BOREN$ON 0000  
                         start 01DE                    ?_PS2Command 0070                  __CFG_CSWEN$ON 0000  
              lutInit@position 004A              i1reversebyte@byte 0073                          ??_Map 0039  
     configureController@lxMax 002B       configureController@lxMin 002A       configureController@lyMax 002D  
     configureController@lyMin 002C       configureController@rxMax 002F       configureController@rxMin 002E  
     configureController@ryMax 0031       configureController@ryMin 0030                          _ADACQ 009D  
                        ?_main 0070                          _ADCLK 0098                          _ADPCH 009E  
              __end_of_adcInit 0DF0                          _ADREF 009A                __end_of___awdiv 0F9B  
                        _ADPRE 009C                  __CFG_WDTE$OFF 0000                ___awdiv@divisor 0026  
     main@slaveSelectStatePrev 004D                          i1l105 0020                          i1l153 01D0  
                        i1l307 0F3A                          i1l155 01DC                          i1l149 01B4  
                        i1l382 0DC3                          i1l376 0DC4                          i1l385 0DCF  
                        i1l379 0DC9                ___awdiv@counter 002B                          _TRISA 0011  
                        _TRISB 0012                          _TRISC 0013                          _TRISD 0014  
                        _TRISE 0015    __end_of_configureController 0565                __end_of_readADC 0F05  
              __end_of_picInit 0E30                          _index 007A  __size_of_readControllerAnalog 006A  
                        _lutLX 26F0                          _lutLY 25F0                          _lutRX 24F0  
                        _lutRY 23F0                __end_of_lutInit 0404                __end_of_ppsLock 0DE6  
              __end_of_spiInit 0E1C                __end_of_spiRead 0DD0                          status 0003  
                        wtemp0 007E                  PS2Command@cmd 0075                 __CFG_MCLRE$OFF 0000  
              __initialization 01E0                   __end_of_main 1000                         ??_main 004C  
          __size_of_IO_MAPPING 0028            __size_of_PS2Command 01DA                         _ADCON0 0093  
                       _ADCON1 0094                         _ADCON2 0095                         _ADRESH 008D  
                       _ADRESL 008C               ___awdiv@dividend 0028                         _ANSELA 0F38  
                       _ANSELB 0F43                         _ANSELC 0F4E                         _ANSELD 0F59  
                       _ANSELE 0F64           _PreviousDigitalByte1 00B8           _PreviousDigitalByte2 00B0  
                       i1l2101 002C                         i1l2111 003F                         i1l2103 002E  
                       i1l2201 0100                         i1l2113 0042                         i1l2121 0053  
                       i1l2105 0034                         i1l2211 0118                         i1l2203 0109  
                       i1l2131 006A                         i1l2123 0056                         i1l2115 0046  
                       i1l2107 0037                         _RC5PPS 0F25                         i1l2221 012D  
                       i1l2213 011E                         i1l2205 010E                         i1l2141 0079  
                       i1l2133 006E                         i1l2125 005A                         i1l2117 004A  
                       i1l2109 0039                         i1l2215 0121                         i1l2207 0113  
                       i1l2151 0095                         i1l2135 0072                         i1l2127 005F  
                       i1l2119 004E                         i1l2081 0F06                         i1l2233 013F  
                       i1l2225 0132                         i1l2217 0125                         i1l2209 0114  
                       i1l2161 00B2                         i1l2153 009B                         i1l2137 0073  
                       i1l2129 0064                         i1l2083 0F39                         i1l2251 016F  
                       i1l2243 014A                         i1l2235 0143                         i1l2227 0135  
                       i1l2219 0129                         i1l2171 00BF                         i1l2163 00B5  
                       i1l2139 0075                         i1l2091 0012                         i1l2261 01A4  
                       i1l2245 0164                         i1l2237 0147                         i1l2229 0139  
                       i1l2181 00DB                         i1l2173 00C3                         i1l2165 00B9  
                       i1l2149 007E                         i1l2093 0018                         i1l2271 01BE  
                       i1l2263 01A8                         i1l2247 016A                         i1l2239 0148  
                       i1l2191 00F3                         i1l2183 00E1                         i1l2175 00C8  
                       i1l2167 00BA                         i1l2159 00A7                         i1l2095 001D  
                       i1l2255 0192                         i1l2087 0006                         i1l2273 01C3  
                       i1l2281 01DA                         i1l2265 01AA                         i1l2193 00FB  
                       i1l2185 00E9                         i1l2177 00CD                         i1l2169 00BB  
                       i1l2097 0023                         i1l2257 019A                         i1l2089 000B  
                       i1l2275 01C7                         i1l2267 01B0                         i1l2259 01A2  
                       i1l2179 00DA                         i1l2099 0029                         i1l1901 06FE  
                       i1l2277 01CC                         i1l2269 01B9                         i1l2189 00EE  
                       i1l1911 0726                         i1l1903 0706                         i1l2279 01D6  
                       i1l1913 072E                         i1l1905 070E                         i1l1921 0DCA  
                       i1l1915 0736                         i1l1907 0716                         i1l1923 0DCD  
                       i1l1917 073E                         i1l1909 071E                         i1l1919 0747  
                       i1l1927 0DC0                         u131_20 0DC9                         u131_21 0DC8  
                       i1l1891 06DB                         i1l1893 06E1                         i1l1895 06E5  
                       i1l1887 0DC4                         u132_20 06E1                         i1l1897 06EE  
                       u132_21 06E0                         i1l1889 06AA                 __CFG_WDTCCS$SC 0000  
                       i1l1899 06F6                         u160_20 001D                         u160_21 001C  
                       u161_20 0029                         u161_21 0028                         u170_20 01B9  
                       u162_20 0034                         u170_21 01B8                         u162_21 0033  
                       u154_25 0F0A                         u171_20 01C3                         u163_20 003F  
                       u171_21 01C2                         u163_21 003E                         u155_25 0F10  
                       u172_20 01CC                         u164_20 006A                         u172_21 01CB  
                       u164_21 0069                         u156_25 0F1D                         u173_20 01D6  
                       u165_20 00A6                         u173_21 01D5                         u165_21 00A5  
                       u157_25 0F23                         u166_20 00CD                         u166_21 00CC  
                       u158_25 0F30                         u167_20 00F3                         u159_20 000B  
                       u167_21 00F2                         u159_21 000A                         u168_20 010E  
                       u168_21 010D                         u169_20 01B0                         u169_21 01AF  
                       _SSP1IE 38C8                         _SSP1IF 3878                 __CFG_PWRTE$OFF 0000  
         __size_of_eepromWrite 0025                         ___wmul 0E4B                      ??_adcInit 0020  
                    ??___awdiv 002A                 __CFG_STVREN$ON 0000        __size_of_pollController 00A3  
                       _lxData 0053                         _lyData 0052                eepromWrite@data 0020  
                       _rxData 007B               ___awdiv@quotient 002D                         _ryData 0054  
                 ?_reversebyte 0070                      ??_readADC 0022                      ??_picInit 0024  
                 __pdataCOMMON 007B                      ??_lutInit 0039               __end_of_spiWrite 0DC4  
                    ??_ppsLock 0020                      ??_spiInit 0023                      ??_spiRead 0070  
            _IndexDigitalByte1 00A8              _IndexDigitalByte2 00A0        __end_of__initialization 020F  
               __pcstackCOMMON 0070                   __pidataBANK0 0E30         _DigitalControllerByte1 00C8  
       _DigitalControllerByte2 00C0              eepromRead@address 0021        __size_of_readController 0144  
                   _cmdCounter 0079                     __pbssBANK0 006B                     __pbssBANK1 00A0  
                 ??_IO_MAPPING 0020                     _analogMode 0078                   ??_PS2Command 0074  
                   __pmaintext 0F9B                        ?___wmul 0020                     __pintentry 0004  
      __size_of_spiReceiveWait 0006            __CFG_RSTOSC$HFINT32 0000             __size_of_nvmUnlock 0007  
           __size_of_ppsUnlock 0007                     _eepromRead 07ED             __end_of_IO_MAPPING 0EDA  
   eepromWrite@interruptStatus 0022                        _NVMADRH 081B                        _NVMADRL 081A  
                      _NVMDATL 081C                        _NVMCON2 081F             __end_of_PS2Command 01DE  
                      _PPSLOCK 0E8F                        _SSP1BUF 018C                     _escapeMode 0077  
     readController@analogMode 0022         __size_ofi1_reversebyte 0036   __end_of_readControllerAnalog 07B6  
         __CFG_SCANE$available 0000                      ?_spiWrite 0070                        _adcInit 0DE6  
                      ___awdiv 0F3B                 _pollController 06A9                __size_of___wmul 0020  
                      __ptext1 074C                        __ptext2 07B6                        __ptext3 0E1C  
                      __ptext4 0E08                        __ptext5 0213                        __ptext6 07ED  
                      __ptext7 0E6B                        __ptext8 0E4B                        __ptext9 0F3B  
                      _readADC 0EDA                   __size_of_Map 0022                        _picInit 0E1C  
         __size_of_reversebyte 0037                        _lutInit 0213                        _ppsLock 0DDE  
                      _spiInit 0E08                        _spiRead 0DCA                        clrloop0 0DF1  
         end_of_initialization 020F                        init_ram 0DFC   __size_of_configureController 0161  
                      initloop 0DFD              __end_of_nvmUnlock 0DDE              __end_of_ppsUnlock 0DD7  
       __end_of_pollController 074C                     ??_spiWrite 0070                reversebyte@byte 0023  
        __CFG_WDTCPS$WDTCPS_31 0000                      Map@outMax 0037                      Map@outMin 0035  
                i1_reversebyte 0F05                    ?_eepromRead 0070                 _readController 0565  
                    _TRISAbits 0011                      _TRISCbits 0013                    spiWrite@dat 0070  
             __CFG_FEXTOSC$OFF 0000     _INIT_PRESSURE_SENSOR_byte3 006C     _INIT_PRESSURE_SENSOR_byte4 006B  
           _digitalStateSecond 0055                  ??_eepromWrite 0021                ?_pollController 0070  
               _spiReceiveWait 0DC4                 __end_of___wmul 0E6B                  __pidataCOMMON 07FF  
               ?i1_reversebyte 0070         __end_of_readController 06A9            start_initialization 01E0  
                  __end_of_Map 0E8D           _readControllerAnalog 074C                  _debounceLoops 0051  
          __size_of_eepromRead 0012               __CFG_LPBOREN$OFF 0000         __end_of_spiReceiveWait 0DCA  
          __end_of_eepromWrite 0EB2                       ??___wmul 0024                    __pdataBANK0 0050  
              ?_readController 0070                    __pbssBIGRAM 23F0                    __pbssCOMMON 0076  
                    ___latbits 0003                  __pcstackBANK0 0020          configureController@lx 0032  
        configureController@ly 0033          configureController@rx 0034          configureController@ry 0035  
        ?_readControllerAnalog 0070                 _responseLength 0050              _analogStateSecond 00D0  
              ?_spiReceiveWait 0070                       ?_adcInit 0070                       ?___awdiv 0026  
              ??i1_reversebyte 0070               __CFG_PPS1WAY$OFF 0000              __size_of_spiWrite 0005  
          _configureController 0404                       ?_readADC 0020                       ?_picInit 0070  
                     ?_lutInit 0070                       ?_ppsLock 0070                       ?_spiInit 0020  
                     ?_spiRead 0070             eepromWrite@address 0021           spiInit@sTransmitEdge 0022  
         ?_configureController 0070                 ___wmul@product 0024                    _eepromWrite 0E8D  
                    clear_ram0 0DF0             spiInit@sDataSample 0020                      _nvmUnlock 0DD7  
                     Map@inMax 0033                       Map@inMin 0031                      _ppsUnlock 0DD0  
                     _SSP1CON1 0190                       _SSP1STAT 018F                  ??_reversebyte 0020  
                   _ADCON0bits 0093              ___wmul@multiplier 0020                   lutInit@lxMax 0043  
                 lutInit@lxMin 0042                   lutInit@lyMax 0045                   lutInit@lyMin 0044  
            _digitalStateFirst 0056                   lutInit@rxMax 0047                   lutInit@rxMin 0046  
                 lutInit@ryMax 0049                   lutInit@ryMin 0048                   ??_eepromRead 0020  
                    main@count 004E         ??_readControllerAnalog 0029          ??_configureController 0029  
             ??_pollController 0070             __end_of_eepromRead 07FF                     ?_nvmUnlock 0070  
                   ?_ppsUnlock 0070               __size_of_adcInit 000A               __size_of___awdiv 0060  
               readADC@channel 0020               _analogStateFirst 00D8               __size_of_readADC 002B  
             __size_of_picInit 0014            __end_of_reversebyte 07ED               __size_of_lutInit 01F1  
                     __ptext10 0404                       __ptext11 0565                       __ptext20 0F05  
                     __ptext12 0EDA                       __ptext21 0DBF                       __ptext13 0E8D  
                     __ptext22 0DCA                       __ptext14 0DD7                       __ptext23 0DC4  
                     __ptext15 0DE6                       __ptext24 06A9                       __ptext16 0EB2  
                     __ptext17 0DD0                       __ptext18 0DDE               __size_of_ppsLock 0008  
             __size_of_spiInit 0014               __size_of_spiRead 0006                  __size_of_main 0065  
         __CFG_WDTCWS$WDTCWS_7 0000                       _response 0057               ??_readController 0020  
                     _spiWrite 0DBF                       int$flags 007E                   spiInit@sType 0023  
              main@slaveSelect 004F                   _SSP1STATbits 018F              spiInit@sClockIdle 0021  
                   _INTCONbits 000B                    _NVMCON1bits 081E         pollController@response 0071  
                     intlevel1 0000                     _IO_MAPPING 0EB2               ??_spiReceiveWait 0070  
            __CFG_CLKOUTEN$OFF 0000                     _PS2Command 0004                    ??_nvmUnlock 0020  
                  ??_ppsUnlock 0020                    _reversebyte 07B6                    _previousCmd 0076  
                 ?_eepromWrite 0020  
