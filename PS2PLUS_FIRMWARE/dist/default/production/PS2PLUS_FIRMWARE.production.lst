

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Dec 06 10:22:49 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18876
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	dabs	1,0xCA0,32
    46                           	dabs	1,0xC20,80
    47                           	dabs	1,0xBA0,80
    48                           	dabs	1,0xB30,64
    49                           	dabs	1,0xB20,16
    50                           	dabs	1,0xAA0,80
    51                           	dabs	1,0xA20,80
    52                           	dabs	1,0x9A0,80
    53                           	dabs	1,0x920,80
    54                           	dabs	1,0x8A0,80
    55                           	dabs	1,0x820,80
    56                           	dabs	1,0x7E0,16
    57                           	dabs	1,0x7A0,64
    58                           	dabs	1,0x720,80
    59                           	dabs	1,0x6A0,80
    60                           	dabs	1,0x650,32
    61                           	dabs	1,0x23F0,0,_lutRY
    62                           	dabs	1,0x24F0,0,_lutRX
    63                           	dabs	1,0x25F0,0,_lutLY
    64                           	dabs	1,0x26F0,0,_lutLX
    65                           	dabs	1,0x7E,2
    66  0000                     
    67                           ; Version 2.10
    68                           ; Generated 31/07/2019 GMT
    69                           ; 
    70                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC16F18876 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101  0000                     	;# 
   102  0001                     	;# 
   103  0002                     	;# 
   104  0003                     	;# 
   105  0004                     	;# 
   106  0005                     	;# 
   107  0006                     	;# 
   108  0007                     	;# 
   109  0008                     	;# 
   110  0009                     	;# 
   111  000A                     	;# 
   112  000B                     	;# 
   113  000C                     	;# 
   114  000D                     	;# 
   115  000E                     	;# 
   116  000F                     	;# 
   117  0010                     	;# 
   118  0011                     	;# 
   119  0012                     	;# 
   120  0013                     	;# 
   121  0014                     	;# 
   122  0015                     	;# 
   123  0016                     	;# 
   124  0017                     	;# 
   125  0018                     	;# 
   126  0019                     	;# 
   127  001A                     	;# 
   128  001C                     	;# 
   129  001C                     	;# 
   130  001D                     	;# 
   131  001D                     	;# 
   132  001E                     	;# 
   133  001F                     	;# 
   134  008C                     	;# 
   135  008C                     	;# 
   136  008D                     	;# 
   137  008E                     	;# 
   138  008E                     	;# 
   139  008F                     	;# 
   140  0090                     	;# 
   141  0090                     	;# 
   142  0091                     	;# 
   143  0093                     	;# 
   144  0094                     	;# 
   145  0095                     	;# 
   146  0096                     	;# 
   147  0097                     	;# 
   148  0098                     	;# 
   149  0099                     	;# 
   150  009A                     	;# 
   151  009B                     	;# 
   152  009C                     	;# 
   153  009D                     	;# 
   154  009E                     	;# 
   155  010C                     	;# 
   156  010D                     	;# 
   157  010E                     	;# 
   158  010E                     	;# 
   159  010F                     	;# 
   160  0110                     	;# 
   161  0110                     	;# 
   162  0111                     	;# 
   163  0112                     	;# 
   164  0112                     	;# 
   165  0113                     	;# 
   166  0114                     	;# 
   167  0114                     	;# 
   168  0115                     	;# 
   169  0116                     	;# 
   170  0116                     	;# 
   171  0117                     	;# 
   172  0119                     	;# 
   173  0119                     	;# 
   174  0119                     	;# 
   175  011A                     	;# 
   176  011A                     	;# 
   177  011A                     	;# 
   178  011B                     	;# 
   179  011B                     	;# 
   180  011B                     	;# 
   181  011B                     	;# 
   182  011B                     	;# 
   183  011C                     	;# 
   184  011C                     	;# 
   185  011C                     	;# 
   186  011D                     	;# 
   187  011D                     	;# 
   188  011D                     	;# 
   189  011E                     	;# 
   190  011E                     	;# 
   191  011E                     	;# 
   192  011F                     	;# 
   193  011F                     	;# 
   194  011F                     	;# 
   195  011F                     	;# 
   196  011F                     	;# 
   197  018C                     	;# 
   198  018D                     	;# 
   199  018E                     	;# 
   200  018F                     	;# 
   201  0190                     	;# 
   202  0191                     	;# 
   203  0192                     	;# 
   204  0196                     	;# 
   205  0197                     	;# 
   206  0198                     	;# 
   207  0199                     	;# 
   208  019A                     	;# 
   209  019B                     	;# 
   210  019C                     	;# 
   211  020C                     	;# 
   212  020C                     	;# 
   213  020D                     	;# 
   214  020E                     	;# 
   215  020F                     	;# 
   216  020F                     	;# 
   217  0210                     	;# 
   218  0210                     	;# 
   219  0211                     	;# 
   220  0211                     	;# 
   221  0212                     	;# 
   222  0212                     	;# 
   223  0213                     	;# 
   224  0214                     	;# 
   225  0215                     	;# 
   226  0215                     	;# 
   227  0216                     	;# 
   228  0216                     	;# 
   229  0217                     	;# 
   230  0217                     	;# 
   231  0218                     	;# 
   232  0218                     	;# 
   233  0219                     	;# 
   234  021A                     	;# 
   235  021B                     	;# 
   236  021B                     	;# 
   237  021C                     	;# 
   238  021C                     	;# 
   239  021D                     	;# 
   240  021D                     	;# 
   241  021E                     	;# 
   242  021F                     	;# 
   243  028C                     	;# 
   244  028C                     	;# 
   245  028D                     	;# 
   246  028D                     	;# 
   247  028E                     	;# 
   248  028F                     	;# 
   249  0290                     	;# 
   250  0290                     	;# 
   251  0291                     	;# 
   252  0292                     	;# 
   253  0292                     	;# 
   254  0293                     	;# 
   255  0293                     	;# 
   256  0294                     	;# 
   257  0295                     	;# 
   258  0296                     	;# 
   259  0296                     	;# 
   260  0297                     	;# 
   261  0298                     	;# 
   262  0298                     	;# 
   263  0299                     	;# 
   264  0299                     	;# 
   265  029A                     	;# 
   266  029B                     	;# 
   267  029C                     	;# 
   268  029C                     	;# 
   269  029D                     	;# 
   270  030C                     	;# 
   271  030C                     	;# 
   272  030D                     	;# 
   273  030E                     	;# 
   274  030F                     	;# 
   275  0310                     	;# 
   276  0310                     	;# 
   277  0311                     	;# 
   278  0312                     	;# 
   279  0313                     	;# 
   280  0314                     	;# 
   281  0314                     	;# 
   282  0315                     	;# 
   283  0316                     	;# 
   284  0317                     	;# 
   285  0318                     	;# 
   286  0318                     	;# 
   287  0319                     	;# 
   288  031A                     	;# 
   289  031B                     	;# 
   290  031C                     	;# 
   291  031C                     	;# 
   292  031D                     	;# 
   293  031E                     	;# 
   294  031F                     	;# 
   295  038C                     	;# 
   296  038C                     	;# 
   297  038D                     	;# 
   298  038E                     	;# 
   299  0390                     	;# 
   300  0390                     	;# 
   301  0391                     	;# 
   302  0392                     	;# 
   303  040C                     	;# 
   304  040D                     	;# 
   305  040E                     	;# 
   306  040F                     	;# 
   307  0410                     	;# 
   308  0411                     	;# 
   309  0416                     	;# 
   310  0416                     	;# 
   311  0417                     	;# 
   312  0418                     	;# 
   313  0418                     	;# 
   314  0419                     	;# 
   315  041A                     	;# 
   316  041A                     	;# 
   317  041B                     	;# 
   318  041C                     	;# 
   319  041C                     	;# 
   320  041D                     	;# 
   321  041E                     	;# 
   322  041F                     	;# 
   323  048C                     	;# 
   324  048C                     	;# 
   325  048D                     	;# 
   326  048E                     	;# 
   327  048F                     	;# 
   328  048F                     	;# 
   329  0490                     	;# 
   330  0491                     	;# 
   331  0492                     	;# 
   332  0492                     	;# 
   333  0493                     	;# 
   334  0494                     	;# 
   335  0495                     	;# 
   336  0495                     	;# 
   337  0496                     	;# 
   338  0497                     	;# 
   339  0498                     	;# 
   340  0499                     	;# 
   341  049A                     	;# 
   342  049B                     	;# 
   343  049C                     	;# 
   344  049D                     	;# 
   345  050C                     	;# 
   346  050C                     	;# 
   347  050D                     	;# 
   348  050E                     	;# 
   349  050F                     	;# 
   350  050F                     	;# 
   351  0510                     	;# 
   352  0511                     	;# 
   353  0512                     	;# 
   354  0512                     	;# 
   355  0513                     	;# 
   356  0514                     	;# 
   357  0515                     	;# 
   358  0515                     	;# 
   359  0516                     	;# 
   360  0517                     	;# 
   361  0518                     	;# 
   362  0519                     	;# 
   363  051A                     	;# 
   364  051B                     	;# 
   365  051C                     	;# 
   366  051D                     	;# 
   367  058C                     	;# 
   368  058C                     	;# 
   369  058D                     	;# 
   370  058E                     	;# 
   371  058F                     	;# 
   372  058F                     	;# 
   373  0590                     	;# 
   374  0591                     	;# 
   375  0592                     	;# 
   376  0593                     	;# 
   377  060C                     	;# 
   378  060D                     	;# 
   379  060E                     	;# 
   380  060F                     	;# 
   381  0610                     	;# 
   382  0611                     	;# 
   383  0612                     	;# 
   384  0613                     	;# 
   385  0614                     	;# 
   386  0616                     	;# 
   387  0617                     	;# 
   388  0618                     	;# 
   389  0619                     	;# 
   390  061A                     	;# 
   391  061B                     	;# 
   392  061C                     	;# 
   393  061D                     	;# 
   394  061E                     	;# 
   395  068C                     	;# 
   396  068D                     	;# 
   397  068E                     	;# 
   398  068F                     	;# 
   399  0690                     	;# 
   400  0691                     	;# 
   401  0692                     	;# 
   402  0693                     	;# 
   403  0694                     	;# 
   404  070C                     	;# 
   405  070D                     	;# 
   406  070E                     	;# 
   407  070F                     	;# 
   408  0710                     	;# 
   409  0711                     	;# 
   410  0712                     	;# 
   411  0713                     	;# 
   412  0714                     	;# 
   413  0716                     	;# 
   414  0717                     	;# 
   415  0718                     	;# 
   416  0719                     	;# 
   417  071A                     	;# 
   418  071B                     	;# 
   419  071C                     	;# 
   420  071D                     	;# 
   421  071E                     	;# 
   422  0796                     	;# 
   423  0797                     	;# 
   424  0798                     	;# 
   425  0799                     	;# 
   426  079A                     	;# 
   427  079B                     	;# 
   428  080C                     	;# 
   429  080D                     	;# 
   430  080E                     	;# 
   431  080F                     	;# 
   432  0810                     	;# 
   433  0811                     	;# 
   434  0812                     	;# 
   435  0813                     	;# 
   436  0814                     	;# 
   437  081A                     	;# 
   438  081B                     	;# 
   439  081C                     	;# 
   440  081D                     	;# 
   441  081E                     	;# 
   442  081F                     	;# 
   443  088C                     	;# 
   444  088D                     	;# 
   445  088E                     	;# 
   446  088F                     	;# 
   447  0890                     	;# 
   448  0891                     	;# 
   449  0892                     	;# 
   450  0893                     	;# 
   451  0895                     	;# 
   452  0896                     	;# 
   453  0897                     	;# 
   454  0898                     	;# 
   455  0899                     	;# 
   456  089A                     	;# 
   457  089B                     	;# 
   458  090C                     	;# 
   459  090E                     	;# 
   460  090F                     	;# 
   461  091F                     	;# 
   462  098F                     	;# 
   463  098F                     	;# 
   464  0990                     	;# 
   465  0991                     	;# 
   466  0992                     	;# 
   467  0993                     	;# 
   468  0994                     	;# 
   469  0995                     	;# 
   470  0996                     	;# 
   471  0997                     	;# 
   472  0E0F                     	;# 
   473  0E10                     	;# 
   474  0E11                     	;# 
   475  0E12                     	;# 
   476  0E13                     	;# 
   477  0E14                     	;# 
   478  0E15                     	;# 
   479  0E16                     	;# 
   480  0E17                     	;# 
   481  0E18                     	;# 
   482  0E19                     	;# 
   483  0E1A                     	;# 
   484  0E1B                     	;# 
   485  0E1C                     	;# 
   486  0E1D                     	;# 
   487  0E1E                     	;# 
   488  0E1F                     	;# 
   489  0E20                     	;# 
   490  0E21                     	;# 
   491  0E22                     	;# 
   492  0E23                     	;# 
   493  0E24                     	;# 
   494  0E25                     	;# 
   495  0E26                     	;# 
   496  0E27                     	;# 
   497  0E28                     	;# 
   498  0E29                     	;# 
   499  0E2A                     	;# 
   500  0E2B                     	;# 
   501  0E2C                     	;# 
   502  0E2D                     	;# 
   503  0E2E                     	;# 
   504  0E2F                     	;# 
   505  0E30                     	;# 
   506  0E31                     	;# 
   507  0E32                     	;# 
   508  0E33                     	;# 
   509  0E34                     	;# 
   510  0E35                     	;# 
   511  0E36                     	;# 
   512  0E37                     	;# 
   513  0E8F                     	;# 
   514  0E90                     	;# 
   515  0E91                     	;# 
   516  0E92                     	;# 
   517  0E93                     	;# 
   518  0E94                     	;# 
   519  0E95                     	;# 
   520  0E96                     	;# 
   521  0E97                     	;# 
   522  0E9C                     	;# 
   523  0E9D                     	;# 
   524  0E9E                     	;# 
   525  0EA1                     	;# 
   526  0EA2                     	;# 
   527  0EA3                     	;# 
   528  0EA4                     	;# 
   529  0EA5                     	;# 
   530  0EA9                     	;# 
   531  0EAA                     	;# 
   532  0EAB                     	;# 
   533  0EAC                     	;# 
   534  0EB1                     	;# 
   535  0EB2                     	;# 
   536  0EB3                     	;# 
   537  0EB8                     	;# 
   538  0EB9                     	;# 
   539  0EBA                     	;# 
   540  0EBB                     	;# 
   541  0EBC                     	;# 
   542  0EBD                     	;# 
   543  0EBE                     	;# 
   544  0EC3                     	;# 
   545  0EC5                     	;# 
   546  0EC6                     	;# 
   547  0EC7                     	;# 
   548  0EC8                     	;# 
   549  0EC9                     	;# 
   550  0ECA                     	;# 
   551  0ECB                     	;# 
   552  0ECC                     	;# 
   553  0F10                     	;# 
   554  0F11                     	;# 
   555  0F12                     	;# 
   556  0F13                     	;# 
   557  0F14                     	;# 
   558  0F15                     	;# 
   559  0F16                     	;# 
   560  0F17                     	;# 
   561  0F18                     	;# 
   562  0F19                     	;# 
   563  0F1A                     	;# 
   564  0F1B                     	;# 
   565  0F1C                     	;# 
   566  0F1D                     	;# 
   567  0F1E                     	;# 
   568  0F1F                     	;# 
   569  0F20                     	;# 
   570  0F21                     	;# 
   571  0F22                     	;# 
   572  0F23                     	;# 
   573  0F24                     	;# 
   574  0F25                     	;# 
   575  0F26                     	;# 
   576  0F27                     	;# 
   577  0F28                     	;# 
   578  0F29                     	;# 
   579  0F2A                     	;# 
   580  0F2B                     	;# 
   581  0F2C                     	;# 
   582  0F2D                     	;# 
   583  0F2E                     	;# 
   584  0F2F                     	;# 
   585  0F30                     	;# 
   586  0F31                     	;# 
   587  0F32                     	;# 
   588  0F38                     	;# 
   589  0F39                     	;# 
   590  0F3A                     	;# 
   591  0F3B                     	;# 
   592  0F3C                     	;# 
   593  0F3D                     	;# 
   594  0F3E                     	;# 
   595  0F3F                     	;# 
   596  0F40                     	;# 
   597  0F41                     	;# 
   598  0F43                     	;# 
   599  0F44                     	;# 
   600  0F45                     	;# 
   601  0F46                     	;# 
   602  0F47                     	;# 
   603  0F48                     	;# 
   604  0F49                     	;# 
   605  0F4A                     	;# 
   606  0F4B                     	;# 
   607  0F4C                     	;# 
   608  0F4E                     	;# 
   609  0F4F                     	;# 
   610  0F50                     	;# 
   611  0F51                     	;# 
   612  0F52                     	;# 
   613  0F53                     	;# 
   614  0F54                     	;# 
   615  0F55                     	;# 
   616  0F56                     	;# 
   617  0F57                     	;# 
   618  0F59                     	;# 
   619  0F5A                     	;# 
   620  0F5B                     	;# 
   621  0F5C                     	;# 
   622  0F5D                     	;# 
   623  0F61                     	;# 
   624  0F62                     	;# 
   625  0F64                     	;# 
   626  0F65                     	;# 
   627  0F66                     	;# 
   628  0F67                     	;# 
   629  0F68                     	;# 
   630  0F69                     	;# 
   631  0F6A                     	;# 
   632  0F6B                     	;# 
   633  0F6C                     	;# 
   634  0F6D                     	;# 
   635  0FE4                     	;# 
   636  0FE5                     	;# 
   637  0FE6                     	;# 
   638  0FE7                     	;# 
   639  0FE8                     	;# 
   640  0FE9                     	;# 
   641  0FEA                     	;# 
   642  0FEB                     	;# 
   643  0FED                     	;# 
   644  0FEE                     	;# 
   645  0FEF                     	;# 
   646  0000                     	;# 
   647  0001                     	;# 
   648  0002                     	;# 
   649  0003                     	;# 
   650  0004                     	;# 
   651  0005                     	;# 
   652  0006                     	;# 
   653  0007                     	;# 
   654  0008                     	;# 
   655  0009                     	;# 
   656  000A                     	;# 
   657  000B                     	;# 
   658  000C                     	;# 
   659  000D                     	;# 
   660  000E                     	;# 
   661  000F                     	;# 
   662  0010                     	;# 
   663  0011                     	;# 
   664  0012                     	;# 
   665  0013                     	;# 
   666  0014                     	;# 
   667  0015                     	;# 
   668  0016                     	;# 
   669  0017                     	;# 
   670  0018                     	;# 
   671  0019                     	;# 
   672  001A                     	;# 
   673  001C                     	;# 
   674  001C                     	;# 
   675  001D                     	;# 
   676  001D                     	;# 
   677  001E                     	;# 
   678  001F                     	;# 
   679  008C                     	;# 
   680  008C                     	;# 
   681  008D                     	;# 
   682  008E                     	;# 
   683  008E                     	;# 
   684  008F                     	;# 
   685  0090                     	;# 
   686  0090                     	;# 
   687  0091                     	;# 
   688  0093                     	;# 
   689  0094                     	;# 
   690  0095                     	;# 
   691  0096                     	;# 
   692  0097                     	;# 
   693  0098                     	;# 
   694  0099                     	;# 
   695  009A                     	;# 
   696  009B                     	;# 
   697  009C                     	;# 
   698  009D                     	;# 
   699  009E                     	;# 
   700  010C                     	;# 
   701  010D                     	;# 
   702  010E                     	;# 
   703  010E                     	;# 
   704  010F                     	;# 
   705  0110                     	;# 
   706  0110                     	;# 
   707  0111                     	;# 
   708  0112                     	;# 
   709  0112                     	;# 
   710  0113                     	;# 
   711  0114                     	;# 
   712  0114                     	;# 
   713  0115                     	;# 
   714  0116                     	;# 
   715  0116                     	;# 
   716  0117                     	;# 
   717  0119                     	;# 
   718  0119                     	;# 
   719  0119                     	;# 
   720  011A                     	;# 
   721  011A                     	;# 
   722  011A                     	;# 
   723  011B                     	;# 
   724  011B                     	;# 
   725  011B                     	;# 
   726  011B                     	;# 
   727  011B                     	;# 
   728  011C                     	;# 
   729  011C                     	;# 
   730  011C                     	;# 
   731  011D                     	;# 
   732  011D                     	;# 
   733  011D                     	;# 
   734  011E                     	;# 
   735  011E                     	;# 
   736  011E                     	;# 
   737  011F                     	;# 
   738  011F                     	;# 
   739  011F                     	;# 
   740  011F                     	;# 
   741  011F                     	;# 
   742  018C                     	;# 
   743  018D                     	;# 
   744  018E                     	;# 
   745  018F                     	;# 
   746  0190                     	;# 
   747  0191                     	;# 
   748  0192                     	;# 
   749  0196                     	;# 
   750  0197                     	;# 
   751  0198                     	;# 
   752  0199                     	;# 
   753  019A                     	;# 
   754  019B                     	;# 
   755  019C                     	;# 
   756  020C                     	;# 
   757  020C                     	;# 
   758  020D                     	;# 
   759  020E                     	;# 
   760  020F                     	;# 
   761  020F                     	;# 
   762  0210                     	;# 
   763  0210                     	;# 
   764  0211                     	;# 
   765  0211                     	;# 
   766  0212                     	;# 
   767  0212                     	;# 
   768  0213                     	;# 
   769  0214                     	;# 
   770  0215                     	;# 
   771  0215                     	;# 
   772  0216                     	;# 
   773  0216                     	;# 
   774  0217                     	;# 
   775  0217                     	;# 
   776  0218                     	;# 
   777  0218                     	;# 
   778  0219                     	;# 
   779  021A                     	;# 
   780  021B                     	;# 
   781  021B                     	;# 
   782  021C                     	;# 
   783  021C                     	;# 
   784  021D                     	;# 
   785  021D                     	;# 
   786  021E                     	;# 
   787  021F                     	;# 
   788  028C                     	;# 
   789  028C                     	;# 
   790  028D                     	;# 
   791  028D                     	;# 
   792  028E                     	;# 
   793  028F                     	;# 
   794  0290                     	;# 
   795  0290                     	;# 
   796  0291                     	;# 
   797  0292                     	;# 
   798  0292                     	;# 
   799  0293                     	;# 
   800  0293                     	;# 
   801  0294                     	;# 
   802  0295                     	;# 
   803  0296                     	;# 
   804  0296                     	;# 
   805  0297                     	;# 
   806  0298                     	;# 
   807  0298                     	;# 
   808  0299                     	;# 
   809  0299                     	;# 
   810  029A                     	;# 
   811  029B                     	;# 
   812  029C                     	;# 
   813  029C                     	;# 
   814  029D                     	;# 
   815  030C                     	;# 
   816  030C                     	;# 
   817  030D                     	;# 
   818  030E                     	;# 
   819  030F                     	;# 
   820  0310                     	;# 
   821  0310                     	;# 
   822  0311                     	;# 
   823  0312                     	;# 
   824  0313                     	;# 
   825  0314                     	;# 
   826  0314                     	;# 
   827  0315                     	;# 
   828  0316                     	;# 
   829  0317                     	;# 
   830  0318                     	;# 
   831  0318                     	;# 
   832  0319                     	;# 
   833  031A                     	;# 
   834  031B                     	;# 
   835  031C                     	;# 
   836  031C                     	;# 
   837  031D                     	;# 
   838  031E                     	;# 
   839  031F                     	;# 
   840  038C                     	;# 
   841  038C                     	;# 
   842  038D                     	;# 
   843  038E                     	;# 
   844  0390                     	;# 
   845  0390                     	;# 
   846  0391                     	;# 
   847  0392                     	;# 
   848  040C                     	;# 
   849  040D                     	;# 
   850  040E                     	;# 
   851  040F                     	;# 
   852  0410                     	;# 
   853  0411                     	;# 
   854  0416                     	;# 
   855  0416                     	;# 
   856  0417                     	;# 
   857  0418                     	;# 
   858  0418                     	;# 
   859  0419                     	;# 
   860  041A                     	;# 
   861  041A                     	;# 
   862  041B                     	;# 
   863  041C                     	;# 
   864  041C                     	;# 
   865  041D                     	;# 
   866  041E                     	;# 
   867  041F                     	;# 
   868  048C                     	;# 
   869  048C                     	;# 
   870  048D                     	;# 
   871  048E                     	;# 
   872  048F                     	;# 
   873  048F                     	;# 
   874  0490                     	;# 
   875  0491                     	;# 
   876  0492                     	;# 
   877  0492                     	;# 
   878  0493                     	;# 
   879  0494                     	;# 
   880  0495                     	;# 
   881  0495                     	;# 
   882  0496                     	;# 
   883  0497                     	;# 
   884  0498                     	;# 
   885  0499                     	;# 
   886  049A                     	;# 
   887  049B                     	;# 
   888  049C                     	;# 
   889  049D                     	;# 
   890  050C                     	;# 
   891  050C                     	;# 
   892  050D                     	;# 
   893  050E                     	;# 
   894  050F                     	;# 
   895  050F                     	;# 
   896  0510                     	;# 
   897  0511                     	;# 
   898  0512                     	;# 
   899  0512                     	;# 
   900  0513                     	;# 
   901  0514                     	;# 
   902  0515                     	;# 
   903  0515                     	;# 
   904  0516                     	;# 
   905  0517                     	;# 
   906  0518                     	;# 
   907  0519                     	;# 
   908  051A                     	;# 
   909  051B                     	;# 
   910  051C                     	;# 
   911  051D                     	;# 
   912  058C                     	;# 
   913  058C                     	;# 
   914  058D                     	;# 
   915  058E                     	;# 
   916  058F                     	;# 
   917  058F                     	;# 
   918  0590                     	;# 
   919  0591                     	;# 
   920  0592                     	;# 
   921  0593                     	;# 
   922  060C                     	;# 
   923  060D                     	;# 
   924  060E                     	;# 
   925  060F                     	;# 
   926  0610                     	;# 
   927  0611                     	;# 
   928  0612                     	;# 
   929  0613                     	;# 
   930  0614                     	;# 
   931  0616                     	;# 
   932  0617                     	;# 
   933  0618                     	;# 
   934  0619                     	;# 
   935  061A                     	;# 
   936  061B                     	;# 
   937  061C                     	;# 
   938  061D                     	;# 
   939  061E                     	;# 
   940  068C                     	;# 
   941  068D                     	;# 
   942  068E                     	;# 
   943  068F                     	;# 
   944  0690                     	;# 
   945  0691                     	;# 
   946  0692                     	;# 
   947  0693                     	;# 
   948  0694                     	;# 
   949  070C                     	;# 
   950  070D                     	;# 
   951  070E                     	;# 
   952  070F                     	;# 
   953  0710                     	;# 
   954  0711                     	;# 
   955  0712                     	;# 
   956  0713                     	;# 
   957  0714                     	;# 
   958  0716                     	;# 
   959  0717                     	;# 
   960  0718                     	;# 
   961  0719                     	;# 
   962  071A                     	;# 
   963  071B                     	;# 
   964  071C                     	;# 
   965  071D                     	;# 
   966  071E                     	;# 
   967  0796                     	;# 
   968  0797                     	;# 
   969  0798                     	;# 
   970  0799                     	;# 
   971  079A                     	;# 
   972  079B                     	;# 
   973  080C                     	;# 
   974  080D                     	;# 
   975  080E                     	;# 
   976  080F                     	;# 
   977  0810                     	;# 
   978  0811                     	;# 
   979  0812                     	;# 
   980  0813                     	;# 
   981  0814                     	;# 
   982  081A                     	;# 
   983  081B                     	;# 
   984  081C                     	;# 
   985  081D                     	;# 
   986  081E                     	;# 
   987  081F                     	;# 
   988  088C                     	;# 
   989  088D                     	;# 
   990  088E                     	;# 
   991  088F                     	;# 
   992  0890                     	;# 
   993  0891                     	;# 
   994  0892                     	;# 
   995  0893                     	;# 
   996  0895                     	;# 
   997  0896                     	;# 
   998  0897                     	;# 
   999  0898                     	;# 
  1000  0899                     	;# 
  1001  089A                     	;# 
  1002  089B                     	;# 
  1003  090C                     	;# 
  1004  090E                     	;# 
  1005  090F                     	;# 
  1006  091F                     	;# 
  1007  098F                     	;# 
  1008  098F                     	;# 
  1009  0990                     	;# 
  1010  0991                     	;# 
  1011  0992                     	;# 
  1012  0993                     	;# 
  1013  0994                     	;# 
  1014  0995                     	;# 
  1015  0996                     	;# 
  1016  0997                     	;# 
  1017  0E0F                     	;# 
  1018  0E10                     	;# 
  1019  0E11                     	;# 
  1020  0E12                     	;# 
  1021  0E13                     	;# 
  1022  0E14                     	;# 
  1023  0E15                     	;# 
  1024  0E16                     	;# 
  1025  0E17                     	;# 
  1026  0E18                     	;# 
  1027  0E19                     	;# 
  1028  0E1A                     	;# 
  1029  0E1B                     	;# 
  1030  0E1C                     	;# 
  1031  0E1D                     	;# 
  1032  0E1E                     	;# 
  1033  0E1F                     	;# 
  1034  0E20                     	;# 
  1035  0E21                     	;# 
  1036  0E22                     	;# 
  1037  0E23                     	;# 
  1038  0E24                     	;# 
  1039  0E25                     	;# 
  1040  0E26                     	;# 
  1041  0E27                     	;# 
  1042  0E28                     	;# 
  1043  0E29                     	;# 
  1044  0E2A                     	;# 
  1045  0E2B                     	;# 
  1046  0E2C                     	;# 
  1047  0E2D                     	;# 
  1048  0E2E                     	;# 
  1049  0E2F                     	;# 
  1050  0E30                     	;# 
  1051  0E31                     	;# 
  1052  0E32                     	;# 
  1053  0E33                     	;# 
  1054  0E34                     	;# 
  1055  0E35                     	;# 
  1056  0E36                     	;# 
  1057  0E37                     	;# 
  1058  0E8F                     	;# 
  1059  0E90                     	;# 
  1060  0E91                     	;# 
  1061  0E92                     	;# 
  1062  0E93                     	;# 
  1063  0E94                     	;# 
  1064  0E95                     	;# 
  1065  0E96                     	;# 
  1066  0E97                     	;# 
  1067  0E9C                     	;# 
  1068  0E9D                     	;# 
  1069  0E9E                     	;# 
  1070  0EA1                     	;# 
  1071  0EA2                     	;# 
  1072  0EA3                     	;# 
  1073  0EA4                     	;# 
  1074  0EA5                     	;# 
  1075  0EA9                     	;# 
  1076  0EAA                     	;# 
  1077  0EAB                     	;# 
  1078  0EAC                     	;# 
  1079  0EB1                     	;# 
  1080  0EB2                     	;# 
  1081  0EB3                     	;# 
  1082  0EB8                     	;# 
  1083  0EB9                     	;# 
  1084  0EBA                     	;# 
  1085  0EBB                     	;# 
  1086  0EBC                     	;# 
  1087  0EBD                     	;# 
  1088  0EBE                     	;# 
  1089  0EC3                     	;# 
  1090  0EC5                     	;# 
  1091  0EC6                     	;# 
  1092  0EC7                     	;# 
  1093  0EC8                     	;# 
  1094  0EC9                     	;# 
  1095  0ECA                     	;# 
  1096  0ECB                     	;# 
  1097  0ECC                     	;# 
  1098  0F10                     	;# 
  1099  0F11                     	;# 
  1100  0F12                     	;# 
  1101  0F13                     	;# 
  1102  0F14                     	;# 
  1103  0F15                     	;# 
  1104  0F16                     	;# 
  1105  0F17                     	;# 
  1106  0F18                     	;# 
  1107  0F19                     	;# 
  1108  0F1A                     	;# 
  1109  0F1B                     	;# 
  1110  0F1C                     	;# 
  1111  0F1D                     	;# 
  1112  0F1E                     	;# 
  1113  0F1F                     	;# 
  1114  0F20                     	;# 
  1115  0F21                     	;# 
  1116  0F22                     	;# 
  1117  0F23                     	;# 
  1118  0F24                     	;# 
  1119  0F25                     	;# 
  1120  0F26                     	;# 
  1121  0F27                     	;# 
  1122  0F28                     	;# 
  1123  0F29                     	;# 
  1124  0F2A                     	;# 
  1125  0F2B                     	;# 
  1126  0F2C                     	;# 
  1127  0F2D                     	;# 
  1128  0F2E                     	;# 
  1129  0F2F                     	;# 
  1130  0F30                     	;# 
  1131  0F31                     	;# 
  1132  0F32                     	;# 
  1133  0F38                     	;# 
  1134  0F39                     	;# 
  1135  0F3A                     	;# 
  1136  0F3B                     	;# 
  1137  0F3C                     	;# 
  1138  0F3D                     	;# 
  1139  0F3E                     	;# 
  1140  0F3F                     	;# 
  1141  0F40                     	;# 
  1142  0F41                     	;# 
  1143  0F43                     	;# 
  1144  0F44                     	;# 
  1145  0F45                     	;# 
  1146  0F46                     	;# 
  1147  0F47                     	;# 
  1148  0F48                     	;# 
  1149  0F49                     	;# 
  1150  0F4A                     	;# 
  1151  0F4B                     	;# 
  1152  0F4C                     	;# 
  1153  0F4E                     	;# 
  1154  0F4F                     	;# 
  1155  0F50                     	;# 
  1156  0F51                     	;# 
  1157  0F52                     	;# 
  1158  0F53                     	;# 
  1159  0F54                     	;# 
  1160  0F55                     	;# 
  1161  0F56                     	;# 
  1162  0F57                     	;# 
  1163  0F59                     	;# 
  1164  0F5A                     	;# 
  1165  0F5B                     	;# 
  1166  0F5C                     	;# 
  1167  0F5D                     	;# 
  1168  0F61                     	;# 
  1169  0F62                     	;# 
  1170  0F64                     	;# 
  1171  0F65                     	;# 
  1172  0F66                     	;# 
  1173  0F67                     	;# 
  1174  0F68                     	;# 
  1175  0F69                     	;# 
  1176  0F6A                     	;# 
  1177  0F6B                     	;# 
  1178  0F6C                     	;# 
  1179  0F6D                     	;# 
  1180  0FE4                     	;# 
  1181  0FE5                     	;# 
  1182  0FE6                     	;# 
  1183  0FE7                     	;# 
  1184  0FE8                     	;# 
  1185  0FE9                     	;# 
  1186  0FEA                     	;# 
  1187  0FEB                     	;# 
  1188  0FED                     	;# 
  1189  0FEE                     	;# 
  1190  0FEF                     	;# 
  1191  0000                     	;# 
  1192  0001                     	;# 
  1193  0002                     	;# 
  1194  0003                     	;# 
  1195  0004                     	;# 
  1196  0005                     	;# 
  1197  0006                     	;# 
  1198  0007                     	;# 
  1199  0008                     	;# 
  1200  0009                     	;# 
  1201  000A                     	;# 
  1202  000B                     	;# 
  1203  000C                     	;# 
  1204  000D                     	;# 
  1205  000E                     	;# 
  1206  000F                     	;# 
  1207  0010                     	;# 
  1208  0011                     	;# 
  1209  0012                     	;# 
  1210  0013                     	;# 
  1211  0014                     	;# 
  1212  0015                     	;# 
  1213  0016                     	;# 
  1214  0017                     	;# 
  1215  0018                     	;# 
  1216  0019                     	;# 
  1217  001A                     	;# 
  1218  001C                     	;# 
  1219  001C                     	;# 
  1220  001D                     	;# 
  1221  001D                     	;# 
  1222  001E                     	;# 
  1223  001F                     	;# 
  1224  008C                     	;# 
  1225  008C                     	;# 
  1226  008D                     	;# 
  1227  008E                     	;# 
  1228  008E                     	;# 
  1229  008F                     	;# 
  1230  0090                     	;# 
  1231  0090                     	;# 
  1232  0091                     	;# 
  1233  0093                     	;# 
  1234  0094                     	;# 
  1235  0095                     	;# 
  1236  0096                     	;# 
  1237  0097                     	;# 
  1238  0098                     	;# 
  1239  0099                     	;# 
  1240  009A                     	;# 
  1241  009B                     	;# 
  1242  009C                     	;# 
  1243  009D                     	;# 
  1244  009E                     	;# 
  1245  010C                     	;# 
  1246  010D                     	;# 
  1247  010E                     	;# 
  1248  010E                     	;# 
  1249  010F                     	;# 
  1250  0110                     	;# 
  1251  0110                     	;# 
  1252  0111                     	;# 
  1253  0112                     	;# 
  1254  0112                     	;# 
  1255  0113                     	;# 
  1256  0114                     	;# 
  1257  0114                     	;# 
  1258  0115                     	;# 
  1259  0116                     	;# 
  1260  0116                     	;# 
  1261  0117                     	;# 
  1262  0119                     	;# 
  1263  0119                     	;# 
  1264  0119                     	;# 
  1265  011A                     	;# 
  1266  011A                     	;# 
  1267  011A                     	;# 
  1268  011B                     	;# 
  1269  011B                     	;# 
  1270  011B                     	;# 
  1271  011B                     	;# 
  1272  011B                     	;# 
  1273  011C                     	;# 
  1274  011C                     	;# 
  1275  011C                     	;# 
  1276  011D                     	;# 
  1277  011D                     	;# 
  1278  011D                     	;# 
  1279  011E                     	;# 
  1280  011E                     	;# 
  1281  011E                     	;# 
  1282  011F                     	;# 
  1283  011F                     	;# 
  1284  011F                     	;# 
  1285  011F                     	;# 
  1286  011F                     	;# 
  1287  018C                     	;# 
  1288  018D                     	;# 
  1289  018E                     	;# 
  1290  018F                     	;# 
  1291  0190                     	;# 
  1292  0191                     	;# 
  1293  0192                     	;# 
  1294  0196                     	;# 
  1295  0197                     	;# 
  1296  0198                     	;# 
  1297  0199                     	;# 
  1298  019A                     	;# 
  1299  019B                     	;# 
  1300  019C                     	;# 
  1301  020C                     	;# 
  1302  020C                     	;# 
  1303  020D                     	;# 
  1304  020E                     	;# 
  1305  020F                     	;# 
  1306  020F                     	;# 
  1307  0210                     	;# 
  1308  0210                     	;# 
  1309  0211                     	;# 
  1310  0211                     	;# 
  1311  0212                     	;# 
  1312  0212                     	;# 
  1313  0213                     	;# 
  1314  0214                     	;# 
  1315  0215                     	;# 
  1316  0215                     	;# 
  1317  0216                     	;# 
  1318  0216                     	;# 
  1319  0217                     	;# 
  1320  0217                     	;# 
  1321  0218                     	;# 
  1322  0218                     	;# 
  1323  0219                     	;# 
  1324  021A                     	;# 
  1325  021B                     	;# 
  1326  021B                     	;# 
  1327  021C                     	;# 
  1328  021C                     	;# 
  1329  021D                     	;# 
  1330  021D                     	;# 
  1331  021E                     	;# 
  1332  021F                     	;# 
  1333  028C                     	;# 
  1334  028C                     	;# 
  1335  028D                     	;# 
  1336  028D                     	;# 
  1337  028E                     	;# 
  1338  028F                     	;# 
  1339  0290                     	;# 
  1340  0290                     	;# 
  1341  0291                     	;# 
  1342  0292                     	;# 
  1343  0292                     	;# 
  1344  0293                     	;# 
  1345  0293                     	;# 
  1346  0294                     	;# 
  1347  0295                     	;# 
  1348  0296                     	;# 
  1349  0296                     	;# 
  1350  0297                     	;# 
  1351  0298                     	;# 
  1352  0298                     	;# 
  1353  0299                     	;# 
  1354  0299                     	;# 
  1355  029A                     	;# 
  1356  029B                     	;# 
  1357  029C                     	;# 
  1358  029C                     	;# 
  1359  029D                     	;# 
  1360  030C                     	;# 
  1361  030C                     	;# 
  1362  030D                     	;# 
  1363  030E                     	;# 
  1364  030F                     	;# 
  1365  0310                     	;# 
  1366  0310                     	;# 
  1367  0311                     	;# 
  1368  0312                     	;# 
  1369  0313                     	;# 
  1370  0314                     	;# 
  1371  0314                     	;# 
  1372  0315                     	;# 
  1373  0316                     	;# 
  1374  0317                     	;# 
  1375  0318                     	;# 
  1376  0318                     	;# 
  1377  0319                     	;# 
  1378  031A                     	;# 
  1379  031B                     	;# 
  1380  031C                     	;# 
  1381  031C                     	;# 
  1382  031D                     	;# 
  1383  031E                     	;# 
  1384  031F                     	;# 
  1385  038C                     	;# 
  1386  038C                     	;# 
  1387  038D                     	;# 
  1388  038E                     	;# 
  1389  0390                     	;# 
  1390  0390                     	;# 
  1391  0391                     	;# 
  1392  0392                     	;# 
  1393  040C                     	;# 
  1394  040D                     	;# 
  1395  040E                     	;# 
  1396  040F                     	;# 
  1397  0410                     	;# 
  1398  0411                     	;# 
  1399  0416                     	;# 
  1400  0416                     	;# 
  1401  0417                     	;# 
  1402  0418                     	;# 
  1403  0418                     	;# 
  1404  0419                     	;# 
  1405  041A                     	;# 
  1406  041A                     	;# 
  1407  041B                     	;# 
  1408  041C                     	;# 
  1409  041C                     	;# 
  1410  041D                     	;# 
  1411  041E                     	;# 
  1412  041F                     	;# 
  1413  048C                     	;# 
  1414  048C                     	;# 
  1415  048D                     	;# 
  1416  048E                     	;# 
  1417  048F                     	;# 
  1418  048F                     	;# 
  1419  0490                     	;# 
  1420  0491                     	;# 
  1421  0492                     	;# 
  1422  0492                     	;# 
  1423  0493                     	;# 
  1424  0494                     	;# 
  1425  0495                     	;# 
  1426  0495                     	;# 
  1427  0496                     	;# 
  1428  0497                     	;# 
  1429  0498                     	;# 
  1430  0499                     	;# 
  1431  049A                     	;# 
  1432  049B                     	;# 
  1433  049C                     	;# 
  1434  049D                     	;# 
  1435  050C                     	;# 
  1436  050C                     	;# 
  1437  050D                     	;# 
  1438  050E                     	;# 
  1439  050F                     	;# 
  1440  050F                     	;# 
  1441  0510                     	;# 
  1442  0511                     	;# 
  1443  0512                     	;# 
  1444  0512                     	;# 
  1445  0513                     	;# 
  1446  0514                     	;# 
  1447  0515                     	;# 
  1448  0515                     	;# 
  1449  0516                     	;# 
  1450  0517                     	;# 
  1451  0518                     	;# 
  1452  0519                     	;# 
  1453  051A                     	;# 
  1454  051B                     	;# 
  1455  051C                     	;# 
  1456  051D                     	;# 
  1457  058C                     	;# 
  1458  058C                     	;# 
  1459  058D                     	;# 
  1460  058E                     	;# 
  1461  058F                     	;# 
  1462  058F                     	;# 
  1463  0590                     	;# 
  1464  0591                     	;# 
  1465  0592                     	;# 
  1466  0593                     	;# 
  1467  060C                     	;# 
  1468  060D                     	;# 
  1469  060E                     	;# 
  1470  060F                     	;# 
  1471  0610                     	;# 
  1472  0611                     	;# 
  1473  0612                     	;# 
  1474  0613                     	;# 
  1475  0614                     	;# 
  1476  0616                     	;# 
  1477  0617                     	;# 
  1478  0618                     	;# 
  1479  0619                     	;# 
  1480  061A                     	;# 
  1481  061B                     	;# 
  1482  061C                     	;# 
  1483  061D                     	;# 
  1484  061E                     	;# 
  1485  068C                     	;# 
  1486  068D                     	;# 
  1487  068E                     	;# 
  1488  068F                     	;# 
  1489  0690                     	;# 
  1490  0691                     	;# 
  1491  0692                     	;# 
  1492  0693                     	;# 
  1493  0694                     	;# 
  1494  070C                     	;# 
  1495  070D                     	;# 
  1496  070E                     	;# 
  1497  070F                     	;# 
  1498  0710                     	;# 
  1499  0711                     	;# 
  1500  0712                     	;# 
  1501  0713                     	;# 
  1502  0714                     	;# 
  1503  0716                     	;# 
  1504  0717                     	;# 
  1505  0718                     	;# 
  1506  0719                     	;# 
  1507  071A                     	;# 
  1508  071B                     	;# 
  1509  071C                     	;# 
  1510  071D                     	;# 
  1511  071E                     	;# 
  1512  0796                     	;# 
  1513  0797                     	;# 
  1514  0798                     	;# 
  1515  0799                     	;# 
  1516  079A                     	;# 
  1517  079B                     	;# 
  1518  080C                     	;# 
  1519  080D                     	;# 
  1520  080E                     	;# 
  1521  080F                     	;# 
  1522  0810                     	;# 
  1523  0811                     	;# 
  1524  0812                     	;# 
  1525  0813                     	;# 
  1526  0814                     	;# 
  1527  081A                     	;# 
  1528  081B                     	;# 
  1529  081C                     	;# 
  1530  081D                     	;# 
  1531  081E                     	;# 
  1532  081F                     	;# 
  1533  088C                     	;# 
  1534  088D                     	;# 
  1535  088E                     	;# 
  1536  088F                     	;# 
  1537  0890                     	;# 
  1538  0891                     	;# 
  1539  0892                     	;# 
  1540  0893                     	;# 
  1541  0895                     	;# 
  1542  0896                     	;# 
  1543  0897                     	;# 
  1544  0898                     	;# 
  1545  0899                     	;# 
  1546  089A                     	;# 
  1547  089B                     	;# 
  1548  090C                     	;# 
  1549  090E                     	;# 
  1550  090F                     	;# 
  1551  091F                     	;# 
  1552  098F                     	;# 
  1553  098F                     	;# 
  1554  0990                     	;# 
  1555  0991                     	;# 
  1556  0992                     	;# 
  1557  0993                     	;# 
  1558  0994                     	;# 
  1559  0995                     	;# 
  1560  0996                     	;# 
  1561  0997                     	;# 
  1562  0E0F                     	;# 
  1563  0E10                     	;# 
  1564  0E11                     	;# 
  1565  0E12                     	;# 
  1566  0E13                     	;# 
  1567  0E14                     	;# 
  1568  0E15                     	;# 
  1569  0E16                     	;# 
  1570  0E17                     	;# 
  1571  0E18                     	;# 
  1572  0E19                     	;# 
  1573  0E1A                     	;# 
  1574  0E1B                     	;# 
  1575  0E1C                     	;# 
  1576  0E1D                     	;# 
  1577  0E1E                     	;# 
  1578  0E1F                     	;# 
  1579  0E20                     	;# 
  1580  0E21                     	;# 
  1581  0E22                     	;# 
  1582  0E23                     	;# 
  1583  0E24                     	;# 
  1584  0E25                     	;# 
  1585  0E26                     	;# 
  1586  0E27                     	;# 
  1587  0E28                     	;# 
  1588  0E29                     	;# 
  1589  0E2A                     	;# 
  1590  0E2B                     	;# 
  1591  0E2C                     	;# 
  1592  0E2D                     	;# 
  1593  0E2E                     	;# 
  1594  0E2F                     	;# 
  1595  0E30                     	;# 
  1596  0E31                     	;# 
  1597  0E32                     	;# 
  1598  0E33                     	;# 
  1599  0E34                     	;# 
  1600  0E35                     	;# 
  1601  0E36                     	;# 
  1602  0E37                     	;# 
  1603  0E8F                     	;# 
  1604  0E90                     	;# 
  1605  0E91                     	;# 
  1606  0E92                     	;# 
  1607  0E93                     	;# 
  1608  0E94                     	;# 
  1609  0E95                     	;# 
  1610  0E96                     	;# 
  1611  0E97                     	;# 
  1612  0E9C                     	;# 
  1613  0E9D                     	;# 
  1614  0E9E                     	;# 
  1615  0EA1                     	;# 
  1616  0EA2                     	;# 
  1617  0EA3                     	;# 
  1618  0EA4                     	;# 
  1619  0EA5                     	;# 
  1620  0EA9                     	;# 
  1621  0EAA                     	;# 
  1622  0EAB                     	;# 
  1623  0EAC                     	;# 
  1624  0EB1                     	;# 
  1625  0EB2                     	;# 
  1626  0EB3                     	;# 
  1627  0EB8                     	;# 
  1628  0EB9                     	;# 
  1629  0EBA                     	;# 
  1630  0EBB                     	;# 
  1631  0EBC                     	;# 
  1632  0EBD                     	;# 
  1633  0EBE                     	;# 
  1634  0EC3                     	;# 
  1635  0EC5                     	;# 
  1636  0EC6                     	;# 
  1637  0EC7                     	;# 
  1638  0EC8                     	;# 
  1639  0EC9                     	;# 
  1640  0ECA                     	;# 
  1641  0ECB                     	;# 
  1642  0ECC                     	;# 
  1643  0F10                     	;# 
  1644  0F11                     	;# 
  1645  0F12                     	;# 
  1646  0F13                     	;# 
  1647  0F14                     	;# 
  1648  0F15                     	;# 
  1649  0F16                     	;# 
  1650  0F17                     	;# 
  1651  0F18                     	;# 
  1652  0F19                     	;# 
  1653  0F1A                     	;# 
  1654  0F1B                     	;# 
  1655  0F1C                     	;# 
  1656  0F1D                     	;# 
  1657  0F1E                     	;# 
  1658  0F1F                     	;# 
  1659  0F20                     	;# 
  1660  0F21                     	;# 
  1661  0F22                     	;# 
  1662  0F23                     	;# 
  1663  0F24                     	;# 
  1664  0F25                     	;# 
  1665  0F26                     	;# 
  1666  0F27                     	;# 
  1667  0F28                     	;# 
  1668  0F29                     	;# 
  1669  0F2A                     	;# 
  1670  0F2B                     	;# 
  1671  0F2C                     	;# 
  1672  0F2D                     	;# 
  1673  0F2E                     	;# 
  1674  0F2F                     	;# 
  1675  0F30                     	;# 
  1676  0F31                     	;# 
  1677  0F32                     	;# 
  1678  0F38                     	;# 
  1679  0F39                     	;# 
  1680  0F3A                     	;# 
  1681  0F3B                     	;# 
  1682  0F3C                     	;# 
  1683  0F3D                     	;# 
  1684  0F3E                     	;# 
  1685  0F3F                     	;# 
  1686  0F40                     	;# 
  1687  0F41                     	;# 
  1688  0F43                     	;# 
  1689  0F44                     	;# 
  1690  0F45                     	;# 
  1691  0F46                     	;# 
  1692  0F47                     	;# 
  1693  0F48                     	;# 
  1694  0F49                     	;# 
  1695  0F4A                     	;# 
  1696  0F4B                     	;# 
  1697  0F4C                     	;# 
  1698  0F4E                     	;# 
  1699  0F4F                     	;# 
  1700  0F50                     	;# 
  1701  0F51                     	;# 
  1702  0F52                     	;# 
  1703  0F53                     	;# 
  1704  0F54                     	;# 
  1705  0F55                     	;# 
  1706  0F56                     	;# 
  1707  0F57                     	;# 
  1708  0F59                     	;# 
  1709  0F5A                     	;# 
  1710  0F5B                     	;# 
  1711  0F5C                     	;# 
  1712  0F5D                     	;# 
  1713  0F61                     	;# 
  1714  0F62                     	;# 
  1715  0F64                     	;# 
  1716  0F65                     	;# 
  1717  0F66                     	;# 
  1718  0F67                     	;# 
  1719  0F68                     	;# 
  1720  0F69                     	;# 
  1721  0F6A                     	;# 
  1722  0F6B                     	;# 
  1723  0F6C                     	;# 
  1724  0F6D                     	;# 
  1725  0FE4                     	;# 
  1726  0FE5                     	;# 
  1727  0FE6                     	;# 
  1728  0FE7                     	;# 
  1729  0FE8                     	;# 
  1730  0FE9                     	;# 
  1731  0FEA                     	;# 
  1732  0FEB                     	;# 
  1733  0FED                     	;# 
  1734  0FEE                     	;# 
  1735  0FEF                     	;# 
  1736  0000                     	;# 
  1737  0001                     	;# 
  1738  0002                     	;# 
  1739  0003                     	;# 
  1740  0004                     	;# 
  1741  0005                     	;# 
  1742  0006                     	;# 
  1743  0007                     	;# 
  1744  0008                     	;# 
  1745  0009                     	;# 
  1746  000A                     	;# 
  1747  000B                     	;# 
  1748  000C                     	;# 
  1749  000D                     	;# 
  1750  000E                     	;# 
  1751  000F                     	;# 
  1752  0010                     	;# 
  1753  0011                     	;# 
  1754  0012                     	;# 
  1755  0013                     	;# 
  1756  0014                     	;# 
  1757  0015                     	;# 
  1758  0016                     	;# 
  1759  0017                     	;# 
  1760  0018                     	;# 
  1761  0019                     	;# 
  1762  001A                     	;# 
  1763  001C                     	;# 
  1764  001C                     	;# 
  1765  001D                     	;# 
  1766  001D                     	;# 
  1767  001E                     	;# 
  1768  001F                     	;# 
  1769  008C                     	;# 
  1770  008C                     	;# 
  1771  008D                     	;# 
  1772  008E                     	;# 
  1773  008E                     	;# 
  1774  008F                     	;# 
  1775  0090                     	;# 
  1776  0090                     	;# 
  1777  0091                     	;# 
  1778  0093                     	;# 
  1779  0094                     	;# 
  1780  0095                     	;# 
  1781  0096                     	;# 
  1782  0097                     	;# 
  1783  0098                     	;# 
  1784  0099                     	;# 
  1785  009A                     	;# 
  1786  009B                     	;# 
  1787  009C                     	;# 
  1788  009D                     	;# 
  1789  009E                     	;# 
  1790  010C                     	;# 
  1791  010D                     	;# 
  1792  010E                     	;# 
  1793  010E                     	;# 
  1794  010F                     	;# 
  1795  0110                     	;# 
  1796  0110                     	;# 
  1797  0111                     	;# 
  1798  0112                     	;# 
  1799  0112                     	;# 
  1800  0113                     	;# 
  1801  0114                     	;# 
  1802  0114                     	;# 
  1803  0115                     	;# 
  1804  0116                     	;# 
  1805  0116                     	;# 
  1806  0117                     	;# 
  1807  0119                     	;# 
  1808  0119                     	;# 
  1809  0119                     	;# 
  1810  011A                     	;# 
  1811  011A                     	;# 
  1812  011A                     	;# 
  1813  011B                     	;# 
  1814  011B                     	;# 
  1815  011B                     	;# 
  1816  011B                     	;# 
  1817  011B                     	;# 
  1818  011C                     	;# 
  1819  011C                     	;# 
  1820  011C                     	;# 
  1821  011D                     	;# 
  1822  011D                     	;# 
  1823  011D                     	;# 
  1824  011E                     	;# 
  1825  011E                     	;# 
  1826  011E                     	;# 
  1827  011F                     	;# 
  1828  011F                     	;# 
  1829  011F                     	;# 
  1830  011F                     	;# 
  1831  011F                     	;# 
  1832  018C                     	;# 
  1833  018D                     	;# 
  1834  018E                     	;# 
  1835  018F                     	;# 
  1836  0190                     	;# 
  1837  0191                     	;# 
  1838  0192                     	;# 
  1839  0196                     	;# 
  1840  0197                     	;# 
  1841  0198                     	;# 
  1842  0199                     	;# 
  1843  019A                     	;# 
  1844  019B                     	;# 
  1845  019C                     	;# 
  1846  020C                     	;# 
  1847  020C                     	;# 
  1848  020D                     	;# 
  1849  020E                     	;# 
  1850  020F                     	;# 
  1851  020F                     	;# 
  1852  0210                     	;# 
  1853  0210                     	;# 
  1854  0211                     	;# 
  1855  0211                     	;# 
  1856  0212                     	;# 
  1857  0212                     	;# 
  1858  0213                     	;# 
  1859  0214                     	;# 
  1860  0215                     	;# 
  1861  0215                     	;# 
  1862  0216                     	;# 
  1863  0216                     	;# 
  1864  0217                     	;# 
  1865  0217                     	;# 
  1866  0218                     	;# 
  1867  0218                     	;# 
  1868  0219                     	;# 
  1869  021A                     	;# 
  1870  021B                     	;# 
  1871  021B                     	;# 
  1872  021C                     	;# 
  1873  021C                     	;# 
  1874  021D                     	;# 
  1875  021D                     	;# 
  1876  021E                     	;# 
  1877  021F                     	;# 
  1878  028C                     	;# 
  1879  028C                     	;# 
  1880  028D                     	;# 
  1881  028D                     	;# 
  1882  028E                     	;# 
  1883  028F                     	;# 
  1884  0290                     	;# 
  1885  0290                     	;# 
  1886  0291                     	;# 
  1887  0292                     	;# 
  1888  0292                     	;# 
  1889  0293                     	;# 
  1890  0293                     	;# 
  1891  0294                     	;# 
  1892  0295                     	;# 
  1893  0296                     	;# 
  1894  0296                     	;# 
  1895  0297                     	;# 
  1896  0298                     	;# 
  1897  0298                     	;# 
  1898  0299                     	;# 
  1899  0299                     	;# 
  1900  029A                     	;# 
  1901  029B                     	;# 
  1902  029C                     	;# 
  1903  029C                     	;# 
  1904  029D                     	;# 
  1905  030C                     	;# 
  1906  030C                     	;# 
  1907  030D                     	;# 
  1908  030E                     	;# 
  1909  030F                     	;# 
  1910  0310                     	;# 
  1911  0310                     	;# 
  1912  0311                     	;# 
  1913  0312                     	;# 
  1914  0313                     	;# 
  1915  0314                     	;# 
  1916  0314                     	;# 
  1917  0315                     	;# 
  1918  0316                     	;# 
  1919  0317                     	;# 
  1920  0318                     	;# 
  1921  0318                     	;# 
  1922  0319                     	;# 
  1923  031A                     	;# 
  1924  031B                     	;# 
  1925  031C                     	;# 
  1926  031C                     	;# 
  1927  031D                     	;# 
  1928  031E                     	;# 
  1929  031F                     	;# 
  1930  038C                     	;# 
  1931  038C                     	;# 
  1932  038D                     	;# 
  1933  038E                     	;# 
  1934  0390                     	;# 
  1935  0390                     	;# 
  1936  0391                     	;# 
  1937  0392                     	;# 
  1938  040C                     	;# 
  1939  040D                     	;# 
  1940  040E                     	;# 
  1941  040F                     	;# 
  1942  0410                     	;# 
  1943  0411                     	;# 
  1944  0416                     	;# 
  1945  0416                     	;# 
  1946  0417                     	;# 
  1947  0418                     	;# 
  1948  0418                     	;# 
  1949  0419                     	;# 
  1950  041A                     	;# 
  1951  041A                     	;# 
  1952  041B                     	;# 
  1953  041C                     	;# 
  1954  041C                     	;# 
  1955  041D                     	;# 
  1956  041E                     	;# 
  1957  041F                     	;# 
  1958  048C                     	;# 
  1959  048C                     	;# 
  1960  048D                     	;# 
  1961  048E                     	;# 
  1962  048F                     	;# 
  1963  048F                     	;# 
  1964  0490                     	;# 
  1965  0491                     	;# 
  1966  0492                     	;# 
  1967  0492                     	;# 
  1968  0493                     	;# 
  1969  0494                     	;# 
  1970  0495                     	;# 
  1971  0495                     	;# 
  1972  0496                     	;# 
  1973  0497                     	;# 
  1974  0498                     	;# 
  1975  0499                     	;# 
  1976  049A                     	;# 
  1977  049B                     	;# 
  1978  049C                     	;# 
  1979  049D                     	;# 
  1980  050C                     	;# 
  1981  050C                     	;# 
  1982  050D                     	;# 
  1983  050E                     	;# 
  1984  050F                     	;# 
  1985  050F                     	;# 
  1986  0510                     	;# 
  1987  0511                     	;# 
  1988  0512                     	;# 
  1989  0512                     	;# 
  1990  0513                     	;# 
  1991  0514                     	;# 
  1992  0515                     	;# 
  1993  0515                     	;# 
  1994  0516                     	;# 
  1995  0517                     	;# 
  1996  0518                     	;# 
  1997  0519                     	;# 
  1998  051A                     	;# 
  1999  051B                     	;# 
  2000  051C                     	;# 
  2001  051D                     	;# 
  2002  058C                     	;# 
  2003  058C                     	;# 
  2004  058D                     	;# 
  2005  058E                     	;# 
  2006  058F                     	;# 
  2007  058F                     	;# 
  2008  0590                     	;# 
  2009  0591                     	;# 
  2010  0592                     	;# 
  2011  0593                     	;# 
  2012  060C                     	;# 
  2013  060D                     	;# 
  2014  060E                     	;# 
  2015  060F                     	;# 
  2016  0610                     	;# 
  2017  0611                     	;# 
  2018  0612                     	;# 
  2019  0613                     	;# 
  2020  0614                     	;# 
  2021  0616                     	;# 
  2022  0617                     	;# 
  2023  0618                     	;# 
  2024  0619                     	;# 
  2025  061A                     	;# 
  2026  061B                     	;# 
  2027  061C                     	;# 
  2028  061D                     	;# 
  2029  061E                     	;# 
  2030  068C                     	;# 
  2031  068D                     	;# 
  2032  068E                     	;# 
  2033  068F                     	;# 
  2034  0690                     	;# 
  2035  0691                     	;# 
  2036  0692                     	;# 
  2037  0693                     	;# 
  2038  0694                     	;# 
  2039  070C                     	;# 
  2040  070D                     	;# 
  2041  070E                     	;# 
  2042  070F                     	;# 
  2043  0710                     	;# 
  2044  0711                     	;# 
  2045  0712                     	;# 
  2046  0713                     	;# 
  2047  0714                     	;# 
  2048  0716                     	;# 
  2049  0717                     	;# 
  2050  0718                     	;# 
  2051  0719                     	;# 
  2052  071A                     	;# 
  2053  071B                     	;# 
  2054  071C                     	;# 
  2055  071D                     	;# 
  2056  071E                     	;# 
  2057  0796                     	;# 
  2058  0797                     	;# 
  2059  0798                     	;# 
  2060  0799                     	;# 
  2061  079A                     	;# 
  2062  079B                     	;# 
  2063  080C                     	;# 
  2064  080D                     	;# 
  2065  080E                     	;# 
  2066  080F                     	;# 
  2067  0810                     	;# 
  2068  0811                     	;# 
  2069  0812                     	;# 
  2070  0813                     	;# 
  2071  0814                     	;# 
  2072  081A                     	;# 
  2073  081B                     	;# 
  2074  081C                     	;# 
  2075  081D                     	;# 
  2076  081E                     	;# 
  2077  081F                     	;# 
  2078  088C                     	;# 
  2079  088D                     	;# 
  2080  088E                     	;# 
  2081  088F                     	;# 
  2082  0890                     	;# 
  2083  0891                     	;# 
  2084  0892                     	;# 
  2085  0893                     	;# 
  2086  0895                     	;# 
  2087  0896                     	;# 
  2088  0897                     	;# 
  2089  0898                     	;# 
  2090  0899                     	;# 
  2091  089A                     	;# 
  2092  089B                     	;# 
  2093  090C                     	;# 
  2094  090E                     	;# 
  2095  090F                     	;# 
  2096  091F                     	;# 
  2097  098F                     	;# 
  2098  098F                     	;# 
  2099  0990                     	;# 
  2100  0991                     	;# 
  2101  0992                     	;# 
  2102  0993                     	;# 
  2103  0994                     	;# 
  2104  0995                     	;# 
  2105  0996                     	;# 
  2106  0997                     	;# 
  2107  0E0F                     	;# 
  2108  0E10                     	;# 
  2109  0E11                     	;# 
  2110  0E12                     	;# 
  2111  0E13                     	;# 
  2112  0E14                     	;# 
  2113  0E15                     	;# 
  2114  0E16                     	;# 
  2115  0E17                     	;# 
  2116  0E18                     	;# 
  2117  0E19                     	;# 
  2118  0E1A                     	;# 
  2119  0E1B                     	;# 
  2120  0E1C                     	;# 
  2121  0E1D                     	;# 
  2122  0E1E                     	;# 
  2123  0E1F                     	;# 
  2124  0E20                     	;# 
  2125  0E21                     	;# 
  2126  0E22                     	;# 
  2127  0E23                     	;# 
  2128  0E24                     	;# 
  2129  0E25                     	;# 
  2130  0E26                     	;# 
  2131  0E27                     	;# 
  2132  0E28                     	;# 
  2133  0E29                     	;# 
  2134  0E2A                     	;# 
  2135  0E2B                     	;# 
  2136  0E2C                     	;# 
  2137  0E2D                     	;# 
  2138  0E2E                     	;# 
  2139  0E2F                     	;# 
  2140  0E30                     	;# 
  2141  0E31                     	;# 
  2142  0E32                     	;# 
  2143  0E33                     	;# 
  2144  0E34                     	;# 
  2145  0E35                     	;# 
  2146  0E36                     	;# 
  2147  0E37                     	;# 
  2148  0E8F                     	;# 
  2149  0E90                     	;# 
  2150  0E91                     	;# 
  2151  0E92                     	;# 
  2152  0E93                     	;# 
  2153  0E94                     	;# 
  2154  0E95                     	;# 
  2155  0E96                     	;# 
  2156  0E97                     	;# 
  2157  0E9C                     	;# 
  2158  0E9D                     	;# 
  2159  0E9E                     	;# 
  2160  0EA1                     	;# 
  2161  0EA2                     	;# 
  2162  0EA3                     	;# 
  2163  0EA4                     	;# 
  2164  0EA5                     	;# 
  2165  0EA9                     	;# 
  2166  0EAA                     	;# 
  2167  0EAB                     	;# 
  2168  0EAC                     	;# 
  2169  0EB1                     	;# 
  2170  0EB2                     	;# 
  2171  0EB3                     	;# 
  2172  0EB8                     	;# 
  2173  0EB9                     	;# 
  2174  0EBA                     	;# 
  2175  0EBB                     	;# 
  2176  0EBC                     	;# 
  2177  0EBD                     	;# 
  2178  0EBE                     	;# 
  2179  0EC3                     	;# 
  2180  0EC5                     	;# 
  2181  0EC6                     	;# 
  2182  0EC7                     	;# 
  2183  0EC8                     	;# 
  2184  0EC9                     	;# 
  2185  0ECA                     	;# 
  2186  0ECB                     	;# 
  2187  0ECC                     	;# 
  2188  0F10                     	;# 
  2189  0F11                     	;# 
  2190  0F12                     	;# 
  2191  0F13                     	;# 
  2192  0F14                     	;# 
  2193  0F15                     	;# 
  2194  0F16                     	;# 
  2195  0F17                     	;# 
  2196  0F18                     	;# 
  2197  0F19                     	;# 
  2198  0F1A                     	;# 
  2199  0F1B                     	;# 
  2200  0F1C                     	;# 
  2201  0F1D                     	;# 
  2202  0F1E                     	;# 
  2203  0F1F                     	;# 
  2204  0F20                     	;# 
  2205  0F21                     	;# 
  2206  0F22                     	;# 
  2207  0F23                     	;# 
  2208  0F24                     	;# 
  2209  0F25                     	;# 
  2210  0F26                     	;# 
  2211  0F27                     	;# 
  2212  0F28                     	;# 
  2213  0F29                     	;# 
  2214  0F2A                     	;# 
  2215  0F2B                     	;# 
  2216  0F2C                     	;# 
  2217  0F2D                     	;# 
  2218  0F2E                     	;# 
  2219  0F2F                     	;# 
  2220  0F30                     	;# 
  2221  0F31                     	;# 
  2222  0F32                     	;# 
  2223  0F38                     	;# 
  2224  0F39                     	;# 
  2225  0F3A                     	;# 
  2226  0F3B                     	;# 
  2227  0F3C                     	;# 
  2228  0F3D                     	;# 
  2229  0F3E                     	;# 
  2230  0F3F                     	;# 
  2231  0F40                     	;# 
  2232  0F41                     	;# 
  2233  0F43                     	;# 
  2234  0F44                     	;# 
  2235  0F45                     	;# 
  2236  0F46                     	;# 
  2237  0F47                     	;# 
  2238  0F48                     	;# 
  2239  0F49                     	;# 
  2240  0F4A                     	;# 
  2241  0F4B                     	;# 
  2242  0F4C                     	;# 
  2243  0F4E                     	;# 
  2244  0F4F                     	;# 
  2245  0F50                     	;# 
  2246  0F51                     	;# 
  2247  0F52                     	;# 
  2248  0F53                     	;# 
  2249  0F54                     	;# 
  2250  0F55                     	;# 
  2251  0F56                     	;# 
  2252  0F57                     	;# 
  2253  0F59                     	;# 
  2254  0F5A                     	;# 
  2255  0F5B                     	;# 
  2256  0F5C                     	;# 
  2257  0F5D                     	;# 
  2258  0F61                     	;# 
  2259  0F62                     	;# 
  2260  0F64                     	;# 
  2261  0F65                     	;# 
  2262  0F66                     	;# 
  2263  0F67                     	;# 
  2264  0F68                     	;# 
  2265  0F69                     	;# 
  2266  0F6A                     	;# 
  2267  0F6B                     	;# 
  2268  0F6C                     	;# 
  2269  0F6D                     	;# 
  2270  0FE4                     	;# 
  2271  0FE5                     	;# 
  2272  0FE6                     	;# 
  2273  0FE7                     	;# 
  2274  0FE8                     	;# 
  2275  0FE9                     	;# 
  2276  0FEA                     	;# 
  2277  0FEB                     	;# 
  2278  0FED                     	;# 
  2279  0FEE                     	;# 
  2280  0FEF                     	;# 
  2281  0000                     	;# 
  2282  0001                     	;# 
  2283  0002                     	;# 
  2284  0003                     	;# 
  2285  0004                     	;# 
  2286  0005                     	;# 
  2287  0006                     	;# 
  2288  0007                     	;# 
  2289  0008                     	;# 
  2290  0009                     	;# 
  2291  000A                     	;# 
  2292  000B                     	;# 
  2293  000C                     	;# 
  2294  000D                     	;# 
  2295  000E                     	;# 
  2296  000F                     	;# 
  2297  0010                     	;# 
  2298  0011                     	;# 
  2299  0012                     	;# 
  2300  0013                     	;# 
  2301  0014                     	;# 
  2302  0015                     	;# 
  2303  0016                     	;# 
  2304  0017                     	;# 
  2305  0018                     	;# 
  2306  0019                     	;# 
  2307  001A                     	;# 
  2308  001C                     	;# 
  2309  001C                     	;# 
  2310  001D                     	;# 
  2311  001D                     	;# 
  2312  001E                     	;# 
  2313  001F                     	;# 
  2314  008C                     	;# 
  2315  008C                     	;# 
  2316  008D                     	;# 
  2317  008E                     	;# 
  2318  008E                     	;# 
  2319  008F                     	;# 
  2320  0090                     	;# 
  2321  0090                     	;# 
  2322  0091                     	;# 
  2323  0093                     	;# 
  2324  0094                     	;# 
  2325  0095                     	;# 
  2326  0096                     	;# 
  2327  0097                     	;# 
  2328  0098                     	;# 
  2329  0099                     	;# 
  2330  009A                     	;# 
  2331  009B                     	;# 
  2332  009C                     	;# 
  2333  009D                     	;# 
  2334  009E                     	;# 
  2335  010C                     	;# 
  2336  010D                     	;# 
  2337  010E                     	;# 
  2338  010E                     	;# 
  2339  010F                     	;# 
  2340  0110                     	;# 
  2341  0110                     	;# 
  2342  0111                     	;# 
  2343  0112                     	;# 
  2344  0112                     	;# 
  2345  0113                     	;# 
  2346  0114                     	;# 
  2347  0114                     	;# 
  2348  0115                     	;# 
  2349  0116                     	;# 
  2350  0116                     	;# 
  2351  0117                     	;# 
  2352  0119                     	;# 
  2353  0119                     	;# 
  2354  0119                     	;# 
  2355  011A                     	;# 
  2356  011A                     	;# 
  2357  011A                     	;# 
  2358  011B                     	;# 
  2359  011B                     	;# 
  2360  011B                     	;# 
  2361  011B                     	;# 
  2362  011B                     	;# 
  2363  011C                     	;# 
  2364  011C                     	;# 
  2365  011C                     	;# 
  2366  011D                     	;# 
  2367  011D                     	;# 
  2368  011D                     	;# 
  2369  011E                     	;# 
  2370  011E                     	;# 
  2371  011E                     	;# 
  2372  011F                     	;# 
  2373  011F                     	;# 
  2374  011F                     	;# 
  2375  011F                     	;# 
  2376  011F                     	;# 
  2377  018C                     	;# 
  2378  018D                     	;# 
  2379  018E                     	;# 
  2380  018F                     	;# 
  2381  0190                     	;# 
  2382  0191                     	;# 
  2383  0192                     	;# 
  2384  0196                     	;# 
  2385  0197                     	;# 
  2386  0198                     	;# 
  2387  0199                     	;# 
  2388  019A                     	;# 
  2389  019B                     	;# 
  2390  019C                     	;# 
  2391  020C                     	;# 
  2392  020C                     	;# 
  2393  020D                     	;# 
  2394  020E                     	;# 
  2395  020F                     	;# 
  2396  020F                     	;# 
  2397  0210                     	;# 
  2398  0210                     	;# 
  2399  0211                     	;# 
  2400  0211                     	;# 
  2401  0212                     	;# 
  2402  0212                     	;# 
  2403  0213                     	;# 
  2404  0214                     	;# 
  2405  0215                     	;# 
  2406  0215                     	;# 
  2407  0216                     	;# 
  2408  0216                     	;# 
  2409  0217                     	;# 
  2410  0217                     	;# 
  2411  0218                     	;# 
  2412  0218                     	;# 
  2413  0219                     	;# 
  2414  021A                     	;# 
  2415  021B                     	;# 
  2416  021B                     	;# 
  2417  021C                     	;# 
  2418  021C                     	;# 
  2419  021D                     	;# 
  2420  021D                     	;# 
  2421  021E                     	;# 
  2422  021F                     	;# 
  2423  028C                     	;# 
  2424  028C                     	;# 
  2425  028D                     	;# 
  2426  028D                     	;# 
  2427  028E                     	;# 
  2428  028F                     	;# 
  2429  0290                     	;# 
  2430  0290                     	;# 
  2431  0291                     	;# 
  2432  0292                     	;# 
  2433  0292                     	;# 
  2434  0293                     	;# 
  2435  0293                     	;# 
  2436  0294                     	;# 
  2437  0295                     	;# 
  2438  0296                     	;# 
  2439  0296                     	;# 
  2440  0297                     	;# 
  2441  0298                     	;# 
  2442  0298                     	;# 
  2443  0299                     	;# 
  2444  0299                     	;# 
  2445  029A                     	;# 
  2446  029B                     	;# 
  2447  029C                     	;# 
  2448  029C                     	;# 
  2449  029D                     	;# 
  2450  030C                     	;# 
  2451  030C                     	;# 
  2452  030D                     	;# 
  2453  030E                     	;# 
  2454  030F                     	;# 
  2455  0310                     	;# 
  2456  0310                     	;# 
  2457  0311                     	;# 
  2458  0312                     	;# 
  2459  0313                     	;# 
  2460  0314                     	;# 
  2461  0314                     	;# 
  2462  0315                     	;# 
  2463  0316                     	;# 
  2464  0317                     	;# 
  2465  0318                     	;# 
  2466  0318                     	;# 
  2467  0319                     	;# 
  2468  031A                     	;# 
  2469  031B                     	;# 
  2470  031C                     	;# 
  2471  031C                     	;# 
  2472  031D                     	;# 
  2473  031E                     	;# 
  2474  031F                     	;# 
  2475  038C                     	;# 
  2476  038C                     	;# 
  2477  038D                     	;# 
  2478  038E                     	;# 
  2479  0390                     	;# 
  2480  0390                     	;# 
  2481  0391                     	;# 
  2482  0392                     	;# 
  2483  040C                     	;# 
  2484  040D                     	;# 
  2485  040E                     	;# 
  2486  040F                     	;# 
  2487  0410                     	;# 
  2488  0411                     	;# 
  2489  0416                     	;# 
  2490  0416                     	;# 
  2491  0417                     	;# 
  2492  0418                     	;# 
  2493  0418                     	;# 
  2494  0419                     	;# 
  2495  041A                     	;# 
  2496  041A                     	;# 
  2497  041B                     	;# 
  2498  041C                     	;# 
  2499  041C                     	;# 
  2500  041D                     	;# 
  2501  041E                     	;# 
  2502  041F                     	;# 
  2503  048C                     	;# 
  2504  048C                     	;# 
  2505  048D                     	;# 
  2506  048E                     	;# 
  2507  048F                     	;# 
  2508  048F                     	;# 
  2509  0490                     	;# 
  2510  0491                     	;# 
  2511  0492                     	;# 
  2512  0492                     	;# 
  2513  0493                     	;# 
  2514  0494                     	;# 
  2515  0495                     	;# 
  2516  0495                     	;# 
  2517  0496                     	;# 
  2518  0497                     	;# 
  2519  0498                     	;# 
  2520  0499                     	;# 
  2521  049A                     	;# 
  2522  049B                     	;# 
  2523  049C                     	;# 
  2524  049D                     	;# 
  2525  050C                     	;# 
  2526  050C                     	;# 
  2527  050D                     	;# 
  2528  050E                     	;# 
  2529  050F                     	;# 
  2530  050F                     	;# 
  2531  0510                     	;# 
  2532  0511                     	;# 
  2533  0512                     	;# 
  2534  0512                     	;# 
  2535  0513                     	;# 
  2536  0514                     	;# 
  2537  0515                     	;# 
  2538  0515                     	;# 
  2539  0516                     	;# 
  2540  0517                     	;# 
  2541  0518                     	;# 
  2542  0519                     	;# 
  2543  051A                     	;# 
  2544  051B                     	;# 
  2545  051C                     	;# 
  2546  051D                     	;# 
  2547  058C                     	;# 
  2548  058C                     	;# 
  2549  058D                     	;# 
  2550  058E                     	;# 
  2551  058F                     	;# 
  2552  058F                     	;# 
  2553  0590                     	;# 
  2554  0591                     	;# 
  2555  0592                     	;# 
  2556  0593                     	;# 
  2557  060C                     	;# 
  2558  060D                     	;# 
  2559  060E                     	;# 
  2560  060F                     	;# 
  2561  0610                     	;# 
  2562  0611                     	;# 
  2563  0612                     	;# 
  2564  0613                     	;# 
  2565  0614                     	;# 
  2566  0616                     	;# 
  2567  0617                     	;# 
  2568  0618                     	;# 
  2569  0619                     	;# 
  2570  061A                     	;# 
  2571  061B                     	;# 
  2572  061C                     	;# 
  2573  061D                     	;# 
  2574  061E                     	;# 
  2575  068C                     	;# 
  2576  068D                     	;# 
  2577  068E                     	;# 
  2578  068F                     	;# 
  2579  0690                     	;# 
  2580  0691                     	;# 
  2581  0692                     	;# 
  2582  0693                     	;# 
  2583  0694                     	;# 
  2584  070C                     	;# 
  2585  070D                     	;# 
  2586  070E                     	;# 
  2587  070F                     	;# 
  2588  0710                     	;# 
  2589  0711                     	;# 
  2590  0712                     	;# 
  2591  0713                     	;# 
  2592  0714                     	;# 
  2593  0716                     	;# 
  2594  0717                     	;# 
  2595  0718                     	;# 
  2596  0719                     	;# 
  2597  071A                     	;# 
  2598  071B                     	;# 
  2599  071C                     	;# 
  2600  071D                     	;# 
  2601  071E                     	;# 
  2602  0796                     	;# 
  2603  0797                     	;# 
  2604  0798                     	;# 
  2605  0799                     	;# 
  2606  079A                     	;# 
  2607  079B                     	;# 
  2608  080C                     	;# 
  2609  080D                     	;# 
  2610  080E                     	;# 
  2611  080F                     	;# 
  2612  0810                     	;# 
  2613  0811                     	;# 
  2614  0812                     	;# 
  2615  0813                     	;# 
  2616  0814                     	;# 
  2617  081A                     	;# 
  2618  081B                     	;# 
  2619  081C                     	;# 
  2620  081D                     	;# 
  2621  081E                     	;# 
  2622  081F                     	;# 
  2623  088C                     	;# 
  2624  088D                     	;# 
  2625  088E                     	;# 
  2626  088F                     	;# 
  2627  0890                     	;# 
  2628  0891                     	;# 
  2629  0892                     	;# 
  2630  0893                     	;# 
  2631  0895                     	;# 
  2632  0896                     	;# 
  2633  0897                     	;# 
  2634  0898                     	;# 
  2635  0899                     	;# 
  2636  089A                     	;# 
  2637  089B                     	;# 
  2638  090C                     	;# 
  2639  090E                     	;# 
  2640  090F                     	;# 
  2641  091F                     	;# 
  2642  098F                     	;# 
  2643  098F                     	;# 
  2644  0990                     	;# 
  2645  0991                     	;# 
  2646  0992                     	;# 
  2647  0993                     	;# 
  2648  0994                     	;# 
  2649  0995                     	;# 
  2650  0996                     	;# 
  2651  0997                     	;# 
  2652  0E0F                     	;# 
  2653  0E10                     	;# 
  2654  0E11                     	;# 
  2655  0E12                     	;# 
  2656  0E13                     	;# 
  2657  0E14                     	;# 
  2658  0E15                     	;# 
  2659  0E16                     	;# 
  2660  0E17                     	;# 
  2661  0E18                     	;# 
  2662  0E19                     	;# 
  2663  0E1A                     	;# 
  2664  0E1B                     	;# 
  2665  0E1C                     	;# 
  2666  0E1D                     	;# 
  2667  0E1E                     	;# 
  2668  0E1F                     	;# 
  2669  0E20                     	;# 
  2670  0E21                     	;# 
  2671  0E22                     	;# 
  2672  0E23                     	;# 
  2673  0E24                     	;# 
  2674  0E25                     	;# 
  2675  0E26                     	;# 
  2676  0E27                     	;# 
  2677  0E28                     	;# 
  2678  0E29                     	;# 
  2679  0E2A                     	;# 
  2680  0E2B                     	;# 
  2681  0E2C                     	;# 
  2682  0E2D                     	;# 
  2683  0E2E                     	;# 
  2684  0E2F                     	;# 
  2685  0E30                     	;# 
  2686  0E31                     	;# 
  2687  0E32                     	;# 
  2688  0E33                     	;# 
  2689  0E34                     	;# 
  2690  0E35                     	;# 
  2691  0E36                     	;# 
  2692  0E37                     	;# 
  2693  0E8F                     	;# 
  2694  0E90                     	;# 
  2695  0E91                     	;# 
  2696  0E92                     	;# 
  2697  0E93                     	;# 
  2698  0E94                     	;# 
  2699  0E95                     	;# 
  2700  0E96                     	;# 
  2701  0E97                     	;# 
  2702  0E9C                     	;# 
  2703  0E9D                     	;# 
  2704  0E9E                     	;# 
  2705  0EA1                     	;# 
  2706  0EA2                     	;# 
  2707  0EA3                     	;# 
  2708  0EA4                     	;# 
  2709  0EA5                     	;# 
  2710  0EA9                     	;# 
  2711  0EAA                     	;# 
  2712  0EAB                     	;# 
  2713  0EAC                     	;# 
  2714  0EB1                     	;# 
  2715  0EB2                     	;# 
  2716  0EB3                     	;# 
  2717  0EB8                     	;# 
  2718  0EB9                     	;# 
  2719  0EBA                     	;# 
  2720  0EBB                     	;# 
  2721  0EBC                     	;# 
  2722  0EBD                     	;# 
  2723  0EBE                     	;# 
  2724  0EC3                     	;# 
  2725  0EC5                     	;# 
  2726  0EC6                     	;# 
  2727  0EC7                     	;# 
  2728  0EC8                     	;# 
  2729  0EC9                     	;# 
  2730  0ECA                     	;# 
  2731  0ECB                     	;# 
  2732  0ECC                     	;# 
  2733  0F10                     	;# 
  2734  0F11                     	;# 
  2735  0F12                     	;# 
  2736  0F13                     	;# 
  2737  0F14                     	;# 
  2738  0F15                     	;# 
  2739  0F16                     	;# 
  2740  0F17                     	;# 
  2741  0F18                     	;# 
  2742  0F19                     	;# 
  2743  0F1A                     	;# 
  2744  0F1B                     	;# 
  2745  0F1C                     	;# 
  2746  0F1D                     	;# 
  2747  0F1E                     	;# 
  2748  0F1F                     	;# 
  2749  0F20                     	;# 
  2750  0F21                     	;# 
  2751  0F22                     	;# 
  2752  0F23                     	;# 
  2753  0F24                     	;# 
  2754  0F25                     	;# 
  2755  0F26                     	;# 
  2756  0F27                     	;# 
  2757  0F28                     	;# 
  2758  0F29                     	;# 
  2759  0F2A                     	;# 
  2760  0F2B                     	;# 
  2761  0F2C                     	;# 
  2762  0F2D                     	;# 
  2763  0F2E                     	;# 
  2764  0F2F                     	;# 
  2765  0F30                     	;# 
  2766  0F31                     	;# 
  2767  0F32                     	;# 
  2768  0F38                     	;# 
  2769  0F39                     	;# 
  2770  0F3A                     	;# 
  2771  0F3B                     	;# 
  2772  0F3C                     	;# 
  2773  0F3D                     	;# 
  2774  0F3E                     	;# 
  2775  0F3F                     	;# 
  2776  0F40                     	;# 
  2777  0F41                     	;# 
  2778  0F43                     	;# 
  2779  0F44                     	;# 
  2780  0F45                     	;# 
  2781  0F46                     	;# 
  2782  0F47                     	;# 
  2783  0F48                     	;# 
  2784  0F49                     	;# 
  2785  0F4A                     	;# 
  2786  0F4B                     	;# 
  2787  0F4C                     	;# 
  2788  0F4E                     	;# 
  2789  0F4F                     	;# 
  2790  0F50                     	;# 
  2791  0F51                     	;# 
  2792  0F52                     	;# 
  2793  0F53                     	;# 
  2794  0F54                     	;# 
  2795  0F55                     	;# 
  2796  0F56                     	;# 
  2797  0F57                     	;# 
  2798  0F59                     	;# 
  2799  0F5A                     	;# 
  2800  0F5B                     	;# 
  2801  0F5C                     	;# 
  2802  0F5D                     	;# 
  2803  0F61                     	;# 
  2804  0F62                     	;# 
  2805  0F64                     	;# 
  2806  0F65                     	;# 
  2807  0F66                     	;# 
  2808  0F67                     	;# 
  2809  0F68                     	;# 
  2810  0F69                     	;# 
  2811  0F6A                     	;# 
  2812  0F6B                     	;# 
  2813  0F6C                     	;# 
  2814  0F6D                     	;# 
  2815  0FE4                     	;# 
  2816  0FE5                     	;# 
  2817  0FE6                     	;# 
  2818  0FE7                     	;# 
  2819  0FE8                     	;# 
  2820  0FE9                     	;# 
  2821  0FEA                     	;# 
  2822  0FEB                     	;# 
  2823  0FED                     	;# 
  2824  0FEE                     	;# 
  2825  0FEF                     	;# 
  2826  0000                     	;# 
  2827  0001                     	;# 
  2828  0002                     	;# 
  2829  0003                     	;# 
  2830  0004                     	;# 
  2831  0005                     	;# 
  2832  0006                     	;# 
  2833  0007                     	;# 
  2834  0008                     	;# 
  2835  0009                     	;# 
  2836  000A                     	;# 
  2837  000B                     	;# 
  2838  000C                     	;# 
  2839  000D                     	;# 
  2840  000E                     	;# 
  2841  000F                     	;# 
  2842  0010                     	;# 
  2843  0011                     	;# 
  2844  0012                     	;# 
  2845  0013                     	;# 
  2846  0014                     	;# 
  2847  0015                     	;# 
  2848  0016                     	;# 
  2849  0017                     	;# 
  2850  0018                     	;# 
  2851  0019                     	;# 
  2852  001A                     	;# 
  2853  001C                     	;# 
  2854  001C                     	;# 
  2855  001D                     	;# 
  2856  001D                     	;# 
  2857  001E                     	;# 
  2858  001F                     	;# 
  2859  008C                     	;# 
  2860  008C                     	;# 
  2861  008D                     	;# 
  2862  008E                     	;# 
  2863  008E                     	;# 
  2864  008F                     	;# 
  2865  0090                     	;# 
  2866  0090                     	;# 
  2867  0091                     	;# 
  2868  0093                     	;# 
  2869  0094                     	;# 
  2870  0095                     	;# 
  2871  0096                     	;# 
  2872  0097                     	;# 
  2873  0098                     	;# 
  2874  0099                     	;# 
  2875  009A                     	;# 
  2876  009B                     	;# 
  2877  009C                     	;# 
  2878  009D                     	;# 
  2879  009E                     	;# 
  2880  010C                     	;# 
  2881  010D                     	;# 
  2882  010E                     	;# 
  2883  010E                     	;# 
  2884  010F                     	;# 
  2885  0110                     	;# 
  2886  0110                     	;# 
  2887  0111                     	;# 
  2888  0112                     	;# 
  2889  0112                     	;# 
  2890  0113                     	;# 
  2891  0114                     	;# 
  2892  0114                     	;# 
  2893  0115                     	;# 
  2894  0116                     	;# 
  2895  0116                     	;# 
  2896  0117                     	;# 
  2897  0119                     	;# 
  2898  0119                     	;# 
  2899  0119                     	;# 
  2900  011A                     	;# 
  2901  011A                     	;# 
  2902  011A                     	;# 
  2903  011B                     	;# 
  2904  011B                     	;# 
  2905  011B                     	;# 
  2906  011B                     	;# 
  2907  011B                     	;# 
  2908  011C                     	;# 
  2909  011C                     	;# 
  2910  011C                     	;# 
  2911  011D                     	;# 
  2912  011D                     	;# 
  2913  011D                     	;# 
  2914  011E                     	;# 
  2915  011E                     	;# 
  2916  011E                     	;# 
  2917  011F                     	;# 
  2918  011F                     	;# 
  2919  011F                     	;# 
  2920  011F                     	;# 
  2921  011F                     	;# 
  2922  018C                     	;# 
  2923  018D                     	;# 
  2924  018E                     	;# 
  2925  018F                     	;# 
  2926  0190                     	;# 
  2927  0191                     	;# 
  2928  0192                     	;# 
  2929  0196                     	;# 
  2930  0197                     	;# 
  2931  0198                     	;# 
  2932  0199                     	;# 
  2933  019A                     	;# 
  2934  019B                     	;# 
  2935  019C                     	;# 
  2936  020C                     	;# 
  2937  020C                     	;# 
  2938  020D                     	;# 
  2939  020E                     	;# 
  2940  020F                     	;# 
  2941  020F                     	;# 
  2942  0210                     	;# 
  2943  0210                     	;# 
  2944  0211                     	;# 
  2945  0211                     	;# 
  2946  0212                     	;# 
  2947  0212                     	;# 
  2948  0213                     	;# 
  2949  0214                     	;# 
  2950  0215                     	;# 
  2951  0215                     	;# 
  2952  0216                     	;# 
  2953  0216                     	;# 
  2954  0217                     	;# 
  2955  0217                     	;# 
  2956  0218                     	;# 
  2957  0218                     	;# 
  2958  0219                     	;# 
  2959  021A                     	;# 
  2960  021B                     	;# 
  2961  021B                     	;# 
  2962  021C                     	;# 
  2963  021C                     	;# 
  2964  021D                     	;# 
  2965  021D                     	;# 
  2966  021E                     	;# 
  2967  021F                     	;# 
  2968  028C                     	;# 
  2969  028C                     	;# 
  2970  028D                     	;# 
  2971  028D                     	;# 
  2972  028E                     	;# 
  2973  028F                     	;# 
  2974  0290                     	;# 
  2975  0290                     	;# 
  2976  0291                     	;# 
  2977  0292                     	;# 
  2978  0292                     	;# 
  2979  0293                     	;# 
  2980  0293                     	;# 
  2981  0294                     	;# 
  2982  0295                     	;# 
  2983  0296                     	;# 
  2984  0296                     	;# 
  2985  0297                     	;# 
  2986  0298                     	;# 
  2987  0298                     	;# 
  2988  0299                     	;# 
  2989  0299                     	;# 
  2990  029A                     	;# 
  2991  029B                     	;# 
  2992  029C                     	;# 
  2993  029C                     	;# 
  2994  029D                     	;# 
  2995  030C                     	;# 
  2996  030C                     	;# 
  2997  030D                     	;# 
  2998  030E                     	;# 
  2999  030F                     	;# 
  3000  0310                     	;# 
  3001  0310                     	;# 
  3002  0311                     	;# 
  3003  0312                     	;# 
  3004  0313                     	;# 
  3005  0314                     	;# 
  3006  0314                     	;# 
  3007  0315                     	;# 
  3008  0316                     	;# 
  3009  0317                     	;# 
  3010  0318                     	;# 
  3011  0318                     	;# 
  3012  0319                     	;# 
  3013  031A                     	;# 
  3014  031B                     	;# 
  3015  031C                     	;# 
  3016  031C                     	;# 
  3017  031D                     	;# 
  3018  031E                     	;# 
  3019  031F                     	;# 
  3020  038C                     	;# 
  3021  038C                     	;# 
  3022  038D                     	;# 
  3023  038E                     	;# 
  3024  0390                     	;# 
  3025  0390                     	;# 
  3026  0391                     	;# 
  3027  0392                     	;# 
  3028  040C                     	;# 
  3029  040D                     	;# 
  3030  040E                     	;# 
  3031  040F                     	;# 
  3032  0410                     	;# 
  3033  0411                     	;# 
  3034  0416                     	;# 
  3035  0416                     	;# 
  3036  0417                     	;# 
  3037  0418                     	;# 
  3038  0418                     	;# 
  3039  0419                     	;# 
  3040  041A                     	;# 
  3041  041A                     	;# 
  3042  041B                     	;# 
  3043  041C                     	;# 
  3044  041C                     	;# 
  3045  041D                     	;# 
  3046  041E                     	;# 
  3047  041F                     	;# 
  3048  048C                     	;# 
  3049  048C                     	;# 
  3050  048D                     	;# 
  3051  048E                     	;# 
  3052  048F                     	;# 
  3053  048F                     	;# 
  3054  0490                     	;# 
  3055  0491                     	;# 
  3056  0492                     	;# 
  3057  0492                     	;# 
  3058  0493                     	;# 
  3059  0494                     	;# 
  3060  0495                     	;# 
  3061  0495                     	;# 
  3062  0496                     	;# 
  3063  0497                     	;# 
  3064  0498                     	;# 
  3065  0499                     	;# 
  3066  049A                     	;# 
  3067  049B                     	;# 
  3068  049C                     	;# 
  3069  049D                     	;# 
  3070  050C                     	;# 
  3071  050C                     	;# 
  3072  050D                     	;# 
  3073  050E                     	;# 
  3074  050F                     	;# 
  3075  050F                     	;# 
  3076  0510                     	;# 
  3077  0511                     	;# 
  3078  0512                     	;# 
  3079  0512                     	;# 
  3080  0513                     	;# 
  3081  0514                     	;# 
  3082  0515                     	;# 
  3083  0515                     	;# 
  3084  0516                     	;# 
  3085  0517                     	;# 
  3086  0518                     	;# 
  3087  0519                     	;# 
  3088  051A                     	;# 
  3089  051B                     	;# 
  3090  051C                     	;# 
  3091  051D                     	;# 
  3092  058C                     	;# 
  3093  058C                     	;# 
  3094  058D                     	;# 
  3095  058E                     	;# 
  3096  058F                     	;# 
  3097  058F                     	;# 
  3098  0590                     	;# 
  3099  0591                     	;# 
  3100  0592                     	;# 
  3101  0593                     	;# 
  3102  060C                     	;# 
  3103  060D                     	;# 
  3104  060E                     	;# 
  3105  060F                     	;# 
  3106  0610                     	;# 
  3107  0611                     	;# 
  3108  0612                     	;# 
  3109  0613                     	;# 
  3110  0614                     	;# 
  3111  0616                     	;# 
  3112  0617                     	;# 
  3113  0618                     	;# 
  3114  0619                     	;# 
  3115  061A                     	;# 
  3116  061B                     	;# 
  3117  061C                     	;# 
  3118  061D                     	;# 
  3119  061E                     	;# 
  3120  068C                     	;# 
  3121  068D                     	;# 
  3122  068E                     	;# 
  3123  068F                     	;# 
  3124  0690                     	;# 
  3125  0691                     	;# 
  3126  0692                     	;# 
  3127  0693                     	;# 
  3128  0694                     	;# 
  3129  070C                     	;# 
  3130  070D                     	;# 
  3131  070E                     	;# 
  3132  070F                     	;# 
  3133  0710                     	;# 
  3134  0711                     	;# 
  3135  0712                     	;# 
  3136  0713                     	;# 
  3137  0714                     	;# 
  3138  0716                     	;# 
  3139  0717                     	;# 
  3140  0718                     	;# 
  3141  0719                     	;# 
  3142  071A                     	;# 
  3143  071B                     	;# 
  3144  071C                     	;# 
  3145  071D                     	;# 
  3146  071E                     	;# 
  3147  0796                     	;# 
  3148  0797                     	;# 
  3149  0798                     	;# 
  3150  0799                     	;# 
  3151  079A                     	;# 
  3152  079B                     	;# 
  3153  080C                     	;# 
  3154  080D                     	;# 
  3155  080E                     	;# 
  3156  080F                     	;# 
  3157  0810                     	;# 
  3158  0811                     	;# 
  3159  0812                     	;# 
  3160  0813                     	;# 
  3161  0814                     	;# 
  3162  081A                     	;# 
  3163  081B                     	;# 
  3164  081C                     	;# 
  3165  081D                     	;# 
  3166  081E                     	;# 
  3167  081F                     	;# 
  3168  088C                     	;# 
  3169  088D                     	;# 
  3170  088E                     	;# 
  3171  088F                     	;# 
  3172  0890                     	;# 
  3173  0891                     	;# 
  3174  0892                     	;# 
  3175  0893                     	;# 
  3176  0895                     	;# 
  3177  0896                     	;# 
  3178  0897                     	;# 
  3179  0898                     	;# 
  3180  0899                     	;# 
  3181  089A                     	;# 
  3182  089B                     	;# 
  3183  090C                     	;# 
  3184  090E                     	;# 
  3185  090F                     	;# 
  3186  091F                     	;# 
  3187  098F                     	;# 
  3188  098F                     	;# 
  3189  0990                     	;# 
  3190  0991                     	;# 
  3191  0992                     	;# 
  3192  0993                     	;# 
  3193  0994                     	;# 
  3194  0995                     	;# 
  3195  0996                     	;# 
  3196  0997                     	;# 
  3197  0E0F                     	;# 
  3198  0E10                     	;# 
  3199  0E11                     	;# 
  3200  0E12                     	;# 
  3201  0E13                     	;# 
  3202  0E14                     	;# 
  3203  0E15                     	;# 
  3204  0E16                     	;# 
  3205  0E17                     	;# 
  3206  0E18                     	;# 
  3207  0E19                     	;# 
  3208  0E1A                     	;# 
  3209  0E1B                     	;# 
  3210  0E1C                     	;# 
  3211  0E1D                     	;# 
  3212  0E1E                     	;# 
  3213  0E1F                     	;# 
  3214  0E20                     	;# 
  3215  0E21                     	;# 
  3216  0E22                     	;# 
  3217  0E23                     	;# 
  3218  0E24                     	;# 
  3219  0E25                     	;# 
  3220  0E26                     	;# 
  3221  0E27                     	;# 
  3222  0E28                     	;# 
  3223  0E29                     	;# 
  3224  0E2A                     	;# 
  3225  0E2B                     	;# 
  3226  0E2C                     	;# 
  3227  0E2D                     	;# 
  3228  0E2E                     	;# 
  3229  0E2F                     	;# 
  3230  0E30                     	;# 
  3231  0E31                     	;# 
  3232  0E32                     	;# 
  3233  0E33                     	;# 
  3234  0E34                     	;# 
  3235  0E35                     	;# 
  3236  0E36                     	;# 
  3237  0E37                     	;# 
  3238  0E8F                     	;# 
  3239  0E90                     	;# 
  3240  0E91                     	;# 
  3241  0E92                     	;# 
  3242  0E93                     	;# 
  3243  0E94                     	;# 
  3244  0E95                     	;# 
  3245  0E96                     	;# 
  3246  0E97                     	;# 
  3247  0E9C                     	;# 
  3248  0E9D                     	;# 
  3249  0E9E                     	;# 
  3250  0EA1                     	;# 
  3251  0EA2                     	;# 
  3252  0EA3                     	;# 
  3253  0EA4                     	;# 
  3254  0EA5                     	;# 
  3255  0EA9                     	;# 
  3256  0EAA                     	;# 
  3257  0EAB                     	;# 
  3258  0EAC                     	;# 
  3259  0EB1                     	;# 
  3260  0EB2                     	;# 
  3261  0EB3                     	;# 
  3262  0EB8                     	;# 
  3263  0EB9                     	;# 
  3264  0EBA                     	;# 
  3265  0EBB                     	;# 
  3266  0EBC                     	;# 
  3267  0EBD                     	;# 
  3268  0EBE                     	;# 
  3269  0EC3                     	;# 
  3270  0EC5                     	;# 
  3271  0EC6                     	;# 
  3272  0EC7                     	;# 
  3273  0EC8                     	;# 
  3274  0EC9                     	;# 
  3275  0ECA                     	;# 
  3276  0ECB                     	;# 
  3277  0ECC                     	;# 
  3278  0F10                     	;# 
  3279  0F11                     	;# 
  3280  0F12                     	;# 
  3281  0F13                     	;# 
  3282  0F14                     	;# 
  3283  0F15                     	;# 
  3284  0F16                     	;# 
  3285  0F17                     	;# 
  3286  0F18                     	;# 
  3287  0F19                     	;# 
  3288  0F1A                     	;# 
  3289  0F1B                     	;# 
  3290  0F1C                     	;# 
  3291  0F1D                     	;# 
  3292  0F1E                     	;# 
  3293  0F1F                     	;# 
  3294  0F20                     	;# 
  3295  0F21                     	;# 
  3296  0F22                     	;# 
  3297  0F23                     	;# 
  3298  0F24                     	;# 
  3299  0F25                     	;# 
  3300  0F26                     	;# 
  3301  0F27                     	;# 
  3302  0F28                     	;# 
  3303  0F29                     	;# 
  3304  0F2A                     	;# 
  3305  0F2B                     	;# 
  3306  0F2C                     	;# 
  3307  0F2D                     	;# 
  3308  0F2E                     	;# 
  3309  0F2F                     	;# 
  3310  0F30                     	;# 
  3311  0F31                     	;# 
  3312  0F32                     	;# 
  3313  0F38                     	;# 
  3314  0F39                     	;# 
  3315  0F3A                     	;# 
  3316  0F3B                     	;# 
  3317  0F3C                     	;# 
  3318  0F3D                     	;# 
  3319  0F3E                     	;# 
  3320  0F3F                     	;# 
  3321  0F40                     	;# 
  3322  0F41                     	;# 
  3323  0F43                     	;# 
  3324  0F44                     	;# 
  3325  0F45                     	;# 
  3326  0F46                     	;# 
  3327  0F47                     	;# 
  3328  0F48                     	;# 
  3329  0F49                     	;# 
  3330  0F4A                     	;# 
  3331  0F4B                     	;# 
  3332  0F4C                     	;# 
  3333  0F4E                     	;# 
  3334  0F4F                     	;# 
  3335  0F50                     	;# 
  3336  0F51                     	;# 
  3337  0F52                     	;# 
  3338  0F53                     	;# 
  3339  0F54                     	;# 
  3340  0F55                     	;# 
  3341  0F56                     	;# 
  3342  0F57                     	;# 
  3343  0F59                     	;# 
  3344  0F5A                     	;# 
  3345  0F5B                     	;# 
  3346  0F5C                     	;# 
  3347  0F5D                     	;# 
  3348  0F61                     	;# 
  3349  0F62                     	;# 
  3350  0F64                     	;# 
  3351  0F65                     	;# 
  3352  0F66                     	;# 
  3353  0F67                     	;# 
  3354  0F68                     	;# 
  3355  0F69                     	;# 
  3356  0F6A                     	;# 
  3357  0F6B                     	;# 
  3358  0F6C                     	;# 
  3359  0F6D                     	;# 
  3360  0FE4                     	;# 
  3361  0FE5                     	;# 
  3362  0FE6                     	;# 
  3363  0FE7                     	;# 
  3364  0FE8                     	;# 
  3365  0FE9                     	;# 
  3366  0FEA                     	;# 
  3367  0FEB                     	;# 
  3368  0FED                     	;# 
  3369  0FEE                     	;# 
  3370  0FEF                     	;# 
  3371  0000                     	;# 
  3372  0001                     	;# 
  3373  0002                     	;# 
  3374  0003                     	;# 
  3375  0004                     	;# 
  3376  0005                     	;# 
  3377  0006                     	;# 
  3378  0007                     	;# 
  3379  0008                     	;# 
  3380  0009                     	;# 
  3381  000A                     	;# 
  3382  000B                     	;# 
  3383  000C                     	;# 
  3384  000D                     	;# 
  3385  000E                     	;# 
  3386  000F                     	;# 
  3387  0010                     	;# 
  3388  0011                     	;# 
  3389  0012                     	;# 
  3390  0013                     	;# 
  3391  0014                     	;# 
  3392  0015                     	;# 
  3393  0016                     	;# 
  3394  0017                     	;# 
  3395  0018                     	;# 
  3396  0019                     	;# 
  3397  001A                     	;# 
  3398  001C                     	;# 
  3399  001C                     	;# 
  3400  001D                     	;# 
  3401  001D                     	;# 
  3402  001E                     	;# 
  3403  001F                     	;# 
  3404  008C                     	;# 
  3405  008C                     	;# 
  3406  008D                     	;# 
  3407  008E                     	;# 
  3408  008E                     	;# 
  3409  008F                     	;# 
  3410  0090                     	;# 
  3411  0090                     	;# 
  3412  0091                     	;# 
  3413  0093                     	;# 
  3414  0094                     	;# 
  3415  0095                     	;# 
  3416  0096                     	;# 
  3417  0097                     	;# 
  3418  0098                     	;# 
  3419  0099                     	;# 
  3420  009A                     	;# 
  3421  009B                     	;# 
  3422  009C                     	;# 
  3423  009D                     	;# 
  3424  009E                     	;# 
  3425  010C                     	;# 
  3426  010D                     	;# 
  3427  010E                     	;# 
  3428  010E                     	;# 
  3429  010F                     	;# 
  3430  0110                     	;# 
  3431  0110                     	;# 
  3432  0111                     	;# 
  3433  0112                     	;# 
  3434  0112                     	;# 
  3435  0113                     	;# 
  3436  0114                     	;# 
  3437  0114                     	;# 
  3438  0115                     	;# 
  3439  0116                     	;# 
  3440  0116                     	;# 
  3441  0117                     	;# 
  3442  0119                     	;# 
  3443  0119                     	;# 
  3444  0119                     	;# 
  3445  011A                     	;# 
  3446  011A                     	;# 
  3447  011A                     	;# 
  3448  011B                     	;# 
  3449  011B                     	;# 
  3450  011B                     	;# 
  3451  011B                     	;# 
  3452  011B                     	;# 
  3453  011C                     	;# 
  3454  011C                     	;# 
  3455  011C                     	;# 
  3456  011D                     	;# 
  3457  011D                     	;# 
  3458  011D                     	;# 
  3459  011E                     	;# 
  3460  011E                     	;# 
  3461  011E                     	;# 
  3462  011F                     	;# 
  3463  011F                     	;# 
  3464  011F                     	;# 
  3465  011F                     	;# 
  3466  011F                     	;# 
  3467  018C                     	;# 
  3468  018D                     	;# 
  3469  018E                     	;# 
  3470  018F                     	;# 
  3471  0190                     	;# 
  3472  0191                     	;# 
  3473  0192                     	;# 
  3474  0196                     	;# 
  3475  0197                     	;# 
  3476  0198                     	;# 
  3477  0199                     	;# 
  3478  019A                     	;# 
  3479  019B                     	;# 
  3480  019C                     	;# 
  3481  020C                     	;# 
  3482  020C                     	;# 
  3483  020D                     	;# 
  3484  020E                     	;# 
  3485  020F                     	;# 
  3486  020F                     	;# 
  3487  0210                     	;# 
  3488  0210                     	;# 
  3489  0211                     	;# 
  3490  0211                     	;# 
  3491  0212                     	;# 
  3492  0212                     	;# 
  3493  0213                     	;# 
  3494  0214                     	;# 
  3495  0215                     	;# 
  3496  0215                     	;# 
  3497  0216                     	;# 
  3498  0216                     	;# 
  3499  0217                     	;# 
  3500  0217                     	;# 
  3501  0218                     	;# 
  3502  0218                     	;# 
  3503  0219                     	;# 
  3504  021A                     	;# 
  3505  021B                     	;# 
  3506  021B                     	;# 
  3507  021C                     	;# 
  3508  021C                     	;# 
  3509  021D                     	;# 
  3510  021D                     	;# 
  3511  021E                     	;# 
  3512  021F                     	;# 
  3513  028C                     	;# 
  3514  028C                     	;# 
  3515  028D                     	;# 
  3516  028D                     	;# 
  3517  028E                     	;# 
  3518  028F                     	;# 
  3519  0290                     	;# 
  3520  0290                     	;# 
  3521  0291                     	;# 
  3522  0292                     	;# 
  3523  0292                     	;# 
  3524  0293                     	;# 
  3525  0293                     	;# 
  3526  0294                     	;# 
  3527  0295                     	;# 
  3528  0296                     	;# 
  3529  0296                     	;# 
  3530  0297                     	;# 
  3531  0298                     	;# 
  3532  0298                     	;# 
  3533  0299                     	;# 
  3534  0299                     	;# 
  3535  029A                     	;# 
  3536  029B                     	;# 
  3537  029C                     	;# 
  3538  029C                     	;# 
  3539  029D                     	;# 
  3540  030C                     	;# 
  3541  030C                     	;# 
  3542  030D                     	;# 
  3543  030E                     	;# 
  3544  030F                     	;# 
  3545  0310                     	;# 
  3546  0310                     	;# 
  3547  0311                     	;# 
  3548  0312                     	;# 
  3549  0313                     	;# 
  3550  0314                     	;# 
  3551  0314                     	;# 
  3552  0315                     	;# 
  3553  0316                     	;# 
  3554  0317                     	;# 
  3555  0318                     	;# 
  3556  0318                     	;# 
  3557  0319                     	;# 
  3558  031A                     	;# 
  3559  031B                     	;# 
  3560  031C                     	;# 
  3561  031C                     	;# 
  3562  031D                     	;# 
  3563  031E                     	;# 
  3564  031F                     	;# 
  3565  038C                     	;# 
  3566  038C                     	;# 
  3567  038D                     	;# 
  3568  038E                     	;# 
  3569  0390                     	;# 
  3570  0390                     	;# 
  3571  0391                     	;# 
  3572  0392                     	;# 
  3573  040C                     	;# 
  3574  040D                     	;# 
  3575  040E                     	;# 
  3576  040F                     	;# 
  3577  0410                     	;# 
  3578  0411                     	;# 
  3579  0416                     	;# 
  3580  0416                     	;# 
  3581  0417                     	;# 
  3582  0418                     	;# 
  3583  0418                     	;# 
  3584  0419                     	;# 
  3585  041A                     	;# 
  3586  041A                     	;# 
  3587  041B                     	;# 
  3588  041C                     	;# 
  3589  041C                     	;# 
  3590  041D                     	;# 
  3591  041E                     	;# 
  3592  041F                     	;# 
  3593  048C                     	;# 
  3594  048C                     	;# 
  3595  048D                     	;# 
  3596  048E                     	;# 
  3597  048F                     	;# 
  3598  048F                     	;# 
  3599  0490                     	;# 
  3600  0491                     	;# 
  3601  0492                     	;# 
  3602  0492                     	;# 
  3603  0493                     	;# 
  3604  0494                     	;# 
  3605  0495                     	;# 
  3606  0495                     	;# 
  3607  0496                     	;# 
  3608  0497                     	;# 
  3609  0498                     	;# 
  3610  0499                     	;# 
  3611  049A                     	;# 
  3612  049B                     	;# 
  3613  049C                     	;# 
  3614  049D                     	;# 
  3615  050C                     	;# 
  3616  050C                     	;# 
  3617  050D                     	;# 
  3618  050E                     	;# 
  3619  050F                     	;# 
  3620  050F                     	;# 
  3621  0510                     	;# 
  3622  0511                     	;# 
  3623  0512                     	;# 
  3624  0512                     	;# 
  3625  0513                     	;# 
  3626  0514                     	;# 
  3627  0515                     	;# 
  3628  0515                     	;# 
  3629  0516                     	;# 
  3630  0517                     	;# 
  3631  0518                     	;# 
  3632  0519                     	;# 
  3633  051A                     	;# 
  3634  051B                     	;# 
  3635  051C                     	;# 
  3636  051D                     	;# 
  3637  058C                     	;# 
  3638  058C                     	;# 
  3639  058D                     	;# 
  3640  058E                     	;# 
  3641  058F                     	;# 
  3642  058F                     	;# 
  3643  0590                     	;# 
  3644  0591                     	;# 
  3645  0592                     	;# 
  3646  0593                     	;# 
  3647  060C                     	;# 
  3648  060D                     	;# 
  3649  060E                     	;# 
  3650  060F                     	;# 
  3651  0610                     	;# 
  3652  0611                     	;# 
  3653  0612                     	;# 
  3654  0613                     	;# 
  3655  0614                     	;# 
  3656  0616                     	;# 
  3657  0617                     	;# 
  3658  0618                     	;# 
  3659  0619                     	;# 
  3660  061A                     	;# 
  3661  061B                     	;# 
  3662  061C                     	;# 
  3663  061D                     	;# 
  3664  061E                     	;# 
  3665  068C                     	;# 
  3666  068D                     	;# 
  3667  068E                     	;# 
  3668  068F                     	;# 
  3669  0690                     	;# 
  3670  0691                     	;# 
  3671  0692                     	;# 
  3672  0693                     	;# 
  3673  0694                     	;# 
  3674  070C                     	;# 
  3675  070D                     	;# 
  3676  070E                     	;# 
  3677  070F                     	;# 
  3678  0710                     	;# 
  3679  0711                     	;# 
  3680  0712                     	;# 
  3681  0713                     	;# 
  3682  0714                     	;# 
  3683  0716                     	;# 
  3684  0717                     	;# 
  3685  0718                     	;# 
  3686  0719                     	;# 
  3687  071A                     	;# 
  3688  071B                     	;# 
  3689  071C                     	;# 
  3690  071D                     	;# 
  3691  071E                     	;# 
  3692  0796                     	;# 
  3693  0797                     	;# 
  3694  0798                     	;# 
  3695  0799                     	;# 
  3696  079A                     	;# 
  3697  079B                     	;# 
  3698  080C                     	;# 
  3699  080D                     	;# 
  3700  080E                     	;# 
  3701  080F                     	;# 
  3702  0810                     	;# 
  3703  0811                     	;# 
  3704  0812                     	;# 
  3705  0813                     	;# 
  3706  0814                     	;# 
  3707  081A                     	;# 
  3708  081B                     	;# 
  3709  081C                     	;# 
  3710  081D                     	;# 
  3711  081E                     	;# 
  3712  081F                     	;# 
  3713  088C                     	;# 
  3714  088D                     	;# 
  3715  088E                     	;# 
  3716  088F                     	;# 
  3717  0890                     	;# 
  3718  0891                     	;# 
  3719  0892                     	;# 
  3720  0893                     	;# 
  3721  0895                     	;# 
  3722  0896                     	;# 
  3723  0897                     	;# 
  3724  0898                     	;# 
  3725  0899                     	;# 
  3726  089A                     	;# 
  3727  089B                     	;# 
  3728  090C                     	;# 
  3729  090E                     	;# 
  3730  090F                     	;# 
  3731  091F                     	;# 
  3732  098F                     	;# 
  3733  098F                     	;# 
  3734  0990                     	;# 
  3735  0991                     	;# 
  3736  0992                     	;# 
  3737  0993                     	;# 
  3738  0994                     	;# 
  3739  0995                     	;# 
  3740  0996                     	;# 
  3741  0997                     	;# 
  3742  0E0F                     	;# 
  3743  0E10                     	;# 
  3744  0E11                     	;# 
  3745  0E12                     	;# 
  3746  0E13                     	;# 
  3747  0E14                     	;# 
  3748  0E15                     	;# 
  3749  0E16                     	;# 
  3750  0E17                     	;# 
  3751  0E18                     	;# 
  3752  0E19                     	;# 
  3753  0E1A                     	;# 
  3754  0E1B                     	;# 
  3755  0E1C                     	;# 
  3756  0E1D                     	;# 
  3757  0E1E                     	;# 
  3758  0E1F                     	;# 
  3759  0E20                     	;# 
  3760  0E21                     	;# 
  3761  0E22                     	;# 
  3762  0E23                     	;# 
  3763  0E24                     	;# 
  3764  0E25                     	;# 
  3765  0E26                     	;# 
  3766  0E27                     	;# 
  3767  0E28                     	;# 
  3768  0E29                     	;# 
  3769  0E2A                     	;# 
  3770  0E2B                     	;# 
  3771  0E2C                     	;# 
  3772  0E2D                     	;# 
  3773  0E2E                     	;# 
  3774  0E2F                     	;# 
  3775  0E30                     	;# 
  3776  0E31                     	;# 
  3777  0E32                     	;# 
  3778  0E33                     	;# 
  3779  0E34                     	;# 
  3780  0E35                     	;# 
  3781  0E36                     	;# 
  3782  0E37                     	;# 
  3783  0E8F                     	;# 
  3784  0E90                     	;# 
  3785  0E91                     	;# 
  3786  0E92                     	;# 
  3787  0E93                     	;# 
  3788  0E94                     	;# 
  3789  0E95                     	;# 
  3790  0E96                     	;# 
  3791  0E97                     	;# 
  3792  0E9C                     	;# 
  3793  0E9D                     	;# 
  3794  0E9E                     	;# 
  3795  0EA1                     	;# 
  3796  0EA2                     	;# 
  3797  0EA3                     	;# 
  3798  0EA4                     	;# 
  3799  0EA5                     	;# 
  3800  0EA9                     	;# 
  3801  0EAA                     	;# 
  3802  0EAB                     	;# 
  3803  0EAC                     	;# 
  3804  0EB1                     	;# 
  3805  0EB2                     	;# 
  3806  0EB3                     	;# 
  3807  0EB8                     	;# 
  3808  0EB9                     	;# 
  3809  0EBA                     	;# 
  3810  0EBB                     	;# 
  3811  0EBC                     	;# 
  3812  0EBD                     	;# 
  3813  0EBE                     	;# 
  3814  0EC3                     	;# 
  3815  0EC5                     	;# 
  3816  0EC6                     	;# 
  3817  0EC7                     	;# 
  3818  0EC8                     	;# 
  3819  0EC9                     	;# 
  3820  0ECA                     	;# 
  3821  0ECB                     	;# 
  3822  0ECC                     	;# 
  3823  0F10                     	;# 
  3824  0F11                     	;# 
  3825  0F12                     	;# 
  3826  0F13                     	;# 
  3827  0F14                     	;# 
  3828  0F15                     	;# 
  3829  0F16                     	;# 
  3830  0F17                     	;# 
  3831  0F18                     	;# 
  3832  0F19                     	;# 
  3833  0F1A                     	;# 
  3834  0F1B                     	;# 
  3835  0F1C                     	;# 
  3836  0F1D                     	;# 
  3837  0F1E                     	;# 
  3838  0F1F                     	;# 
  3839  0F20                     	;# 
  3840  0F21                     	;# 
  3841  0F22                     	;# 
  3842  0F23                     	;# 
  3843  0F24                     	;# 
  3844  0F25                     	;# 
  3845  0F26                     	;# 
  3846  0F27                     	;# 
  3847  0F28                     	;# 
  3848  0F29                     	;# 
  3849  0F2A                     	;# 
  3850  0F2B                     	;# 
  3851  0F2C                     	;# 
  3852  0F2D                     	;# 
  3853  0F2E                     	;# 
  3854  0F2F                     	;# 
  3855  0F30                     	;# 
  3856  0F31                     	;# 
  3857  0F32                     	;# 
  3858  0F38                     	;# 
  3859  0F39                     	;# 
  3860  0F3A                     	;# 
  3861  0F3B                     	;# 
  3862  0F3C                     	;# 
  3863  0F3D                     	;# 
  3864  0F3E                     	;# 
  3865  0F3F                     	;# 
  3866  0F40                     	;# 
  3867  0F41                     	;# 
  3868  0F43                     	;# 
  3869  0F44                     	;# 
  3870  0F45                     	;# 
  3871  0F46                     	;# 
  3872  0F47                     	;# 
  3873  0F48                     	;# 
  3874  0F49                     	;# 
  3875  0F4A                     	;# 
  3876  0F4B                     	;# 
  3877  0F4C                     	;# 
  3878  0F4E                     	;# 
  3879  0F4F                     	;# 
  3880  0F50                     	;# 
  3881  0F51                     	;# 
  3882  0F52                     	;# 
  3883  0F53                     	;# 
  3884  0F54                     	;# 
  3885  0F55                     	;# 
  3886  0F56                     	;# 
  3887  0F57                     	;# 
  3888  0F59                     	;# 
  3889  0F5A                     	;# 
  3890  0F5B                     	;# 
  3891  0F5C                     	;# 
  3892  0F5D                     	;# 
  3893  0F61                     	;# 
  3894  0F62                     	;# 
  3895  0F64                     	;# 
  3896  0F65                     	;# 
  3897  0F66                     	;# 
  3898  0F67                     	;# 
  3899  0F68                     	;# 
  3900  0F69                     	;# 
  3901  0F6A                     	;# 
  3902  0F6B                     	;# 
  3903  0F6C                     	;# 
  3904  0F6D                     	;# 
  3905  0FE4                     	;# 
  3906  0FE5                     	;# 
  3907  0FE6                     	;# 
  3908  0FE7                     	;# 
  3909  0FE8                     	;# 
  3910  0FE9                     	;# 
  3911  0FEA                     	;# 
  3912  0FEB                     	;# 
  3913  0FED                     	;# 
  3914  0FEE                     	;# 
  3915  0FEF                     	;_lutRY
  3916                           
  3917                           	psect	idataCOMMON
  3918  0003                     __pidataCOMMON:	
  3919                           
  3920                           ;initializer for _AN_temp
  3921  0003  3401               	retlw	1
  3922                           
  3923                           	psect	idataBANK0
  3924  0D4D                     __pidataBANK0:	
  3925                           
  3926                           ;initializer for _AN_prev
  3927  0D4D  3401               	retlw	1
  3928                           
  3929                           ;initializer for _MAP_LARGE_MOTOR
  3930  0D4E  34FF               	retlw	255
  3931                           
  3932                           ;initializer for _MAP_SMALL_MOTOR
  3933  0D4F  34FF               	retlw	255
  3934                           
  3935                           ;initializer for _responseLength
  3936  0D50  3409               	retlw	9
  3937                           
  3938                           ;initializer for _debounceLoops
  3939  0D51  3403               	retlw	3
  3940                           
  3941                           ;initializer for _lyData
  3942  0D52  34F7               	retlw	247
  3943                           
  3944                           ;initializer for _lxData
  3945  0D53  34F7               	retlw	247
  3946                           
  3947                           ;initializer for _ryData
  3948  0D54  34F7               	retlw	247
  3949                           
  3950                           ;initializer for _rxData
  3951  0D55  34F7               	retlw	247
  3952                           
  3953                           ;initializer for _digitalStateSecond
  3954  0D56  34FF               	retlw	255
  3955                           
  3956                           ;initializer for _digitalStateFirst
  3957  0D57  34FF               	retlw	255
  3958                           
  3959                           ;initializer for _AN_btn
  3960  0D58  3401               	retlw	1
  3961                           
  3962                           	psect	idataBANK1
  3963  0D93                     __pidataBANK1:	
  3964                           
  3965                           ;initializer for _response
  3966  0D93  3482               	retlw	130
  3967  0D94  345A               	retlw	90
  3968  0D95  3400               	retlw	0
  3969  0D96  3400               	retlw	0
  3970  0D97  3400               	retlw	0
  3971  0D98  3400               	retlw	0
  3972  0D99  3400               	retlw	0
  3973  0D9A  3400               	retlw	0
  3974  0D9B  3400               	retlw	0
  3975  0D9C  3400               	retlw	0
  3976  0D9D  3400               	retlw	0
  3977  0D9E  3400               	retlw	0
  3978  0D9F  3400               	retlw	0
  3979  0DA0  3400               	retlw	0
  3980  0DA1  3400               	retlw	0
  3981  0DA2  3400               	retlw	0
  3982  0DA3  3400               	retlw	0
  3983  0DA4  3400               	retlw	0
  3984  0DA5  3400               	retlw	0
  3985  0DA6  3400               	retlw	0
  3986  0011                     _TRISAbits	set	17
  3987  0013                     _TRISCbits	set	19
  3988  0014                     _TRISDbits	set	20
  3989  0015                     _TRISE	set	21
  3990  0014                     _TRISD	set	20
  3991  0013                     _TRISC	set	19
  3992  0012                     _TRISB	set	18
  3993  0011                     _TRISA	set	17
  3994  000B                     _INTCONbits	set	11
  3995  006B                     _RB3	set	107
  3996  006A                     _RB2	set	106
  3997  006D                     _RB5	set	109
  3998  006C                     _RB4	set	108
  3999  0061                     _RA1	set	97
  4000  0062                     _RA2	set	98
  4001  0063                     _RA3	set	99
  4002  0060                     _RA0	set	96
  4003  006F                     _RB7	set	111
  4004  006E                     _RB6	set	110
  4005  0072                     _RC2	set	114
  4006  0078                     _RD0	set	120
  4007  0069                     _RB1	set	105
  4008  0068                     _RB0	set	104
  4009  0066                     _RA6	set	102
  4010  0067                     _RA7	set	103
  4011  007C                     _RD4	set	124
  4012  0065                     _RA5	set	101
  4013  007D                     _RD5	set	125
  4014  0064                     _RA4	set	100
  4015  007F                     _RD7	set	127
  4016  007E                     _RD6	set	126
  4017  0098                     _ADCLK	set	152
  4018  009A                     _ADREF	set	154
  4019  0095                     _ADCON2	set	149
  4020  0094                     _ADCON1	set	148
  4021  0093                     _ADCON0	set	147
  4022  008C                     _ADRESL	set	140
  4023  008D                     _ADRESH	set	141
  4024  0093                     _ADCON0bits	set	147
  4025  009D                     _ADACQ	set	157
  4026  009C                     _ADPRE	set	156
  4027  009E                     _ADPCH	set	158
  4028  018F                     _SSP1STATbits	set	399
  4029  0190                     _SSP1CON1	set	400
  4030  018F                     _SSP1STAT	set	399
  4031  018C                     _SSP1BUF	set	396
  4032  38C8                     _SSP1IE	set	14536
  4033  3878                     _SSP1IF	set	14456
  4034  081F                     _NVMCON2	set	2079
  4035  081C                     _NVMDATL	set	2076
  4036  081A                     _NVMADRL	set	2074
  4037  081B                     _NVMADRH	set	2075
  4038  081E                     _NVMCON1bits	set	2078
  4039  0E8F                     _PPSLOCK	set	3727
  4040  0F25                     _RC5PPS	set	3877
  4041  0F5A                     _WPUDbits	set	3930
  4042  0F65                     _WPUE	set	3941
  4043  0F5A                     _WPUD	set	3930
  4044  0F4F                     _WPUC	set	3919
  4045  0F44                     _WPUB	set	3908
  4046  0F39                     _WPUA	set	3897
  4047  0F64                     _ANSELE	set	3940
  4048  0F59                     _ANSELD	set	3929
  4049  0F4E                     _ANSELC	set	3918
  4050  0F43                     _ANSELB	set	3907
  4051  0F38                     _ANSELA	set	3896
  4052                           
  4053                           ; #config settings
  4054  0000                     
  4055                           	psect	cinit
  4056  0226                     start_initialization:	
  4057  0226                     __initialization:		;BIGRAM
  4058                           
  4059                           ; Initialize objects allocated to COMMON
  4060  0226  3180  2003  3182   	fcall	__pidataCOMMON	;fetch initializer
  4061  0229  00FB               	movwf	__pdataCOMMON& (0+127)
  4062                           
  4063                           ; Initialize objects allocated to BANK0
  4064  022A  304D               	movlw	low __pidataBANK0
  4065  022B  0084               	movwf	4
  4066  022C  308D               	movlw	(high __pidataBANK0)| (0+128)
  4067  022D  0085               	movwf	5
  4068  022E  305A               	movlw	low __pdataBANK0
  4069  022F  0086               	movwf	6
  4070  0230  3000               	movlw	high __pdataBANK0
  4071  0231  0087               	movwf	7
  4072  0232  3000               	movlw	0
  4073  0233  00FF               	movwf	btemp+1
  4074  0234  300C               	movlw	12
  4075  0235  318D  2541  3182   	fcall	init_ram
  4076                           
  4077                           ; Initialize objects allocated to BANK1
  4078  0238  3093               	movlw	low __pidataBANK1
  4079  0239  0084               	movwf	4
  4080  023A  308D               	movlw	(high __pidataBANK1)| (0+128)
  4081  023B  0085               	movwf	5
  4082  023C  30D8               	movlw	low __pdataBANK1
  4083  023D  0086               	movwf	6
  4084  023E  3000               	movlw	high __pdataBANK1
  4085  023F  0087               	movwf	7
  4086  0240  3000               	movlw	0
  4087  0241  00FF               	movwf	btemp+1
  4088  0242  3014               	movlw	20
  4089  0243  318D  2541  3182   	fcall	init_ram
  4090                           
  4091                           ; Clear objects allocated to BIGRAM
  4092  0246  30F0               	movlw	low (0+9200)
  4093  0247  0084               	movwf	4
  4094  0248  3023               	movlw	high (0+9200)
  4095  0249  0085               	movwf	5
  4096  024A  3000               	movlw	0
  4097  024B  00FE               	movwf	btemp
  4098  024C  3004               	movlw	4
  4099  024D  00FF               	movwf	btemp+1
  4100  024E  318D  2535  3182   	fcall	clear_ram0
  4101                           
  4102                           ; Clear objects allocated to COMMON
  4103  0251  01F6               	clrf	__pbssCOMMON& (0+127)
  4104  0252  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  4105  0253  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  4106  0254  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  4107  0255  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
  4108                           
  4109                           ; Clear objects allocated to BANK0
  4110  0256  01E6               	clrf	__pbssBANK0& (0+127)
  4111  0257  01E7               	clrf	(__pbssBANK0+1)& (0+127)
  4112  0258  01E8               	clrf	(__pbssBANK0+2)& (0+127)
  4113  0259  01E9               	clrf	(__pbssBANK0+3)& (0+127)
  4114  025A  01EA               	clrf	(__pbssBANK0+4)& (0+127)
  4115  025B  01EB               	clrf	(__pbssBANK0+5)& (0+127)
  4116  025C  01EC               	clrf	(__pbssBANK0+6)& (0+127)
  4117  025D  01ED               	clrf	(__pbssBANK0+7)& (0+127)
  4118                           
  4119                           ; Clear objects allocated to BANK1
  4120  025E  30A0               	movlw	low __pbssBANK1
  4121  025F  0084               	movwf	4
  4122  0260  3000               	movlw	high __pbssBANK1
  4123  0261  0085               	movwf	5
  4124  0262  3038               	movlw	56
  4125  0263  00FE               	movwf	btemp
  4126  0264  3000               	movlw	0
  4127  0265  00FF               	movwf	btemp+1
  4128  0266  318D  2535  3182   	fcall	clear_ram0
  4129                           
  4130                           ; Clear objects allocated to BANK2
  4131  0269  0022               	movlb	2	; select bank2
  4132  026A  01A0               	clrf	__pbssBANK2& (0+127)
  4133  026B  01A1               	clrf	(__pbssBANK2+1)& (0+127)
  4134  026C  01A2               	clrf	(__pbssBANK2+2)& (0+127)
  4135  026D  01A3               	clrf	(__pbssBANK2+3)& (0+127)
  4136  026E  01A4               	clrf	(__pbssBANK2+4)& (0+127)
  4137  026F  01A5               	clrf	(__pbssBANK2+5)& (0+127)
  4138  0270  01A6               	clrf	(__pbssBANK2+6)& (0+127)
  4139  0271  01A7               	clrf	(__pbssBANK2+7)& (0+127)
  4140  0272                     end_of_initialization:	
  4141                           ;End of C runtime variable initialization code
  4142                           
  4143  0272                     __end_of__initialization:	
  4144  0272  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4145  0273  0020               	movlb	0
  4146  0274  318F  2F77         	ljmp	_main	;jump to C main() function
  4147                           
  4148                           	psect	bssCOMMON
  4149  0076                     __pbssCOMMON:	
  4150  0076                     _previousCmd:	
  4151  0076                     	ds	1
  4152  0077                     _escapeMode:	
  4153  0077                     	ds	1
  4154  0078                     _analogMode:	
  4155  0078                     	ds	1
  4156  0079                     _cmdCounter:	
  4157  0079                     	ds	1
  4158  007A                     _index:	
  4159  007A                     	ds	1
  4160                           
  4161                           	psect	dataCOMMON
  4162  007B                     __pdataCOMMON:	
  4163  007B                     _AN_temp:	
  4164  007B                     	ds	1
  4165                           
  4166                           	psect	bssBANK0
  4167  0066                     __pbssBANK0:	
  4168  0066                     _AN_timer:	
  4169  0066                     	ds	1
  4170  0067                     _CONTROL_RESPONSE_byte5:	
  4171  0067                     	ds	1
  4172  0068                     _CONTROL_RESPONSE_byte4:	
  4173  0068                     	ds	1
  4174  0069                     _CONTROL_RESPONSE_byte3:	
  4175  0069                     	ds	1
  4176  006A                     _INIT_PRESSURE_SENSOR_byte4:	
  4177  006A                     	ds	1
  4178  006B                     _INIT_PRESSURE_SENSOR_byte3:	
  4179  006B                     	ds	1
  4180  006C                     _AN_latch:	
  4181  006C                     	ds	1
  4182  006D                     _MODE_LOCK:	
  4183  006D                     	ds	1
  4184                           
  4185                           	psect	dataBANK0
  4186  005A                     __pdataBANK0:	
  4187  005A                     _AN_prev:	
  4188  005A                     	ds	1
  4189  005B                     _MAP_LARGE_MOTOR:	
  4190  005B                     	ds	1
  4191  005C                     _MAP_SMALL_MOTOR:	
  4192  005C                     	ds	1
  4193  005D                     _responseLength:	
  4194  005D                     	ds	1
  4195  005E                     _debounceLoops:	
  4196  005E                     	ds	1
  4197  005F                     _lyData:	
  4198  005F                     	ds	1
  4199  0060                     _lxData:	
  4200  0060                     	ds	1
  4201  0061                     _ryData:	
  4202  0061                     	ds	1
  4203  0062                     _rxData:	
  4204  0062                     	ds	1
  4205  0063                     _digitalStateSecond:	
  4206  0063                     	ds	1
  4207  0064                     _digitalStateFirst:	
  4208  0064                     	ds	1
  4209  0065                     _AN_btn:	
  4210  0065                     	ds	1
  4211                           
  4212                           	psect	bssBANK1
  4213  00A0                     __pbssBANK1:	
  4214  00A0                     _IndexDigitalByte2:	
  4215  00A0                     	ds	8
  4216  00A8                     _IndexDigitalByte1:	
  4217  00A8                     	ds	8
  4218  00B0                     _PreviousDigitalByte1:	
  4219  00B0                     	ds	8
  4220  00B8                     _DigitalControllerByte2:	
  4221  00B8                     	ds	8
  4222  00C0                     _DigitalControllerByte1:	
  4223  00C0                     	ds	8
  4224  00C8                     _analogStateSecond:	
  4225  00C8                     	ds	8
  4226  00D0                     _analogStateFirst:	
  4227  00D0                     	ds	8
  4228                           
  4229                           	psect	dataBANK1
  4230  00D8                     __pdataBANK1:	
  4231  00D8                     _response:	
  4232  00D8                     	ds	20
  4233                           
  4234                           	psect	bssBANK2
  4235  0120                     __pbssBANK2:	
  4236  0120                     _PreviousDigitalByte2:	
  4237  0120                     	ds	8
  4238                           
  4239                           	psect	inittext
  4240  0D41                     init_ram:	
  4241  0D41  00FE               	movwf	btemp
  4242  0D42                     initloop:	
  4243  0D42  0012               	moviw fsr0++
  4244  0D43  001E               	movwi fsr1++
  4245  0D44  3001               	movlw	1
  4246  0D45  02FE               	subwf	btemp,f
  4247  0D46  3000               	movlw	0
  4248  0D47  3BFF               	subwfb	btemp+1,f
  4249  0D48  087F               	movf	btemp+1,w
  4250  0D49  047E               	iorwf	btemp,w
  4251  0D4A  1D03               	skipz
  4252  0D4B  2D42               	goto	initloop
  4253  0D4C  3400               	retlw	0
  4254                           
  4255                           	psect	clrtext
  4256  0D35                     clear_ram0:	
  4257                           ;	Called with FSR0 containing the base address, and
  4258                           ;	btemp/btemp+1 has the size to clear
  4259                           
  4260  0D35  0064               	clrwdt	;clear the watchdog before getting into this loop
  4261  0D36                     clrloop0:	
  4262  0D36  0180               	clrf	0	;clear RAM location pointed to by FSR
  4263  0D37  3101               	addfsr 0,1
  4264  0D38  3001               	movlw	1
  4265  0D39  02FE               	subwf	btemp,f
  4266  0D3A  3000               	movlw	0
  4267  0D3B  3BFF               	subwfb	btemp+1,f
  4268  0D3C  087F               	movf	btemp+1,w
  4269  0D3D  047E               	iorwf	btemp,w
  4270  0D3E  1D03               	skipz
  4271  0D3F  2D36               	goto	clrloop0	;have we reached the end yet?
  4272  0D40  3400               	retlw	0	;all done for this memory range, return
  4273                           
  4274                           	psect	cstackBANK1
  4275  00EC                     __pcstackBANK1:	
  4276  00EC                     main@slaveSelectStatePrev:	
  4277                           
  4278                           ; 1 bytes @ 0x0
  4279  00EC                     	ds	1
  4280  00ED                     main@count:	
  4281                           
  4282                           ; 1 bytes @ 0x1
  4283  00ED                     	ds	1
  4284  00EE                     main@slaveSelect:	
  4285                           
  4286                           ; 1 bytes @ 0x2
  4287  00EE                     	ds	1
  4288                           
  4289                           	psect	cstackCOMMON
  4290  0070                     __pcstackCOMMON:	
  4291  0070                     ?_spiRead:	
  4292  0070                     ??_spiRead:	
  4293                           ; 1 bytes @ 0x0
  4294                           
  4295  0070                     ?_reversebyte:	
  4296                           ; 1 bytes @ 0x0
  4297                           
  4298  0070                     ?_spiWrite:	
  4299                           ; 1 bytes @ 0x0
  4300                           
  4301  0070                     ??_spiWrite:	
  4302                           ; 1 bytes @ 0x0
  4303                           
  4304  0070                     ?_picInit:	
  4305                           ; 1 bytes @ 0x0
  4306                           
  4307  0070                     ?_IO_MAPPING:	
  4308                           ; 1 bytes @ 0x0
  4309                           
  4310  0070                     ?_adcInit:	
  4311                           ; 1 bytes @ 0x0
  4312                           
  4313  0070                     ?_lutInit:	
  4314                           ; 1 bytes @ 0x0
  4315                           
  4316  0070                     ?_configureController:	
  4317                           ; 1 bytes @ 0x0
  4318                           
  4319  0070                     ?_readController:	
  4320                           ; 1 bytes @ 0x0
  4321                           
  4322  0070                     ?_readControllerAnalog:	
  4323                           ; 1 bytes @ 0x0
  4324                           
  4325  0070                     ?_eepromRead:	
  4326                           ; 1 bytes @ 0x0
  4327                           
  4328  0070                     ?_nvmUnlock:	
  4329                           ; 1 bytes @ 0x0
  4330                           
  4331  0070                     ?_pollController:	
  4332                           ; 1 bytes @ 0x0
  4333                           
  4334  0070                     ??_pollController:	
  4335                           ; 1 bytes @ 0x0
  4336                           
  4337  0070                     ?_PS2Command:	
  4338                           ; 1 bytes @ 0x0
  4339                           
  4340  0070                     ?_main:	
  4341                           ; 1 bytes @ 0x0
  4342                           
  4343  0070                     ?_ppsUnlock:	
  4344                           ; 1 bytes @ 0x0
  4345                           
  4346  0070                     ?_ppsLock:	
  4347                           ; 1 bytes @ 0x0
  4348                           
  4349  0070                     ?_spiReceiveWait:	
  4350                           ; 1 bytes @ 0x0
  4351                           
  4352  0070                     ??_spiReceiveWait:	
  4353                           ; 1 bytes @ 0x0
  4354                           
  4355  0070                     ?i1_reversebyte:	
  4356                           ; 1 bytes @ 0x0
  4357                           
  4358  0070                     ??i1_reversebyte:	
  4359                           ; 1 bytes @ 0x0
  4360                           
  4361  0070                     spiWrite@dat:	
  4362                           ; 1 bytes @ 0x0
  4363                           
  4364                           
  4365                           ; 1 bytes @ 0x0
  4366  0070                     	ds	1
  4367  0071                     pollController@response:	
  4368                           
  4369                           ; 1 bytes @ 0x1
  4370  0071                     	ds	2
  4371  0073                     i1reversebyte@byte:	
  4372                           
  4373                           ; 1 bytes @ 0x3
  4374  0073                     	ds	1
  4375  0074                     ??_PS2Command:	
  4376                           
  4377                           ; 1 bytes @ 0x4
  4378  0074                     	ds	1
  4379  0075                     PS2Command@cmd:	
  4380                           
  4381                           ; 1 bytes @ 0x5
  4382  0075                     	ds	1
  4383                           
  4384                           	psect	cstackBANK0
  4385  0020                     __pcstackBANK0:	
  4386  0020                     ??_reversebyte:	
  4387  0020                     ??_IO_MAPPING:	
  4388                           ; 1 bytes @ 0x0
  4389                           
  4390  0020                     ??_adcInit:	
  4391                           ; 1 bytes @ 0x0
  4392                           
  4393  0020                     ??_readController:	
  4394                           ; 1 bytes @ 0x0
  4395                           
  4396  0020                     ??_eepromRead:	
  4397                           ; 1 bytes @ 0x0
  4398                           
  4399  0020                     ?_eepromWrite:	
  4400                           ; 1 bytes @ 0x0
  4401                           
  4402  0020                     ?_spiInit:	
  4403                           ; 1 bytes @ 0x0
  4404                           
  4405  0020                     ??_nvmUnlock:	
  4406                           ; 1 bytes @ 0x0
  4407                           
  4408  0020                     ??_ppsUnlock:	
  4409                           ; 1 bytes @ 0x0
  4410                           
  4411  0020                     ??_ppsLock:	
  4412                           ; 1 bytes @ 0x0
  4413                           
  4414  0020                     ?_readADC:	
  4415                           ; 1 bytes @ 0x0
  4416                           
  4417  0020                     ?___wmul:	
  4418                           ; 2 bytes @ 0x0
  4419                           
  4420  0020                     spiInit@sDataSample:	
  4421                           ; 2 bytes @ 0x0
  4422                           
  4423  0020                     eepromWrite@data:	
  4424                           ; 1 bytes @ 0x0
  4425                           
  4426  0020                     readADC@channel:	
  4427                           ; 1 bytes @ 0x0
  4428                           
  4429  0020                     ___wmul@multiplier:	
  4430                           ; 2 bytes @ 0x0
  4431                           
  4432                           
  4433                           ; 2 bytes @ 0x0
  4434  0020                     	ds	1
  4435  0021                     ??_eepromWrite:	
  4436  0021                     spiInit@sClockIdle:	
  4437                           ; 1 bytes @ 0x1
  4438                           
  4439  0021                     eepromWrite@address:	
  4440                           ; 1 bytes @ 0x1
  4441                           
  4442  0021                     eepromRead@address:	
  4443                           ; 1 bytes @ 0x1
  4444                           
  4445                           
  4446                           ; 1 bytes @ 0x1
  4447  0021                     	ds	1
  4448  0022                     ??_readADC:	
  4449  0022                     readController@analogMode:	
  4450                           ; 1 bytes @ 0x2
  4451                           
  4452  0022                     spiInit@sTransmitEdge:	
  4453                           ; 1 bytes @ 0x2
  4454                           
  4455  0022                     eepromWrite@interruptStatus:	
  4456                           ; 1 bytes @ 0x2
  4457                           
  4458  0022                     eepromRead@data:	
  4459                           ; 1 bytes @ 0x2
  4460                           
  4461  0022                     ___wmul@multiplicand:	
  4462                           ; 1 bytes @ 0x2
  4463                           
  4464                           
  4465                           ; 2 bytes @ 0x2
  4466  0022                     	ds	1
  4467  0023                     ??_spiInit:	
  4468  0023                     reversebyte@byte:	
  4469                           ; 1 bytes @ 0x3
  4470                           
  4471  0023                     spiInit@sType:	
  4472                           ; 1 bytes @ 0x3
  4473                           
  4474                           
  4475                           ; 1 bytes @ 0x3
  4476  0023                     	ds	1
  4477  0024                     ??_picInit:	
  4478  0024                     ??___wmul:	
  4479                           ; 1 bytes @ 0x4
  4480                           
  4481  0024                     ___wmul@product:	
  4482                           ; 1 bytes @ 0x4
  4483                           
  4484                           
  4485                           ; 2 bytes @ 0x4
  4486  0024                     	ds	2
  4487  0026                     ?___awdiv:	
  4488  0026                     ___awdiv@divisor:	
  4489                           ; 2 bytes @ 0x6
  4490                           
  4491                           
  4492                           ; 2 bytes @ 0x6
  4493  0026                     	ds	2
  4494  0028                     ___awdiv@dividend:	
  4495                           
  4496                           ; 2 bytes @ 0x8
  4497  0028                     	ds	1
  4498  0029                     ??_readControllerAnalog:	
  4499                           
  4500                           ; 1 bytes @ 0x9
  4501  0029                     	ds	1
  4502  002A                     ??___awdiv:	
  4503                           
  4504                           ; 1 bytes @ 0xA
  4505  002A                     	ds	1
  4506  002B                     ___awdiv@counter:	
  4507                           
  4508                           ; 1 bytes @ 0xB
  4509  002B                     	ds	1
  4510  002C                     ___awdiv@sign:	
  4511                           
  4512                           ; 1 bytes @ 0xC
  4513  002C                     	ds	1
  4514  002D                     ___awdiv@quotient:	
  4515                           
  4516                           ; 2 bytes @ 0xD
  4517  002D                     	ds	2
  4518  002F                     ?_Map:	
  4519  002F                     Map@x:	
  4520                           ; 1 bytes @ 0xF
  4521                           
  4522                           
  4523                           ; 2 bytes @ 0xF
  4524  002F                     	ds	2
  4525  0031                     Map@inMin:	
  4526                           
  4527                           ; 2 bytes @ 0x11
  4528  0031                     	ds	2
  4529  0033                     Map@inMax:	
  4530                           
  4531                           ; 2 bytes @ 0x13
  4532  0033                     	ds	2
  4533  0035                     Map@outMin:	
  4534                           
  4535                           ; 2 bytes @ 0x15
  4536  0035                     	ds	2
  4537  0037                     Map@outMax:	
  4538                           
  4539                           ; 2 bytes @ 0x17
  4540  0037                     	ds	2
  4541  0039                     ??_lutInit:	
  4542  0039                     ??_Map:	
  4543                           ; 1 bytes @ 0x19
  4544                           
  4545                           
  4546                           ; 1 bytes @ 0x19
  4547  0039                     	ds	9
  4548  0042                     lutInit@lxMin:	
  4549                           
  4550                           ; 1 bytes @ 0x22
  4551  0042                     	ds	1
  4552  0043                     lutInit@lxMax:	
  4553                           
  4554                           ; 1 bytes @ 0x23
  4555  0043                     	ds	1
  4556  0044                     lutInit@lyMin:	
  4557                           
  4558                           ; 1 bytes @ 0x24
  4559  0044                     	ds	1
  4560  0045                     lutInit@lyMax:	
  4561                           
  4562                           ; 1 bytes @ 0x25
  4563  0045                     	ds	1
  4564  0046                     lutInit@rxMin:	
  4565                           
  4566                           ; 1 bytes @ 0x26
  4567  0046                     	ds	1
  4568  0047                     lutInit@rxMax:	
  4569                           
  4570                           ; 1 bytes @ 0x27
  4571  0047                     	ds	1
  4572  0048                     lutInit@ryMin:	
  4573                           
  4574                           ; 1 bytes @ 0x28
  4575  0048                     	ds	1
  4576  0049                     lutInit@ryMax:	
  4577                           
  4578                           ; 1 bytes @ 0x29
  4579  0049                     	ds	1
  4580  004A                     lutInit@position:	
  4581                           
  4582                           ; 2 bytes @ 0x2A
  4583  004A                     	ds	2
  4584  004C                     ??_configureController:	
  4585                           
  4586                           ; 1 bytes @ 0x2C
  4587  004C                     	ds	1
  4588  004D                     configureController@lxMin:	
  4589                           
  4590                           ; 1 bytes @ 0x2D
  4591  004D                     	ds	1
  4592  004E                     configureController@lxMax:	
  4593                           
  4594                           ; 1 bytes @ 0x2E
  4595  004E                     	ds	1
  4596  004F                     configureController@lyMin:	
  4597                           
  4598                           ; 1 bytes @ 0x2F
  4599  004F                     	ds	1
  4600  0050                     configureController@lyMax:	
  4601                           
  4602                           ; 1 bytes @ 0x30
  4603  0050                     	ds	1
  4604  0051                     configureController@rxMin:	
  4605                           
  4606                           ; 1 bytes @ 0x31
  4607  0051                     	ds	1
  4608  0052                     configureController@rxMax:	
  4609                           
  4610                           ; 1 bytes @ 0x32
  4611  0052                     	ds	1
  4612  0053                     configureController@ryMin:	
  4613                           
  4614                           ; 1 bytes @ 0x33
  4615  0053                     	ds	1
  4616  0054                     configureController@ryMax:	
  4617                           
  4618                           ; 1 bytes @ 0x34
  4619  0054                     	ds	1
  4620  0055                     configureController@lx:	
  4621                           
  4622                           ; 1 bytes @ 0x35
  4623  0055                     	ds	1
  4624  0056                     configureController@ly:	
  4625                           
  4626                           ; 1 bytes @ 0x36
  4627  0056                     	ds	1
  4628  0057                     configureController@rx:	
  4629                           
  4630                           ; 1 bytes @ 0x37
  4631  0057                     	ds	1
  4632  0058                     configureController@ry:	
  4633                           
  4634                           ; 1 bytes @ 0x38
  4635  0058                     	ds	1
  4636  0059                     ??_main:	
  4637                           
  4638                           ; 1 bytes @ 0x39
  4639  0059                     	ds	1
  4640                           
  4641                           	psect	maintext
  4642  0F77                     __pmaintext:	
  4643 ;;
  4644 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4645 ;;
  4646 ;; *************** function _main *****************
  4647 ;; Defined at:
  4648 ;;		line 334 in file "main.c"
  4649 ;; Parameters:    Size  Location     Type
  4650 ;;		None
  4651 ;; Auto vars:     Size  Location     Type
  4652 ;;  slaveSelect     1    2[BANK1 ] unsigned char 
  4653 ;;  count           1    1[BANK1 ] unsigned char 
  4654 ;;  slaveSelectS    1    0[BANK1 ] unsigned char 
  4655 ;; Return value:  Size  Location     Type
  4656 ;;                  1    wreg      void 
  4657 ;; Registers used:
  4658 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4659 ;; Tracked objects:
  4660 ;;		On entry : B1F/0
  4661 ;;		On exit  : 0/0
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4665 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4666 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4667 ;;      Totals:         0       1       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4668 ;;Total ram usage:        4 bytes
  4669 ;; Hardware stack levels required when called:    7
  4670 ;; This function calls:
  4671 ;;		_IO_MAPPING
  4672 ;;		_adcInit
  4673 ;;		_configureController
  4674 ;;		_lutInit
  4675 ;;		_picInit
  4676 ;;		_readController
  4677 ;;		_readControllerAnalog
  4678 ;; This function is called by:
  4679 ;;		Startup code after reset
  4680 ;; This function uses a non-reentrant model
  4681 ;;
  4682                           
  4683                           
  4684                           ;psect for function _main
  4685  0F77                     _main:	
  4686  0F77                     l2889:	
  4687                           ;incstack = 0
  4688                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4689                           
  4690                           
  4691                           ;main.c: 336: picInit();
  4692  0F77  318D  257F  318F   	fcall	_picInit
  4693                           
  4694                           ;main.c: 337: IO_MAPPING();
  4695  0F7A  318E  2614  318F   	fcall	_IO_MAPPING
  4696                           
  4697                           ;main.c: 338: adcInit();
  4698  0F7D  318D  252B  318F   	fcall	_adcInit
  4699  0F80                     l2891:	
  4700                           
  4701                           ;main.c: 339: lutInit();
  4702  0F80  3182  2276  318F   	fcall	_lutInit
  4703  0F83                     l2893:	
  4704                           
  4705                           ;main.c: 341: response[1] = 0x5A;
  4706  0F83  305A               	movlw	90
  4707  0F84  0020               	movlb	0	; select bank0
  4708  0F85  00D9               	movwf	??_main
  4709  0F86  0859               	movf	??_main,w
  4710  0F87  0021               	movlb	1	; select bank1
  4711  0F88  00D9               	movwf	(_response^(0+128)+1)
  4712  0F89                     l2895:	
  4713                           
  4714                           ;main.c: 343: char slaveSelect;;main.c: 344: char slaveSelectStatePrev = 0;
  4715  0F89  01EC               	clrf	main@slaveSelectStatePrev^(0+128)
  4716  0F8A                     l2897:	
  4717                           
  4718                           ;main.c: 345: char count = 0;
  4719  0F8A  01ED               	clrf	main@count^(0+128)
  4720  0F8B                     l2899:	
  4721                           
  4722                           ;main.c: 346: RA4 = 1;
  4723  0F8B  0020               	movlb	0	; select bank0
  4724  0F8C  160C               	bsf	12,4	;volatile
  4725  0F8D                     l2901:	
  4726                           
  4727                           ;main.c: 350: if(digitalStateFirst == 0x7F && digitalStateSecond == 0x5F){
  4728  0F8D  307F               	movlw	127
  4729  0F8E  0020               	movlb	0	; select bank0
  4730  0F8F  0664               	xorwf	_digitalStateFirst,w
  4731  0F90  1D03               	btfss	3,2
  4732  0F91  2F93               	goto	u2691
  4733  0F92  2F94               	goto	u2690
  4734  0F93                     u2691:	
  4735  0F93  2F9D               	goto	l2907
  4736  0F94                     u2690:	
  4737  0F94                     l2903:	
  4738  0F94  305F               	movlw	95
  4739  0F95  0663               	xorwf	_digitalStateSecond,w
  4740  0F96  1D03               	btfss	3,2
  4741  0F97  2F99               	goto	u2701
  4742  0F98  2F9A               	goto	u2700
  4743  0F99                     u2701:	
  4744  0F99  2F9D               	goto	l2907
  4745  0F9A                     u2700:	
  4746  0F9A                     l2905:	
  4747                           
  4748                           ;main.c: 351: configureController();
  4749  0F9A  3185  25D1  318F   	fcall	_configureController
  4750  0F9D                     l2907:	
  4751                           
  4752                           ;main.c: 352: };main.c: 354: if(analogMode >= 1) RD5 = 1;
  4753  0F9D  0878               	movf	_analogMode,w
  4754  0F9E  1903               	btfsc	3,2
  4755  0F9F  2FA1               	goto	u2711
  4756  0FA0  2FA2               	goto	u2710
  4757  0FA1                     u2711:	
  4758  0FA1  2FA5               	goto	l190
  4759  0FA2                     u2710:	
  4760  0FA2                     l2909:	
  4761  0FA2  0020               	movlb	0	; select bank0
  4762  0FA3  168F               	bsf	15,5	;volatile
  4763  0FA4  2FA7               	goto	l2911
  4764  0FA5                     l190:	
  4765                           
  4766                           ;main.c: 355: else RD5 = 0;
  4767  0FA5  0020               	movlb	0	; select bank0
  4768  0FA6  128F               	bcf	15,5	;volatile
  4769  0FA7                     l2911:	
  4770                           
  4771                           ;main.c: 358: if(!AN_btn && !MODE_LOCK && AN_latch){
  4772  0FA7  0865               	movf	_AN_btn,w
  4773  0FA8  1D03               	btfss	3,2
  4774  0FA9  2FAB               	goto	u2721
  4775  0FAA  2FAC               	goto	u2720
  4776  0FAB                     u2721:	
  4777  0FAB  2FC1               	goto	l192
  4778  0FAC                     u2720:	
  4779  0FAC                     l2913:	
  4780  0FAC  086D               	movf	_MODE_LOCK,w
  4781  0FAD  1D03               	btfss	3,2
  4782  0FAE  2FB0               	goto	u2731
  4783  0FAF  2FB1               	goto	u2730
  4784  0FB0                     u2731:	
  4785  0FB0  2FC1               	goto	l192
  4786  0FB1                     u2730:	
  4787  0FB1                     l2915:	
  4788  0FB1  086C               	movf	_AN_latch,w
  4789  0FB2  1903               	btfsc	3,2
  4790  0FB3  2FB5               	goto	u2741
  4791  0FB4  2FB6               	goto	u2740
  4792  0FB5                     u2741:	
  4793  0FB5  2FC1               	goto	l192
  4794  0FB6                     u2740:	
  4795  0FB6                     l2917:	
  4796                           
  4797                           ;main.c: 359: if(analogMode >= 1) analogMode = 0;
  4798  0FB6  0878               	movf	_analogMode,w
  4799  0FB7  1903               	btfsc	3,2
  4800  0FB8  2FBA               	goto	u2751
  4801  0FB9  2FBB               	goto	u2750
  4802  0FBA                     u2751:	
  4803  0FBA  2FBD               	goto	l193
  4804  0FBB                     u2750:	
  4805  0FBB                     l2919:	
  4806  0FBB  01F8               	clrf	_analogMode
  4807  0FBC  2FBF               	goto	l2921
  4808  0FBD                     l193:	
  4809                           
  4810                           ;main.c: 360: else analogMode = 1;
  4811  0FBD  01F8               	clrf	_analogMode
  4812  0FBE  0AF8               	incf	_analogMode,f
  4813  0FBF                     l2921:	
  4814                           
  4815                           ;main.c: 361: AN_latch = 0;
  4816  0FBF  01EC               	clrf	_AN_latch
  4817                           
  4818                           ;main.c: 362: }
  4819  0FC0  2FC3               	goto	l2923
  4820  0FC1                     l192:	
  4821                           
  4822                           ;main.c: 363: else AN_latch = 1;
  4823  0FC1  01EC               	clrf	_AN_latch
  4824  0FC2  0AEC               	incf	_AN_latch,f
  4825  0FC3                     l2923:	
  4826                           
  4827                           ;main.c: 365: slaveSelect = RA5;
  4828  0FC3  3000               	movlw	0
  4829  0FC4  1A8C               	btfsc	12,5	;volatile
  4830  0FC5  3001               	movlw	1
  4831  0FC6  0021               	movlb	1	; select bank1
  4832  0FC7  00EE               	movwf	main@slaveSelect^(0+128)
  4833  0FC8                     l2925:	
  4834                           
  4835                           ;main.c: 366: if (slaveSelect) if(count < 3) count++;
  4836  0FC8  086E               	movf	main@slaveSelect^(0+128),w
  4837  0FC9  1903               	btfsc	3,2
  4838  0FCA  2FCC               	goto	u2761
  4839  0FCB  2FCD               	goto	u2760
  4840  0FCC                     u2761:	
  4841  0FCC  2FD9               	goto	l196
  4842  0FCD                     u2760:	
  4843  0FCD                     l2927:	
  4844  0FCD  3003               	movlw	3
  4845  0FCE  026D               	subwf	main@count^(0+128),w
  4846  0FCF  1803               	skipnc
  4847  0FD0  2FD2               	goto	u2771
  4848  0FD1  2FD3               	goto	u2770
  4849  0FD2                     u2771:	
  4850  0FD2  2FD9               	goto	l196
  4851  0FD3                     u2770:	
  4852  0FD3                     l2929:	
  4853  0FD3  3001               	movlw	1
  4854  0FD4  0020               	movlb	0	; select bank0
  4855  0FD5  00D9               	movwf	??_main
  4856  0FD6  0859               	movf	??_main,w
  4857  0FD7  0021               	movlb	1	; select bank1
  4858  0FD8  07ED               	addwf	main@count^(0+128),f
  4859  0FD9                     l196:	
  4860                           
  4861                           ;main.c: 367: if (slaveSelect ^ slaveSelectStatePrev) count = 0;
  4862  0FD9  086E               	movf	main@slaveSelect^(0+128),w
  4863  0FDA  066C               	xorwf	main@slaveSelectStatePrev^(0+128),w
  4864  0FDB  1903               	btfsc	3,2
  4865  0FDC  2FDE               	goto	u2781
  4866  0FDD  2FDF               	goto	u2780
  4867  0FDE                     u2781:	
  4868  0FDE  2FE0               	goto	l2933
  4869  0FDF                     u2780:	
  4870  0FDF                     l2931:	
  4871  0FDF  01ED               	clrf	main@count^(0+128)
  4872  0FE0                     l2933:	
  4873                           
  4874                           ;main.c: 368: slaveSelectStatePrev = slaveSelect;
  4875  0FE0  086E               	movf	main@slaveSelect^(0+128),w
  4876  0FE1  0020               	movlb	0	; select bank0
  4877  0FE2  00D9               	movwf	??_main
  4878  0FE3  0859               	movf	??_main,w
  4879  0FE4  0021               	movlb	1	; select bank1
  4880  0FE5  00EC               	movwf	main@slaveSelectStatePrev^(0+128)
  4881  0FE6                     l2935:	
  4882                           
  4883                           ;main.c: 369: if (count >= 3) {
  4884  0FE6  3003               	movlw	3
  4885  0FE7  026D               	subwf	main@count^(0+128),w
  4886  0FE8  1C03               	skipc
  4887  0FE9  2FEB               	goto	u2791
  4888  0FEA  2FEC               	goto	u2790
  4889  0FEB                     u2791:	
  4890  0FEB  2FF6               	goto	l2943
  4891  0FEC                     u2790:	
  4892  0FEC                     l2937:	
  4893                           
  4894                           ;main.c: 370: cmdCounter = 0;
  4895  0FEC  01F9               	clrf	_cmdCounter
  4896  0FED                     l2939:	
  4897                           
  4898                           ;main.c: 371: responseLength = 9;
  4899  0FED  3009               	movlw	9
  4900  0FEE  0020               	movlb	0	; select bank0
  4901  0FEF  00D9               	movwf	??_main
  4902  0FF0  0859               	movf	??_main,w
  4903  0FF1  00DD               	movwf	_responseLength
  4904  0FF2                     l2941:	
  4905                           
  4906                           ;main.c: 372: SSP1BUF = 0xFF;
  4907  0FF2  30FF               	movlw	255
  4908  0FF3  0023               	movlb	3	; select bank3
  4909  0FF4  008C               	movwf	12	;volatile
  4910                           
  4911                           ;main.c: 373: previousCmd = 0x00;
  4912  0FF5  01F6               	clrf	_previousCmd
  4913  0FF6                     l2943:	
  4914                           
  4915                           ;main.c: 374: };main.c: 376: readController(analogMode);
  4916  0FF6  0878               	movf	_analogMode,w
  4917  0FF7  3184  2467  318F   	fcall	_readController
  4918  0FFA                     l2945:	
  4919                           
  4920                           ;main.c: 377: readControllerAnalog();
  4921  0FFA  318F  270D  318F   	fcall	_readControllerAnalog
  4922  0FFD  2F8D               	goto	l2901
  4923  0FFE  3182  2A24         	ljmp	start
  4924  1000                     __end_of_main:	
  4925                           
  4926                           	psect	text1
  4927  0F0D                     __ptext1:	
  4928 ;; *************** function _readControllerAnalog *****************
  4929 ;; Defined at:
  4930 ;;		line 184 in file "Controller.c"
  4931 ;; Parameters:    Size  Location     Type
  4932 ;;		None
  4933 ;; Auto vars:     Size  Location     Type
  4934 ;;		None
  4935 ;; Return value:  Size  Location     Type
  4936 ;;                  1    wreg      void 
  4937 ;; Registers used:
  4938 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4939 ;; Tracked objects:
  4940 ;;		On entry : 0/0
  4941 ;;		On exit  : 0/0
  4942 ;;		Unchanged: 0/0
  4943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4946 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4947 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4948 ;;Total ram usage:        3 bytes
  4949 ;; Hardware stack levels used:    1
  4950 ;; Hardware stack levels required when called:    4
  4951 ;; This function calls:
  4952 ;;		_readADC
  4953 ;;		_reversebyte
  4954 ;; This function is called by:
  4955 ;;		_main
  4956 ;; This function uses a non-reentrant model
  4957 ;;
  4958                           
  4959                           
  4960                           ;psect for function _readControllerAnalog
  4961  0F0D                     _readControllerAnalog:	
  4962  0F0D                     l2887:	
  4963                           ;incstack = 0
  4964                           ; Regs used in _readControllerAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4965                           
  4966                           
  4967                           ;Controller.c: 186: lxData = reversebyte(lutLX[readADC(0b010000)]);
  4968  0F0D  3010               	movlw	16
  4969  0F0E  0020               	movlb	0	; select bank0
  4970  0F0F  00A0               	movwf	readADC@channel
  4971  0F10  3000               	movlw	0
  4972  0F11  00A1               	movwf	readADC@channel+1
  4973  0F12  318D  25E9  318F   	fcall	_readADC
  4974  0F15  30F0               	movlw	240
  4975  0F16  0020               	movlb	0	; select bank0
  4976  0F17  00A9               	movwf	??_readControllerAnalog
  4977  0F18  3026               	movlw	38
  4978  0F19  00AA               	movwf	??_readControllerAnalog+1
  4979  0F1A  0820               	movf	?_readADC,w
  4980  0F1B  0729               	addwf	??_readControllerAnalog,w
  4981  0F1C  0086               	movwf	6
  4982  0F1D  0821               	movf	?_readADC+1,w
  4983  0F1E  3D2A               	addwfc	??_readControllerAnalog+1,w
  4984  0F1F  0087               	movwf	7
  4985  0F20  0801               	movf	1,w
  4986  0F21  318E  2676  318F   	fcall	_reversebyte
  4987  0F24  0020               	movlb	0	; select bank0
  4988  0F25  00AB               	movwf	??_readControllerAnalog+2
  4989  0F26  082B               	movf	??_readControllerAnalog+2,w
  4990  0F27  00E0               	movwf	_lxData
  4991                           
  4992                           ;Controller.c: 187: lyData = reversebyte(lutLY[readADC(0b10001)]);
  4993  0F28  3011               	movlw	17
  4994  0F29  00A0               	movwf	readADC@channel
  4995  0F2A  3000               	movlw	0
  4996  0F2B  00A1               	movwf	readADC@channel+1
  4997  0F2C  318D  25E9  318F   	fcall	_readADC
  4998  0F2F  30F0               	movlw	240
  4999  0F30  0020               	movlb	0	; select bank0
  5000  0F31  00A9               	movwf	??_readControllerAnalog
  5001  0F32  3025               	movlw	37
  5002  0F33  00AA               	movwf	??_readControllerAnalog+1
  5003  0F34  0820               	movf	?_readADC,w
  5004  0F35  0729               	addwf	??_readControllerAnalog,w
  5005  0F36  0086               	movwf	6
  5006  0F37  0821               	movf	?_readADC+1,w
  5007  0F38  3D2A               	addwfc	??_readControllerAnalog+1,w
  5008  0F39  0087               	movwf	7
  5009  0F3A  0801               	movf	1,w
  5010  0F3B  318E  2676  318F   	fcall	_reversebyte
  5011  0F3E  0020               	movlb	0	; select bank0
  5012  0F3F  00AB               	movwf	??_readControllerAnalog+2
  5013  0F40  082B               	movf	??_readControllerAnalog+2,w
  5014  0F41  00DF               	movwf	_lyData
  5015                           
  5016                           ;Controller.c: 189: rxData = reversebyte(lutRX[readADC(0b010110)]);
  5017  0F42  3016               	movlw	22
  5018  0F43  00A0               	movwf	readADC@channel
  5019  0F44  3000               	movlw	0
  5020  0F45  00A1               	movwf	readADC@channel+1
  5021  0F46  318D  25E9  318F   	fcall	_readADC
  5022  0F49  30F0               	movlw	240
  5023  0F4A  0020               	movlb	0	; select bank0
  5024  0F4B  00A9               	movwf	??_readControllerAnalog
  5025  0F4C  3024               	movlw	36
  5026  0F4D  00AA               	movwf	??_readControllerAnalog+1
  5027  0F4E  0820               	movf	?_readADC,w
  5028  0F4F  0729               	addwf	??_readControllerAnalog,w
  5029  0F50  0086               	movwf	6
  5030  0F51  0821               	movf	?_readADC+1,w
  5031  0F52  3D2A               	addwfc	??_readControllerAnalog+1,w
  5032  0F53  0087               	movwf	7
  5033  0F54  0801               	movf	1,w
  5034  0F55  318E  2676  318F   	fcall	_reversebyte
  5035  0F58  0020               	movlb	0	; select bank0
  5036  0F59  00AB               	movwf	??_readControllerAnalog+2
  5037  0F5A  082B               	movf	??_readControllerAnalog+2,w
  5038  0F5B  00E2               	movwf	_rxData
  5039                           
  5040                           ;Controller.c: 190: ryData = reversebyte(lutRY[readADC(0b010111)]);
  5041  0F5C  3017               	movlw	23
  5042  0F5D  00A0               	movwf	readADC@channel
  5043  0F5E  3000               	movlw	0
  5044  0F5F  00A1               	movwf	readADC@channel+1
  5045  0F60  318D  25E9  318F   	fcall	_readADC
  5046  0F63  30F0               	movlw	240
  5047  0F64  0020               	movlb	0	; select bank0
  5048  0F65  00A9               	movwf	??_readControllerAnalog
  5049  0F66  3023               	movlw	35
  5050  0F67  00AA               	movwf	??_readControllerAnalog+1
  5051  0F68  0820               	movf	?_readADC,w
  5052  0F69  0729               	addwf	??_readControllerAnalog,w
  5053  0F6A  0086               	movwf	6
  5054  0F6B  0821               	movf	?_readADC+1,w
  5055  0F6C  3D2A               	addwfc	??_readControllerAnalog+1,w
  5056  0F6D  0087               	movwf	7
  5057  0F6E  0801               	movf	1,w
  5058  0F6F  318E  2676  318F   	fcall	_reversebyte
  5059  0F72  0020               	movlb	0	; select bank0
  5060  0F73  00AB               	movwf	??_readControllerAnalog+2
  5061  0F74  082B               	movf	??_readControllerAnalog+2,w
  5062  0F75  00E1               	movwf	_ryData
  5063  0F76                     l356:	
  5064  0F76  0008               	return
  5065  0F77                     __end_of_readControllerAnalog:	
  5066                           
  5067                           	psect	text2
  5068  0E76                     __ptext2:	
  5069 ;; *************** function _reversebyte *****************
  5070 ;; Defined at:
  5071 ;;		line 176 in file "Controller.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;  byte            1    wreg     unsigned char 
  5074 ;; Auto vars:     Size  Location     Type
  5075 ;;  byte            1    3[BANK0 ] unsigned char 
  5076 ;; Return value:  Size  Location     Type
  5077 ;;                  1    wreg      unsigned char 
  5078 ;; Registers used:
  5079 ;;		wreg, status,2, status,0
  5080 ;; Tracked objects:
  5081 ;;		On entry : 0/0
  5082 ;;		On exit  : 0/0
  5083 ;;		Unchanged: 0/0
  5084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5086 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5087 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5088 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5089 ;;Total ram usage:        4 bytes
  5090 ;; Hardware stack levels used:    1
  5091 ;; Hardware stack levels required when called:    3
  5092 ;; This function calls:
  5093 ;;		Nothing
  5094 ;; This function is called by:
  5095 ;;		_readControllerAnalog
  5096 ;; This function uses a non-reentrant model
  5097 ;;
  5098                           
  5099                           
  5100                           ;psect for function _reversebyte
  5101  0E76                     _reversebyte:	
  5102                           
  5103                           ;incstack = 0
  5104                           ; Regs used in _reversebyte: [wreg+status,2+status,0]
  5105                           ;reversebyte@byte stored from wreg
  5106  0E76  0020               	movlb	0	; select bank0
  5107  0E77  00A3               	movwf	reversebyte@byte
  5108  0E78                     l2597:	
  5109                           
  5110                           ;Controller.c: 177: byte = (byte & 0xF0) >> 4 | (byte & 0x0F) << 4;
  5111  0E78  0823               	movf	reversebyte@byte,w
  5112  0E79  390F               	andlw	15
  5113  0E7A  00A0               	movwf	??_reversebyte
  5114  0E7B  3004               	movlw	4
  5115  0E7C                     u2195:	
  5116  0E7C  35A0               	lslf	??_reversebyte,f
  5117  0E7D  0B89               	decfsz	9,f
  5118  0E7E  2E7C               	goto	u2195
  5119  0E7F  0823               	movf	reversebyte@byte,w
  5120  0E80  00A1               	movwf	??_reversebyte+1
  5121  0E81  3004               	movlw	4
  5122  0E82                     u2205:	
  5123  0E82  36A1               	lsrf	??_reversebyte+1,f
  5124  0E83  0B89               	decfsz	9,f
  5125  0E84  2E82               	goto	u2205
  5126  0E85  0821               	movf	??_reversebyte+1,w
  5127  0E86  390F               	andlw	15
  5128  0E87  0420               	iorwf	??_reversebyte,w
  5129  0E88  00A2               	movwf	??_reversebyte+2
  5130  0E89  0822               	movf	??_reversebyte+2,w
  5131  0E8A  00A3               	movwf	reversebyte@byte
  5132                           
  5133                           ;Controller.c: 178: byte = (byte & 0xCC) >> 2 | (byte & 0x33) << 2;
  5134  0E8B  0823               	movf	reversebyte@byte,w
  5135  0E8C  3933               	andlw	51
  5136  0E8D  00A0               	movwf	??_reversebyte
  5137  0E8E  3002               	movlw	2
  5138  0E8F                     u2215:	
  5139  0E8F  35A0               	lslf	??_reversebyte,f
  5140  0E90  0B89               	decfsz	9,f
  5141  0E91  2E8F               	goto	u2215
  5142  0E92  0823               	movf	reversebyte@byte,w
  5143  0E93  00A1               	movwf	??_reversebyte+1
  5144  0E94  3002               	movlw	2
  5145  0E95                     u2225:	
  5146  0E95  36A1               	lsrf	??_reversebyte+1,f
  5147  0E96  0B89               	decfsz	9,f
  5148  0E97  2E95               	goto	u2225
  5149  0E98  0821               	movf	??_reversebyte+1,w
  5150  0E99  3933               	andlw	51
  5151  0E9A  0420               	iorwf	??_reversebyte,w
  5152  0E9B  00A2               	movwf	??_reversebyte+2
  5153  0E9C  0822               	movf	??_reversebyte+2,w
  5154  0E9D  00A3               	movwf	reversebyte@byte
  5155                           
  5156                           ;Controller.c: 179: byte = (byte & 0xAA) >> 1 | (byte & 0x55) << 1;
  5157  0E9E  0823               	movf	reversebyte@byte,w
  5158  0E9F  3955               	andlw	85
  5159  0EA0  00A0               	movwf	??_reversebyte
  5160  0EA1  3001               	movlw	1
  5161  0EA2                     u2235:	
  5162  0EA2  35A0               	lslf	??_reversebyte,f
  5163  0EA3  0B89               	decfsz	9,f
  5164  0EA4  2EA2               	goto	u2235
  5165  0EA5  3623               	lsrf	reversebyte@byte,w
  5166  0EA6  3955               	andlw	85
  5167  0EA7  0420               	iorwf	??_reversebyte,w
  5168  0EA8  00A1               	movwf	??_reversebyte+1
  5169  0EA9  0821               	movf	??_reversebyte+1,w
  5170  0EAA  00A3               	movwf	reversebyte@byte
  5171  0EAB                     l2599:	
  5172                           
  5173                           ;Controller.c: 181: return byte;
  5174  0EAB  0823               	movf	reversebyte@byte,w
  5175  0EAC                     l353:	
  5176  0EAC  0008               	return
  5177  0EAD                     __end_of_reversebyte:	
  5178                           
  5179                           	psect	text3
  5180  0D7F                     __ptext3:	
  5181 ;; *************** function _picInit *****************
  5182 ;; Defined at:
  5183 ;;		line 30 in file "PicConfig.c"
  5184 ;; Parameters:    Size  Location     Type
  5185 ;;		None
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;		None
  5188 ;; Return value:  Size  Location     Type
  5189 ;;                  1    wreg      void 
  5190 ;; Registers used:
  5191 ;;		wreg, status,2, status,0, pclath, cstack
  5192 ;; Tracked objects:
  5193 ;;		On entry : 0/0
  5194 ;;		On exit  : 0/0
  5195 ;;		Unchanged: 0/0
  5196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5199 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5200 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5201 ;;Total ram usage:        2 bytes
  5202 ;; Hardware stack levels used:    1
  5203 ;; Hardware stack levels required when called:    4
  5204 ;; This function calls:
  5205 ;;		_spiInit
  5206 ;; This function is called by:
  5207 ;;		_main
  5208 ;; This function uses a non-reentrant model
  5209 ;;
  5210                           
  5211                           
  5212                           ;psect for function _picInit
  5213  0D7F                     _picInit:	
  5214  0D7F                     l2783:	
  5215                           ;incstack = 0
  5216                           ; Regs used in _picInit: [wreg+status,2+status,0+pclath+cstack]
  5217                           
  5218                           
  5219                           ;PicConfig.c: 32: spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_HIGH, 
      +                          SPI_ACTIVE_2_IDLE);
  5220  0D7F  0020               	movlb	0	; select bank0
  5221  0D80  01A0               	clrf	spiInit@sDataSample
  5222  0D81  3010               	movlw	16
  5223  0D82  00A4               	movwf	??_picInit
  5224  0D83  0824               	movf	??_picInit,w
  5225  0D84  00A1               	movwf	spiInit@sClockIdle
  5226  0D85  3040               	movlw	64
  5227  0D86  00A5               	movwf	??_picInit+1
  5228  0D87  0825               	movf	??_picInit+1,w
  5229  0D88  00A2               	movwf	spiInit@sTransmitEdge
  5230  0D89  3024               	movlw	36
  5231  0D8A  318D  256B  318D   	fcall	_spiInit
  5232  0D8D                     l2785:	
  5233                           
  5234                           ;PicConfig.c: 35: INTCONbits.GIE = 1;
  5235  0D8D  178B               	bsf	11,7	;volatile
  5236  0D8E                     l2787:	
  5237                           
  5238                           ;PicConfig.c: 36: INTCONbits.PEIE = 1;
  5239  0D8E  170B               	bsf	11,6	;volatile
  5240  0D8F                     l2789:	
  5241                           
  5242                           ;PicConfig.c: 37: SSP1IF = 0;
  5243  0D8F  002E               	movlb	14	; select bank14
  5244  0D90  100F               	bcf	15,0	;volatile
  5245  0D91                     l2791:	
  5246                           
  5247                           ;PicConfig.c: 38: SSP1IE = 1;
  5248  0D91  1419               	bsf	25,0	;volatile
  5249  0D92                     l406:	
  5250  0D92  0008               	return
  5251  0D93                     __end_of_picInit:	
  5252                           
  5253                           	psect	text4
  5254  0D6B                     __ptext4:	
  5255 ;; *************** function _spiInit *****************
  5256 ;; Defined at:
  5257 ;;		line 10 in file "Spi.c"
  5258 ;; Parameters:    Size  Location     Type
  5259 ;;  sType           1    wreg     enum E11980
  5260 ;;  sDataSample     1    0[BANK0 ] enum E11988
  5261 ;;  sClockIdle      1    1[BANK0 ] enum E11992
  5262 ;;  sTransmitEdg    1    2[BANK0 ] enum E11996
  5263 ;; Auto vars:     Size  Location     Type
  5264 ;;  sType           1    3[BANK0 ] enum E11980
  5265 ;; Return value:  Size  Location     Type
  5266 ;;                  1    wreg      void 
  5267 ;; Registers used:
  5268 ;;		wreg, status,2, status,0
  5269 ;; Tracked objects:
  5270 ;;		On entry : 0/0
  5271 ;;		On exit  : 0/0
  5272 ;;		Unchanged: 0/0
  5273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5274 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5275 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5277 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5278 ;;Total ram usage:        4 bytes
  5279 ;; Hardware stack levels used:    1
  5280 ;; Hardware stack levels required when called:    3
  5281 ;; This function calls:
  5282 ;;		Nothing
  5283 ;; This function is called by:
  5284 ;;		_picInit
  5285 ;; This function uses a non-reentrant model
  5286 ;;
  5287                           
  5288                           
  5289                           ;psect for function _spiInit
  5290  0D6B                     _spiInit:	
  5291                           
  5292                           ;incstack = 0
  5293                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  5294                           ;spiInit@sType stored from wreg
  5295  0D6B  0020               	movlb	0	; select bank0
  5296  0D6C  00A3               	movwf	spiInit@sType
  5297  0D6D                     l2777:	
  5298                           
  5299                           ;Spi.c: 13: if(sType & 0b00000100)
  5300  0D6D  1D23               	btfss	spiInit@sType,2
  5301  0D6E  2D70               	goto	u2561
  5302  0D6F  2D71               	goto	u2560
  5303  0D70                     u2561:	
  5304  0D70  2D75               	goto	l2781
  5305  0D71                     u2560:	
  5306  0D71                     l2779:	
  5307                           
  5308                           ;Spi.c: 14: {;Spi.c: 15: SSP1STAT = sTransmitEdge;
  5309  0D71  0822               	movf	spiInit@sTransmitEdge,w
  5310  0D72  0023               	movlb	3	; select bank3
  5311  0D73  008F               	movwf	15	;volatile
  5312                           
  5313                           ;Spi.c: 17: }
  5314  0D74  2D79               	goto	l418
  5315  0D75                     l2781:	
  5316                           
  5317                           ;Spi.c: 18: else;Spi.c: 19: {;Spi.c: 20: SSP1STAT = sDataSample | sTransmitEdge;
  5318  0D75  0820               	movf	spiInit@sDataSample,w
  5319  0D76  0422               	iorwf	spiInit@sTransmitEdge,w
  5320  0D77  0023               	movlb	3	; select bank3
  5321  0D78  008F               	movwf	15	;volatile
  5322  0D79                     l418:	
  5323                           
  5324                           ;Spi.c: 22: };Spi.c: 24: SSP1CON1 = sType | sClockIdle;
  5325  0D79  0020               	movlb	0	; select bank0
  5326  0D7A  0823               	movf	spiInit@sType,w
  5327  0D7B  0421               	iorwf	spiInit@sClockIdle,w
  5328  0D7C  0023               	movlb	3	; select bank3
  5329  0D7D  0090               	movwf	16	;volatile
  5330  0D7E                     l419:	
  5331  0D7E  0008               	return
  5332  0D7F                     __end_of_spiInit:	
  5333                           
  5334                           	psect	text5
  5335  05D1                     __ptext5:	
  5336 ;; *************** function _configureController *****************
  5337 ;; Defined at:
  5338 ;;		line 193 in file "Controller.c"
  5339 ;; Parameters:    Size  Location     Type
  5340 ;;		None
  5341 ;; Auto vars:     Size  Location     Type
  5342 ;;  ry              1   56[BANK0 ] unsigned char 
  5343 ;;  rx              1   55[BANK0 ] unsigned char 
  5344 ;;  ly              1   54[BANK0 ] unsigned char 
  5345 ;;  lx              1   53[BANK0 ] unsigned char 
  5346 ;;  ryMax           1   52[BANK0 ] unsigned char 
  5347 ;;  ryMin           1   51[BANK0 ] unsigned char 
  5348 ;;  rxMax           1   50[BANK0 ] unsigned char 
  5349 ;;  rxMin           1   49[BANK0 ] unsigned char 
  5350 ;;  lyMax           1   48[BANK0 ] unsigned char 
  5351 ;;  lyMin           1   47[BANK0 ] unsigned char 
  5352 ;;  lxMax           1   46[BANK0 ] unsigned char 
  5353 ;;  lxMin           1   45[BANK0 ] unsigned char 
  5354 ;; Return value:  Size  Location     Type
  5355 ;;                  1    wreg      void 
  5356 ;; Registers used:
  5357 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5358 ;; Tracked objects:
  5359 ;;		On entry : 0/0
  5360 ;;		On exit  : 0/0
  5361 ;;		Unchanged: 0/0
  5362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5364 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5365 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5366 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5367 ;;Total ram usage:       13 bytes
  5368 ;; Hardware stack levels used:    1
  5369 ;; Hardware stack levels required when called:    6
  5370 ;; This function calls:
  5371 ;;		_eepromWrite
  5372 ;;		_lutInit
  5373 ;;		_readADC
  5374 ;;		_readController
  5375 ;; This function is called by:
  5376 ;;		_main
  5377 ;; This function uses a non-reentrant model
  5378 ;;
  5379                           
  5380                           
  5381                           ;psect for function _configureController
  5382  05D1                     _configureController:	
  5383  05D1                     l2831:	
  5384                           ;incstack = 0
  5385                           ; Regs used in _configureController: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5386                           
  5387                           
  5388                           ;Controller.c: 195: INTCONbits.GIE = 0;
  5389  05D1  138B               	bcf	11,7	;volatile
  5390                           
  5391                           ;Controller.c: 196: INTCONbits.PEIE = 0;
  5392  05D2  130B               	bcf	11,6	;volatile
  5393  05D3                     l2833:	
  5394                           
  5395                           ;Controller.c: 198: char lxMin = readADC(0b010000);
  5396  05D3  3010               	movlw	16
  5397  05D4  0020               	movlb	0	; select bank0
  5398  05D5  00A0               	movwf	readADC@channel
  5399  05D6  3000               	movlw	0
  5400  05D7  00A1               	movwf	readADC@channel+1
  5401  05D8  318D  25E9  3185   	fcall	_readADC
  5402  05DB  0020               	movlb	0	; select bank0
  5403  05DC  0820               	movf	?_readADC,w
  5404  05DD  00CC               	movwf	??_configureController
  5405  05DE  084C               	movf	??_configureController,w
  5406  05DF  00CD               	movwf	configureController@lxMin
  5407                           
  5408                           ;Controller.c: 199: char lxMax = readADC(0b010000);
  5409  05E0  3010               	movlw	16
  5410  05E1  00A0               	movwf	readADC@channel
  5411  05E2  3000               	movlw	0
  5412  05E3  00A1               	movwf	readADC@channel+1
  5413  05E4  318D  25E9  3185   	fcall	_readADC
  5414  05E7  0020               	movlb	0	; select bank0
  5415  05E8  0820               	movf	?_readADC,w
  5416  05E9  00CC               	movwf	??_configureController
  5417  05EA  084C               	movf	??_configureController,w
  5418  05EB  00CE               	movwf	configureController@lxMax
  5419                           
  5420                           ;Controller.c: 200: char lyMin = readADC(0b10001);
  5421  05EC  3011               	movlw	17
  5422  05ED  00A0               	movwf	readADC@channel
  5423  05EE  3000               	movlw	0
  5424  05EF  00A1               	movwf	readADC@channel+1
  5425  05F0  318D  25E9  3185   	fcall	_readADC
  5426  05F3  0020               	movlb	0	; select bank0
  5427  05F4  0820               	movf	?_readADC,w
  5428  05F5  00CC               	movwf	??_configureController
  5429  05F6  084C               	movf	??_configureController,w
  5430  05F7  00CF               	movwf	configureController@lyMin
  5431                           
  5432                           ;Controller.c: 201: char lyMax = readADC(0b10001);
  5433  05F8  3011               	movlw	17
  5434  05F9  00A0               	movwf	readADC@channel
  5435  05FA  3000               	movlw	0
  5436  05FB  00A1               	movwf	readADC@channel+1
  5437  05FC  318D  25E9  3185   	fcall	_readADC
  5438  05FF  0020               	movlb	0	; select bank0
  5439  0600  0820               	movf	?_readADC,w
  5440  0601  00CC               	movwf	??_configureController
  5441  0602  084C               	movf	??_configureController,w
  5442  0603  00D0               	movwf	configureController@lyMax
  5443                           
  5444                           ;Controller.c: 203: char rxMin = readADC(0b010110);
  5445  0604  3016               	movlw	22
  5446  0605  00A0               	movwf	readADC@channel
  5447  0606  3000               	movlw	0
  5448  0607  00A1               	movwf	readADC@channel+1
  5449  0608  318D  25E9  3185   	fcall	_readADC
  5450  060B  0020               	movlb	0	; select bank0
  5451  060C  0820               	movf	?_readADC,w
  5452  060D  00CC               	movwf	??_configureController
  5453  060E  084C               	movf	??_configureController,w
  5454  060F  00D1               	movwf	configureController@rxMin
  5455                           
  5456                           ;Controller.c: 204: char rxMax = readADC(0b010110);
  5457  0610  3016               	movlw	22
  5458  0611  00A0               	movwf	readADC@channel
  5459  0612  3000               	movlw	0
  5460  0613  00A1               	movwf	readADC@channel+1
  5461  0614  318D  25E9  3185   	fcall	_readADC
  5462  0617  0020               	movlb	0	; select bank0
  5463  0618  0820               	movf	?_readADC,w
  5464  0619  00CC               	movwf	??_configureController
  5465  061A  084C               	movf	??_configureController,w
  5466  061B  00D2               	movwf	configureController@rxMax
  5467                           
  5468                           ;Controller.c: 205: char ryMin = readADC(0b010111);
  5469  061C  3017               	movlw	23
  5470  061D  00A0               	movwf	readADC@channel
  5471  061E  3000               	movlw	0
  5472  061F  00A1               	movwf	readADC@channel+1
  5473  0620  318D  25E9  3185   	fcall	_readADC
  5474  0623  0020               	movlb	0	; select bank0
  5475  0624  0820               	movf	?_readADC,w
  5476  0625  00CC               	movwf	??_configureController
  5477  0626  084C               	movf	??_configureController,w
  5478  0627  00D3               	movwf	configureController@ryMin
  5479                           
  5480                           ;Controller.c: 206: char ryMax = readADC(0b010111);
  5481  0628  3017               	movlw	23
  5482  0629  00A0               	movwf	readADC@channel
  5483  062A  3000               	movlw	0
  5484  062B  00A1               	movwf	readADC@channel+1
  5485  062C  318D  25E9  3185   	fcall	_readADC
  5486  062F  0020               	movlb	0	; select bank0
  5487  0630  0820               	movf	?_readADC,w
  5488  0631  00CC               	movwf	??_configureController
  5489  0632  084C               	movf	??_configureController,w
  5490  0633  00D4               	movwf	configureController@ryMax
  5491  0634                     l2835:	
  5492                           
  5493                           ;Controller.c: 216: readController(0);
  5494  0634  3000               	movlw	0
  5495  0635  3184  2467  3185   	fcall	_readController
  5496  0638                     l2837:	
  5497                           
  5498                           ;Controller.c: 218: if (digitalStateFirst == 0x7F && digitalStateSecond == 0xCF) {
  5499  0638  307F               	movlw	127
  5500  0639  0020               	movlb	0	; select bank0
  5501  063A  0664               	xorwf	_digitalStateFirst,w
  5502  063B  1D03               	btfss	3,2
  5503  063C  2E3E               	goto	u2571
  5504  063D  2E3F               	goto	u2570
  5505  063E                     u2571:	
  5506  063E  2E46               	goto	l2843
  5507  063F                     u2570:	
  5508  063F                     l2839:	
  5509  063F  30CF               	movlw	207
  5510  0640  0663               	xorwf	_digitalStateSecond,w
  5511  0641  1D03               	btfss	3,2
  5512  0642  2E44               	goto	u2581
  5513  0643  2E45               	goto	u2580
  5514  0644                     u2581:	
  5515  0644  2E46               	goto	l2843
  5516  0645                     u2580:	
  5517  0645  2EE6               	goto	l2879
  5518  0646                     l2843:	
  5519                           
  5520                           ;Controller.c: 220: };Controller.c: 222: lx = readADC(0b010000);
  5521  0646  3010               	movlw	16
  5522  0647  00A0               	movwf	readADC@channel
  5523  0648  3000               	movlw	0
  5524  0649  00A1               	movwf	readADC@channel+1
  5525  064A  318D  25E9  3185   	fcall	_readADC
  5526  064D  0020               	movlb	0	; select bank0
  5527  064E  0820               	movf	?_readADC,w
  5528  064F  00CC               	movwf	??_configureController
  5529  0650  084C               	movf	??_configureController,w
  5530  0651  00D5               	movwf	configureController@lx
  5531                           
  5532                           ;Controller.c: 223: ly = readADC(0b10001);
  5533  0652  3011               	movlw	17
  5534  0653  00A0               	movwf	readADC@channel
  5535  0654  3000               	movlw	0
  5536  0655  00A1               	movwf	readADC@channel+1
  5537  0656  318D  25E9  3185   	fcall	_readADC
  5538  0659  0020               	movlb	0	; select bank0
  5539  065A  0820               	movf	?_readADC,w
  5540  065B  00CC               	movwf	??_configureController
  5541  065C  084C               	movf	??_configureController,w
  5542  065D  00D6               	movwf	configureController@ly
  5543                           
  5544                           ;Controller.c: 224: rx = readADC(0b010110);
  5545  065E  3016               	movlw	22
  5546  065F  00A0               	movwf	readADC@channel
  5547  0660  3000               	movlw	0
  5548  0661  00A1               	movwf	readADC@channel+1
  5549  0662  318D  25E9  3185   	fcall	_readADC
  5550  0665  0020               	movlb	0	; select bank0
  5551  0666  0820               	movf	?_readADC,w
  5552  0667  00CC               	movwf	??_configureController
  5553  0668  084C               	movf	??_configureController,w
  5554  0669  00D7               	movwf	configureController@rx
  5555                           
  5556                           ;Controller.c: 225: ry = readADC(0b010111);
  5557  066A  3017               	movlw	23
  5558  066B  00A0               	movwf	readADC@channel
  5559  066C  3000               	movlw	0
  5560  066D  00A1               	movwf	readADC@channel+1
  5561  066E  318D  25E9  3185   	fcall	_readADC
  5562  0671  0020               	movlb	0	; select bank0
  5563  0672  0820               	movf	?_readADC,w
  5564  0673  00CC               	movwf	??_configureController
  5565  0674  084C               	movf	??_configureController,w
  5566  0675  00D8               	movwf	configureController@ry
  5567  0676                     l2845:	
  5568                           
  5569                           ;Controller.c: 228: if (ly > lyMax) lyMax = ly;
  5570  0676  0856               	movf	configureController@ly,w
  5571  0677  0250               	subwf	configureController@lyMax,w
  5572  0678  1803               	skipnc
  5573  0679  2E7B               	goto	u2591
  5574  067A  2E7C               	goto	u2590
  5575  067B                     u2591:	
  5576  067B  2E80               	goto	l362
  5577  067C                     u2590:	
  5578  067C                     l2847:	
  5579  067C  0856               	movf	configureController@ly,w
  5580  067D  00CC               	movwf	??_configureController
  5581  067E  084C               	movf	??_configureController,w
  5582  067F  00D0               	movwf	configureController@lyMax
  5583  0680                     l362:	
  5584                           
  5585                           ;Controller.c: 229: if (ly < lyMin) lyMin = ly;
  5586  0680  084F               	movf	configureController@lyMin,w
  5587  0681  0256               	subwf	configureController@ly,w
  5588  0682  1803               	skipnc
  5589  0683  2E85               	goto	u2601
  5590  0684  2E86               	goto	u2600
  5591  0685                     u2601:	
  5592  0685  2E8A               	goto	l363
  5593  0686                     u2600:	
  5594  0686                     l2849:	
  5595  0686  0856               	movf	configureController@ly,w
  5596  0687  00CC               	movwf	??_configureController
  5597  0688  084C               	movf	??_configureController,w
  5598  0689  00CF               	movwf	configureController@lyMin
  5599  068A                     l363:	
  5600                           
  5601                           ;Controller.c: 230: if (lx > lxMax) lxMax = lx;
  5602  068A  0855               	movf	configureController@lx,w
  5603  068B  024E               	subwf	configureController@lxMax,w
  5604  068C  1803               	skipnc
  5605  068D  2E8F               	goto	u2611
  5606  068E  2E90               	goto	u2610
  5607  068F                     u2611:	
  5608  068F  2E94               	goto	l364
  5609  0690                     u2610:	
  5610  0690                     l2851:	
  5611  0690  0855               	movf	configureController@lx,w
  5612  0691  00CC               	movwf	??_configureController
  5613  0692  084C               	movf	??_configureController,w
  5614  0693  00CE               	movwf	configureController@lxMax
  5615  0694                     l364:	
  5616                           
  5617                           ;Controller.c: 231: if (lx < lxMin) lxMin = lx;
  5618  0694  084D               	movf	configureController@lxMin,w
  5619  0695  0255               	subwf	configureController@lx,w
  5620  0696  1803               	skipnc
  5621  0697  2E99               	goto	u2621
  5622  0698  2E9A               	goto	u2620
  5623  0699                     u2621:	
  5624  0699  2E9E               	goto	l365
  5625  069A                     u2620:	
  5626  069A                     l2853:	
  5627  069A  0855               	movf	configureController@lx,w
  5628  069B  00CC               	movwf	??_configureController
  5629  069C  084C               	movf	??_configureController,w
  5630  069D  00CD               	movwf	configureController@lxMin
  5631  069E                     l365:	
  5632                           
  5633                           ;Controller.c: 234: if (ry > ryMax) ryMax = ry;
  5634  069E  0858               	movf	configureController@ry,w
  5635  069F  0254               	subwf	configureController@ryMax,w
  5636  06A0  1803               	skipnc
  5637  06A1  2EA3               	goto	u2631
  5638  06A2  2EA4               	goto	u2630
  5639  06A3                     u2631:	
  5640  06A3  2EA8               	goto	l366
  5641  06A4                     u2630:	
  5642  06A4                     l2855:	
  5643  06A4  0858               	movf	configureController@ry,w
  5644  06A5  00CC               	movwf	??_configureController
  5645  06A6  084C               	movf	??_configureController,w
  5646  06A7  00D4               	movwf	configureController@ryMax
  5647  06A8                     l366:	
  5648                           
  5649                           ;Controller.c: 235: if (ry < ryMin) ryMin = ry;
  5650  06A8  0853               	movf	configureController@ryMin,w
  5651  06A9  0258               	subwf	configureController@ry,w
  5652  06AA  1803               	skipnc
  5653  06AB  2EAD               	goto	u2641
  5654  06AC  2EAE               	goto	u2640
  5655  06AD                     u2641:	
  5656  06AD  2EB2               	goto	l367
  5657  06AE                     u2640:	
  5658  06AE                     l2857:	
  5659  06AE  0858               	movf	configureController@ry,w
  5660  06AF  00CC               	movwf	??_configureController
  5661  06B0  084C               	movf	??_configureController,w
  5662  06B1  00D3               	movwf	configureController@ryMin
  5663  06B2                     l367:	
  5664                           
  5665                           ;Controller.c: 236: if (rx > rxMax) rxMax = rx;
  5666  06B2  0857               	movf	configureController@rx,w
  5667  06B3  0252               	subwf	configureController@rxMax,w
  5668  06B4  1803               	skipnc
  5669  06B5  2EB7               	goto	u2651
  5670  06B6  2EB8               	goto	u2650
  5671  06B7                     u2651:	
  5672  06B7  2EBC               	goto	l368
  5673  06B8                     u2650:	
  5674  06B8                     l2859:	
  5675  06B8  0857               	movf	configureController@rx,w
  5676  06B9  00CC               	movwf	??_configureController
  5677  06BA  084C               	movf	??_configureController,w
  5678  06BB  00D2               	movwf	configureController@rxMax
  5679  06BC                     l368:	
  5680                           
  5681                           ;Controller.c: 237: if (rx < rxMin) rxMin = rx;
  5682  06BC  0851               	movf	configureController@rxMin,w
  5683  06BD  0257               	subwf	configureController@rx,w
  5684  06BE  1803               	skipnc
  5685  06BF  2EC1               	goto	u2661
  5686  06C0  2EC2               	goto	u2660
  5687  06C1                     u2661:	
  5688  06C1  2EC6               	goto	l2863
  5689  06C2                     u2660:	
  5690  06C2                     l2861:	
  5691  06C2  0857               	movf	configureController@rx,w
  5692  06C3  00CC               	movwf	??_configureController
  5693  06C4  084C               	movf	??_configureController,w
  5694  06C5  00D1               	movwf	configureController@rxMin
  5695  06C6                     l2863:	
  5696                           
  5697                           ;Controller.c: 239: if (digitalStateFirst == 0x6F && digitalStateSecond == 0x3F) {
  5698  06C6  306F               	movlw	111
  5699  06C7  0664               	xorwf	_digitalStateFirst,w
  5700  06C8  1D03               	btfss	3,2
  5701  06C9  2ECB               	goto	u2671
  5702  06CA  2ECC               	goto	u2670
  5703  06CB                     u2671:	
  5704  06CB  2E34               	goto	l2835
  5705  06CC                     u2670:	
  5706  06CC                     l2865:	
  5707  06CC  303F               	movlw	63
  5708  06CD  0663               	xorwf	_digitalStateSecond,w
  5709  06CE  1D03               	btfss	3,2
  5710  06CF  2ED1               	goto	u2681
  5711  06D0  2ED2               	goto	u2680
  5712  06D1                     u2681:	
  5713  06D1  2E34               	goto	l2835
  5714  06D2                     u2680:	
  5715  06D2                     l2867:	
  5716                           
  5717                           ;Controller.c: 241: lxMin = 0;
  5718  06D2  01CD               	clrf	configureController@lxMin
  5719  06D3                     l2869:	
  5720                           
  5721                           ;Controller.c: 242: lxMax = 255;
  5722  06D3  30FF               	movlw	255
  5723  06D4  00CC               	movwf	??_configureController
  5724  06D5  084C               	movf	??_configureController,w
  5725  06D6  00CE               	movwf	configureController@lxMax
  5726  06D7                     l2871:	
  5727                           
  5728                           ;Controller.c: 243: lyMin = 0;
  5729  06D7  01CF               	clrf	configureController@lyMin
  5730                           
  5731                           ;Controller.c: 244: lyMax = 255;
  5732  06D8  30FF               	movlw	255
  5733  06D9  00CC               	movwf	??_configureController
  5734  06DA  084C               	movf	??_configureController,w
  5735  06DB  00D0               	movwf	configureController@lyMax
  5736  06DC                     l2873:	
  5737                           
  5738                           ;Controller.c: 245: rxMin = 0;
  5739  06DC  01D1               	clrf	configureController@rxMin
  5740  06DD                     l2875:	
  5741                           
  5742                           ;Controller.c: 246: rxMax = 255;
  5743  06DD  30FF               	movlw	255
  5744  06DE  00CC               	movwf	??_configureController
  5745  06DF  084C               	movf	??_configureController,w
  5746  06E0  00D2               	movwf	configureController@rxMax
  5747                           
  5748                           ;Controller.c: 247: ryMin = 0;
  5749  06E1  01D3               	clrf	configureController@ryMin
  5750  06E2                     l2877:	
  5751                           
  5752                           ;Controller.c: 248: ryMax = 255;
  5753  06E2  30FF               	movlw	255
  5754  06E3  00CC               	movwf	??_configureController
  5755  06E4  084C               	movf	??_configureController,w
  5756  06E5  00D4               	movwf	configureController@ryMax
  5757  06E6                     l2879:	
  5758                           ;Controller.c: 249: break;
  5759                           
  5760                           
  5761                           ;Controller.c: 250: };Controller.c: 251: };Controller.c: 253: eepromWrite(0x60, lxMin);
  5762  06E6  084D               	movf	configureController@lxMin,w
  5763  06E7  00CC               	movwf	??_configureController
  5764  06E8  084C               	movf	??_configureController,w
  5765  06E9  00A0               	movwf	eepromWrite@data
  5766  06EA  3060               	movlw	96
  5767  06EB  3187  27D6  3185   	fcall	_eepromWrite
  5768                           
  5769                           ;Controller.c: 254: eepromWrite(0x61, lxMax);
  5770  06EE  0020               	movlb	0	; select bank0
  5771  06EF  084E               	movf	configureController@lxMax,w
  5772  06F0  00CC               	movwf	??_configureController
  5773  06F1  084C               	movf	??_configureController,w
  5774  06F2  00A0               	movwf	eepromWrite@data
  5775  06F3  3061               	movlw	97
  5776  06F4  3187  27D6  3185   	fcall	_eepromWrite
  5777                           
  5778                           ;Controller.c: 255: eepromWrite(0x62, lyMin);
  5779  06F7  0020               	movlb	0	; select bank0
  5780  06F8  084F               	movf	configureController@lyMin,w
  5781  06F9  00CC               	movwf	??_configureController
  5782  06FA  084C               	movf	??_configureController,w
  5783  06FB  00A0               	movwf	eepromWrite@data
  5784  06FC  3062               	movlw	98
  5785  06FD  3187  27D6  3185   	fcall	_eepromWrite
  5786                           
  5787                           ;Controller.c: 256: eepromWrite(0x63, lyMax);
  5788  0700  0020               	movlb	0	; select bank0
  5789  0701  0850               	movf	configureController@lyMax,w
  5790  0702  00CC               	movwf	??_configureController
  5791  0703  084C               	movf	??_configureController,w
  5792  0704  00A0               	movwf	eepromWrite@data
  5793  0705  3063               	movlw	99
  5794  0706  3187  27D6  3185   	fcall	_eepromWrite
  5795                           
  5796                           ;Controller.c: 257: eepromWrite(0x64, rxMin);
  5797  0709  0020               	movlb	0	; select bank0
  5798  070A  0851               	movf	configureController@rxMin,w
  5799  070B  00CC               	movwf	??_configureController
  5800  070C  084C               	movf	??_configureController,w
  5801  070D  00A0               	movwf	eepromWrite@data
  5802  070E  3064               	movlw	100
  5803  070F  3187  27D6  3185   	fcall	_eepromWrite
  5804                           
  5805                           ;Controller.c: 258: eepromWrite(0x65, rxMax);
  5806  0712  0020               	movlb	0	; select bank0
  5807  0713  0852               	movf	configureController@rxMax,w
  5808  0714  00CC               	movwf	??_configureController
  5809  0715  084C               	movf	??_configureController,w
  5810  0716  00A0               	movwf	eepromWrite@data
  5811  0717  3065               	movlw	101
  5812  0718  3187  27D6  3185   	fcall	_eepromWrite
  5813                           
  5814                           ;Controller.c: 259: eepromWrite(0x66, ryMin);
  5815  071B  0020               	movlb	0	; select bank0
  5816  071C  0853               	movf	configureController@ryMin,w
  5817  071D  00CC               	movwf	??_configureController
  5818  071E  084C               	movf	??_configureController,w
  5819  071F  00A0               	movwf	eepromWrite@data
  5820  0720  3066               	movlw	102
  5821  0721  3187  27D6  3185   	fcall	_eepromWrite
  5822                           
  5823                           ;Controller.c: 260: eepromWrite(0x67, ryMax);
  5824  0724  0020               	movlb	0	; select bank0
  5825  0725  0854               	movf	configureController@ryMax,w
  5826  0726  00CC               	movwf	??_configureController
  5827  0727  084C               	movf	??_configureController,w
  5828  0728  00A0               	movwf	eepromWrite@data
  5829  0729  3067               	movlw	103
  5830  072A  3187  27D6  3185   	fcall	_eepromWrite
  5831  072D                     l2881:	
  5832                           
  5833                           ;Controller.c: 262: lutInit();
  5834  072D  3182  2276  3185   	fcall	_lutInit
  5835  0730                     l2883:	
  5836                           
  5837                           ;Controller.c: 264: INTCONbits.GIE = 1;
  5838  0730  178B               	bsf	11,7	;volatile
  5839  0731                     l2885:	
  5840                           
  5841                           ;Controller.c: 265: INTCONbits.PEIE = 1;
  5842  0731  170B               	bsf	11,6	;volatile
  5843  0732                     l372:	
  5844  0732  0008               	return
  5845  0733                     __end_of_configureController:	
  5846                           
  5847                           	psect	text6
  5848  0467                     __ptext6:	
  5849 ;; *************** function _readController *****************
  5850 ;; Defined at:
  5851 ;;		line 16 in file "Controller.c"
  5852 ;; Parameters:    Size  Location     Type
  5853 ;;  analogMode      1    wreg     unsigned char 
  5854 ;; Auto vars:     Size  Location     Type
  5855 ;;  analogMode      1    2[BANK0 ] unsigned char 
  5856 ;; Return value:  Size  Location     Type
  5857 ;;                  1    wreg      void 
  5858 ;; Registers used:
  5859 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5860 ;; Tracked objects:
  5861 ;;		On entry : 0/0
  5862 ;;		On exit  : 0/0
  5863 ;;		Unchanged: 0/0
  5864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5866 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5867 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5868 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5869 ;;Total ram usage:        3 bytes
  5870 ;; Hardware stack levels used:    1
  5871 ;; Hardware stack levels required when called:    3
  5872 ;; This function calls:
  5873 ;;		Nothing
  5874 ;; This function is called by:
  5875 ;;		_main
  5876 ;;		_configureController
  5877 ;; This function uses a non-reentrant model
  5878 ;;
  5879                           
  5880                           
  5881                           ;psect for function _readController
  5882  0467                     _readController:	
  5883                           
  5884                           ;incstack = 0
  5885                           ; Regs used in _readController: [wreg-fsr1h+status,2+status,0]
  5886                           ;readController@analogMode stored from wreg
  5887  0467  0020               	movlb	0	; select bank0
  5888  0468  00A2               	movwf	readController@analogMode
  5889  0469                     l2655:	
  5890                           
  5891                           ;Controller.c: 19: AN_temp = RD4;
  5892  0469  3000               	movlw	0
  5893  046A  1A0F               	btfsc	15,4	;volatile
  5894  046B  3001               	movlw	1
  5895  046C  00FB               	movwf	_AN_temp
  5896  046D                     l2657:	
  5897                           
  5898                           ;Controller.c: 20: if(AN_temp ^ AN_prev) AN_timer = 0;
  5899  046D  087B               	movf	_AN_temp,w
  5900  046E  065A               	xorwf	_AN_prev,w
  5901  046F  1903               	btfsc	3,2
  5902  0470  2C72               	goto	u2331
  5903  0471  2C73               	goto	u2330
  5904  0472                     u2331:	
  5905  0472  2C75               	goto	l2661
  5906  0473                     u2330:	
  5907  0473                     l2659:	
  5908  0473  01E6               	clrf	_AN_timer
  5909  0474  2C7F               	goto	l2665
  5910  0475                     l2661:	
  5911                           
  5912                           ;Controller.c: 21: else if(AN_timer < 4) AN_timer++;
  5913  0475  3004               	movlw	4
  5914  0476  0266               	subwf	_AN_timer,w
  5915  0477  1803               	skipnc
  5916  0478  2C7A               	goto	u2341
  5917  0479  2C7B               	goto	u2340
  5918  047A                     u2341:	
  5919  047A  2C7F               	goto	l2665
  5920  047B                     u2340:	
  5921  047B                     l2663:	
  5922  047B  3001               	movlw	1
  5923  047C  00A0               	movwf	??_readController
  5924  047D  0820               	movf	??_readController,w
  5925  047E  07E6               	addwf	_AN_timer,f
  5926  047F                     l2665:	
  5927                           
  5928                           ;Controller.c: 22: if(AN_timer > 3) AN_btn = AN_temp;
  5929  047F  3004               	movlw	4
  5930  0480  0266               	subwf	_AN_timer,w
  5931  0481  1C03               	skipc
  5932  0482  2C84               	goto	u2351
  5933  0483  2C85               	goto	u2350
  5934  0484                     u2351:	
  5935  0484  2C89               	goto	l308
  5936  0485                     u2350:	
  5937  0485                     l2667:	
  5938  0485  087B               	movf	_AN_temp,w
  5939  0486  00A0               	movwf	??_readController
  5940  0487  0820               	movf	??_readController,w
  5941  0488  00E5               	movwf	_AN_btn
  5942  0489                     l308:	
  5943                           
  5944                           ;Controller.c: 23: AN_prev = AN_temp;
  5945  0489  087B               	movf	_AN_temp,w
  5946  048A  00A0               	movwf	??_readController
  5947  048B  0820               	movf	??_readController,w
  5948  048C  00DA               	movwf	_AN_prev
  5949  048D                     l2669:	
  5950                           
  5951                           ;Controller.c: 26: DigitalControllerByte1[DDown] = RA7;
  5952  048D  3000               	movlw	0
  5953  048E  1B8C               	btfsc	12,7	;volatile
  5954  048F  3001               	movlw	1
  5955  0490  0021               	movlb	1	; select bank1
  5956  0491  00C1               	movwf	(_DigitalControllerByte1^(0+128)+1)
  5957  0492                     l2671:	
  5958                           
  5959                           ;Controller.c: 27: DigitalControllerByte1[DUp] = RA6;
  5960  0492  3000               	movlw	0
  5961  0493  0020               	movlb	0	; select bank0
  5962  0494  1B0C               	btfsc	12,6	;volatile
  5963  0495  3001               	movlw	1
  5964  0496  0021               	movlb	1	; select bank1
  5965  0497  00C3               	movwf	(_DigitalControllerByte1^(0+128)+3)
  5966  0498                     l2673:	
  5967                           
  5968                           ;Controller.c: 28: DigitalControllerByte1[DLeft] = RB0;
  5969  0498  3000               	movlw	0
  5970  0499  0020               	movlb	0	; select bank0
  5971  049A  180D               	btfsc	13,0	;volatile
  5972  049B  3001               	movlw	1
  5973  049C  0021               	movlb	1	; select bank1
  5974  049D  00C0               	movwf	_DigitalControllerByte1^(0+128)
  5975  049E                     l2675:	
  5976                           
  5977                           ;Controller.c: 29: DigitalControllerByte1[DRight] = RB1;
  5978  049E  3000               	movlw	0
  5979  049F  0020               	movlb	0	; select bank0
  5980  04A0  188D               	btfsc	13,1	;volatile
  5981  04A1  3001               	movlw	1
  5982  04A2  0021               	movlb	1	; select bank1
  5983  04A3  00C2               	movwf	(_DigitalControllerByte1^(0+128)+2)
  5984  04A4                     l2677:	
  5985                           
  5986                           ;Controller.c: 30: DigitalControllerByte1[R3] = RD0;
  5987  04A4  3000               	movlw	0
  5988  04A5  0020               	movlb	0	; select bank0
  5989  04A6  180F               	btfsc	15,0	;volatile
  5990  04A7  3001               	movlw	1
  5991  04A8  0021               	movlb	1	; select bank1
  5992  04A9  00C5               	movwf	(_DigitalControllerByte1^(0+128)+5)
  5993  04AA                     l2679:	
  5994                           
  5995                           ;Controller.c: 31: DigitalControllerByte1[L3] = RC2;
  5996  04AA  3000               	movlw	0
  5997  04AB  0020               	movlb	0	; select bank0
  5998  04AC  190E               	btfsc	14,2	;volatile
  5999  04AD  3001               	movlw	1
  6000  04AE  0021               	movlb	1	; select bank1
  6001  04AF  00C6               	movwf	(_DigitalControllerByte1^(0+128)+6)
  6002  04B0                     l2681:	
  6003                           
  6004                           ;Controller.c: 32: DigitalControllerByte1[Start] = RB6;
  6005  04B0  3000               	movlw	0
  6006  04B1  0020               	movlb	0	; select bank0
  6007  04B2  1B0D               	btfsc	13,6	;volatile
  6008  04B3  3001               	movlw	1
  6009  04B4  0021               	movlb	1	; select bank1
  6010  04B5  00C4               	movwf	(_DigitalControllerByte1^(0+128)+4)
  6011  04B6                     l2683:	
  6012                           
  6013                           ;Controller.c: 33: DigitalControllerByte1[Select] = RB7;
  6014  04B6  3000               	movlw	0
  6015  04B7  0020               	movlb	0	; select bank0
  6016  04B8  1B8D               	btfsc	13,7	;volatile
  6017  04B9  3001               	movlw	1
  6018  04BA  0021               	movlb	1	; select bank1
  6019  04BB  00C7               	movwf	(_DigitalControllerByte1^(0+128)+7)
  6020  04BC                     l2685:	
  6021                           
  6022                           ;Controller.c: 35: DigitalControllerByte2[Square] = RA0;
  6023  04BC  3000               	movlw	0
  6024  04BD  0020               	movlb	0	; select bank0
  6025  04BE  180C               	btfsc	12,0	;volatile
  6026  04BF  3001               	movlw	1
  6027  04C0  0021               	movlb	1	; select bank1
  6028  04C1  00B8               	movwf	_DigitalControllerByte2^(0+128)
  6029  04C2                     l2687:	
  6030                           
  6031                           ;Controller.c: 36: DigitalControllerByte2[Circle] = RA3;
  6032  04C2  3000               	movlw	0
  6033  04C3  0020               	movlb	0	; select bank0
  6034  04C4  198C               	btfsc	12,3	;volatile
  6035  04C5  3001               	movlw	1
  6036  04C6  0021               	movlb	1	; select bank1
  6037  04C7  00BA               	movwf	(_DigitalControllerByte2^(0+128)+2)
  6038  04C8                     l2689:	
  6039                           
  6040                           ;Controller.c: 37: DigitalControllerByte2[X] = RA2;
  6041  04C8  3000               	movlw	0
  6042  04C9  0020               	movlb	0	; select bank0
  6043  04CA  190C               	btfsc	12,2	;volatile
  6044  04CB  3001               	movlw	1
  6045  04CC  0021               	movlb	1	; select bank1
  6046  04CD  00B9               	movwf	(_DigitalControllerByte2^(0+128)+1)
  6047  04CE                     l2691:	
  6048                           
  6049                           ;Controller.c: 38: DigitalControllerByte2[Triangle] = RA1;
  6050  04CE  3000               	movlw	0
  6051  04CF  0020               	movlb	0	; select bank0
  6052  04D0  188C               	btfsc	12,1	;volatile
  6053  04D1  3001               	movlw	1
  6054  04D2  0021               	movlb	1	; select bank1
  6055  04D3  00BB               	movwf	(_DigitalControllerByte2^(0+128)+3)
  6056  04D4                     l2693:	
  6057                           
  6058                           ;Controller.c: 39: DigitalControllerByte2[R1] = RB4;
  6059  04D4  3000               	movlw	0
  6060  04D5  0020               	movlb	0	; select bank0
  6061  04D6  1A0D               	btfsc	13,4	;volatile
  6062  04D7  3001               	movlw	1
  6063  04D8  0021               	movlb	1	; select bank1
  6064  04D9  00BC               	movwf	(_DigitalControllerByte2^(0+128)+4)
  6065  04DA                     l2695:	
  6066                           
  6067                           ;Controller.c: 40: DigitalControllerByte2[R2] = RB5;
  6068  04DA  3000               	movlw	0
  6069  04DB  0020               	movlb	0	; select bank0
  6070  04DC  1A8D               	btfsc	13,5	;volatile
  6071  04DD  3001               	movlw	1
  6072  04DE  0021               	movlb	1	; select bank1
  6073  04DF  00BE               	movwf	(_DigitalControllerByte2^(0+128)+6)
  6074  04E0                     l2697:	
  6075                           
  6076                           ;Controller.c: 41: DigitalControllerByte2[L1] = RB2;
  6077  04E0  3000               	movlw	0
  6078  04E1  0020               	movlb	0	; select bank0
  6079  04E2  190D               	btfsc	13,2	;volatile
  6080  04E3  3001               	movlw	1
  6081  04E4  0021               	movlb	1	; select bank1
  6082  04E5  00BD               	movwf	(_DigitalControllerByte2^(0+128)+5)
  6083  04E6                     l2699:	
  6084                           
  6085                           ;Controller.c: 42: DigitalControllerByte2[L2] = RB3;
  6086  04E6  3000               	movlw	0
  6087  04E7  0020               	movlb	0	; select bank0
  6088  04E8  198D               	btfsc	13,3	;volatile
  6089  04E9  3001               	movlw	1
  6090  04EA  0021               	movlb	1	; select bank1
  6091  04EB  00BF               	movwf	(_DigitalControllerByte2^(0+128)+7)
  6092                           
  6093                           ;Controller.c: 45: if (index > Select) {
  6094  04EC  3008               	movlw	8
  6095  04ED  027A               	subwf	_index,w
  6096  04EE  1C03               	skipc
  6097  04EF  2CF1               	goto	u2361
  6098  04F0  2CF2               	goto	u2360
  6099  04F1                     u2361:	
  6100  04F1  2CF3               	goto	l2703
  6101  04F2                     u2360:	
  6102  04F2                     l2701:	
  6103                           
  6104                           ;Controller.c: 46: index = 0;
  6105  04F2  01FA               	clrf	_index
  6106  04F3                     l2703:	
  6107                           
  6108                           ;Controller.c: 47: };Controller.c: 50: if (!DigitalControllerByte1[index]) {
  6109  04F3  087A               	movf	_index,w
  6110  04F4  3EC0               	addlw	(low (_DigitalControllerByte1| 0))& (0+255)
  6111  04F5  0086               	movwf	6
  6112  04F6  0187               	clrf	7
  6113  04F7  0801               	movf	1,w
  6114  04F8  1D03               	btfss	3,2
  6115  04F9  2CFB               	goto	u2371
  6116  04FA  2CFC               	goto	u2370
  6117  04FB                     u2371:	
  6118  04FB  2D05               	goto	l310
  6119  04FC                     u2370:	
  6120  04FC                     l2705:	
  6121                           
  6122                           ;Controller.c: 51: IndexDigitalByte1[index]++;
  6123  04FC  3001               	movlw	1
  6124  04FD  0020               	movlb	0	; select bank0
  6125  04FE  00A0               	movwf	??_readController
  6126  04FF  087A               	movf	_index,w
  6127  0500  3EA8               	addlw	(low (_IndexDigitalByte1| 0))& (0+255)
  6128  0501  0086               	movwf	6
  6129  0502  0187               	clrf	7
  6130  0503  0820               	movf	??_readController,w
  6131  0504  0781               	addwf	1,f
  6132  0505                     l310:	
  6133                           
  6134                           ;Controller.c: 52: };Controller.c: 53: if (!DigitalControllerByte2[index]) {
  6135  0505  087A               	movf	_index,w
  6136  0506  3EB8               	addlw	(low (_DigitalControllerByte2| 0))& (0+255)
  6137  0507  0086               	movwf	6
  6138  0508  0187               	clrf	7
  6139  0509  0801               	movf	1,w
  6140  050A  1D03               	btfss	3,2
  6141  050B  2D0D               	goto	u2381
  6142  050C  2D0E               	goto	u2380
  6143  050D                     u2381:	
  6144  050D  2D17               	goto	l2709
  6145  050E                     u2380:	
  6146  050E                     l2707:	
  6147                           
  6148                           ;Controller.c: 54: IndexDigitalByte2[index]++;
  6149  050E  3001               	movlw	1
  6150  050F  0020               	movlb	0	; select bank0
  6151  0510  00A0               	movwf	??_readController
  6152  0511  087A               	movf	_index,w
  6153  0512  3EA0               	addlw	(low (_IndexDigitalByte2| 0))& (0+255)
  6154  0513  0086               	movwf	6
  6155  0514  0187               	clrf	7
  6156  0515  0820               	movf	??_readController,w
  6157  0516  0781               	addwf	1,f
  6158  0517                     l2709:	
  6159                           
  6160                           ;Controller.c: 55: };Controller.c: 58: if (DigitalControllerByte1[index] ^ PreviousDigit
      +                          alByte1[index]) {
  6161  0517  087A               	movf	_index,w
  6162  0518  3EB0               	addlw	(low (_PreviousDigitalByte1| 0))& (0+255)
  6163  0519  0086               	movwf	6
  6164  051A  0187               	clrf	7
  6165  051B  087A               	movf	_index,w
  6166  051C  3EC0               	addlw	(low (_DigitalControllerByte1| 0))& (0+255)
  6167  051D  0084               	movwf	4
  6168  051E  0185               	clrf	5
  6169  051F  0800               	movf	0,w
  6170  0520  0601               	xorwf	1,w
  6171  0521  1903               	btfsc	3,2
  6172  0522  2D24               	goto	u2391
  6173  0523  2D25               	goto	u2390
  6174  0524                     u2391:	
  6175  0524  2D40               	goto	l2719
  6176  0525                     u2390:	
  6177  0525                     l2711:	
  6178                           
  6179                           ;Controller.c: 59: IndexDigitalByte1[index] = 0;
  6180  0525  087A               	movf	_index,w
  6181  0526  3EA8               	addlw	(low (_IndexDigitalByte1| 0))& (0+255)
  6182  0527  0086               	movwf	6
  6183  0528  0187               	clrf	7
  6184  0529  0181               	clrf	1
  6185  052A                     l2713:	
  6186                           
  6187                           ;Controller.c: 60: digitalStateFirst |= 1 << index;
  6188  052A  3001               	movlw	1
  6189  052B  0020               	movlb	0	; select bank0
  6190  052C  00A0               	movwf	??_readController
  6191  052D  0A7A               	incf	_index,w
  6192  052E  2D30               	goto	u2404
  6193  052F                     u2405:	
  6194  052F  35A0               	lslf	??_readController,f
  6195  0530                     u2404:	
  6196  0530  0B89               	decfsz	9,f
  6197  0531  2D2F               	goto	u2405
  6198  0532  0820               	movf	??_readController,w
  6199  0533  00A1               	movwf	??_readController+1
  6200  0534  0821               	movf	??_readController+1,w
  6201  0535  04E4               	iorwf	_digitalStateFirst,f
  6202  0536                     l2715:	
  6203                           
  6204                           ;Controller.c: 62: if (analogMode >= 1) {
  6205  0536  0822               	movf	readController@analogMode,w
  6206  0537  1903               	btfsc	3,2
  6207  0538  2D3A               	goto	u2411
  6208  0539  2D3B               	goto	u2410
  6209  053A                     u2411:	
  6210  053A  2D40               	goto	l2719
  6211  053B                     u2410:	
  6212  053B                     l2717:	
  6213                           
  6214                           ;Controller.c: 63: analogStateFirst[index] = 0x00;
  6215  053B  087A               	movf	_index,w
  6216  053C  3ED0               	addlw	(low (_analogStateFirst| 0))& (0+255)
  6217  053D  0086               	movwf	6
  6218  053E  0187               	clrf	7
  6219  053F  0181               	clrf	1
  6220  0540                     l2719:	
  6221                           
  6222                           ;Controller.c: 64: };Controller.c: 66: };Controller.c: 67: if (DigitalControllerByte2[in
      +                          dex] ^ PreviousDigitalByte2[index]) {
  6223  0540  087A               	movf	_index,w
  6224  0541  3E20               	addlw	(low (_PreviousDigitalByte2| (0+256)))& (0+255)
  6225  0542  0086               	movwf	6
  6226  0543  3001               	movlw	1	; select bank2/3
  6227  0544  0087               	movwf	7
  6228  0545  087A               	movf	_index,w
  6229  0546  3EB8               	addlw	(low (_DigitalControllerByte2| 0))& (0+255)
  6230  0547  0084               	movwf	4
  6231  0548  0185               	clrf	5
  6232  0549  0800               	movf	0,w
  6233  054A  0601               	xorwf	1,w
  6234  054B  1903               	btfsc	3,2
  6235  054C  2D4E               	goto	u2421
  6236  054D  2D4F               	goto	u2420
  6237  054E                     u2421:	
  6238  054E  2D6A               	goto	l314
  6239  054F                     u2420:	
  6240  054F                     l2721:	
  6241                           
  6242                           ;Controller.c: 68: IndexDigitalByte2[index] = 0;
  6243  054F  087A               	movf	_index,w
  6244  0550  3EA0               	addlw	(low (_IndexDigitalByte2| 0))& (0+255)
  6245  0551  0086               	movwf	6
  6246  0552  0187               	clrf	7
  6247  0553  0181               	clrf	1
  6248  0554                     l2723:	
  6249                           
  6250                           ;Controller.c: 69: digitalStateSecond |= 1 << index;
  6251  0554  3001               	movlw	1
  6252  0555  0020               	movlb	0	; select bank0
  6253  0556  00A0               	movwf	??_readController
  6254  0557  0A7A               	incf	_index,w
  6255  0558  2D5A               	goto	u2434
  6256  0559                     u2435:	
  6257  0559  35A0               	lslf	??_readController,f
  6258  055A                     u2434:	
  6259  055A  0B89               	decfsz	9,f
  6260  055B  2D59               	goto	u2435
  6261  055C  0820               	movf	??_readController,w
  6262  055D  00A1               	movwf	??_readController+1
  6263  055E  0821               	movf	??_readController+1,w
  6264  055F  04E3               	iorwf	_digitalStateSecond,f
  6265  0560                     l2725:	
  6266                           
  6267                           ;Controller.c: 71: if (analogMode >= 1) {
  6268  0560  0822               	movf	readController@analogMode,w
  6269  0561  1903               	btfsc	3,2
  6270  0562  2D64               	goto	u2441
  6271  0563  2D65               	goto	u2440
  6272  0564                     u2441:	
  6273  0564  2D6A               	goto	l314
  6274  0565                     u2440:	
  6275  0565                     l2727:	
  6276                           
  6277                           ;Controller.c: 72: analogStateSecond[index] = 0x00;
  6278  0565  087A               	movf	_index,w
  6279  0566  3EC8               	addlw	(low (_analogStateSecond| 0))& (0+255)
  6280  0567  0086               	movwf	6
  6281  0568  0187               	clrf	7
  6282  0569  0181               	clrf	1
  6283  056A                     l314:	
  6284  056A  087A               	movf	_index,w
  6285  056B  3EA8               	addlw	(low (_IndexDigitalByte1| 0))& (0+255)
  6286  056C  0086               	movwf	6
  6287  056D  0187               	clrf	7
  6288  056E  3003               	movlw	3
  6289  056F  0201               	subwf	1,w
  6290  0570  1C03               	skipc
  6291  0571  2D73               	goto	u2451
  6292  0572  2D74               	goto	u2450
  6293  0573                     u2451:	
  6294  0573  2D8E               	goto	l316
  6295  0574                     u2450:	
  6296  0574                     l2729:	
  6297                           
  6298                           ;Controller.c: 79: digitalStateFirst &= ~(1 << index);
  6299  0574  3001               	movlw	1
  6300  0575  0020               	movlb	0	; select bank0
  6301  0576  00A0               	movwf	??_readController
  6302  0577  0A7A               	incf	_index,w
  6303  0578  2D7A               	goto	u2464
  6304  0579                     u2465:	
  6305  0579  35A0               	lslf	??_readController,f
  6306  057A                     u2464:	
  6307  057A  0B89               	decfsz	9,f
  6308  057B  2D79               	goto	u2465
  6309  057C  0820               	movf	??_readController,w
  6310  057D  3AFF               	xorlw	255
  6311  057E  00A1               	movwf	??_readController+1
  6312  057F  0821               	movf	??_readController+1,w
  6313  0580  05E4               	andwf	_digitalStateFirst,f
  6314                           
  6315                           ;Controller.c: 81: if (analogMode >= 1) {
  6316  0581  0822               	movf	readController@analogMode,w
  6317  0582  1903               	btfsc	3,2
  6318  0583  2D85               	goto	u2471
  6319  0584  2D86               	goto	u2470
  6320  0585                     u2471:	
  6321  0585  2D8E               	goto	l316
  6322  0586                     u2470:	
  6323  0586                     l2731:	
  6324                           
  6325                           ;Controller.c: 82: analogStateFirst[index] = 0xFF;
  6326  0586  30FF               	movlw	255
  6327  0587  00A0               	movwf	??_readController
  6328  0588  087A               	movf	_index,w
  6329  0589  3ED0               	addlw	(low (_analogStateFirst| 0))& (0+255)
  6330  058A  0086               	movwf	6
  6331  058B  0187               	clrf	7
  6332  058C  0820               	movf	??_readController,w
  6333  058D  0081               	movwf	1
  6334  058E                     l316:	
  6335  058E  087A               	movf	_index,w
  6336  058F  3EA0               	addlw	(low (_IndexDigitalByte2| 0))& (0+255)
  6337  0590  0086               	movwf	6
  6338  0591  0187               	clrf	7
  6339  0592  3003               	movlw	3
  6340  0593  0201               	subwf	1,w
  6341  0594  1C03               	skipc
  6342  0595  2D97               	goto	u2481
  6343  0596  2D98               	goto	u2480
  6344  0597                     u2481:	
  6345  0597  2DB2               	goto	l318
  6346  0598                     u2480:	
  6347  0598                     l2733:	
  6348                           
  6349                           ;Controller.c: 87: digitalStateSecond &= ~(1 << index);
  6350  0598  3001               	movlw	1
  6351  0599  0020               	movlb	0	; select bank0
  6352  059A  00A0               	movwf	??_readController
  6353  059B  0A7A               	incf	_index,w
  6354  059C  2D9E               	goto	u2494
  6355  059D                     u2495:	
  6356  059D  35A0               	lslf	??_readController,f
  6357  059E                     u2494:	
  6358  059E  0B89               	decfsz	9,f
  6359  059F  2D9D               	goto	u2495
  6360  05A0  0820               	movf	??_readController,w
  6361  05A1  3AFF               	xorlw	255
  6362  05A2  00A1               	movwf	??_readController+1
  6363  05A3  0821               	movf	??_readController+1,w
  6364  05A4  05E3               	andwf	_digitalStateSecond,f
  6365                           
  6366                           ;Controller.c: 89: if (analogMode >= 1) {
  6367  05A5  0822               	movf	readController@analogMode,w
  6368  05A6  1903               	btfsc	3,2
  6369  05A7  2DA9               	goto	u2501
  6370  05A8  2DAA               	goto	u2500
  6371  05A9                     u2501:	
  6372  05A9  2DB2               	goto	l318
  6373  05AA                     u2500:	
  6374  05AA                     l2735:	
  6375                           
  6376                           ;Controller.c: 90: analogStateSecond[index] = 0xFF;
  6377  05AA  30FF               	movlw	255
  6378  05AB  00A0               	movwf	??_readController
  6379  05AC  087A               	movf	_index,w
  6380  05AD  3EC8               	addlw	(low (_analogStateSecond| 0))& (0+255)
  6381  05AE  0086               	movwf	6
  6382  05AF  0187               	clrf	7
  6383  05B0  0820               	movf	??_readController,w
  6384  05B1  0081               	movwf	1
  6385  05B2                     l318:	
  6386                           
  6387                           ;Controller.c: 91: };Controller.c: 93: };Controller.c: 96: PreviousDigitalByte1[index] =
      +                           DigitalControllerByte1[index];
  6388  05B2  087A               	movf	_index,w
  6389  05B3  3EC0               	addlw	(low (_DigitalControllerByte1| 0))& (0+255)
  6390  05B4  0086               	movwf	6
  6391  05B5  0187               	clrf	7
  6392  05B6  0801               	movf	1,w
  6393  05B7  0020               	movlb	0	; select bank0
  6394  05B8  00A0               	movwf	??_readController
  6395  05B9  087A               	movf	_index,w
  6396  05BA  3EB0               	addlw	(low (_PreviousDigitalByte1| 0))& (0+255)
  6397  05BB  0086               	movwf	6
  6398  05BC  0187               	clrf	7
  6399  05BD  0820               	movf	??_readController,w
  6400  05BE  0081               	movwf	1
  6401                           
  6402                           ;Controller.c: 97: PreviousDigitalByte2[index] = DigitalControllerByte2[index];
  6403  05BF  087A               	movf	_index,w
  6404  05C0  3EB8               	addlw	(low (_DigitalControllerByte2| 0))& (0+255)
  6405  05C1  0086               	movwf	6
  6406  05C2  0187               	clrf	7
  6407  05C3  0801               	movf	1,w
  6408  05C4  00A0               	movwf	??_readController
  6409  05C5  087A               	movf	_index,w
  6410  05C6  3E20               	addlw	(low (_PreviousDigitalByte2| (0+256)))& (0+255)
  6411  05C7  0086               	movwf	6
  6412  05C8  3001               	movlw	1	; select bank2/3
  6413  05C9  0087               	movwf	7
  6414  05CA  0820               	movf	??_readController,w
  6415  05CB  0081               	movwf	1
  6416  05CC                     l2737:	
  6417                           
  6418                           ;Controller.c: 99: index++;
  6419  05CC  3001               	movlw	1
  6420  05CD  00A0               	movwf	??_readController
  6421  05CE  0820               	movf	??_readController,w
  6422  05CF  07FA               	addwf	_index,f
  6423  05D0                     l320:	
  6424  05D0  0008               	return
  6425  05D1                     __end_of_readController:	
  6426                           
  6427                           	psect	text7
  6428  0DE9                     __ptext7:	
  6429 ;; *************** function _readADC *****************
  6430 ;; Defined at:
  6431 ;;		line 165 in file "Controller.c"
  6432 ;; Parameters:    Size  Location     Type
  6433 ;;  channel         2    0[BANK0 ] int 
  6434 ;; Auto vars:     Size  Location     Type
  6435 ;;		None
  6436 ;; Return value:  Size  Location     Type
  6437 ;;                  2    0[BANK0 ] unsigned int 
  6438 ;; Registers used:
  6439 ;;		wreg, status,2, status,0
  6440 ;; Tracked objects:
  6441 ;;		On entry : 0/0
  6442 ;;		On exit  : 0/0
  6443 ;;		Unchanged: 0/0
  6444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6445 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6447 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6448 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6449 ;;Total ram usage:        9 bytes
  6450 ;; Hardware stack levels used:    1
  6451 ;; Hardware stack levels required when called:    3
  6452 ;; This function calls:
  6453 ;;		Nothing
  6454 ;; This function is called by:
  6455 ;;		_readControllerAnalog
  6456 ;;		_configureController
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460                           
  6461                           ;psect for function _readADC
  6462  0DE9                     _readADC:	
  6463  0DE9                     l2739:	
  6464                           ;incstack = 0
  6465                           ; Regs used in _readADC: [wreg+status,2+status,0]
  6466                           
  6467                           
  6468                           ;Controller.c: 166: ADPCH = channel;
  6469  0DE9  0020               	movlb	0	; select bank0
  6470  0DEA  0820               	movf	readADC@channel,w
  6471  0DEB  0021               	movlb	1	; select bank1
  6472  0DEC  009E               	movwf	30	;volatile
  6473  0DED                     l2741:	
  6474                           
  6475                           ;Controller.c: 167: ADPRE = 0x00;
  6476  0DED  019C               	clrf	28	;volatile
  6477  0DEE                     l2743:	
  6478                           
  6479                           ;Controller.c: 168: ADACQ = 0x3F;
  6480  0DEE  303F               	movlw	63
  6481  0DEF  009D               	movwf	29	;volatile
  6482  0DF0                     l2745:	
  6483                           
  6484                           ;Controller.c: 170: ADCON0bits.ADGO = 1;
  6485  0DF0  1413               	bsf	19,0	;volatile
  6486  0DF1                     l347:	
  6487                           ;Controller.c: 171: while (ADCON0bits.ADGO);
  6488                           
  6489  0DF1  1813               	btfsc	19,0	;volatile
  6490  0DF2  2DF4               	goto	u2511
  6491  0DF3  2DF5               	goto	u2510
  6492  0DF4                     u2511:	
  6493  0DF4  2DF1               	goto	l347
  6494  0DF5                     u2510:	
  6495  0DF5                     l2747:	
  6496                           
  6497                           ;Controller.c: 173: return ((ADRESH << 6) | (ADRESL >> 2));
  6498  0DF5  080C               	movf	12,w	;volatile
  6499  0DF6  0020               	movlb	0	; select bank0
  6500  0DF7  00A2               	movwf	??_readADC
  6501  0DF8  3002               	movlw	2
  6502  0DF9                     u2525:	
  6503  0DF9  36A2               	lsrf	??_readADC,f
  6504  0DFA  0B89               	decfsz	9,f
  6505  0DFB  2DF9               	goto	u2525
  6506  0DFC  0822               	movf	??_readADC,w
  6507  0DFD  00A3               	movwf	??_readADC+1
  6508  0DFE  01A4               	clrf	??_readADC+2
  6509  0DFF  0021               	movlb	1	; select bank1
  6510  0E00  080D               	movf	13,w	;volatile
  6511  0E01  0020               	movlb	0	; select bank0
  6512  0E02  00A5               	movwf	??_readADC+3
  6513  0E03  01A6               	clrf	??_readADC+4
  6514  0E04  3006               	movlw	6
  6515  0E05                     u2535:	
  6516  0E05  35A5               	lslf	??_readADC+3,f
  6517  0E06  0DA6               	rlf	??_readADC+4,f
  6518  0E07  0B89               	decfsz	9,f
  6519  0E08  2E05               	goto	u2535
  6520  0E09  0823               	movf	??_readADC+1,w
  6521  0E0A  0425               	iorwf	??_readADC+3,w
  6522  0E0B  00A7               	movwf	??_readADC+5
  6523  0E0C  0824               	movf	??_readADC+2,w
  6524  0E0D  0426               	iorwf	??_readADC+4,w
  6525  0E0E  00A8               	movwf	??_readADC+6
  6526  0E0F  0827               	movf	??_readADC+5,w
  6527  0E10  00A0               	movwf	?_readADC
  6528  0E11  0828               	movf	??_readADC+6,w
  6529  0E12  00A1               	movwf	?_readADC+1
  6530  0E13                     l350:	
  6531  0E13  0008               	return
  6532  0E14                     __end_of_readADC:	
  6533                           
  6534                           	psect	text8
  6535  0276                     __ptext8:	
  6536 ;; *************** function _lutInit *****************
  6537 ;; Defined at:
  6538 ;;		line 107 in file "Controller.c"
  6539 ;; Parameters:    Size  Location     Type
  6540 ;;		None
  6541 ;; Auto vars:     Size  Location     Type
  6542 ;;  position        2   42[BANK0 ] int 
  6543 ;;  ryMax           1   41[BANK0 ] unsigned char 
  6544 ;;  ryMin           1   40[BANK0 ] unsigned char 
  6545 ;;  rxMax           1   39[BANK0 ] unsigned char 
  6546 ;;  rxMin           1   38[BANK0 ] unsigned char 
  6547 ;;  lyMax           1   37[BANK0 ] unsigned char 
  6548 ;;  lyMin           1   36[BANK0 ] unsigned char 
  6549 ;;  lxMax           1   35[BANK0 ] unsigned char 
  6550 ;;  lxMin           1   34[BANK0 ] unsigned char 
  6551 ;; Return value:  Size  Location     Type
  6552 ;;                  1    wreg      void 
  6553 ;; Registers used:
  6554 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6555 ;; Tracked objects:
  6556 ;;		On entry : 0/0
  6557 ;;		On exit  : 0/0
  6558 ;;		Unchanged: 0/0
  6559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6561 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6562 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6563 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6564 ;;Total ram usage:       19 bytes
  6565 ;; Hardware stack levels used:    1
  6566 ;; Hardware stack levels required when called:    5
  6567 ;; This function calls:
  6568 ;;		_Map
  6569 ;;		_eepromRead
  6570 ;; This function is called by:
  6571 ;;		_main
  6572 ;;		_configureController
  6573 ;; This function uses a non-reentrant model
  6574 ;;
  6575                           
  6576                           
  6577                           ;psect for function _lutInit
  6578  0276                     _lutInit:	
  6579  0276                     l2603:	
  6580                           ;incstack = 0
  6581                           ; Regs used in _lutInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6582                           
  6583                           
  6584                           ;Controller.c: 109: char lxMin = eepromRead(0x60);
  6585  0276  3060               	movlw	96
  6586  0277  318D  2559  3182   	fcall	_eepromRead
  6587  027A  0020               	movlb	0	; select bank0
  6588  027B  00B9               	movwf	??_lutInit
  6589  027C  0839               	movf	??_lutInit,w
  6590  027D  00C2               	movwf	lutInit@lxMin
  6591                           
  6592                           ;Controller.c: 110: char lxMax = eepromRead(0x61);
  6593  027E  3061               	movlw	97
  6594  027F  318D  2559  3182   	fcall	_eepromRead
  6595  0282  0020               	movlb	0	; select bank0
  6596  0283  00B9               	movwf	??_lutInit
  6597  0284  0839               	movf	??_lutInit,w
  6598  0285  00C3               	movwf	lutInit@lxMax
  6599                           
  6600                           ;Controller.c: 111: char lyMin = eepromRead(0x62);
  6601  0286  3062               	movlw	98
  6602  0287  318D  2559  3182   	fcall	_eepromRead
  6603  028A  0020               	movlb	0	; select bank0
  6604  028B  00B9               	movwf	??_lutInit
  6605  028C  0839               	movf	??_lutInit,w
  6606  028D  00C4               	movwf	lutInit@lyMin
  6607                           
  6608                           ;Controller.c: 112: char lyMax = eepromRead(0x63);
  6609  028E  3063               	movlw	99
  6610  028F  318D  2559  3182   	fcall	_eepromRead
  6611  0292  0020               	movlb	0	; select bank0
  6612  0293  00B9               	movwf	??_lutInit
  6613  0294  0839               	movf	??_lutInit,w
  6614  0295  00C5               	movwf	lutInit@lyMax
  6615                           
  6616                           ;Controller.c: 114: char rxMin = eepromRead(0x64);
  6617  0296  3064               	movlw	100
  6618  0297  318D  2559  3182   	fcall	_eepromRead
  6619  029A  0020               	movlb	0	; select bank0
  6620  029B  00B9               	movwf	??_lutInit
  6621  029C  0839               	movf	??_lutInit,w
  6622  029D  00C6               	movwf	lutInit@rxMin
  6623                           
  6624                           ;Controller.c: 115: char rxMax = eepromRead(0x65);
  6625  029E  3065               	movlw	101
  6626  029F  318D  2559  3182   	fcall	_eepromRead
  6627  02A2  0020               	movlb	0	; select bank0
  6628  02A3  00B9               	movwf	??_lutInit
  6629  02A4  0839               	movf	??_lutInit,w
  6630  02A5  00C7               	movwf	lutInit@rxMax
  6631                           
  6632                           ;Controller.c: 116: char ryMin = eepromRead(0x66);
  6633  02A6  3066               	movlw	102
  6634  02A7  318D  2559  3182   	fcall	_eepromRead
  6635  02AA  0020               	movlb	0	; select bank0
  6636  02AB  00B9               	movwf	??_lutInit
  6637  02AC  0839               	movf	??_lutInit,w
  6638  02AD  00C8               	movwf	lutInit@ryMin
  6639                           
  6640                           ;Controller.c: 117: char ryMax = eepromRead(0x67);
  6641  02AE  3067               	movlw	103
  6642  02AF  318D  2559  3182   	fcall	_eepromRead
  6643  02B2  0020               	movlb	0	; select bank0
  6644  02B3  00B9               	movwf	??_lutInit
  6645  02B4  0839               	movf	??_lutInit,w
  6646  02B5  00C9               	movwf	lutInit@ryMax
  6647  02B6                     l2605:	
  6648                           
  6649                           ;Controller.c: 119: for (int position = 0; position < 256; position++) {
  6650  02B6  01CA               	clrf	lutInit@position
  6651  02B7  01CB               	clrf	lutInit@position+1
  6652  02B8                     l2611:	
  6653                           
  6654                           ;Controller.c: 122: if (position < lxMin) {
  6655  02B8  0020               	movlb	0	; select bank0
  6656  02B9  084B               	movf	lutInit@position+1,w
  6657  02BA  3A80               	xorlw	128
  6658  02BB  00B9               	movwf	??_lutInit
  6659  02BC  3080               	movlw	128
  6660  02BD  0239               	subwf	??_lutInit,w
  6661  02BE  1D03               	skipz
  6662  02BF  2AC2               	goto	u2245
  6663  02C0  0842               	movf	lutInit@lxMin,w
  6664  02C1  024A               	subwf	lutInit@position,w
  6665  02C2                     u2245:	
  6666  02C2  1803               	skipnc
  6667  02C3  2AC5               	goto	u2241
  6668  02C4  2AC6               	goto	u2240
  6669  02C5                     u2241:	
  6670  02C5  2AD3               	goto	l2615
  6671  02C6                     u2240:	
  6672  02C6                     l2613:	
  6673                           
  6674                           ;Controller.c: 124: lutLX[position] = 0;
  6675  02C6  30F0               	movlw	240
  6676  02C7  0020               	movlb	0	; select bank0
  6677  02C8  00B9               	movwf	??_lutInit
  6678  02C9  3026               	movlw	38
  6679  02CA  00BA               	movwf	??_lutInit+1
  6680  02CB  084A               	movf	lutInit@position,w
  6681  02CC  0739               	addwf	??_lutInit,w
  6682  02CD  0086               	movwf	6
  6683  02CE  084B               	movf	lutInit@position+1,w
  6684  02CF  3D3A               	addwfc	??_lutInit+1,w
  6685  02D0  0087               	movwf	7
  6686  02D1  0181               	clrf	1
  6687                           
  6688                           ;Controller.c: 125: } else if (position > lxMax) {
  6689  02D2  2B20               	goto	l2621
  6690  02D3                     l2615:	
  6691  02D3  0020               	movlb	0	; select bank0
  6692  02D4  084B               	movf	lutInit@position+1,w
  6693  02D5  3A80               	xorlw	128
  6694  02D6  3C80               	sublw	128
  6695  02D7  1D03               	skipz
  6696  02D8  2ADB               	goto	u2255
  6697  02D9  084A               	movf	lutInit@position,w
  6698  02DA  0243               	subwf	lutInit@lxMax,w
  6699  02DB                     u2255:	
  6700  02DB  1803               	skipnc
  6701  02DC  2ADE               	goto	u2251
  6702  02DD  2ADF               	goto	u2250
  6703  02DE                     u2251:	
  6704  02DE  2AF1               	goto	l2619
  6705  02DF                     u2250:	
  6706  02DF                     l2617:	
  6707                           
  6708                           ;Controller.c: 126: lutLX[position] = 255;
  6709  02DF  30F0               	movlw	240
  6710  02E0  0020               	movlb	0	; select bank0
  6711  02E1  00B9               	movwf	??_lutInit
  6712  02E2  3026               	movlw	38
  6713  02E3  00BA               	movwf	??_lutInit+1
  6714  02E4  084A               	movf	lutInit@position,w
  6715  02E5  0739               	addwf	??_lutInit,w
  6716  02E6  00BB               	movwf	??_lutInit+2
  6717  02E7  084B               	movf	lutInit@position+1,w
  6718  02E8  3D3A               	addwfc	??_lutInit+1,w
  6719  02E9  00BC               	movwf	??_lutInit+3
  6720  02EA  083B               	movf	??_lutInit+2,w
  6721  02EB  0086               	movwf	6
  6722  02EC  083C               	movf	??_lutInit+3,w
  6723  02ED  0087               	movwf	7
  6724  02EE  30FF               	movlw	255
  6725  02EF  0081               	movwf	1
  6726                           
  6727                           ;Controller.c: 128: } else {
  6728  02F0  2B20               	goto	l2621
  6729  02F1                     l2619:	
  6730                           
  6731                           ;Controller.c: 129: lutLX[position] = Map(position, lxMin, lxMax, 0, 255);
  6732  02F1  0020               	movlb	0	; select bank0
  6733  02F2  084B               	movf	lutInit@position+1,w
  6734  02F3  00B0               	movwf	Map@x+1
  6735  02F4  084A               	movf	lutInit@position,w
  6736  02F5  00AF               	movwf	Map@x
  6737  02F6  0842               	movf	lutInit@lxMin,w
  6738  02F7  00B9               	movwf	??_lutInit
  6739  02F8  01BA               	clrf	??_lutInit+1
  6740  02F9  0839               	movf	??_lutInit,w
  6741  02FA  00B1               	movwf	Map@inMin
  6742  02FB  083A               	movf	??_lutInit+1,w
  6743  02FC  00B2               	movwf	Map@inMin+1
  6744  02FD  0843               	movf	lutInit@lxMax,w
  6745  02FE  00BB               	movwf	??_lutInit+2
  6746  02FF  01BC               	clrf	??_lutInit+3
  6747  0300  083B               	movf	??_lutInit+2,w
  6748  0301  00B3               	movwf	Map@inMax
  6749  0302  083C               	movf	??_lutInit+3,w
  6750  0303  00B4               	movwf	Map@inMax+1
  6751  0304  3000               	movlw	0
  6752  0305  00B5               	movwf	Map@outMin
  6753  0306  00B6               	movwf	Map@outMin+1
  6754  0307  30FF               	movlw	255
  6755  0308  00B7               	movwf	Map@outMax
  6756  0309  3000               	movlw	0
  6757  030A  00B8               	movwf	Map@outMax+1
  6758  030B  318D  25C7  3182   	fcall	_Map
  6759  030E  0020               	movlb	0	; select bank0
  6760  030F  00BD               	movwf	??_lutInit+4
  6761  0310  30F0               	movlw	240
  6762  0311  00BE               	movwf	??_lutInit+5
  6763  0312  3026               	movlw	38
  6764  0313  00BF               	movwf	??_lutInit+6
  6765  0314  084A               	movf	lutInit@position,w
  6766  0315  073E               	addwf	??_lutInit+5,w
  6767  0316  00C0               	movwf	??_lutInit+7
  6768  0317  084B               	movf	lutInit@position+1,w
  6769  0318  3D3F               	addwfc	??_lutInit+6,w
  6770  0319  00C1               	movwf	??_lutInit+8
  6771  031A  0840               	movf	??_lutInit+7,w
  6772  031B  0086               	movwf	6
  6773  031C  0841               	movf	??_lutInit+8,w
  6774  031D  0087               	movwf	7
  6775  031E  083D               	movf	??_lutInit+4,w
  6776  031F  0081               	movwf	1
  6777  0320                     l2621:	
  6778                           
  6779                           ;Controller.c: 130: };Controller.c: 133: if (position < lyMin) {
  6780  0320  084B               	movf	lutInit@position+1,w
  6781  0321  3A80               	xorlw	128
  6782  0322  00B9               	movwf	??_lutInit
  6783  0323  3080               	movlw	128
  6784  0324  0239               	subwf	??_lutInit,w
  6785  0325  1D03               	skipz
  6786  0326  2B29               	goto	u2265
  6787  0327  0844               	movf	lutInit@lyMin,w
  6788  0328  024A               	subwf	lutInit@position,w
  6789  0329                     u2265:	
  6790  0329  1803               	skipnc
  6791  032A  2B2C               	goto	u2261
  6792  032B  2B2D               	goto	u2260
  6793  032C                     u2261:	
  6794  032C  2B3A               	goto	l2625
  6795  032D                     u2260:	
  6796  032D                     l2623:	
  6797                           
  6798                           ;Controller.c: 134: lutLY[position] = 0;
  6799  032D  30F0               	movlw	240
  6800  032E  0020               	movlb	0	; select bank0
  6801  032F  00B9               	movwf	??_lutInit
  6802  0330  3025               	movlw	37
  6803  0331  00BA               	movwf	??_lutInit+1
  6804  0332  084A               	movf	lutInit@position,w
  6805  0333  0739               	addwf	??_lutInit,w
  6806  0334  0086               	movwf	6
  6807  0335  084B               	movf	lutInit@position+1,w
  6808  0336  3D3A               	addwfc	??_lutInit+1,w
  6809  0337  0087               	movwf	7
  6810  0338  0181               	clrf	1
  6811                           
  6812                           ;Controller.c: 135: } else if (position > lyMax) {
  6813  0339  2B87               	goto	l2631
  6814  033A                     l2625:	
  6815  033A  0020               	movlb	0	; select bank0
  6816  033B  084B               	movf	lutInit@position+1,w
  6817  033C  3A80               	xorlw	128
  6818  033D  3C80               	sublw	128
  6819  033E  1D03               	skipz
  6820  033F  2B42               	goto	u2275
  6821  0340  084A               	movf	lutInit@position,w
  6822  0341  0245               	subwf	lutInit@lyMax,w
  6823  0342                     u2275:	
  6824  0342  1803               	skipnc
  6825  0343  2B45               	goto	u2271
  6826  0344  2B46               	goto	u2270
  6827  0345                     u2271:	
  6828  0345  2B58               	goto	l2629
  6829  0346                     u2270:	
  6830  0346                     l2627:	
  6831                           
  6832                           ;Controller.c: 136: lutLY[position] = 255;
  6833  0346  30F0               	movlw	240
  6834  0347  0020               	movlb	0	; select bank0
  6835  0348  00B9               	movwf	??_lutInit
  6836  0349  3025               	movlw	37
  6837  034A  00BA               	movwf	??_lutInit+1
  6838  034B  084A               	movf	lutInit@position,w
  6839  034C  0739               	addwf	??_lutInit,w
  6840  034D  00BB               	movwf	??_lutInit+2
  6841  034E  084B               	movf	lutInit@position+1,w
  6842  034F  3D3A               	addwfc	??_lutInit+1,w
  6843  0350  00BC               	movwf	??_lutInit+3
  6844  0351  083B               	movf	??_lutInit+2,w
  6845  0352  0086               	movwf	6
  6846  0353  083C               	movf	??_lutInit+3,w
  6847  0354  0087               	movwf	7
  6848  0355  30FF               	movlw	255
  6849  0356  0081               	movwf	1
  6850                           
  6851                           ;Controller.c: 138: } else {
  6852  0357  2B87               	goto	l2631
  6853  0358                     l2629:	
  6854                           
  6855                           ;Controller.c: 139: lutLY[position] = Map(position, lyMin, lyMax, 0, 255);
  6856  0358  0020               	movlb	0	; select bank0
  6857  0359  084B               	movf	lutInit@position+1,w
  6858  035A  00B0               	movwf	Map@x+1
  6859  035B  084A               	movf	lutInit@position,w
  6860  035C  00AF               	movwf	Map@x
  6861  035D  0844               	movf	lutInit@lyMin,w
  6862  035E  00B9               	movwf	??_lutInit
  6863  035F  01BA               	clrf	??_lutInit+1
  6864  0360  0839               	movf	??_lutInit,w
  6865  0361  00B1               	movwf	Map@inMin
  6866  0362  083A               	movf	??_lutInit+1,w
  6867  0363  00B2               	movwf	Map@inMin+1
  6868  0364  0845               	movf	lutInit@lyMax,w
  6869  0365  00BB               	movwf	??_lutInit+2
  6870  0366  01BC               	clrf	??_lutInit+3
  6871  0367  083B               	movf	??_lutInit+2,w
  6872  0368  00B3               	movwf	Map@inMax
  6873  0369  083C               	movf	??_lutInit+3,w
  6874  036A  00B4               	movwf	Map@inMax+1
  6875  036B  3000               	movlw	0
  6876  036C  00B5               	movwf	Map@outMin
  6877  036D  00B6               	movwf	Map@outMin+1
  6878  036E  30FF               	movlw	255
  6879  036F  00B7               	movwf	Map@outMax
  6880  0370  3000               	movlw	0
  6881  0371  00B8               	movwf	Map@outMax+1
  6882  0372  318D  25C7  3182   	fcall	_Map
  6883  0375  0020               	movlb	0	; select bank0
  6884  0376  00BD               	movwf	??_lutInit+4
  6885  0377  30F0               	movlw	240
  6886  0378  00BE               	movwf	??_lutInit+5
  6887  0379  3025               	movlw	37
  6888  037A  00BF               	movwf	??_lutInit+6
  6889  037B  084A               	movf	lutInit@position,w
  6890  037C  073E               	addwf	??_lutInit+5,w
  6891  037D  00C0               	movwf	??_lutInit+7
  6892  037E  084B               	movf	lutInit@position+1,w
  6893  037F  3D3F               	addwfc	??_lutInit+6,w
  6894  0380  00C1               	movwf	??_lutInit+8
  6895  0381  0840               	movf	??_lutInit+7,w
  6896  0382  0086               	movwf	6
  6897  0383  0841               	movf	??_lutInit+8,w
  6898  0384  0087               	movwf	7
  6899  0385  083D               	movf	??_lutInit+4,w
  6900  0386  0081               	movwf	1
  6901  0387                     l2631:	
  6902                           
  6903                           ;Controller.c: 140: };Controller.c: 143: if (position < rxMin) {
  6904  0387  084B               	movf	lutInit@position+1,w
  6905  0388  3A80               	xorlw	128
  6906  0389  00B9               	movwf	??_lutInit
  6907  038A  3080               	movlw	128
  6908  038B  0239               	subwf	??_lutInit,w
  6909  038C  1D03               	skipz
  6910  038D  2B90               	goto	u2285
  6911  038E  0846               	movf	lutInit@rxMin,w
  6912  038F  024A               	subwf	lutInit@position,w
  6913  0390                     u2285:	
  6914  0390  1803               	skipnc
  6915  0391  2B93               	goto	u2281
  6916  0392  2B94               	goto	u2280
  6917  0393                     u2281:	
  6918  0393  2BA1               	goto	l2635
  6919  0394                     u2280:	
  6920  0394                     l2633:	
  6921                           
  6922                           ;Controller.c: 144: lutRX[position] = 0;
  6923  0394  30F0               	movlw	240
  6924  0395  0020               	movlb	0	; select bank0
  6925  0396  00B9               	movwf	??_lutInit
  6926  0397  3024               	movlw	36
  6927  0398  00BA               	movwf	??_lutInit+1
  6928  0399  084A               	movf	lutInit@position,w
  6929  039A  0739               	addwf	??_lutInit,w
  6930  039B  0086               	movwf	6
  6931  039C  084B               	movf	lutInit@position+1,w
  6932  039D  3D3A               	addwfc	??_lutInit+1,w
  6933  039E  0087               	movwf	7
  6934  039F  0181               	clrf	1
  6935                           
  6936                           ;Controller.c: 145: } else if (position > rxMax) {
  6937  03A0  2BEE               	goto	l2641
  6938  03A1                     l2635:	
  6939  03A1  0020               	movlb	0	; select bank0
  6940  03A2  084B               	movf	lutInit@position+1,w
  6941  03A3  3A80               	xorlw	128
  6942  03A4  3C80               	sublw	128
  6943  03A5  1D03               	skipz
  6944  03A6  2BA9               	goto	u2295
  6945  03A7  084A               	movf	lutInit@position,w
  6946  03A8  0247               	subwf	lutInit@rxMax,w
  6947  03A9                     u2295:	
  6948  03A9  1803               	skipnc
  6949  03AA  2BAC               	goto	u2291
  6950  03AB  2BAD               	goto	u2290
  6951  03AC                     u2291:	
  6952  03AC  2BBF               	goto	l2639
  6953  03AD                     u2290:	
  6954  03AD                     l2637:	
  6955                           
  6956                           ;Controller.c: 146: lutRX[position] = 255;
  6957  03AD  30F0               	movlw	240
  6958  03AE  0020               	movlb	0	; select bank0
  6959  03AF  00B9               	movwf	??_lutInit
  6960  03B0  3024               	movlw	36
  6961  03B1  00BA               	movwf	??_lutInit+1
  6962  03B2  084A               	movf	lutInit@position,w
  6963  03B3  0739               	addwf	??_lutInit,w
  6964  03B4  00BB               	movwf	??_lutInit+2
  6965  03B5  084B               	movf	lutInit@position+1,w
  6966  03B6  3D3A               	addwfc	??_lutInit+1,w
  6967  03B7  00BC               	movwf	??_lutInit+3
  6968  03B8  083B               	movf	??_lutInit+2,w
  6969  03B9  0086               	movwf	6
  6970  03BA  083C               	movf	??_lutInit+3,w
  6971  03BB  0087               	movwf	7
  6972  03BC  30FF               	movlw	255
  6973  03BD  0081               	movwf	1
  6974                           
  6975                           ;Controller.c: 148: } else {
  6976  03BE  2BEE               	goto	l2641
  6977  03BF                     l2639:	
  6978                           
  6979                           ;Controller.c: 149: lutRX[position] = Map(position, rxMin, rxMax, 0, 255);
  6980  03BF  0020               	movlb	0	; select bank0
  6981  03C0  084B               	movf	lutInit@position+1,w
  6982  03C1  00B0               	movwf	Map@x+1
  6983  03C2  084A               	movf	lutInit@position,w
  6984  03C3  00AF               	movwf	Map@x
  6985  03C4  0846               	movf	lutInit@rxMin,w
  6986  03C5  00B9               	movwf	??_lutInit
  6987  03C6  01BA               	clrf	??_lutInit+1
  6988  03C7  0839               	movf	??_lutInit,w
  6989  03C8  00B1               	movwf	Map@inMin
  6990  03C9  083A               	movf	??_lutInit+1,w
  6991  03CA  00B2               	movwf	Map@inMin+1
  6992  03CB  0847               	movf	lutInit@rxMax,w
  6993  03CC  00BB               	movwf	??_lutInit+2
  6994  03CD  01BC               	clrf	??_lutInit+3
  6995  03CE  083B               	movf	??_lutInit+2,w
  6996  03CF  00B3               	movwf	Map@inMax
  6997  03D0  083C               	movf	??_lutInit+3,w
  6998  03D1  00B4               	movwf	Map@inMax+1
  6999  03D2  3000               	movlw	0
  7000  03D3  00B5               	movwf	Map@outMin
  7001  03D4  00B6               	movwf	Map@outMin+1
  7002  03D5  30FF               	movlw	255
  7003  03D6  00B7               	movwf	Map@outMax
  7004  03D7  3000               	movlw	0
  7005  03D8  00B8               	movwf	Map@outMax+1
  7006  03D9  318D  25C7  3182   	fcall	_Map
  7007  03DC  0020               	movlb	0	; select bank0
  7008  03DD  00BD               	movwf	??_lutInit+4
  7009  03DE  30F0               	movlw	240
  7010  03DF  00BE               	movwf	??_lutInit+5
  7011  03E0  3024               	movlw	36
  7012  03E1  00BF               	movwf	??_lutInit+6
  7013  03E2  084A               	movf	lutInit@position,w
  7014  03E3  073E               	addwf	??_lutInit+5,w
  7015  03E4  00C0               	movwf	??_lutInit+7
  7016  03E5  084B               	movf	lutInit@position+1,w
  7017  03E6  3D3F               	addwfc	??_lutInit+6,w
  7018  03E7  00C1               	movwf	??_lutInit+8
  7019  03E8  0840               	movf	??_lutInit+7,w
  7020  03E9  0086               	movwf	6
  7021  03EA  0841               	movf	??_lutInit+8,w
  7022  03EB  0087               	movwf	7
  7023  03EC  083D               	movf	??_lutInit+4,w
  7024  03ED  0081               	movwf	1
  7025  03EE                     l2641:	
  7026                           
  7027                           ;Controller.c: 150: };Controller.c: 153: if (position < ryMin) {
  7028  03EE  084B               	movf	lutInit@position+1,w
  7029  03EF  3A80               	xorlw	128
  7030  03F0  00B9               	movwf	??_lutInit
  7031  03F1  3080               	movlw	128
  7032  03F2  0239               	subwf	??_lutInit,w
  7033  03F3  1D03               	skipz
  7034  03F4  2BF7               	goto	u2305
  7035  03F5  0848               	movf	lutInit@ryMin,w
  7036  03F6  024A               	subwf	lutInit@position,w
  7037  03F7                     u2305:	
  7038  03F7  1803               	skipnc
  7039  03F8  2BFA               	goto	u2301
  7040  03F9  2BFB               	goto	u2300
  7041  03FA                     u2301:	
  7042  03FA  2C08               	goto	l2645
  7043  03FB                     u2300:	
  7044  03FB                     l2643:	
  7045                           
  7046                           ;Controller.c: 154: lutRY[position] = 0;
  7047  03FB  30F0               	movlw	240
  7048  03FC  0020               	movlb	0	; select bank0
  7049  03FD  00B9               	movwf	??_lutInit
  7050  03FE  3023               	movlw	35
  7051  03FF  00BA               	movwf	??_lutInit+1
  7052  0400  084A               	movf	lutInit@position,w
  7053  0401  0739               	addwf	??_lutInit,w
  7054  0402  0086               	movwf	6
  7055  0403  084B               	movf	lutInit@position+1,w
  7056  0404  3D3A               	addwfc	??_lutInit+1,w
  7057  0405  0087               	movwf	7
  7058  0406  0181               	clrf	1
  7059                           
  7060                           ;Controller.c: 155: } else if (position > ryMax) {
  7061  0407  2C55               	goto	l2651
  7062  0408                     l2645:	
  7063  0408  0020               	movlb	0	; select bank0
  7064  0409  084B               	movf	lutInit@position+1,w
  7065  040A  3A80               	xorlw	128
  7066  040B  3C80               	sublw	128
  7067  040C  1D03               	skipz
  7068  040D  2C10               	goto	u2315
  7069  040E  084A               	movf	lutInit@position,w
  7070  040F  0249               	subwf	lutInit@ryMax,w
  7071  0410                     u2315:	
  7072  0410  1803               	skipnc
  7073  0411  2C13               	goto	u2311
  7074  0412  2C14               	goto	u2310
  7075  0413                     u2311:	
  7076  0413  2C26               	goto	l2649
  7077  0414                     u2310:	
  7078  0414                     l2647:	
  7079                           
  7080                           ;Controller.c: 156: lutRY[position] = 255;
  7081  0414  30F0               	movlw	240
  7082  0415  0020               	movlb	0	; select bank0
  7083  0416  00B9               	movwf	??_lutInit
  7084  0417  3023               	movlw	35
  7085  0418  00BA               	movwf	??_lutInit+1
  7086  0419  084A               	movf	lutInit@position,w
  7087  041A  0739               	addwf	??_lutInit,w
  7088  041B  00BB               	movwf	??_lutInit+2
  7089  041C  084B               	movf	lutInit@position+1,w
  7090  041D  3D3A               	addwfc	??_lutInit+1,w
  7091  041E  00BC               	movwf	??_lutInit+3
  7092  041F  083B               	movf	??_lutInit+2,w
  7093  0420  0086               	movwf	6
  7094  0421  083C               	movf	??_lutInit+3,w
  7095  0422  0087               	movwf	7
  7096  0423  30FF               	movlw	255
  7097  0424  0081               	movwf	1
  7098                           
  7099                           ;Controller.c: 158: } else {
  7100  0425  2C55               	goto	l2651
  7101  0426                     l2649:	
  7102                           
  7103                           ;Controller.c: 159: lutRY[position] = Map(position, ryMin, ryMax, 0, 255);
  7104  0426  0020               	movlb	0	; select bank0
  7105  0427  084B               	movf	lutInit@position+1,w
  7106  0428  00B0               	movwf	Map@x+1
  7107  0429  084A               	movf	lutInit@position,w
  7108  042A  00AF               	movwf	Map@x
  7109  042B  0848               	movf	lutInit@ryMin,w
  7110  042C  00B9               	movwf	??_lutInit
  7111  042D  01BA               	clrf	??_lutInit+1
  7112  042E  0839               	movf	??_lutInit,w
  7113  042F  00B1               	movwf	Map@inMin
  7114  0430  083A               	movf	??_lutInit+1,w
  7115  0431  00B2               	movwf	Map@inMin+1
  7116  0432  0849               	movf	lutInit@ryMax,w
  7117  0433  00BB               	movwf	??_lutInit+2
  7118  0434  01BC               	clrf	??_lutInit+3
  7119  0435  083B               	movf	??_lutInit+2,w
  7120  0436  00B3               	movwf	Map@inMax
  7121  0437  083C               	movf	??_lutInit+3,w
  7122  0438  00B4               	movwf	Map@inMax+1
  7123  0439  3000               	movlw	0
  7124  043A  00B5               	movwf	Map@outMin
  7125  043B  00B6               	movwf	Map@outMin+1
  7126  043C  30FF               	movlw	255
  7127  043D  00B7               	movwf	Map@outMax
  7128  043E  3000               	movlw	0
  7129  043F  00B8               	movwf	Map@outMax+1
  7130  0440  318D  25C7  3182   	fcall	_Map
  7131  0443  0020               	movlb	0	; select bank0
  7132  0444  00BD               	movwf	??_lutInit+4
  7133  0445  30F0               	movlw	240
  7134  0446  00BE               	movwf	??_lutInit+5
  7135  0447  3023               	movlw	35
  7136  0448  00BF               	movwf	??_lutInit+6
  7137  0449  084A               	movf	lutInit@position,w
  7138  044A  073E               	addwf	??_lutInit+5,w
  7139  044B  00C0               	movwf	??_lutInit+7
  7140  044C  084B               	movf	lutInit@position+1,w
  7141  044D  3D3F               	addwfc	??_lutInit+6,w
  7142  044E  00C1               	movwf	??_lutInit+8
  7143  044F  0840               	movf	??_lutInit+7,w
  7144  0450  0086               	movwf	6
  7145  0451  0841               	movf	??_lutInit+8,w
  7146  0452  0087               	movwf	7
  7147  0453  083D               	movf	??_lutInit+4,w
  7148  0454  0081               	movwf	1
  7149  0455                     l2651:	
  7150  0455  3001               	movlw	1
  7151  0456  07CA               	addwf	lutInit@position,f
  7152  0457  3000               	movlw	0
  7153  0458  3DCB               	addwfc	lutInit@position+1,f
  7154  0459                     l2653:	
  7155  0459  084B               	movf	lutInit@position+1,w
  7156  045A  3A80               	xorlw	128
  7157  045B  00B9               	movwf	??_lutInit
  7158  045C  3081               	movlw	129
  7159  045D  0239               	subwf	??_lutInit,w
  7160  045E  1D03               	skipz
  7161  045F  2C62               	goto	u2325
  7162  0460  3000               	movlw	0
  7163  0461  024A               	subwf	lutInit@position,w
  7164  0462                     u2325:	
  7165  0462  1C03               	skipc
  7166  0463  2C65               	goto	u2321
  7167  0464  2C66               	goto	u2320
  7168  0465                     u2321:	
  7169  0465  2AB8               	goto	l2611
  7170  0466                     u2320:	
  7171  0466                     l344:	
  7172  0466  0008               	return
  7173  0467                     __end_of_lutInit:	
  7174                           
  7175                           	psect	text9
  7176  0D59                     __ptext9:	
  7177 ;; *************** function _eepromRead *****************
  7178 ;; Defined at:
  7179 ;;		line 31 in file "Nvm.c"
  7180 ;; Parameters:    Size  Location     Type
  7181 ;;  address         1    wreg     unsigned char 
  7182 ;; Auto vars:     Size  Location     Type
  7183 ;;  address         1    1[BANK0 ] unsigned char 
  7184 ;;  data            1    2[BANK0 ] unsigned char 
  7185 ;; Return value:  Size  Location     Type
  7186 ;;                  1    wreg      unsigned char 
  7187 ;; Registers used:
  7188 ;;		wreg
  7189 ;; Tracked objects:
  7190 ;;		On entry : 0/0
  7191 ;;		On exit  : 0/0
  7192 ;;		Unchanged: 0/0
  7193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7195 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7196 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7197 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7198 ;;Total ram usage:        3 bytes
  7199 ;; Hardware stack levels used:    1
  7200 ;; Hardware stack levels required when called:    3
  7201 ;; This function calls:
  7202 ;;		Nothing
  7203 ;; This function is called by:
  7204 ;;		_lutInit
  7205 ;; This function uses a non-reentrant model
  7206 ;;
  7207                           
  7208                           
  7209                           ;psect for function _eepromRead
  7210  0D59                     _eepromRead:	
  7211                           
  7212                           ;incstack = 0
  7213                           ; Regs used in _eepromRead: [wreg]
  7214                           ;eepromRead@address stored from wreg
  7215  0D59  0020               	movlb	0	; select bank0
  7216  0D5A  00A1               	movwf	eepromRead@address
  7217  0D5B                     l2585:	
  7218                           
  7219                           ;Nvm.c: 33: char data;;Nvm.c: 35: NVMCON1bits.NVMREGS = 1;
  7220  0D5B  0030               	movlb	16	; select bank16
  7221  0D5C  171E               	bsf	30,6	;volsfr
  7222  0D5D                     l2587:	
  7223                           
  7224                           ;Nvm.c: 36: NVMADRH = 0xF0;
  7225  0D5D  30F0               	movlw	240
  7226  0D5E  009B               	movwf	27	;volatile
  7227                           
  7228                           ;Nvm.c: 37: NVMADRL = address;
  7229  0D5F  0020               	movlb	0	; select bank0
  7230  0D60  0821               	movf	eepromRead@address,w
  7231  0D61  0030               	movlb	16	; select bank16
  7232  0D62  009A               	movwf	26	;volatile
  7233  0D63                     l2589:	
  7234                           
  7235                           ;Nvm.c: 38: NVMCON1bits.RD = 1;
  7236  0D63  141E               	bsf	30,0	;volsfr
  7237                           
  7238                           ;Nvm.c: 40: data = NVMDATL;
  7239  0D64  081C               	movf	28,w	;volatile
  7240  0D65  0020               	movlb	0	; select bank0
  7241  0D66  00A0               	movwf	??_eepromRead
  7242  0D67  0820               	movf	??_eepromRead,w
  7243  0D68  00A2               	movwf	eepromRead@data
  7244                           
  7245                           ;Nvm.c: 42: return data;
  7246  0D69  0822               	movf	eepromRead@data,w
  7247  0D6A                     l455:	
  7248  0D6A  0008               	return
  7249  0D6B                     __end_of_eepromRead:	
  7250                           
  7251                           	psect	text10
  7252  0DC7                     __ptext10:	
  7253 ;; *************** function _Map *****************
  7254 ;; Defined at:
  7255 ;;		line 102 in file "Controller.c"
  7256 ;; Parameters:    Size  Location     Type
  7257 ;;  x               2   15[BANK0 ] int 
  7258 ;;  inMin           2   17[BANK0 ] int 
  7259 ;;  inMax           2   19[BANK0 ] int 
  7260 ;;  outMin          2   21[BANK0 ] int 
  7261 ;;  outMax          2   23[BANK0 ] int 
  7262 ;; Auto vars:     Size  Location     Type
  7263 ;;		None
  7264 ;; Return value:  Size  Location     Type
  7265 ;;                  1    wreg      unsigned char 
  7266 ;; Registers used:
  7267 ;;		wreg, status,2, status,0, pclath, cstack
  7268 ;; Tracked objects:
  7269 ;;		On entry : 0/0
  7270 ;;		On exit  : 0/0
  7271 ;;		Unchanged: 0/0
  7272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7273 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7276 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7277 ;;Total ram usage:       10 bytes
  7278 ;; Hardware stack levels used:    1
  7279 ;; Hardware stack levels required when called:    4
  7280 ;; This function calls:
  7281 ;;		___awdiv
  7282 ;;		___wmul
  7283 ;; This function is called by:
  7284 ;;		_lutInit
  7285 ;; This function uses a non-reentrant model
  7286 ;;
  7287                           
  7288                           
  7289                           ;psect for function _Map
  7290  0DC7                     _Map:	
  7291  0DC7                     l2581:	
  7292                           ;incstack = 0
  7293                           ; Regs used in _Map: [wreg+status,2+status,0+pclath+cstack]
  7294                           
  7295                           
  7296                           ;Controller.c: 104: return (((x - inMin) * (outMax - outMin)) / (inMax - inMin)) + outMi
      +                          n;
  7297  0DC7  0020               	movlb	0	; select bank0
  7298  0DC8  0831               	movf	Map@inMin,w
  7299  0DC9  0233               	subwf	Map@inMax,w
  7300  0DCA  00A6               	movwf	___awdiv@divisor
  7301  0DCB  0832               	movf	Map@inMin+1,w
  7302  0DCC  3B34               	subwfb	Map@inMax+1,w
  7303  0DCD  00A7               	movwf	___awdiv@divisor+1
  7304  0DCE  0831               	movf	Map@inMin,w
  7305  0DCF  022F               	subwf	Map@x,w
  7306  0DD0  00A0               	movwf	___wmul@multiplier
  7307  0DD1  0832               	movf	Map@inMin+1,w
  7308  0DD2  3B30               	subwfb	Map@x+1,w
  7309  0DD3  00A1               	movwf	___wmul@multiplier+1
  7310  0DD4  0835               	movf	Map@outMin,w
  7311  0DD5  0237               	subwf	Map@outMax,w
  7312  0DD6  00A2               	movwf	___wmul@multiplicand
  7313  0DD7  0836               	movf	Map@outMin+1,w
  7314  0DD8  3B38               	subwfb	Map@outMax+1,w
  7315  0DD9  00A3               	movwf	___wmul@multiplicand+1
  7316  0DDA  318D  25A7  318D   	fcall	___wmul
  7317  0DDD  0020               	movlb	0	; select bank0
  7318  0DDE  0821               	movf	?___wmul+1,w
  7319  0DDF  00A9               	movwf	___awdiv@dividend+1
  7320  0DE0  0820               	movf	?___wmul,w
  7321  0DE1  00A8               	movwf	___awdiv@dividend
  7322  0DE2  318E  26AD  318D   	fcall	___awdiv
  7323  0DE5  0020               	movlb	0	; select bank0
  7324  0DE6  0826               	movf	?___awdiv,w
  7325  0DE7  0735               	addwf	Map@outMin,w
  7326  0DE8                     l323:	
  7327  0DE8  0008               	return
  7328  0DE9                     __end_of_Map:	
  7329                           
  7330                           	psect	text11
  7331  0DA7                     __ptext11:	
  7332 ;; *************** function ___wmul *****************
  7333 ;; Defined at:
  7334 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  7335 ;; Parameters:    Size  Location     Type
  7336 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7337 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7338 ;; Auto vars:     Size  Location     Type
  7339 ;;  product         2    4[BANK0 ] unsigned int 
  7340 ;; Return value:  Size  Location     Type
  7341 ;;                  2    0[BANK0 ] unsigned int 
  7342 ;; Registers used:
  7343 ;;		wreg, status,2, status,0
  7344 ;; Tracked objects:
  7345 ;;		On entry : 0/0
  7346 ;;		On exit  : 0/0
  7347 ;;		Unchanged: 0/0
  7348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7349 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7350 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7352 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7353 ;;Total ram usage:        6 bytes
  7354 ;; Hardware stack levels used:    1
  7355 ;; Hardware stack levels required when called:    3
  7356 ;; This function calls:
  7357 ;;		Nothing
  7358 ;; This function is called by:
  7359 ;;		_Map
  7360 ;; This function uses a non-reentrant model
  7361 ;;
  7362                           
  7363                           
  7364                           ;psect for function ___wmul
  7365  0DA7                     ___wmul:	
  7366  0DA7                     l2523:	
  7367                           ;incstack = 0
  7368                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7369                           
  7370  0DA7  0020               	movlb	0	; select bank0
  7371  0DA8  01A4               	clrf	___wmul@product
  7372  0DA9  01A5               	clrf	___wmul@product+1
  7373  0DAA                     l2525:	
  7374  0DAA  1C20               	btfss	___wmul@multiplier,0
  7375  0DAB  2DAD               	goto	u2051
  7376  0DAC  2DAE               	goto	u2050
  7377  0DAD                     u2051:	
  7378  0DAD  2DB2               	goto	l657
  7379  0DAE                     u2050:	
  7380  0DAE                     l2527:	
  7381  0DAE  0822               	movf	___wmul@multiplicand,w
  7382  0DAF  07A4               	addwf	___wmul@product,f
  7383  0DB0  0823               	movf	___wmul@multiplicand+1,w
  7384  0DB1  3DA5               	addwfc	___wmul@product+1,f
  7385  0DB2                     l657:	
  7386  0DB2  3001               	movlw	1
  7387  0DB3                     u2065:	
  7388  0DB3  35A2               	lslf	___wmul@multiplicand,f
  7389  0DB4  0DA3               	rlf	___wmul@multiplicand+1,f
  7390  0DB5  0B89               	decfsz	9,f
  7391  0DB6  2DB3               	goto	u2065
  7392  0DB7                     l2529:	
  7393  0DB7  3001               	movlw	1
  7394  0DB8                     u2075:	
  7395  0DB8  36A1               	lsrf	___wmul@multiplier+1,f
  7396  0DB9  0CA0               	rrf	___wmul@multiplier,f
  7397  0DBA  0B89               	decfsz	9,f
  7398  0DBB  2DB8               	goto	u2075
  7399  0DBC                     l2531:	
  7400  0DBC  0820               	movf	___wmul@multiplier,w
  7401  0DBD  0421               	iorwf	___wmul@multiplier+1,w
  7402  0DBE  1D03               	btfss	3,2
  7403  0DBF  2DC1               	goto	u2081
  7404  0DC0  2DC2               	goto	u2080
  7405  0DC1                     u2081:	
  7406  0DC1  2DAA               	goto	l2525
  7407  0DC2                     u2080:	
  7408  0DC2                     l2533:	
  7409  0DC2  0825               	movf	___wmul@product+1,w
  7410  0DC3  00A1               	movwf	?___wmul+1
  7411  0DC4  0824               	movf	___wmul@product,w
  7412  0DC5  00A0               	movwf	?___wmul
  7413  0DC6                     l659:	
  7414  0DC6  0008               	return
  7415  0DC7                     __end_of___wmul:	
  7416                           
  7417                           	psect	text12
  7418  0EAD                     __ptext12:	
  7419 ;; *************** function ___awdiv *****************
  7420 ;; Defined at:
  7421 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  7422 ;; Parameters:    Size  Location     Type
  7423 ;;  divisor         2    6[BANK0 ] int 
  7424 ;;  dividend        2    8[BANK0 ] int 
  7425 ;; Auto vars:     Size  Location     Type
  7426 ;;  quotient        2   13[BANK0 ] int 
  7427 ;;  sign            1   12[BANK0 ] unsigned char 
  7428 ;;  counter         1   11[BANK0 ] unsigned char 
  7429 ;; Return value:  Size  Location     Type
  7430 ;;                  2    6[BANK0 ] int 
  7431 ;; Registers used:
  7432 ;;		wreg, status,2, status,0
  7433 ;; Tracked objects:
  7434 ;;		On entry : 0/0
  7435 ;;		On exit  : 0/0
  7436 ;;		Unchanged: 0/0
  7437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7438 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7439 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7440 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7441 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7442 ;;Total ram usage:        9 bytes
  7443 ;; Hardware stack levels used:    1
  7444 ;; Hardware stack levels required when called:    3
  7445 ;; This function calls:
  7446 ;;		Nothing
  7447 ;; This function is called by:
  7448 ;;		_Map
  7449 ;; This function uses a non-reentrant model
  7450 ;;
  7451                           
  7452                           
  7453                           ;psect for function ___awdiv
  7454  0EAD                     ___awdiv:	
  7455  0EAD                     l2537:	
  7456                           ;incstack = 0
  7457                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7458                           
  7459  0EAD  0020               	movlb	0	; select bank0
  7460  0EAE  01AC               	clrf	___awdiv@sign
  7461  0EAF                     l2539:	
  7462  0EAF  1FA7               	btfss	___awdiv@divisor+1,7
  7463  0EB0  2EB2               	goto	u2091
  7464  0EB1  2EB3               	goto	u2090
  7465  0EB2                     u2091:	
  7466  0EB2  2EBA               	goto	l2545
  7467  0EB3                     u2090:	
  7468  0EB3                     l2541:	
  7469  0EB3  09A6               	comf	___awdiv@divisor,f
  7470  0EB4  09A7               	comf	___awdiv@divisor+1,f
  7471  0EB5  0AA6               	incf	___awdiv@divisor,f
  7472  0EB6  1903               	skipnz
  7473  0EB7  0AA7               	incf	___awdiv@divisor+1,f
  7474  0EB8                     l2543:	
  7475  0EB8  01AC               	clrf	___awdiv@sign
  7476  0EB9  0AAC               	incf	___awdiv@sign,f
  7477  0EBA                     l2545:	
  7478  0EBA  1FA9               	btfss	___awdiv@dividend+1,7
  7479  0EBB  2EBD               	goto	u2101
  7480  0EBC  2EBE               	goto	u2100
  7481  0EBD                     u2101:	
  7482  0EBD  2EC7               	goto	l2551
  7483  0EBE                     u2100:	
  7484  0EBE                     l2547:	
  7485  0EBE  09A8               	comf	___awdiv@dividend,f
  7486  0EBF  09A9               	comf	___awdiv@dividend+1,f
  7487  0EC0  0AA8               	incf	___awdiv@dividend,f
  7488  0EC1  1903               	skipnz
  7489  0EC2  0AA9               	incf	___awdiv@dividend+1,f
  7490  0EC3                     l2549:	
  7491  0EC3  3001               	movlw	1
  7492  0EC4  00AA               	movwf	??___awdiv
  7493  0EC5  082A               	movf	??___awdiv,w
  7494  0EC6  06AC               	xorwf	___awdiv@sign,f
  7495  0EC7                     l2551:	
  7496  0EC7  01AD               	clrf	___awdiv@quotient
  7497  0EC8  01AE               	clrf	___awdiv@quotient+1
  7498  0EC9                     l2553:	
  7499  0EC9  0826               	movf	___awdiv@divisor,w
  7500  0ECA  0427               	iorwf	___awdiv@divisor+1,w
  7501  0ECB  1903               	btfsc	3,2
  7502  0ECC  2ECE               	goto	u2111
  7503  0ECD  2ECF               	goto	u2110
  7504  0ECE                     u2111:	
  7505  0ECE  2EFE               	goto	l2573
  7506  0ECF                     u2110:	
  7507  0ECF                     l2555:	
  7508  0ECF  01AB               	clrf	___awdiv@counter
  7509  0ED0  0AAB               	incf	___awdiv@counter,f
  7510  0ED1  2EDB               	goto	l2561
  7511  0ED2                     l2557:	
  7512  0ED2  3001               	movlw	1
  7513  0ED3                     u2125:	
  7514  0ED3  35A6               	lslf	___awdiv@divisor,f
  7515  0ED4  0DA7               	rlf	___awdiv@divisor+1,f
  7516  0ED5  0B89               	decfsz	9,f
  7517  0ED6  2ED3               	goto	u2125
  7518  0ED7                     l2559:	
  7519  0ED7  3001               	movlw	1
  7520  0ED8  00AA               	movwf	??___awdiv
  7521  0ED9  082A               	movf	??___awdiv,w
  7522  0EDA  07AB               	addwf	___awdiv@counter,f
  7523  0EDB                     l2561:	
  7524  0EDB  1FA7               	btfss	___awdiv@divisor+1,7
  7525  0EDC  2EDE               	goto	u2131
  7526  0EDD  2EDF               	goto	u2130
  7527  0EDE                     u2131:	
  7528  0EDE  2ED2               	goto	l2557
  7529  0EDF                     u2130:	
  7530  0EDF                     l2563:	
  7531  0EDF  3001               	movlw	1
  7532  0EE0                     u2145:	
  7533  0EE0  35AD               	lslf	___awdiv@quotient,f
  7534  0EE1  0DAE               	rlf	___awdiv@quotient+1,f
  7535  0EE2  0B89               	decfsz	9,f
  7536  0EE3  2EE0               	goto	u2145
  7537  0EE4  0827               	movf	___awdiv@divisor+1,w
  7538  0EE5  0229               	subwf	___awdiv@dividend+1,w
  7539  0EE6  1D03               	skipz
  7540  0EE7  2EEA               	goto	u2155
  7541  0EE8  0826               	movf	___awdiv@divisor,w
  7542  0EE9  0228               	subwf	___awdiv@dividend,w
  7543  0EEA                     u2155:	
  7544  0EEA  1C03               	skipc
  7545  0EEB  2EED               	goto	u2151
  7546  0EEC  2EEE               	goto	u2150
  7547  0EED                     u2151:	
  7548  0EED  2EF3               	goto	l2569
  7549  0EEE                     u2150:	
  7550  0EEE                     l2565:	
  7551  0EEE  0826               	movf	___awdiv@divisor,w
  7552  0EEF  02A8               	subwf	___awdiv@dividend,f
  7553  0EF0  0827               	movf	___awdiv@divisor+1,w
  7554  0EF1  3BA9               	subwfb	___awdiv@dividend+1,f
  7555  0EF2                     l2567:	
  7556  0EF2  142D               	bsf	___awdiv@quotient,0
  7557  0EF3                     l2569:	
  7558  0EF3  3001               	movlw	1
  7559  0EF4                     u2165:	
  7560  0EF4  36A7               	lsrf	___awdiv@divisor+1,f
  7561  0EF5  0CA6               	rrf	___awdiv@divisor,f
  7562  0EF6  0B89               	decfsz	9,f
  7563  0EF7  2EF4               	goto	u2165
  7564  0EF8                     l2571:	
  7565  0EF8  3001               	movlw	1
  7566  0EF9  02AB               	subwf	___awdiv@counter,f
  7567  0EFA  1D03               	btfss	3,2
  7568  0EFB  2EFD               	goto	u2171
  7569  0EFC  2EFE               	goto	u2170
  7570  0EFD                     u2171:	
  7571  0EFD  2EDF               	goto	l2563
  7572  0EFE                     u2170:	
  7573  0EFE                     l2573:	
  7574  0EFE  082C               	movf	___awdiv@sign,w
  7575  0EFF  1903               	btfsc	3,2
  7576  0F00  2F02               	goto	u2181
  7577  0F01  2F03               	goto	u2180
  7578  0F02                     u2181:	
  7579  0F02  2F08               	goto	l2577
  7580  0F03                     u2180:	
  7581  0F03                     l2575:	
  7582  0F03  09AD               	comf	___awdiv@quotient,f
  7583  0F04  09AE               	comf	___awdiv@quotient+1,f
  7584  0F05  0AAD               	incf	___awdiv@quotient,f
  7585  0F06  1903               	skipnz
  7586  0F07  0AAE               	incf	___awdiv@quotient+1,f
  7587  0F08                     l2577:	
  7588  0F08  082E               	movf	___awdiv@quotient+1,w
  7589  0F09  00A7               	movwf	?___awdiv+1
  7590  0F0A  082D               	movf	___awdiv@quotient,w
  7591  0F0B  00A6               	movwf	?___awdiv
  7592  0F0C                     l810:	
  7593  0F0C  0008               	return
  7594  0F0D                     __end_of___awdiv:	
  7595                           
  7596                           	psect	text13
  7597  07D6                     __ptext13:	
  7598 ;; *************** function _eepromWrite *****************
  7599 ;; Defined at:
  7600 ;;		line 8 in file "Nvm.c"
  7601 ;; Parameters:    Size  Location     Type
  7602 ;;  address         1    wreg     unsigned char 
  7603 ;;  data            1    0[BANK0 ] unsigned char 
  7604 ;; Auto vars:     Size  Location     Type
  7605 ;;  address         1    1[BANK0 ] unsigned char 
  7606 ;;  interruptSta    1    2[BANK0 ] unsigned char 
  7607 ;; Return value:  Size  Location     Type
  7608 ;;                  1    wreg      void 
  7609 ;; Registers used:
  7610 ;;		wreg, status,2, status,0, pclath, cstack
  7611 ;; Tracked objects:
  7612 ;;		On entry : 0/0
  7613 ;;		On exit  : 0/0
  7614 ;;		Unchanged: 0/0
  7615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7616 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7617 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7619 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7620 ;;Total ram usage:        3 bytes
  7621 ;; Hardware stack levels used:    1
  7622 ;; Hardware stack levels required when called:    4
  7623 ;; This function calls:
  7624 ;;		_nvmUnlock
  7625 ;; This function is called by:
  7626 ;;		_configureController
  7627 ;; This function uses a non-reentrant model
  7628 ;;
  7629                           
  7630                           
  7631                           ;psect for function _eepromWrite
  7632  07D6                     _eepromWrite:	
  7633                           
  7634                           ;incstack = 0
  7635                           ; Regs used in _eepromWrite: [wreg+status,2+status,0+pclath+cstack]
  7636                           ;eepromWrite@address stored from wreg
  7637  07D6  0020               	movlb	0	; select bank0
  7638  07D7  00A1               	movwf	eepromWrite@address
  7639  07D8                     l2751:	
  7640                           
  7641                           ;Nvm.c: 10: unsigned char interruptStatus = INTCONbits.GIE;
  7642  07D8  3000               	movlw	0
  7643  07D9  1B8B               	btfsc	11,7	;volatile
  7644  07DA  3001               	movlw	1
  7645  07DB  00A2               	movwf	eepromWrite@interruptStatus
  7646  07DC                     l2753:	
  7647                           
  7648                           ;Nvm.c: 12: INTCONbits.GIE = 0;
  7649  07DC  138B               	bcf	11,7	;volatile
  7650  07DD                     l2755:	
  7651                           
  7652                           ;Nvm.c: 14: NVMCON1bits.NVMREGS = 1;
  7653  07DD  0030               	movlb	16	; select bank16
  7654  07DE  171E               	bsf	30,6	;volsfr
  7655  07DF                     l2757:	
  7656                           
  7657                           ;Nvm.c: 15: NVMCON1bits.WREN = 1;
  7658  07DF  151E               	bsf	30,2	;volsfr
  7659  07E0                     l2759:	
  7660                           
  7661                           ;Nvm.c: 17: NVMADRH = 0xF0;
  7662  07E0  30F0               	movlw	240
  7663  07E1  009B               	movwf	27	;volatile
  7664  07E2                     l2761:	
  7665                           
  7666                           ;Nvm.c: 18: NVMADRL = address;
  7667  07E2  0020               	movlb	0	; select bank0
  7668  07E3  0821               	movf	eepromWrite@address,w
  7669  07E4  0030               	movlb	16	; select bank16
  7670  07E5  009A               	movwf	26	;volatile
  7671  07E6                     l2763:	
  7672                           
  7673                           ;Nvm.c: 20: NVMDATL = data;
  7674  07E6  0020               	movlb	0	; select bank0
  7675  07E7  0820               	movf	eepromWrite@data,w
  7676  07E8  0030               	movlb	16	; select bank16
  7677  07E9  009C               	movwf	28	;volatile
  7678  07EA                     l2765:	
  7679                           
  7680                           ;Nvm.c: 22: nvmUnlock();
  7681  07EA  318D  251C  3187   	fcall	_nvmUnlock
  7682  07ED                     l448:	
  7683                           ;Nvm.c: 24: while (NVMCON1bits.WR);
  7684                           
  7685  07ED  0030               	movlb	16	; select bank16
  7686  07EE  189E               	btfsc	30,1	;volsfr
  7687  07EF  2FF1               	goto	u2541
  7688  07F0  2FF2               	goto	u2540
  7689  07F1                     u2541:	
  7690  07F1  2FED               	goto	l448
  7691  07F2                     u2540:	
  7692  07F2                     l450:	
  7693                           
  7694                           ;Nvm.c: 26: NVMCON1bits.WREN = 0;
  7695  07F2  111E               	bcf	30,2	;volsfr
  7696  07F3                     l2767:	
  7697                           
  7698                           ;Nvm.c: 28: if (interruptStatus) INTCONbits.GIE = 1;
  7699  07F3  0020               	movlb	0	; select bank0
  7700  07F4  0822               	movf	eepromWrite@interruptStatus,w
  7701  07F5  1903               	btfsc	3,2
  7702  07F6  2FF8               	goto	u2551
  7703  07F7  2FF9               	goto	u2550
  7704  07F8                     u2551:	
  7705  07F8  2FFA               	goto	l452
  7706  07F9                     u2550:	
  7707  07F9                     l2769:	
  7708  07F9  178B               	bsf	11,7	;volatile
  7709  07FA                     l452:	
  7710  07FA  0008               	return
  7711  07FB                     __end_of_eepromWrite:	
  7712                           
  7713                           	psect	text14
  7714  0D1C                     __ptext14:	
  7715 ;; *************** function _nvmUnlock *****************
  7716 ;; Defined at:
  7717 ;;		line 45 in file "Nvm.c"
  7718 ;; Parameters:    Size  Location     Type
  7719 ;;		None
  7720 ;; Auto vars:     Size  Location     Type
  7721 ;;		None
  7722 ;; Return value:  Size  Location     Type
  7723 ;;                  1    wreg      void 
  7724 ;; Registers used:
  7725 ;;		wreg
  7726 ;; Tracked objects:
  7727 ;;		On entry : 0/0
  7728 ;;		On exit  : 0/0
  7729 ;;		Unchanged: 0/0
  7730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7735 ;;Total ram usage:        0 bytes
  7736 ;; Hardware stack levels used:    1
  7737 ;; Hardware stack levels required when called:    3
  7738 ;; This function calls:
  7739 ;;		Nothing
  7740 ;; This function is called by:
  7741 ;;		_eepromWrite
  7742 ;; This function uses a non-reentrant model
  7743 ;;
  7744                           
  7745                           
  7746                           ;psect for function _nvmUnlock
  7747  0D1C                     _nvmUnlock:	
  7748  0D1C                     l2593:	
  7749                           ;incstack = 0
  7750                           ; Regs used in _nvmUnlock: [wreg]
  7751                           
  7752                           
  7753                           ;Nvm.c: 47: NVMCON2 = 0x55;
  7754  0D1C  3055               	movlw	85
  7755  0D1D  0030               	movlb	16	; select bank16
  7756  0D1E  009F               	movwf	31	;volsfr
  7757                           
  7758                           ;Nvm.c: 48: NVMCON2 = 0xAA;
  7759  0D1F  30AA               	movlw	170
  7760  0D20  009F               	movwf	31	;volsfr
  7761  0D21                     l2595:	
  7762                           
  7763                           ;Nvm.c: 49: NVMCON1bits.WR = 1;
  7764  0D21  149E               	bsf	30,1	;volsfr
  7765  0D22                     l458:	
  7766  0D22  0008               	return
  7767  0D23                     __end_of_nvmUnlock:	
  7768                           
  7769                           	psect	text15
  7770  0D2B                     __ptext15:	
  7771 ;; *************** function _adcInit *****************
  7772 ;; Defined at:
  7773 ;;		line 21 in file "PicConfig.c"
  7774 ;; Parameters:    Size  Location     Type
  7775 ;;		None
  7776 ;; Auto vars:     Size  Location     Type
  7777 ;;		None
  7778 ;; Return value:  Size  Location     Type
  7779 ;;                  1    wreg      void 
  7780 ;; Registers used:
  7781 ;;		wreg, status,2
  7782 ;; Tracked objects:
  7783 ;;		On entry : 0/0
  7784 ;;		On exit  : 0/0
  7785 ;;		Unchanged: 0/0
  7786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7791 ;;Total ram usage:        0 bytes
  7792 ;; Hardware stack levels used:    1
  7793 ;; Hardware stack levels required when called:    3
  7794 ;; This function calls:
  7795 ;;		Nothing
  7796 ;; This function is called by:
  7797 ;;		_main
  7798 ;; This function uses a non-reentrant model
  7799 ;;
  7800                           
  7801                           
  7802                           ;psect for function _adcInit
  7803  0D2B                     _adcInit:	
  7804  0D2B                     l2819:	
  7805                           ;incstack = 0
  7806                           ; Regs used in _adcInit: [wreg+status,2]
  7807                           
  7808                           
  7809                           ;PicConfig.c: 22: ADCON0 = 0x04;
  7810  0D2B  3004               	movlw	4
  7811  0D2C  0021               	movlb	1	; select bank1
  7812  0D2D  0093               	movwf	19	;volatile
  7813  0D2E                     l2821:	
  7814                           
  7815                           ;PicConfig.c: 23: ADCON1 = 0;
  7816  0D2E  0194               	clrf	20	;volatile
  7817  0D2F                     l2823:	
  7818                           
  7819                           ;PicConfig.c: 24: ADCON2 = 0;
  7820  0D2F  0195               	clrf	21	;volatile
  7821  0D30                     l2825:	
  7822                           
  7823                           ;PicConfig.c: 25: ADREF = 0;
  7824  0D30  019A               	clrf	26	;volatile
  7825  0D31                     l2827:	
  7826                           
  7827                           ;PicConfig.c: 26: ADCLK = 0x3F;
  7828  0D31  303F               	movlw	63
  7829  0D32  0098               	movwf	24	;volatile
  7830  0D33                     l2829:	
  7831                           
  7832                           ;PicConfig.c: 27: ADCON0bits.ADON = 1;
  7833  0D33  1793               	bsf	19,7	;volatile
  7834  0D34                     l403:	
  7835  0D34  0008               	return
  7836  0D35                     __end_of_adcInit:	
  7837                           
  7838                           	psect	text16
  7839  0E14                     __ptext16:	
  7840 ;; *************** function _IO_MAPPING *****************
  7841 ;; Defined at:
  7842 ;;		line 88 in file "MAPPING.c"
  7843 ;; Parameters:    Size  Location     Type
  7844 ;;		None
  7845 ;; Auto vars:     Size  Location     Type
  7846 ;;		None
  7847 ;; Return value:  Size  Location     Type
  7848 ;;                  1    wreg      void 
  7849 ;; Registers used:
  7850 ;;		wreg, status,2, status,0, pclath, cstack
  7851 ;; Tracked objects:
  7852 ;;		On entry : 0/0
  7853 ;;		On exit  : 0/0
  7854 ;;		Unchanged: 0/0
  7855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7860 ;;Total ram usage:        0 bytes
  7861 ;; Hardware stack levels used:    1
  7862 ;; Hardware stack levels required when called:    4
  7863 ;; This function calls:
  7864 ;;		_ppsLock
  7865 ;;		_ppsUnlock
  7866 ;; This function is called by:
  7867 ;;		_main
  7868 ;; This function uses a non-reentrant model
  7869 ;;
  7870                           
  7871                           
  7872                           ;psect for function _IO_MAPPING
  7873  0E14                     _IO_MAPPING:	
  7874  0E14                     l2793:	
  7875                           ;incstack = 0
  7876                           ; Regs used in _IO_MAPPING: [wreg+status,2+status,0+pclath+cstack]
  7877                           
  7878                           
  7879                           ;MAPPING.c: 90: TRISA = 0xFF;
  7880  0E14  30FF               	movlw	255
  7881  0E15  0020               	movlb	0	; select bank0
  7882  0E16  0091               	movwf	17	;volatile
  7883                           
  7884                           ;MAPPING.c: 91: TRISB = 0xFF;
  7885  0E17  30FF               	movlw	255
  7886  0E18  0092               	movwf	18	;volatile
  7887                           
  7888                           ;MAPPING.c: 92: TRISC = 0xFF;
  7889  0E19  30FF               	movlw	255
  7890  0E1A  0093               	movwf	19	;volatile
  7891                           
  7892                           ;MAPPING.c: 93: TRISD = 0xFF;
  7893  0E1B  30FF               	movlw	255
  7894  0E1C  0094               	movwf	20	;volatile
  7895                           
  7896                           ;MAPPING.c: 94: TRISE = 0xFF;
  7897  0E1D  30FF               	movlw	255
  7898  0E1E  0095               	movwf	21	;volatile
  7899  0E1F                     l2795:	
  7900                           
  7901                           ;MAPPING.c: 97: ANSELA = 0;
  7902  0E1F  003E               	movlb	30	; select bank30
  7903  0E20  01B8               	clrf	56	;volatile
  7904  0E21                     l2797:	
  7905                           
  7906                           ;MAPPING.c: 98: ANSELB = 0;
  7907  0E21  01C3               	clrf	67	;volatile
  7908                           
  7909                           ;MAPPING.c: 99: ANSELC = 0xC3;
  7910  0E22  30C3               	movlw	195
  7911  0E23  00CE               	movwf	78	;volatile
  7912  0E24                     l2799:	
  7913                           
  7914                           ;MAPPING.c: 100: ANSELD = 0;
  7915  0E24  01D9               	clrf	89	;volatile
  7916  0E25                     l2801:	
  7917                           
  7918                           ;MAPPING.c: 101: ANSELE = 0;
  7919  0E25  01E4               	clrf	100	;volatile
  7920                           
  7921                           ;MAPPING.c: 104: WPUA = 0xCF;
  7922  0E26  30CF               	movlw	207
  7923  0E27  00B9               	movwf	57	;volatile
  7924                           
  7925                           ;MAPPING.c: 105: WPUB = 0xFF;
  7926  0E28  30FF               	movlw	255
  7927  0E29  00C4               	movwf	68	;volatile
  7928                           
  7929                           ;MAPPING.c: 106: WPUC = 0x04;
  7930  0E2A  3004               	movlw	4
  7931  0E2B  00CF               	movwf	79	;volatile
  7932                           
  7933                           ;MAPPING.c: 107: WPUD = 0x01;
  7934  0E2C  3001               	movlw	1
  7935  0E2D  00DA               	movwf	90	;volatile
  7936  0E2E                     l2803:	
  7937                           
  7938                           ;MAPPING.c: 108: WPUE = 0;
  7939  0E2E  01E5               	clrf	101	;volatile
  7940  0E2F                     l2805:	
  7941                           
  7942                           ;MAPPING.c: 110: TRISDbits.TRISD5 = 0;
  7943  0E2F  0020               	movlb	0	; select bank0
  7944  0E30  1294               	bcf	20,5	;volatile
  7945  0E31                     l2807:	
  7946                           
  7947                           ;MAPPING.c: 111: WPUDbits.WPUD4 = 1;
  7948  0E31  003E               	movlb	30	; select bank30
  7949  0E32  165A               	bsf	90,4	;volatile
  7950  0E33                     l2809:	
  7951                           
  7952                           ;MAPPING.c: 113: TRISCbits.TRISC5 = 0;
  7953  0E33  0020               	movlb	0	; select bank0
  7954  0E34  1293               	bcf	19,5	;volatile
  7955  0E35                     l2811:	
  7956                           
  7957                           ;MAPPING.c: 114: TRISAbits.TRISA4 = 0;
  7958  0E35  1211               	bcf	17,4	;volatile
  7959  0E36                     l2813:	
  7960                           
  7961                           ;MAPPING.c: 115: ppsUnlock();
  7962  0E36  318D  2515  318E   	fcall	_ppsUnlock
  7963  0E39                     l2815:	
  7964                           
  7965                           ;MAPPING.c: 116: RC5PPS = 0x15;
  7966  0E39  3015               	movlw	21
  7967  0E3A  003E               	movlb	30	; select bank30
  7968  0E3B  00A5               	movwf	37	;volatile
  7969  0E3C                     l2817:	
  7970                           
  7971                           ;MAPPING.c: 117: ppsLock();
  7972  0E3C  318D  2523  318E   	fcall	_ppsLock
  7973  0E3F                     l505:	
  7974  0E3F  0008               	return
  7975  0E40                     __end_of_IO_MAPPING:	
  7976                           
  7977                           	psect	text17
  7978  0D15                     __ptext17:	
  7979 ;; *************** function _ppsUnlock *****************
  7980 ;; Defined at:
  7981 ;;		line 9 in file "PicConfig.c"
  7982 ;; Parameters:    Size  Location     Type
  7983 ;;		None
  7984 ;; Auto vars:     Size  Location     Type
  7985 ;;		None
  7986 ;; Return value:  Size  Location     Type
  7987 ;;                  1    wreg      void 
  7988 ;; Registers used:
  7989 ;;		wreg, status,2
  7990 ;; Tracked objects:
  7991 ;;		On entry : 0/0
  7992 ;;		On exit  : 0/0
  7993 ;;		Unchanged: 0/0
  7994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7999 ;;Total ram usage:        0 bytes
  8000 ;; Hardware stack levels used:    1
  8001 ;; Hardware stack levels required when called:    3
  8002 ;; This function calls:
  8003 ;;		Nothing
  8004 ;; This function is called by:
  8005 ;;		_IO_MAPPING
  8006 ;; This function uses a non-reentrant model
  8007 ;;
  8008                           
  8009                           
  8010                           ;psect for function _ppsUnlock
  8011  0D15                     _ppsUnlock:	
  8012  0D15                     l2771:	
  8013                           ;incstack = 0
  8014                           ; Regs used in _ppsUnlock: [wreg+status,2]
  8015                           
  8016                           
  8017                           ;PicConfig.c: 10: PPSLOCK = 0x55;
  8018  0D15  3055               	movlw	85
  8019  0D16  003D               	movlb	29	; select bank29
  8020  0D17  008F               	movwf	15	;volsfr
  8021                           
  8022                           ;PicConfig.c: 11: PPSLOCK = 0xAA;
  8023  0D18  30AA               	movlw	170
  8024  0D19  008F               	movwf	15	;volsfr
  8025  0D1A                     l2773:	
  8026                           
  8027                           ;PicConfig.c: 12: PPSLOCK = 0;
  8028  0D1A  018F               	clrf	15	;volsfr
  8029  0D1B                     l397:	
  8030  0D1B  0008               	return
  8031  0D1C                     __end_of_ppsUnlock:	
  8032                           
  8033                           	psect	text18
  8034  0D23                     __ptext18:	
  8035 ;; *************** function _ppsLock *****************
  8036 ;; Defined at:
  8037 ;;		line 15 in file "PicConfig.c"
  8038 ;; Parameters:    Size  Location     Type
  8039 ;;		None
  8040 ;; Auto vars:     Size  Location     Type
  8041 ;;		None
  8042 ;; Return value:  Size  Location     Type
  8043 ;;                  1    wreg      void 
  8044 ;; Registers used:
  8045 ;;		wreg
  8046 ;; Tracked objects:
  8047 ;;		On entry : 0/0
  8048 ;;		On exit  : 0/0
  8049 ;;		Unchanged: 0/0
  8050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8055 ;;Total ram usage:        0 bytes
  8056 ;; Hardware stack levels used:    1
  8057 ;; Hardware stack levels required when called:    3
  8058 ;; This function calls:
  8059 ;;		Nothing
  8060 ;; This function is called by:
  8061 ;;		_IO_MAPPING
  8062 ;; This function uses a non-reentrant model
  8063 ;;
  8064                           
  8065                           
  8066                           ;psect for function _ppsLock
  8067  0D23                     _ppsLock:	
  8068  0D23                     l2775:	
  8069                           ;incstack = 0
  8070                           ; Regs used in _ppsLock: [wreg]
  8071                           
  8072                           
  8073                           ;PicConfig.c: 16: PPSLOCK = 0x55;
  8074  0D23  3055               	movlw	85
  8075  0D24  003D               	movlb	29	; select bank29
  8076  0D25  008F               	movwf	15	;volsfr
  8077                           
  8078                           ;PicConfig.c: 17: PPSLOCK = 0xAA;
  8079  0D26  30AA               	movlw	170
  8080  0D27  008F               	movwf	15	;volsfr
  8081                           
  8082                           ;PicConfig.c: 18: PPSLOCK = 1;
  8083  0D28  3001               	movlw	1
  8084  0D29  008F               	movwf	15	;volsfr
  8085  0D2A                     l400:	
  8086  0D2A  0008               	return
  8087  0D2B                     __end_of_ppsLock:	
  8088                           
  8089                           	psect	intentry
  8090  0004                     __pintentry:	
  8091 ;; *************** function _PS2Command *****************
  8092 ;; Defined at:
  8093 ;;		line 61 in file "main.c"
  8094 ;; Parameters:    Size  Location     Type
  8095 ;;		None
  8096 ;; Auto vars:     Size  Location     Type
  8097 ;;  cmd             1    5[COMMON] unsigned char 
  8098 ;; Return value:  Size  Location     Type
  8099 ;;                  1    wreg      void 
  8100 ;; Registers used:
  8101 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8102 ;; Tracked objects:
  8103 ;;		On entry : 0/0
  8104 ;;		On exit  : 0/0
  8105 ;;		Unchanged: 0/0
  8106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8108 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8109 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8110 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8111 ;;Total ram usage:        2 bytes
  8112 ;; Hardware stack levels used:    1
  8113 ;; Hardware stack levels required when called:    2
  8114 ;; This function calls:
  8115 ;;		_pollController
  8116 ;;		_spiRead
  8117 ;;		_spiWrite
  8118 ;;		i1_reversebyte
  8119 ;; This function is called by:
  8120 ;;		Interrupt level 1
  8121 ;; This function uses a non-reentrant model
  8122 ;;
  8123                           
  8124  0004                     _PS2Command:	
  8125                           
  8126                           ;incstack = 0
  8127  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  8128                           
  8129                           ; Regs used in _PS2Command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8130  0005  3180               	pagesel	$
  8131  0006                     i1l2257:	
  8132                           
  8133                           ;main.c: 63: if (SSP1IF) {
  8134  0006  002E               	movlb	14	; select bank14
  8135  0007  1C0F               	btfss	15,0	;volatile
  8136  0008  280A               	goto	u174_21
  8137  0009  280B               	goto	u174_20
  8138  000A                     u174_21:	
  8139  000A  2A22               	goto	i1l183
  8140  000B                     u174_20:	
  8141  000B                     i1l2259:	
  8142                           
  8143                           ;main.c: 64: char cmd = spiRead();
  8144  000B  318D  250F  3180   	fcall	_spiRead
  8145  000E  00F4               	movwf	??_PS2Command
  8146  000F  0874               	movf	??_PS2Command,w
  8147  0010  00F5               	movwf	PS2Command@cmd
  8148                           
  8149                           ;main.c: 66: switch (cmdCounter) {
  8150  0011  29D1               	goto	i1l2437
  8151  0012                     i1l2261:	
  8152                           
  8153                           ;main.c: 70: INIT_PRESSURE_SENSOR_byte3 = cmd;
  8154  0012  0875               	movf	PS2Command@cmd,w
  8155  0013  00F4               	movwf	??_PS2Command
  8156  0014  0874               	movf	??_PS2Command,w
  8157  0015  0020               	movlb	0	; select bank0
  8158  0016  00EB               	movwf	_INIT_PRESSURE_SENSOR_byte3
  8159                           
  8160                           ;main.c: 71: break;
  8161  0017  29DC               	goto	i1l2439
  8162  0018                     i1l2263:	
  8163                           
  8164                           ;main.c: 73: if(MAP_SMALL_MOTOR == 0 && cmd == 0xFF) RD6 = 1;
  8165  0018  0020               	movlb	0	; select bank0
  8166  0019  085C               	movf	_MAP_SMALL_MOTOR,w
  8167  001A  1D03               	btfss	3,2
  8168  001B  281D               	goto	u175_21
  8169  001C  281E               	goto	u175_20
  8170  001D                     u175_21:	
  8171  001D  2825               	goto	i1l125
  8172  001E                     u175_20:	
  8173  001E                     i1l2265:	
  8174  001E  0A75               	incf	PS2Command@cmd,w
  8175  001F  1D03               	btfss	3,2
  8176  0020  2822               	goto	u176_21
  8177  0021  2823               	goto	u176_20
  8178  0022                     u176_21:	
  8179  0022  2825               	goto	i1l125
  8180  0023                     u176_20:	
  8181  0023                     i1l2267:	
  8182  0023  170F               	bsf	15,6	;volatile
  8183  0024  29DC               	goto	i1l2439
  8184  0025                     i1l125:	
  8185                           
  8186                           ;main.c: 74: else RD6 = 0;
  8187  0025  130F               	bcf	15,6	;volatile
  8188  0026  29DC               	goto	i1l2439
  8189  0027                     i1l2269:	
  8190                           
  8191                           ;main.c: 77: if (cmd == 0x80) escapeMode = 1;
  8192  0027  3080               	movlw	128
  8193  0028  0675               	xorwf	PS2Command@cmd,w
  8194  0029  1D03               	btfss	3,2
  8195  002A  282C               	goto	u177_21
  8196  002B  282D               	goto	u177_20
  8197  002C                     u177_21:	
  8198  002C  2830               	goto	i1l2273
  8199  002D                     u177_20:	
  8200  002D                     i1l2271:	
  8201  002D  01F7               	clrf	_escapeMode
  8202  002E  0AF7               	incf	_escapeMode,f
  8203  002F  29DC               	goto	i1l2439
  8204  0030                     i1l2273:	
  8205                           
  8206                           ;main.c: 78: else escapeMode = 0;
  8207  0030  01F7               	clrf	_escapeMode
  8208  0031  29DC               	goto	i1l2439
  8209  0032                     i1l2275:	
  8210                           
  8211                           ;main.c: 81: if (cmd == 0x80) analogMode = 1;
  8212  0032  3080               	movlw	128
  8213  0033  0675               	xorwf	PS2Command@cmd,w
  8214  0034  1D03               	btfss	3,2
  8215  0035  2837               	goto	u178_21
  8216  0036  2838               	goto	u178_20
  8217  0037                     u178_21:	
  8218  0037  283B               	goto	i1l2279
  8219  0038                     u178_20:	
  8220  0038                     i1l2277:	
  8221  0038  01F8               	clrf	_analogMode
  8222  0039  0AF8               	incf	_analogMode,f
  8223  003A  29DC               	goto	i1l2439
  8224  003B                     i1l2279:	
  8225                           
  8226                           ;main.c: 82: else analogMode = 0;
  8227  003B  01F8               	clrf	_analogMode
  8228  003C  29DC               	goto	i1l2439
  8229  003D                     i1l2281:	
  8230                           
  8231                           ;main.c: 85: if (cmd == 0x80) {
  8232  003D  3080               	movlw	128
  8233  003E  0675               	xorwf	PS2Command@cmd,w
  8234  003F  1D03               	btfss	3,2
  8235  0040  2842               	goto	u179_21
  8236  0041  2843               	goto	u179_20
  8237  0042                     u179_21:	
  8238  0042  29DC               	goto	i1l2439
  8239  0043                     u179_20:	
  8240  0043                     i1l2283:	
  8241                           
  8242                           ;main.c: 86: response[2] = 0x00;
  8243  0043  0021               	movlb	1	; select bank1
  8244  0044  01DA               	clrf	(_response^(0+128)+2)
  8245                           
  8246                           ;main.c: 87: response[3] = 0x00;
  8247  0045  01DB               	clrf	(_response^(0+128)+3)
  8248  0046                     i1l2285:	
  8249                           
  8250                           ;main.c: 88: response[4] = 0x80;
  8251  0046  3080               	movlw	128
  8252  0047  00F4               	movwf	??_PS2Command
  8253  0048  0874               	movf	??_PS2Command,w
  8254  0049  00DC               	movwf	(_response^(0+128)+4)
  8255  004A                     i1l2287:	
  8256                           
  8257                           ;main.c: 89: response[5] = 0x80;
  8258  004A  3080               	movlw	128
  8259  004B  00F4               	movwf	??_PS2Command
  8260  004C  0874               	movf	??_PS2Command,w
  8261  004D  00DD               	movwf	(_response^(0+128)+5)
  8262  004E                     i1l2289:	
  8263                           
  8264                           ;main.c: 90: response[6] = 0x80;
  8265  004E  3080               	movlw	128
  8266  004F  00F4               	movwf	??_PS2Command
  8267  0050  0874               	movf	??_PS2Command,w
  8268  0051  00DE               	movwf	(_response^(0+128)+6)
  8269  0052                     i1l2291:	
  8270                           
  8271                           ;main.c: 91: response[7] = 0x28;
  8272  0052  3028               	movlw	40
  8273  0053  00F4               	movwf	??_PS2Command
  8274  0054  0874               	movf	??_PS2Command,w
  8275  0055  00DF               	movwf	(_response^(0+128)+7)
  8276  0056  29DC               	goto	i1l2439
  8277  0057                     i1l2293:	
  8278                           
  8279                           ;main.c: 95: if (cmd == 0x80) {
  8280  0057  3080               	movlw	128
  8281  0058  0675               	xorwf	PS2Command@cmd,w
  8282  0059  1D03               	btfss	3,2
  8283  005A  285C               	goto	u180_21
  8284  005B  285D               	goto	u180_20
  8285  005C                     u180_21:	
  8286  005C  29DC               	goto	i1l2439
  8287  005D                     u180_20:	
  8288  005D                     i1l2295:	
  8289                           
  8290                           ;main.c: 96: response[2] = 0x00;
  8291  005D  0021               	movlb	1	; select bank1
  8292  005E  01DA               	clrf	(_response^(0+128)+2)
  8293                           
  8294                           ;main.c: 97: response[3] = 0x00;
  8295  005F  01DB               	clrf	(_response^(0+128)+3)
  8296                           
  8297                           ;main.c: 98: response[4] = 0x00;
  8298  0060  01DC               	clrf	(_response^(0+128)+4)
  8299  0061                     i1l2297:	
  8300                           
  8301                           ;main.c: 99: response[5] = 0xE0;
  8302  0061  30E0               	movlw	224
  8303  0062  00F4               	movwf	??_PS2Command
  8304  0063  0874               	movf	??_PS2Command,w
  8305  0064  00DD               	movwf	(_response^(0+128)+5)
  8306  0065                     i1l2299:	
  8307                           
  8308                           ;main.c: 100: response[6] = 0x00;
  8309  0065  01DE               	clrf	(_response^(0+128)+6)
  8310  0066                     i1l2301:	
  8311                           
  8312                           ;main.c: 101: response[7] = 0x00;
  8313  0066  01DF               	clrf	(_response^(0+128)+7)
  8314  0067  29DC               	goto	i1l2439
  8315  0068                     i1l2303:	
  8316                           
  8317                           ;main.c: 106: CONTROL_RESPONSE_byte3 = cmd;
  8318  0068  0875               	movf	PS2Command@cmd,w
  8319  0069  00F4               	movwf	??_PS2Command
  8320  006A  0874               	movf	??_PS2Command,w
  8321  006B  0020               	movlb	0	; select bank0
  8322  006C  00E9               	movwf	_CONTROL_RESPONSE_byte3
  8323                           
  8324                           ;main.c: 107: break;
  8325  006D  29DC               	goto	i1l2439
  8326  006E                     i1l2305:	
  8327                           
  8328                           ;main.c: 109: MAP_SMALL_MOTOR = cmd;
  8329  006E  0875               	movf	PS2Command@cmd,w
  8330  006F  00F4               	movwf	??_PS2Command
  8331  0070  0874               	movf	??_PS2Command,w
  8332  0071  0020               	movlb	0	; select bank0
  8333  0072  00DC               	movwf	_MAP_SMALL_MOTOR
  8334                           
  8335                           ;main.c: 110: break;
  8336  0073  29DC               	goto	i1l2439
  8337  0074                     i1l2309:	
  8338  0074  0876               	movf	_previousCmd,w
  8339                           
  8340                           ; Switch size 1, requested type "simple"
  8341                           ; Number of cases is 8, Range of values is 2 to 242
  8342                           ; switch strategies available:
  8343                           ; Name         Instructions Cycles
  8344                           ; simple_byte           25    13 (average)
  8345                           ; jumptable            263     9 (fixed)
  8346                           ;	Chosen strategy is simple_byte
  8347  0075  3A02               	xorlw	2	; case 2
  8348  0076  1903               	skipnz
  8349  0077  2812               	goto	i1l2261
  8350  0078  3A20               	xorlw	32	; case 34
  8351  0079  1903               	skipnz
  8352  007A  2832               	goto	i1l2275
  8353  007B  3A10               	xorlw	16	; case 50
  8354  007C  1903               	skipnz
  8355  007D  2857               	goto	i1l2293
  8356  007E  3A70               	xorlw	112	; case 66
  8357  007F  1903               	skipnz
  8358  0080  2818               	goto	i1l2263
  8359  0081  3A20               	xorlw	32	; case 98
  8360  0082  1903               	skipnz
  8361  0083  283D               	goto	i1l2281
  8362  0084  3AD0               	xorlw	208	; case 178
  8363  0085  1903               	skipnz
  8364  0086  286E               	goto	i1l2305
  8365  0087  3A70               	xorlw	112	; case 194
  8366  0088  1903               	skipnz
  8367  0089  2827               	goto	i1l2269
  8368  008A  3A30               	xorlw	48	; case 242
  8369  008B  1903               	skipnz
  8370  008C  2868               	goto	i1l2303
  8371  008D  29DC               	goto	i1l2439
  8372  008E                     i1l2311:	
  8373                           
  8374                           ;main.c: 116: INIT_PRESSURE_SENSOR_byte4 = cmd;
  8375  008E  0875               	movf	PS2Command@cmd,w
  8376  008F  00F4               	movwf	??_PS2Command
  8377  0090  0874               	movf	??_PS2Command,w
  8378  0091  0020               	movlb	0	; select bank0
  8379  0092  00EA               	movwf	_INIT_PRESSURE_SENSOR_byte4
  8380                           
  8381                           ;main.c: 117: break;
  8382  0093  29DC               	goto	i1l2439
  8383  0094                     i1l2313:	
  8384                           
  8385                           ;main.c: 119: if(MAP_LARGE_MOTOR == 0x80 && reversebyte(cmd) >= 0x40) RD7 = 1;
  8386  0094  3080               	movlw	128
  8387  0095  0020               	movlb	0	; select bank0
  8388  0096  065B               	xorwf	_MAP_LARGE_MOTOR,w
  8389  0097  1D03               	btfss	3,2
  8390  0098  289A               	goto	u181_21
  8391  0099  289B               	goto	u181_20
  8392  009A                     u181_21:	
  8393  009A  28A9               	goto	i1l145
  8394  009B                     u181_20:	
  8395  009B                     i1l2315:	
  8396  009B  0875               	movf	PS2Command@cmd,w
  8397  009C  318E  2640  3180   	fcall	i1_reversebyte
  8398  009F  00F4               	movwf	??_PS2Command
  8399  00A0  3040               	movlw	64
  8400  00A1  0274               	subwf	??_PS2Command,w
  8401  00A2  1C03               	skipc
  8402  00A3  28A5               	goto	u182_21
  8403  00A4  28A6               	goto	u182_20
  8404  00A5                     u182_21:	
  8405  00A5  28A9               	goto	i1l145
  8406  00A6                     u182_20:	
  8407  00A6                     i1l2317:	
  8408  00A6  0020               	movlb	0	; select bank0
  8409  00A7  178F               	bsf	15,7	;volatile
  8410  00A8  29DC               	goto	i1l2439
  8411  00A9                     i1l145:	
  8412                           
  8413                           ;main.c: 120: else RD7 = 0;
  8414  00A9  0020               	movlb	0	; select bank0
  8415  00AA  138F               	bcf	15,7	;volatile
  8416  00AB  29DC               	goto	i1l2439
  8417  00AC                     i1l2319:	
  8418                           
  8419                           ;main.c: 123: if(cmd == 0xC0) MODE_LOCK = 1;
  8420  00AC  30C0               	movlw	192
  8421  00AD  0675               	xorwf	PS2Command@cmd,w
  8422  00AE  1D03               	btfss	3,2
  8423  00AF  28B1               	goto	u183_21
  8424  00B0  28B2               	goto	u183_20
  8425  00B1                     u183_21:	
  8426  00B1  28B6               	goto	i1l2323
  8427  00B2                     u183_20:	
  8428  00B2                     i1l2321:	
  8429  00B2  0020               	movlb	0	; select bank0
  8430  00B3  01ED               	clrf	_MODE_LOCK
  8431  00B4  0AED               	incf	_MODE_LOCK,f
  8432  00B5  29DC               	goto	i1l2439
  8433  00B6                     i1l2323:	
  8434                           
  8435                           ;main.c: 124: else MODE_LOCK = 0;
  8436  00B6  0020               	movlb	0	; select bank0
  8437  00B7  01ED               	clrf	_MODE_LOCK
  8438  00B8  29DC               	goto	i1l2439
  8439  00B9                     i1l2325:	
  8440                           
  8441                           ;main.c: 128: CONTROL_RESPONSE_byte4 = cmd;
  8442  00B9  0875               	movf	PS2Command@cmd,w
  8443  00BA  00F4               	movwf	??_PS2Command
  8444  00BB  0874               	movf	??_PS2Command,w
  8445  00BC  0020               	movlb	0	; select bank0
  8446  00BD  00E8               	movwf	_CONTROL_RESPONSE_byte4
  8447                           
  8448                           ;main.c: 129: break;
  8449  00BE  29DC               	goto	i1l2439
  8450  00BF                     i1l2327:	
  8451                           
  8452                           ;main.c: 131: MAP_LARGE_MOTOR = cmd;
  8453  00BF  0875               	movf	PS2Command@cmd,w
  8454  00C0  00F4               	movwf	??_PS2Command
  8455  00C1  0874               	movf	??_PS2Command,w
  8456  00C2  0020               	movlb	0	; select bank0
  8457  00C3  00DB               	movwf	_MAP_LARGE_MOTOR
  8458                           
  8459                           ;main.c: 132: break;
  8460  00C4  29DC               	goto	i1l2439
  8461  00C5                     i1l2331:	
  8462  00C5  0876               	movf	_previousCmd,w
  8463                           
  8464                           ; Switch size 1, requested type "simple"
  8465                           ; Number of cases is 5, Range of values is 2 to 242
  8466                           ; switch strategies available:
  8467                           ; Name         Instructions Cycles
  8468                           ; simple_byte           16     9 (average)
  8469                           ; jumptable            263     9 (fixed)
  8470                           ;	Chosen strategy is simple_byte
  8471  00C6  3A02               	xorlw	2	; case 2
  8472  00C7  1903               	skipnz
  8473  00C8  288E               	goto	i1l2311
  8474  00C9  3A20               	xorlw	32	; case 34
  8475  00CA  1903               	skipnz
  8476  00CB  28AC               	goto	i1l2319
  8477  00CC  3A60               	xorlw	96	; case 66
  8478  00CD  1903               	skipnz
  8479  00CE  2894               	goto	i1l2313
  8480  00CF  3AF0               	xorlw	240	; case 178
  8481  00D0  1903               	skipnz
  8482  00D1  28BF               	goto	i1l2327
  8483  00D2  3A40               	xorlw	64	; case 242
  8484  00D3  1903               	skipnz
  8485  00D4  28B9               	goto	i1l2325
  8486  00D5  29DC               	goto	i1l2439
  8487  00D6                     i1l2333:	
  8488                           
  8489                           ;main.c: 139: CONTROL_RESPONSE_byte5 = cmd;
  8490  00D6  0875               	movf	PS2Command@cmd,w
  8491  00D7  00F4               	movwf	??_PS2Command
  8492  00D8  0874               	movf	??_PS2Command,w
  8493  00D9  0020               	movlb	0	; select bank0
  8494  00DA  00E7               	movwf	_CONTROL_RESPONSE_byte5
  8495                           
  8496                           ;main.c: 140: break;
  8497  00DB  29DC               	goto	i1l2439
  8498  00DC                     i1l2337:	
  8499  00DC  0876               	movf	_previousCmd,w
  8500                           
  8501                           ; Switch size 1, requested type "simple"
  8502                           ; Number of cases is 1, Range of values is 242 to 242
  8503                           ; switch strategies available:
  8504                           ; Name         Instructions Cycles
  8505                           ; simple_byte            4     3 (average)
  8506                           ; direct_byte           11     9 (fixed)
  8507                           ; jumptable            263     9 (fixed)
  8508                           ;	Chosen strategy is simple_byte
  8509  00DD  3AF2               	xorlw	242	; case 242
  8510  00DE  1903               	skipnz
  8511  00DF  28D6               	goto	i1l2333
  8512  00E0  29DC               	goto	i1l2439
  8513  00E1                     i1l2339:	
  8514                           
  8515                           ;main.c: 149: response[2] = 0x00;
  8516  00E1  0021               	movlb	1	; select bank1
  8517  00E2  01DA               	clrf	(_response^(0+128)+2)
  8518                           
  8519                           ;main.c: 150: response[3] = 0x00;
  8520  00E3  01DB               	clrf	(_response^(0+128)+3)
  8521  00E4                     i1l2341:	
  8522                           
  8523                           ;main.c: 151: response[4] = 0x40;
  8524  00E4  3040               	movlw	64
  8525  00E5  00F4               	movwf	??_PS2Command
  8526  00E6  0874               	movf	??_PS2Command,w
  8527  00E7  00DC               	movwf	(_response^(0+128)+4)
  8528  00E8                     i1l2343:	
  8529                           
  8530                           ;main.c: 152: response[5] = 0x00;
  8531  00E8  01DD               	clrf	(_response^(0+128)+5)
  8532  00E9                     i1l2345:	
  8533                           
  8534                           ;main.c: 153: response[6] = 0x00;
  8535  00E9  01DE               	clrf	(_response^(0+128)+6)
  8536  00EA                     i1l2347:	
  8537                           
  8538                           ;main.c: 154: response[7] = 0x5A;
  8539  00EA  305A               	movlw	90
  8540  00EB  00F4               	movwf	??_PS2Command
  8541  00EC  0874               	movf	??_PS2Command,w
  8542  00ED  00DF               	movwf	(_response^(0+128)+7)
  8543  00EE                     i1l2349:	
  8544                           
  8545                           ;main.c: 155: previousCmd = cmd;
  8546  00EE  0875               	movf	PS2Command@cmd,w
  8547  00EF  00F4               	movwf	??_PS2Command
  8548  00F0  0874               	movf	??_PS2Command,w
  8549  00F1  00F6               	movwf	_previousCmd
  8550                           
  8551                           ;main.c: 156: break;
  8552  00F2  29DC               	goto	i1l2439
  8553  00F3                     i1l2351:	
  8554                           
  8555                           ;main.c: 163: if(analogMode == 0) {
  8556  00F3  0878               	movf	_analogMode,w
  8557  00F4  1D03               	btfss	3,2
  8558  00F5  28F7               	goto	u184_21
  8559  00F6  28F8               	goto	u184_20
  8560  00F7                     u184_21:	
  8561  00F7  28FD               	goto	i1l2355
  8562  00F8                     u184_20:	
  8563  00F8                     i1l2353:	
  8564                           
  8565                           ;main.c: 164: response[2] = 0x00;
  8566  00F8  0021               	movlb	1	; select bank1
  8567  00F9  01DA               	clrf	(_response^(0+128)+2)
  8568                           
  8569                           ;main.c: 165: response[3] = 0x00;
  8570  00FA  01DB               	clrf	(_response^(0+128)+3)
  8571                           
  8572                           ;main.c: 166: response[4] = 0x00;
  8573  00FB  01DC               	clrf	(_response^(0+128)+4)
  8574                           
  8575                           ;main.c: 167: response[7] = 0x00;
  8576  00FC  01DF               	clrf	(_response^(0+128)+7)
  8577  00FD                     i1l2355:	
  8578                           
  8579                           ;main.c: 168: };main.c: 169: if(analogMode >= 1) {
  8580  00FD  0878               	movf	_analogMode,w
  8581  00FE  1903               	btfsc	3,2
  8582  00FF  2901               	goto	u185_21
  8583  0100  2902               	goto	u185_20
  8584  0101                     u185_21:	
  8585  0101  2913               	goto	i1l2359
  8586  0102                     u185_20:	
  8587  0102                     i1l2357:	
  8588                           
  8589                           ;main.c: 174: response[2] = 0xFF;
  8590  0102  30FF               	movlw	255
  8591  0103  00F4               	movwf	??_PS2Command
  8592  0104  0874               	movf	??_PS2Command,w
  8593  0105  0021               	movlb	1	; select bank1
  8594  0106  00DA               	movwf	(_response^(0+128)+2)
  8595                           
  8596                           ;main.c: 175: response[3] = 0xFF;
  8597  0107  30FF               	movlw	255
  8598  0108  00F4               	movwf	??_PS2Command
  8599  0109  0874               	movf	??_PS2Command,w
  8600  010A  00DB               	movwf	(_response^(0+128)+3)
  8601                           
  8602                           ;main.c: 176: response[4] = 0xC0;
  8603  010B  30C0               	movlw	192
  8604  010C  00F4               	movwf	??_PS2Command
  8605  010D  0874               	movf	??_PS2Command,w
  8606  010E  00DC               	movwf	(_response^(0+128)+4)
  8607                           
  8608                           ;main.c: 177: response[7] = 0x5A;
  8609  010F  305A               	movlw	90
  8610  0110  00F4               	movwf	??_PS2Command
  8611  0111  0874               	movf	??_PS2Command,w
  8612  0112  00DF               	movwf	(_response^(0+128)+7)
  8613  0113                     i1l2359:	
  8614                           
  8615                           ;main.c: 178: };main.c: 179: response[5] = 0x00;
  8616  0113  0021               	movlb	1	; select bank1
  8617  0114  01DD               	clrf	(_response^(0+128)+5)
  8618  0115                     i1l2361:	
  8619                           
  8620                           ;main.c: 180: response[6] = 0x00;
  8621  0115  01DE               	clrf	(_response^(0+128)+6)
  8622                           
  8623                           ;main.c: 181: break;
  8624  0116  29DC               	goto	i1l2439
  8625  0117                     i1l2363:	
  8626                           
  8627                           ;main.c: 187: pollController(response);
  8628  0117  30D8               	movlw	(low (_response| 0))& (0+255)
  8629  0118  3187  2733  3180   	fcall	_pollController
  8630  011B  28EE               	goto	i1l2349
  8631  011C                     i1l2367:	
  8632                           
  8633                           ;main.c: 196: if(escapeMode) {
  8634  011C  0877               	movf	_escapeMode,w
  8635  011D  1903               	btfsc	3,2
  8636  011E  2920               	goto	u186_21
  8637  011F  2921               	goto	u186_20
  8638  0120                     u186_21:	
  8639  0120  2929               	goto	i1l2371
  8640  0121                     u186_20:	
  8641  0121                     i1l2369:	
  8642                           
  8643                           ;main.c: 197: response[2] = 0x00;
  8644  0121  0021               	movlb	1	; select bank1
  8645  0122  01DA               	clrf	(_response^(0+128)+2)
  8646                           
  8647                           ;main.c: 198: response[3] = 0x00;
  8648  0123  01DB               	clrf	(_response^(0+128)+3)
  8649                           
  8650                           ;main.c: 199: response[4] = 0x00;
  8651  0124  01DC               	clrf	(_response^(0+128)+4)
  8652                           
  8653                           ;main.c: 200: response[5] = 0x00;
  8654  0125  01DD               	clrf	(_response^(0+128)+5)
  8655                           
  8656                           ;main.c: 201: response[6] = 0x00;
  8657  0126  01DE               	clrf	(_response^(0+128)+6)
  8658                           
  8659                           ;main.c: 202: response[7] = 0x00;
  8660  0127  01DF               	clrf	(_response^(0+128)+7)
  8661                           
  8662                           ;main.c: 203: }
  8663  0128  28EE               	goto	i1l2349
  8664  0129                     i1l2371:	
  8665                           
  8666                           ;main.c: 204: else {;main.c: 205: pollController(response);
  8667  0129  30D8               	movlw	(low (_response| 0))& (0+255)
  8668  012A  3187  2733  3180   	fcall	_pollController
  8669  012D  28EE               	goto	i1l2349
  8670  012E                     i1l2379:	
  8671                           
  8672                           ;main.c: 229: response[2] = 0xC0;
  8673  012E  30C0               	movlw	192
  8674  012F  00F4               	movwf	??_PS2Command
  8675  0130  0874               	movf	??_PS2Command,w
  8676  0131  0021               	movlb	1	; select bank1
  8677  0132  00DA               	movwf	(_response^(0+128)+2)
  8678                           
  8679                           ;main.c: 230: response[3] = 0x40;
  8680  0133  3040               	movlw	64
  8681  0134  00F4               	movwf	??_PS2Command
  8682  0135  0874               	movf	??_PS2Command,w
  8683  0136  00DB               	movwf	(_response^(0+128)+3)
  8684  0137                     i1l2381:	
  8685                           
  8686                           ;main.c: 231: if (analogMode >= 1) response[4] = 0x80;
  8687  0137  0878               	movf	_analogMode,w
  8688  0138  1903               	btfsc	3,2
  8689  0139  293B               	goto	u187_21
  8690  013A  293C               	goto	u187_20
  8691  013B                     u187_21:	
  8692  013B  2941               	goto	i1l2385
  8693  013C                     u187_20:	
  8694  013C                     i1l2383:	
  8695  013C  3080               	movlw	128
  8696  013D  00F4               	movwf	??_PS2Command
  8697  013E  0874               	movf	??_PS2Command,w
  8698  013F  00DC               	movwf	(_response^(0+128)+4)
  8699  0140  2942               	goto	i1l2387
  8700  0141                     i1l2385:	
  8701                           
  8702                           ;main.c: 232: else response[4] = 0x00;
  8703  0141  01DC               	clrf	(_response^(0+128)+4)
  8704  0142                     i1l2387:	
  8705                           
  8706                           ;main.c: 233: response[5] = 0x40;
  8707  0142  3040               	movlw	64
  8708  0143  00F4               	movwf	??_PS2Command
  8709  0144  0874               	movf	??_PS2Command,w
  8710  0145  00DD               	movwf	(_response^(0+128)+5)
  8711  0146                     i1l2389:	
  8712                           
  8713                           ;main.c: 234: response[6] = 0x80;
  8714  0146  3080               	movlw	128
  8715  0147  00F4               	movwf	??_PS2Command
  8716  0148  0874               	movf	??_PS2Command,w
  8717  0149  00DE               	movwf	(_response^(0+128)+6)
  8718                           
  8719                           ;main.c: 235: response[7] = 0x00;
  8720  014A  01DF               	clrf	(_response^(0+128)+7)
  8721                           
  8722                           ;main.c: 236: break;
  8723  014B  29DC               	goto	i1l2439
  8724  014C                     i1l2391:	
  8725                           
  8726                           ;main.c: 242: response[2] = 0x00;
  8727  014C  0021               	movlb	1	; select bank1
  8728  014D  01DA               	clrf	(_response^(0+128)+2)
  8729                           
  8730                           ;main.c: 243: response[3] = 0x00;
  8731  014E  01DB               	clrf	(_response^(0+128)+3)
  8732  014F                     i1l2393:	
  8733                           
  8734                           ;main.c: 244: response[4] = 0x80;
  8735  014F  3080               	movlw	128
  8736  0150  00F4               	movwf	??_PS2Command
  8737  0151  0874               	movf	??_PS2Command,w
  8738  0152  00DC               	movwf	(_response^(0+128)+4)
  8739  0153                     i1l2395:	
  8740                           
  8741                           ;main.c: 245: response[5] = 0x40;
  8742  0153  3040               	movlw	64
  8743  0154  00F4               	movwf	??_PS2Command
  8744  0155  0874               	movf	??_PS2Command,w
  8745  0156  00DD               	movwf	(_response^(0+128)+5)
  8746                           
  8747                           ;main.c: 246: response[6] = 0x00;
  8748  0157  01DE               	clrf	(_response^(0+128)+6)
  8749  0158                     i1l2397:	
  8750                           
  8751                           ;main.c: 247: response[7] = 0x50;
  8752  0158  3050               	movlw	80
  8753  0159  00F4               	movwf	??_PS2Command
  8754  015A  0874               	movf	??_PS2Command,w
  8755  015B  00DF               	movwf	(_response^(0+128)+7)
  8756  015C  28EE               	goto	i1l2349
  8757  015D                     i1l2401:	
  8758                           
  8759                           ;main.c: 256: response[2] = 0x00;
  8760  015D  0021               	movlb	1	; select bank1
  8761  015E  01DA               	clrf	(_response^(0+128)+2)
  8762                           
  8763                           ;main.c: 257: response[3] = 0x00;
  8764  015F  01DB               	clrf	(_response^(0+128)+3)
  8765  0160                     i1l2403:	
  8766                           
  8767                           ;main.c: 258: response[4] = 0x40;
  8768  0160  3040               	movlw	64
  8769  0161  00F4               	movwf	??_PS2Command
  8770  0162  0874               	movf	??_PS2Command,w
  8771  0163  00DC               	movwf	(_response^(0+128)+4)
  8772  0164                     i1l2405:	
  8773                           
  8774                           ;main.c: 259: response[5] = 0x00;
  8775  0164  01DD               	clrf	(_response^(0+128)+5)
  8776                           
  8777                           ;main.c: 260: response[6] = 0x80;
  8778  0165  3080               	movlw	128
  8779  0166  00F4               	movwf	??_PS2Command
  8780  0167  0874               	movf	??_PS2Command,w
  8781  0168  00DE               	movwf	(_response^(0+128)+6)
  8782  0169  2866               	goto	i1l2301
  8783  016A                     i1l2409:	
  8784                           
  8785                           ;main.c: 269: response[2] = 0x00;
  8786  016A  0021               	movlb	1	; select bank1
  8787  016B  01DA               	clrf	(_response^(0+128)+2)
  8788                           
  8789                           ;main.c: 270: response[3] = 0x00;
  8790  016C  01DB               	clrf	(_response^(0+128)+3)
  8791                           
  8792                           ;main.c: 271: response[4] = 0x00;
  8793  016D  01DC               	clrf	(_response^(0+128)+4)
  8794  016E                     i1l2411:	
  8795                           
  8796                           ;main.c: 272: response[5] = 0x20;
  8797  016E  3020               	movlw	32
  8798  016F  00F4               	movwf	??_PS2Command
  8799  0170  0874               	movf	??_PS2Command,w
  8800  0171  00DD               	movwf	(_response^(0+128)+5)
  8801  0172                     i1l2413:	
  8802                           
  8803                           ;main.c: 273: response[6] = 0x00;
  8804  0172  01DE               	clrf	(_response^(0+128)+6)
  8805  0173                     i1l2415:	
  8806                           
  8807                           ;main.c: 274: response[7] = 0x00;
  8808  0173  01DF               	clrf	(_response^(0+128)+7)
  8809  0174  28EE               	goto	i1l2349
  8810  0175                     i1l2419:	
  8811                           
  8812                           ;main.c: 282: response[2] = MAP_SMALL_MOTOR;
  8813  0175  0020               	movlb	0	; select bank0
  8814  0176  085C               	movf	_MAP_SMALL_MOTOR,w
  8815  0177  00F4               	movwf	??_PS2Command
  8816  0178  0874               	movf	??_PS2Command,w
  8817  0179  0021               	movlb	1	; select bank1
  8818  017A  00DA               	movwf	(_response^(0+128)+2)
  8819                           
  8820                           ;main.c: 283: response[3] = MAP_LARGE_MOTOR;
  8821  017B  0020               	movlb	0	; select bank0
  8822  017C  085B               	movf	_MAP_LARGE_MOTOR,w
  8823  017D  00F4               	movwf	??_PS2Command
  8824  017E  0874               	movf	??_PS2Command,w
  8825  017F  0021               	movlb	1	; select bank1
  8826  0180  00DB               	movwf	(_response^(0+128)+3)
  8827                           
  8828                           ;main.c: 284: response[4] = 0xFF;
  8829  0181  30FF               	movlw	255
  8830  0182  00F4               	movwf	??_PS2Command
  8831  0183  0874               	movf	??_PS2Command,w
  8832  0184  00DC               	movwf	(_response^(0+128)+4)
  8833                           
  8834                           ;main.c: 285: response[5] = 0xFF;
  8835  0185  30FF               	movlw	255
  8836  0186  00F4               	movwf	??_PS2Command
  8837  0187  0874               	movf	??_PS2Command,w
  8838  0188  00DD               	movwf	(_response^(0+128)+5)
  8839                           
  8840                           ;main.c: 286: response[6] = 0xFF;
  8841  0189  30FF               	movlw	255
  8842  018A  00F4               	movwf	??_PS2Command
  8843  018B  0874               	movf	??_PS2Command,w
  8844  018C  00DE               	movwf	(_response^(0+128)+6)
  8845                           
  8846                           ;main.c: 287: response[7] = 0xFF;
  8847  018D  30FF               	movlw	255
  8848  018E  00F4               	movwf	??_PS2Command
  8849  018F  0874               	movf	??_PS2Command,w
  8850  0190  00DF               	movwf	(_response^(0+128)+7)
  8851                           
  8852                           ;main.c: 288: previousCmd = cmd;
  8853  0191  0875               	movf	PS2Command@cmd,w
  8854  0192  00F4               	movwf	??_PS2Command
  8855  0193  0874               	movf	??_PS2Command,w
  8856  0194  00F6               	movwf	_previousCmd
  8857                           
  8858                           ;main.c: 289: break;
  8859  0195  29DC               	goto	i1l2439
  8860  0196                     i1l2421:	
  8861                           
  8862                           ;main.c: 294: response[2] = 0x00;
  8863  0196  0021               	movlb	1	; select bank1
  8864  0197  01DA               	clrf	(_response^(0+128)+2)
  8865                           
  8866                           ;main.c: 295: response[3] = 0x00;
  8867  0198  01DB               	clrf	(_response^(0+128)+3)
  8868                           
  8869                           ;main.c: 296: response[4] = 0x00;
  8870  0199  01DC               	clrf	(_response^(0+128)+4)
  8871                           
  8872                           ;main.c: 297: response[5] = 0x00;
  8873  019A  01DD               	clrf	(_response^(0+128)+5)
  8874                           
  8875                           ;main.c: 298: response[6] = 0x00;
  8876  019B  01DE               	clrf	(_response^(0+128)+6)
  8877  019C                     i1l2423:	
  8878                           
  8879                           ;main.c: 299: response[7] = 0x5A;
  8880  019C  305A               	movlw	90
  8881  019D  00F4               	movwf	??_PS2Command
  8882  019E  0874               	movf	??_PS2Command,w
  8883  019F  00DF               	movwf	(_response^(0+128)+7)
  8884  01A0                     i1l2425:	
  8885                           
  8886                           ;main.c: 300: previousCmd = cmd;
  8887  01A0  0875               	movf	PS2Command@cmd,w
  8888  01A1  00F4               	movwf	??_PS2Command
  8889  01A2  0874               	movf	??_PS2Command,w
  8890  01A3  00F6               	movwf	_previousCmd
  8891  01A4                     i1l2427:	
  8892                           
  8893                           ;main.c: 301: if(analogMode == 1) analogMode = 2;
  8894  01A4  0378               	decf	_analogMode,w
  8895  01A5  1D03               	btfss	3,2
  8896  01A6  29A8               	goto	u188_21
  8897  01A7  29A9               	goto	u188_20
  8898  01A8                     u188_21:	
  8899  01A8  29DC               	goto	i1l2439
  8900  01A9                     u188_20:	
  8901  01A9                     i1l2429:	
  8902  01A9  3002               	movlw	2
  8903  01AA  00F4               	movwf	??_PS2Command
  8904  01AB  0874               	movf	??_PS2Command,w
  8905  01AC  00F8               	movwf	_analogMode
  8906  01AD  29DC               	goto	i1l2439
  8907  01AE                     i1l2433:	
  8908  01AE  0875               	movf	PS2Command@cmd,w
  8909                           
  8910                           ; Switch size 1, requested type "simple"
  8911                           ; Number of cases is 11, Range of values is 2 to 242
  8912                           ; switch strategies available:
  8913                           ; Name         Instructions Cycles
  8914                           ; simple_byte           34    18 (average)
  8915                           ; jumptable            263     9 (fixed)
  8916                           ;	Chosen strategy is simple_byte
  8917  01AF  3A02               	xorlw	2	; case 2
  8918  01B0  1903               	skipnz
  8919  01B1  28E1               	goto	i1l2339
  8920  01B2  3A20               	xorlw	32	; case 34
  8921  01B3  1903               	skipnz
  8922  01B4  2921               	goto	i1l2369
  8923  01B5  3A10               	xorlw	16	; case 50
  8924  01B6  1903               	skipnz
  8925  01B7  296A               	goto	i1l2409
  8926  01B8  3A70               	xorlw	112	; case 66
  8927  01B9  1903               	skipnz
  8928  01BA  2917               	goto	i1l2363
  8929  01BB  3A20               	xorlw	32	; case 98
  8930  01BC  1903               	skipnz
  8931  01BD  294C               	goto	i1l2391
  8932  01BE  3AE0               	xorlw	224	; case 130
  8933  01BF  1903               	skipnz
  8934  01C0  28F3               	goto	i1l2351
  8935  01C1  3A20               	xorlw	32	; case 162
  8936  01C2  1903               	skipnz
  8937  01C3  292E               	goto	i1l2379
  8938  01C4  3A10               	xorlw	16	; case 178
  8939  01C5  1903               	skipnz
  8940  01C6  2975               	goto	i1l2419
  8941  01C7  3A70               	xorlw	112	; case 194
  8942  01C8  1903               	skipnz
  8943  01C9  291C               	goto	i1l2367
  8944  01CA  3A20               	xorlw	32	; case 226
  8945  01CB  1903               	skipnz
  8946  01CC  295D               	goto	i1l2401
  8947  01CD  3A10               	xorlw	16	; case 242
  8948  01CE  1903               	skipnz
  8949  01CF  2996               	goto	i1l2421
  8950  01D0  29DC               	goto	i1l2439
  8951  01D1                     i1l2437:	
  8952  01D1  0879               	movf	_cmdCounter,w
  8953                           
  8954                           ; Switch size 1, requested type "simple"
  8955                           ; Number of cases is 3, Range of values is 3 to 5
  8956                           ; switch strategies available:
  8957                           ; Name         Instructions Cycles
  8958                           ; simple_byte           10     6 (average)
  8959                           ; direct_byte           15     9 (fixed)
  8960                           ; jumptable            263     9 (fixed)
  8961                           ;	Chosen strategy is simple_byte
  8962  01D2  3A03               	xorlw	3	; case 3
  8963  01D3  1903               	skipnz
  8964  01D4  2874               	goto	i1l2309
  8965  01D5  3A07               	xorlw	7	; case 4
  8966  01D6  1903               	skipnz
  8967  01D7  28C5               	goto	i1l2331
  8968  01D8  3A01               	xorlw	1	; case 5
  8969  01D9  1903               	skipnz
  8970  01DA  28DC               	goto	i1l2337
  8971  01DB  29AE               	goto	i1l2433
  8972  01DC                     i1l2439:	
  8973                           
  8974                           ;main.c: 308: spiWrite(response[cmdCounter]);
  8975  01DC  0879               	movf	_cmdCounter,w
  8976  01DD  3ED8               	addlw	(low (_response| 0))& (0+255)
  8977  01DE  0086               	movwf	6
  8978  01DF  0187               	clrf	7
  8979  01E0  0801               	movf	1,w
  8980  01E1  3187  27FB  3180   	fcall	_spiWrite
  8981  01E4                     i1l2441:	
  8982                           
  8983                           ;main.c: 310: RA4 = 0;
  8984  01E4  0020               	movlb	0	; select bank0
  8985  01E5  120C               	bcf	12,4	;volatile
  8986  01E6                     i1l2443:	
  8987                           
  8988                           ;main.c: 311: _delay((unsigned long)((1)*(32000000/4000000.0)));
  8989  01E6  3200               	nop2	;2 cycle nop
  8990  01E7  3200               	nop2	;2 cycle nop
  8991  01E8  3200               	nop2	;2 cycle nop
  8992  01E9  3200               	nop2	;2 cycle nop
  8993  01EA                     i1l2445:	
  8994                           
  8995                           ;main.c: 312: RA4 = 1;
  8996  01EA  0020               	movlb	0	; select bank0
  8997  01EB  160C               	bsf	12,4	;volatile
  8998  01EC                     i1l2447:	
  8999                           
  9000                           ;main.c: 315: if (cmdCounter < responseLength) {
  9001  01EC  085D               	movf	_responseLength,w
  9002  01ED  0279               	subwf	_cmdCounter,w
  9003  01EE  1803               	skipnc
  9004  01EF  29F1               	goto	u189_21
  9005  01F0  29F2               	goto	u189_20
  9006  01F1                     u189_21:	
  9007  01F1  29F6               	goto	i1l177
  9008  01F2                     u189_20:	
  9009  01F2                     i1l2449:	
  9010                           
  9011                           ;main.c: 316: cmdCounter++;
  9012  01F2  3001               	movlw	1
  9013  01F3  00F4               	movwf	??_PS2Command
  9014  01F4  0874               	movf	??_PS2Command,w
  9015  01F5  07F9               	addwf	_cmdCounter,f
  9016  01F6                     i1l177:	
  9017                           
  9018                           ;main.c: 317: };main.c: 320: if (escapeMode) {
  9019  01F6  0877               	movf	_escapeMode,w
  9020  01F7  1903               	btfsc	3,2
  9021  01F8  29FA               	goto	u190_21
  9022  01F9  29FB               	goto	u190_20
  9023  01FA                     u190_21:	
  9024  01FA  2A01               	goto	i1l2453
  9025  01FB                     u190_20:	
  9026  01FB                     i1l2451:	
  9027                           
  9028                           ;main.c: 321: response[0] = 0xCF;
  9029  01FB  30CF               	movlw	207
  9030  01FC  00F4               	movwf	??_PS2Command
  9031  01FD  0874               	movf	??_PS2Command,w
  9032  01FE  0021               	movlb	1	; select bank1
  9033  01FF  00D8               	movwf	_response^(0+128)
  9034                           
  9035                           ;main.c: 322: }
  9036  0200  2A20               	goto	i1l2463
  9037  0201                     i1l2453:	
  9038                           
  9039                           ;main.c: 323: else {;main.c: 324: if(analogMode == 0) response[0] = 0x82;
  9040  0201  0878               	movf	_analogMode,w
  9041  0202  1D03               	btfss	3,2
  9042  0203  2A05               	goto	u191_21
  9043  0204  2A06               	goto	u191_20
  9044  0205                     u191_21:	
  9045  0205  2A0B               	goto	i1l2457
  9046  0206                     u191_20:	
  9047  0206                     i1l2455:	
  9048  0206  3082               	movlw	130
  9049  0207  00F4               	movwf	??_PS2Command
  9050  0208  0874               	movf	??_PS2Command,w
  9051  0209  0021               	movlb	1	; select bank1
  9052  020A  00D8               	movwf	_response^(0+128)
  9053  020B                     i1l2457:	
  9054                           
  9055                           ;main.c: 325: if(analogMode == 1) response[0] = 0xCE;
  9056  020B  0378               	decf	_analogMode,w
  9057  020C  1D03               	btfss	3,2
  9058  020D  2A0F               	goto	u192_21
  9059  020E  2A10               	goto	u192_20
  9060  020F                     u192_21:	
  9061  020F  2A15               	goto	i1l181
  9062  0210                     u192_20:	
  9063  0210                     i1l2459:	
  9064  0210  30CE               	movlw	206
  9065  0211  00F4               	movwf	??_PS2Command
  9066  0212  0874               	movf	??_PS2Command,w
  9067  0213  0021               	movlb	1	; select bank1
  9068  0214  00D8               	movwf	_response^(0+128)
  9069  0215                     i1l181:	
  9070                           
  9071                           ;main.c: 326: if(analogMode > 1) response[0] = 0x9E;
  9072  0215  3002               	movlw	2
  9073  0216  0278               	subwf	_analogMode,w
  9074  0217  1C03               	skipc
  9075  0218  2A1A               	goto	u193_21
  9076  0219  2A1B               	goto	u193_20
  9077  021A                     u193_21:	
  9078  021A  2A20               	goto	i1l2463
  9079  021B                     u193_20:	
  9080  021B                     i1l2461:	
  9081  021B  309E               	movlw	158
  9082  021C  00F4               	movwf	??_PS2Command
  9083  021D  0874               	movf	??_PS2Command,w
  9084  021E  0021               	movlb	1	; select bank1
  9085  021F  00D8               	movwf	_response^(0+128)
  9086  0220                     i1l2463:	
  9087                           
  9088                           ;main.c: 327: };main.c: 329: SSP1IF = 0;
  9089  0220  002E               	movlb	14	; select bank14
  9090  0221  100F               	bcf	15,0	;volatile
  9091  0222                     i1l183:	
  9092  0222  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9093  0223  0009               	retfie
  9094  0224                     __end_of_PS2Command:	
  9095                           
  9096                           	psect	text20
  9097  0E40                     __ptext20:	
  9098 ;; *************** function i1_reversebyte *****************
  9099 ;; Defined at:
  9100 ;;		line 176 in file "Controller.c"
  9101 ;; Parameters:    Size  Location     Type
  9102 ;;  byte            1    wreg     unsigned char 
  9103 ;; Auto vars:     Size  Location     Type
  9104 ;;  byte            1    3[COMMON] unsigned char 
  9105 ;; Return value:  Size  Location     Type
  9106 ;;                  1    wreg      unsigned char 
  9107 ;; Registers used:
  9108 ;;		wreg, status,2, status,0
  9109 ;; Tracked objects:
  9110 ;;		On entry : 0/0
  9111 ;;		On exit  : 0/0
  9112 ;;		Unchanged: 0/0
  9113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9115 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9116 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9117 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9118 ;;Total ram usage:        4 bytes
  9119 ;; Hardware stack levels used:    1
  9120 ;; This function calls:
  9121 ;;		Nothing
  9122 ;; This function is called by:
  9123 ;;		_PS2Command
  9124 ;; This function uses a non-reentrant model
  9125 ;;
  9126                           
  9127                           
  9128                           ;psect for function i1_reversebyte
  9129  0E40                     i1_reversebyte:	
  9130                           
  9131                           ;incstack = 0
  9132                           ; Regs used in i1_reversebyte: [wreg+status,2+status,0]
  9133                           ;i1reversebyte@byte stored from wreg
  9134  0E40  00F3               	movwf	i1reversebyte@byte
  9135  0E41                     i1l2251:	
  9136                           
  9137                           ;Controller.c: 177: byte = (byte & 0xF0) >> 4 | (byte & 0x0F) << 4;
  9138  0E41  0873               	movf	i1reversebyte@byte,w
  9139  0E42  390F               	andlw	15
  9140  0E43  00F0               	movwf	??i1_reversebyte
  9141  0E44  3004               	movlw	4
  9142  0E45                     u169_25:	
  9143  0E45  35F0               	lslf	??i1_reversebyte,f
  9144  0E46  0B89               	decfsz	9,f
  9145  0E47  2E45               	goto	u169_25
  9146  0E48  0873               	movf	i1reversebyte@byte,w
  9147  0E49  00F1               	movwf	??i1_reversebyte+1
  9148  0E4A  3004               	movlw	4
  9149  0E4B                     u170_25:	
  9150  0E4B  36F1               	lsrf	??i1_reversebyte+1,f
  9151  0E4C  0B89               	decfsz	9,f
  9152  0E4D  2E4B               	goto	u170_25
  9153  0E4E  0871               	movf	??i1_reversebyte+1,w
  9154  0E4F  390F               	andlw	15
  9155  0E50  0470               	iorwf	??i1_reversebyte,w
  9156  0E51  00F2               	movwf	??i1_reversebyte+2
  9157  0E52  0872               	movf	??i1_reversebyte+2,w
  9158  0E53  00F3               	movwf	i1reversebyte@byte
  9159                           
  9160                           ;Controller.c: 178: byte = (byte & 0xCC) >> 2 | (byte & 0x33) << 2;
  9161  0E54  0873               	movf	i1reversebyte@byte,w
  9162  0E55  3933               	andlw	51
  9163  0E56  00F0               	movwf	??i1_reversebyte
  9164  0E57  3002               	movlw	2
  9165  0E58                     u171_25:	
  9166  0E58  35F0               	lslf	??i1_reversebyte,f
  9167  0E59  0B89               	decfsz	9,f
  9168  0E5A  2E58               	goto	u171_25
  9169  0E5B  0873               	movf	i1reversebyte@byte,w
  9170  0E5C  00F1               	movwf	??i1_reversebyte+1
  9171  0E5D  3002               	movlw	2
  9172  0E5E                     u172_25:	
  9173  0E5E  36F1               	lsrf	??i1_reversebyte+1,f
  9174  0E5F  0B89               	decfsz	9,f
  9175  0E60  2E5E               	goto	u172_25
  9176  0E61  0871               	movf	??i1_reversebyte+1,w
  9177  0E62  3933               	andlw	51
  9178  0E63  0470               	iorwf	??i1_reversebyte,w
  9179  0E64  00F2               	movwf	??i1_reversebyte+2
  9180  0E65  0872               	movf	??i1_reversebyte+2,w
  9181  0E66  00F3               	movwf	i1reversebyte@byte
  9182                           
  9183                           ;Controller.c: 179: byte = (byte & 0xAA) >> 1 | (byte & 0x55) << 1;
  9184  0E67  0873               	movf	i1reversebyte@byte,w
  9185  0E68  3955               	andlw	85
  9186  0E69  00F0               	movwf	??i1_reversebyte
  9187  0E6A  3001               	movlw	1
  9188  0E6B                     u173_25:	
  9189  0E6B  35F0               	lslf	??i1_reversebyte,f
  9190  0E6C  0B89               	decfsz	9,f
  9191  0E6D  2E6B               	goto	u173_25
  9192  0E6E  3673               	lsrf	i1reversebyte@byte,w
  9193  0E6F  3955               	andlw	85
  9194  0E70  0470               	iorwf	??i1_reversebyte,w
  9195  0E71  00F1               	movwf	??i1_reversebyte+1
  9196  0E72  0871               	movf	??i1_reversebyte+1,w
  9197  0E73  00F3               	movwf	i1reversebyte@byte
  9198  0E74                     i1l2253:	
  9199                           
  9200                           ;Controller.c: 181: return byte;
  9201  0E74  0873               	movf	i1reversebyte@byte,w
  9202  0E75                     i1l353:	
  9203  0E75  0008               	return
  9204  0E76                     __end_ofi1_reversebyte:	
  9205                           
  9206                           	psect	text21
  9207  07FB                     __ptext21:	
  9208 ;; *************** function _spiWrite *****************
  9209 ;; Defined at:
  9210 ;;		line 32 in file "Spi.c"
  9211 ;; Parameters:    Size  Location     Type
  9212 ;;  dat             1    wreg     unsigned char 
  9213 ;; Auto vars:     Size  Location     Type
  9214 ;;  dat             1    0[COMMON] unsigned char 
  9215 ;; Return value:  Size  Location     Type
  9216 ;;                  1    wreg      void 
  9217 ;; Registers used:
  9218 ;;		wreg
  9219 ;; Tracked objects:
  9220 ;;		On entry : 0/0
  9221 ;;		On exit  : 0/0
  9222 ;;		Unchanged: 0/0
  9223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9225 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9227 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9228 ;;Total ram usage:        1 bytes
  9229 ;; Hardware stack levels used:    1
  9230 ;; This function calls:
  9231 ;;		Nothing
  9232 ;; This function is called by:
  9233 ;;		_PS2Command
  9234 ;; This function uses a non-reentrant model
  9235 ;;
  9236                           
  9237                           
  9238                           ;psect for function _spiWrite
  9239  07FB                     _spiWrite:	
  9240                           
  9241                           ;incstack = 0
  9242                           ; Regs used in _spiWrite: [wreg]
  9243                           ;spiWrite@dat stored from wreg
  9244  07FB  00F0               	movwf	spiWrite@dat
  9245  07FC                     i1l2143:	
  9246                           
  9247                           ;Spi.c: 34: SSP1BUF = dat;
  9248  07FC  0870               	movf	spiWrite@dat,w
  9249  07FD  0023               	movlb	3	; select bank3
  9250  07FE  008C               	movwf	12	;volatile
  9251  07FF                     i1l428:	
  9252  07FF  0008               	return
  9253  0800                     __end_of_spiWrite:	
  9254                           
  9255                           	psect	text22
  9256  0D0F                     __ptext22:	
  9257 ;; *************** function _spiRead *****************
  9258 ;; Defined at:
  9259 ;;		line 37 in file "Spi.c"
  9260 ;; Parameters:    Size  Location     Type
  9261 ;;		None
  9262 ;; Auto vars:     Size  Location     Type
  9263 ;;		None
  9264 ;; Return value:  Size  Location     Type
  9265 ;;                  1    wreg      unsigned char 
  9266 ;; Registers used:
  9267 ;;		wreg, status,2, status,0, pclath, cstack
  9268 ;; Tracked objects:
  9269 ;;		On entry : 0/0
  9270 ;;		On exit  : 0/0
  9271 ;;		Unchanged: 0/0
  9272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9277 ;;Total ram usage:        0 bytes
  9278 ;; Hardware stack levels used:    1
  9279 ;; Hardware stack levels required when called:    1
  9280 ;; This function calls:
  9281 ;;		_spiReceiveWait
  9282 ;; This function is called by:
  9283 ;;		_PS2Command
  9284 ;; This function uses a non-reentrant model
  9285 ;;
  9286                           
  9287                           
  9288                           ;psect for function _spiRead
  9289  0D0F                     _spiRead:	
  9290  0D0F                     i1l2137:	
  9291                           ;incstack = 0
  9292                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  9293                           
  9294                           
  9295                           ;Spi.c: 39: spiReceiveWait();
  9296  0D0F  318D  2509  318D   	fcall	_spiReceiveWait
  9297  0D12                     i1l2139:	
  9298                           
  9299                           ;Spi.c: 40: return(SSP1BUF);
  9300  0D12  0023               	movlb	3	; select bank3
  9301  0D13  080C               	movf	12,w	;volatile
  9302  0D14                     i1l431:	
  9303  0D14  0008               	return
  9304  0D15                     __end_of_spiRead:	
  9305                           
  9306                           	psect	text23
  9307  0D09                     __ptext23:	
  9308 ;; *************** function _spiReceiveWait *****************
  9309 ;; Defined at:
  9310 ;;		line 27 in file "Spi.c"
  9311 ;; Parameters:    Size  Location     Type
  9312 ;;		None
  9313 ;; Auto vars:     Size  Location     Type
  9314 ;;		None
  9315 ;; Return value:  Size  Location     Type
  9316 ;;                  1    wreg      void 
  9317 ;; Registers used:
  9318 ;;		None
  9319 ;; Tracked objects:
  9320 ;;		On entry : 0/0
  9321 ;;		On exit  : 0/0
  9322 ;;		Unchanged: 0/0
  9323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9328 ;;Total ram usage:        0 bytes
  9329 ;; Hardware stack levels used:    1
  9330 ;; This function calls:
  9331 ;;		Nothing
  9332 ;; This function is called by:
  9333 ;;		_spiRead
  9334 ;; This function uses a non-reentrant model
  9335 ;;
  9336                           
  9337                           
  9338                           ;psect for function _spiReceiveWait
  9339  0D09                     _spiReceiveWait:	
  9340  0D09                     i1l2103:	
  9341                           ;incstack = 0
  9342                           ; Regs used in _spiReceiveWait: []
  9343                           
  9344  0D09                     i1l422:	
  9345                           ;Spi.c: 29: while ( !SSP1STATbits.BF );
  9346                           
  9347  0D09  0023               	movlb	3	; select bank3
  9348  0D0A  1C0F               	btfss	15,0	;volatile
  9349  0D0B  2D0D               	goto	u155_21
  9350  0D0C  2D0E               	goto	u155_20
  9351  0D0D                     u155_21:	
  9352  0D0D  2D09               	goto	i1l422
  9353  0D0E                     u155_20:	
  9354  0D0E                     i1l425:	
  9355  0D0E  0008               	return
  9356  0D0F                     __end_of_spiReceiveWait:	
  9357                           
  9358                           	psect	text24
  9359  0733                     __ptext24:	
  9360 ;; *************** function _pollController *****************
  9361 ;; Defined at:
  9362 ;;		line 34 in file "main.c"
  9363 ;; Parameters:    Size  Location     Type
  9364 ;;  response        1    wreg     PTR unsigned char 
  9365 ;;		 -> response(20), 
  9366 ;; Auto vars:     Size  Location     Type
  9367 ;;  response        1    1[COMMON] PTR unsigned char 
  9368 ;;		 -> response(20), 
  9369 ;; Return value:  Size  Location     Type
  9370 ;;                  1    wreg      void 
  9371 ;; Registers used:
  9372 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9373 ;; Tracked objects:
  9374 ;;		On entry : 0/0
  9375 ;;		On exit  : 0/0
  9376 ;;		Unchanged: 0/0
  9377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9379 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9380 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9381 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9382 ;;Total ram usage:        2 bytes
  9383 ;; Hardware stack levels used:    1
  9384 ;; This function calls:
  9385 ;;		Nothing
  9386 ;; This function is called by:
  9387 ;;		_PS2Command
  9388 ;; This function uses a non-reentrant model
  9389 ;;
  9390                           
  9391                           
  9392                           ;psect for function _pollController
  9393  0733                     _pollController:	
  9394                           
  9395                           ;incstack = 0
  9396                           ; Regs used in _pollController: [wreg+fsr1l+fsr1h+status,2+status,0]
  9397                           ;pollController@response stored from wreg
  9398  0733  00F1               	movwf	pollController@response
  9399  0734                     i1l2105:	
  9400                           
  9401                           ;main.c: 35: response[2] = digitalStateFirst;
  9402  0734  0020               	movlb	0	; select bank0
  9403  0735  0864               	movf	_digitalStateFirst,w
  9404  0736  00F0               	movwf	??_pollController
  9405  0737  0871               	movf	pollController@response,w
  9406  0738  3E02               	addlw	2
  9407  0739  0086               	movwf	6
  9408  073A  0187               	clrf	7
  9409  073B  0870               	movf	??_pollController,w
  9410  073C  0081               	movwf	1
  9411                           
  9412                           ;main.c: 36: response[3] = digitalStateSecond;
  9413  073D  0863               	movf	_digitalStateSecond,w
  9414  073E  00F0               	movwf	??_pollController
  9415  073F  0871               	movf	pollController@response,w
  9416  0740  3E03               	addlw	3
  9417  0741  0086               	movwf	6
  9418  0742  0187               	clrf	7
  9419  0743  0870               	movf	??_pollController,w
  9420  0744  0081               	movwf	1
  9421                           
  9422                           ;main.c: 37: response[4] = rxData;
  9423  0745  0862               	movf	_rxData,w
  9424  0746  00F0               	movwf	??_pollController
  9425  0747  0871               	movf	pollController@response,w
  9426  0748  3E04               	addlw	4
  9427  0749  0086               	movwf	6
  9428  074A  0187               	clrf	7
  9429  074B  0870               	movf	??_pollController,w
  9430  074C  0081               	movwf	1
  9431                           
  9432                           ;main.c: 38: response[5] = ryData;
  9433  074D  0861               	movf	_ryData,w
  9434  074E  00F0               	movwf	??_pollController
  9435  074F  0871               	movf	pollController@response,w
  9436  0750  3E05               	addlw	5
  9437  0751  0086               	movwf	6
  9438  0752  0187               	clrf	7
  9439  0753  0870               	movf	??_pollController,w
  9440  0754  0081               	movwf	1
  9441                           
  9442                           ;main.c: 39: response[6] = lxData;
  9443  0755  0860               	movf	_lxData,w
  9444  0756  00F0               	movwf	??_pollController
  9445  0757  0871               	movf	pollController@response,w
  9446  0758  3E06               	addlw	6
  9447  0759  0086               	movwf	6
  9448  075A  0187               	clrf	7
  9449  075B  0870               	movf	??_pollController,w
  9450  075C  0081               	movwf	1
  9451                           
  9452                           ;main.c: 40: response[7] = lyData;
  9453  075D  085F               	movf	_lyData,w
  9454  075E  00F0               	movwf	??_pollController
  9455  075F  0871               	movf	pollController@response,w
  9456  0760  3E07               	addlw	7
  9457  0761  0086               	movwf	6
  9458  0762  0187               	clrf	7
  9459  0763  0870               	movf	??_pollController,w
  9460  0764  0081               	movwf	1
  9461  0765                     i1l2107:	
  9462                           
  9463                           ;main.c: 41: if(analogMode == 2) {
  9464  0765  3002               	movlw	2
  9465  0766  0678               	xorwf	_analogMode,w
  9466  0767  1D03               	btfss	3,2
  9467  0768  2F6A               	goto	u156_21
  9468  0769  2F6B               	goto	u156_20
  9469  076A                     u156_21:	
  9470  076A  2FD1               	goto	i1l2135
  9471  076B                     u156_20:	
  9472  076B                     i1l2109:	
  9473                           
  9474                           ;main.c: 42: responseLength = 20;
  9475  076B  3014               	movlw	20
  9476  076C  00F0               	movwf	??_pollController
  9477  076D  0870               	movf	??_pollController,w
  9478  076E  00DD               	movwf	_responseLength
  9479  076F                     i1l2111:	
  9480                           
  9481                           ;main.c: 43: response[8] = analogStateFirst[2];
  9482  076F  0021               	movlb	1	; select bank1
  9483  0770  0852               	movf	(_analogStateFirst^(0+128)+2),w
  9484  0771  00F0               	movwf	??_pollController
  9485  0772  0871               	movf	pollController@response,w
  9486  0773  3E08               	addlw	8
  9487  0774  0086               	movwf	6
  9488  0775  0187               	clrf	7
  9489  0776  0870               	movf	??_pollController,w
  9490  0777  0081               	movwf	1
  9491  0778                     i1l2113:	
  9492                           
  9493                           ;main.c: 44: response[9] = analogStateFirst[0];
  9494  0778  0850               	movf	_analogStateFirst^(0+128),w
  9495  0779  00F0               	movwf	??_pollController
  9496  077A  0871               	movf	pollController@response,w
  9497  077B  3E09               	addlw	9
  9498  077C  0086               	movwf	6
  9499  077D  0187               	clrf	7
  9500  077E  0870               	movf	??_pollController,w
  9501  077F  0081               	movwf	1
  9502  0780                     i1l2115:	
  9503                           
  9504                           ;main.c: 45: response[10] = analogStateFirst[3];
  9505  0780  0853               	movf	(_analogStateFirst^(0+128)+3),w
  9506  0781  00F0               	movwf	??_pollController
  9507  0782  0871               	movf	pollController@response,w
  9508  0783  3E0A               	addlw	10
  9509  0784  0086               	movwf	6
  9510  0785  0187               	clrf	7
  9511  0786  0870               	movf	??_pollController,w
  9512  0787  0081               	movwf	1
  9513  0788                     i1l2117:	
  9514                           
  9515                           ;main.c: 46: response[11] = analogStateFirst[1];
  9516  0788  0851               	movf	(_analogStateFirst^(0+128)+1),w
  9517  0789  00F0               	movwf	??_pollController
  9518  078A  0871               	movf	pollController@response,w
  9519  078B  3E0B               	addlw	11
  9520  078C  0086               	movwf	6
  9521  078D  0187               	clrf	7
  9522  078E  0870               	movf	??_pollController,w
  9523  078F  0081               	movwf	1
  9524  0790                     i1l2119:	
  9525                           
  9526                           ;main.c: 47: response[12] = analogStateSecond[3];
  9527  0790  084B               	movf	(_analogStateSecond^(0+128)+3),w
  9528  0791  00F0               	movwf	??_pollController
  9529  0792  0871               	movf	pollController@response,w
  9530  0793  3E0C               	addlw	12
  9531  0794  0086               	movwf	6
  9532  0795  0187               	clrf	7
  9533  0796  0870               	movf	??_pollController,w
  9534  0797  0081               	movwf	1
  9535  0798                     i1l2121:	
  9536                           
  9537                           ;main.c: 48: response[13] = analogStateSecond[2];
  9538  0798  084A               	movf	(_analogStateSecond^(0+128)+2),w
  9539  0799  00F0               	movwf	??_pollController
  9540  079A  0871               	movf	pollController@response,w
  9541  079B  3E0D               	addlw	13
  9542  079C  0086               	movwf	6
  9543  079D  0187               	clrf	7
  9544  079E  0870               	movf	??_pollController,w
  9545  079F  0081               	movwf	1
  9546  07A0                     i1l2123:	
  9547                           
  9548                           ;main.c: 49: response[14] = analogStateSecond[1];
  9549  07A0  0849               	movf	(_analogStateSecond^(0+128)+1),w
  9550  07A1  00F0               	movwf	??_pollController
  9551  07A2  0871               	movf	pollController@response,w
  9552  07A3  3E0E               	addlw	14
  9553  07A4  0086               	movwf	6
  9554  07A5  0187               	clrf	7
  9555  07A6  0870               	movf	??_pollController,w
  9556  07A7  0081               	movwf	1
  9557  07A8                     i1l2125:	
  9558                           
  9559                           ;main.c: 50: response[15] = analogStateSecond[0];
  9560  07A8  0848               	movf	_analogStateSecond^(0+128),w
  9561  07A9  00F0               	movwf	??_pollController
  9562  07AA  0871               	movf	pollController@response,w
  9563  07AB  3E0F               	addlw	15
  9564  07AC  0086               	movwf	6
  9565  07AD  0187               	clrf	7
  9566  07AE  0870               	movf	??_pollController,w
  9567  07AF  0081               	movwf	1
  9568  07B0                     i1l2127:	
  9569                           
  9570                           ;main.c: 51: response[16] = analogStateSecond[5];
  9571  07B0  084D               	movf	(_analogStateSecond^(0+128)+5),w
  9572  07B1  00F0               	movwf	??_pollController
  9573  07B2  0871               	movf	pollController@response,w
  9574  07B3  3E10               	addlw	16
  9575  07B4  0086               	movwf	6
  9576  07B5  0187               	clrf	7
  9577  07B6  0870               	movf	??_pollController,w
  9578  07B7  0081               	movwf	1
  9579  07B8                     i1l2129:	
  9580                           
  9581                           ;main.c: 52: response[17] = analogStateSecond[4];
  9582  07B8  084C               	movf	(_analogStateSecond^(0+128)+4),w
  9583  07B9  00F0               	movwf	??_pollController
  9584  07BA  0871               	movf	pollController@response,w
  9585  07BB  3E11               	addlw	17
  9586  07BC  0086               	movwf	6
  9587  07BD  0187               	clrf	7
  9588  07BE  0870               	movf	??_pollController,w
  9589  07BF  0081               	movwf	1
  9590  07C0                     i1l2131:	
  9591                           
  9592                           ;main.c: 53: response[18] = analogStateSecond[7];
  9593  07C0  084F               	movf	(_analogStateSecond^(0+128)+7),w
  9594  07C1  00F0               	movwf	??_pollController
  9595  07C2  0871               	movf	pollController@response,w
  9596  07C3  3E12               	addlw	18
  9597  07C4  0086               	movwf	6
  9598  07C5  0187               	clrf	7
  9599  07C6  0870               	movf	??_pollController,w
  9600  07C7  0081               	movwf	1
  9601  07C8                     i1l2133:	
  9602                           
  9603                           ;main.c: 54: response[19] = analogStateSecond[6];
  9604  07C8  084E               	movf	(_analogStateSecond^(0+128)+6),w
  9605  07C9  00F0               	movwf	??_pollController
  9606  07CA  0871               	movf	pollController@response,w
  9607  07CB  3E13               	addlw	19
  9608  07CC  0086               	movwf	6
  9609  07CD  0187               	clrf	7
  9610  07CE  0870               	movf	??_pollController,w
  9611  07CF  0081               	movwf	1
  9612                           
  9613                           ;main.c: 55: }
  9614  07D0  2FD5               	goto	i1l113
  9615  07D1                     i1l2135:	
  9616                           
  9617                           ;main.c: 56: else {;main.c: 57: responseLength = 5;
  9618  07D1  3005               	movlw	5
  9619  07D2  00F0               	movwf	??_pollController
  9620  07D3  0870               	movf	??_pollController,w
  9621  07D4  00DD               	movwf	_responseLength
  9622  07D5                     i1l113:	
  9623  07D5  0008               	return
  9624  07D6                     __end_of_pollController:	
  9625  007E                     btemp	set	126	;btemp
  9626  007E                     int$flags	set	126
  9627  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        33
    BSS         77
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     58      78
    BANK1            80      3      79
    BANK2            80      0       8
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    pollController@response	PTR unsigned char  size(1) Largest target is 20
		 -> response(BANK1[20]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _PS2Command in COMMON

    _PS2Command->i1_reversebyte

Critical Paths under _main in BANK0

    _main->_configureController
    _readControllerAnalog->_readADC
    _picInit->_spiInit
    _configureController->_lutInit
    _lutInit->_Map
    _Map->___awdiv
    ___awdiv->___wmul

Critical Paths under _PS2Command in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _PS2Command in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _PS2Command in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _PS2Command in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _PS2Command in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _PS2Command in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _PS2Command in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _PS2Command in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _PS2Command in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _PS2Command in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _PS2Command in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _PS2Command in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _PS2Command in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _PS2Command in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _PS2Command in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _PS2Command in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _PS2Command in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _PS2Command in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _PS2Command in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _PS2Command in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _PS2Command in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _PS2Command in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _PS2Command in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _PS2Command in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _PS2Command in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _PS2Command in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   14678
                                             57 BANK0      1     1      0
                                              0 BANK1      3     3      0
                         _IO_MAPPING
                            _adcInit
                _configureController
                            _lutInit
                            _picInit
                     _readController
               _readControllerAnalog
 ---------------------------------------------------------------------------------
 (1) _readControllerAnalog                                 3     3      0    1697
                                              9 BANK0      3     3      0
                            _readADC
                        _reversebyte
 ---------------------------------------------------------------------------------
 (2) _reversebyte                                          4     4      0     226
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _picInit                                              2     2      0     456
                                              4 BANK0      2     2      0
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _configureController                                 13    13      0    7842
                                             44 BANK0     13    13      0
                        _eepromWrite
                            _lutInit
                            _readADC
                     _readController
 ---------------------------------------------------------------------------------
 (1) _readController                                       3     3      0     124
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _readADC                                              9     7      2    1471
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _lutInit                                             19    19      0    4355
                                             25 BANK0     19    19      0
                                _Map
                         _eepromRead
 ---------------------------------------------------------------------------------
 (2) _eepromRead                                           3     3      0      65
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _Map                                                 10     0     10    2958
                                             15 BANK0     10     0     10
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     625
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _eepromWrite                                          3     2      1     816
                                              0 BANK0      3     2      1
                          _nvmUnlock
 ---------------------------------------------------------------------------------
 (3) _nvmUnlock                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IO_MAPPING                                           0     0      0       0
                            _ppsLock
                          _ppsUnlock
 ---------------------------------------------------------------------------------
 (2) _ppsUnlock                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ppsLock                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _PS2Command                                           2     2      0    1148
                                              4 COMMON     2     2      0
                     _pollController
                            _spiRead
                           _spiWrite
                      i1_reversebyte
 ---------------------------------------------------------------------------------
 (6) i1_reversebyte                                        4     4      0     157
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (6) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (7) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _pollController                                       2     2      0     462
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IO_MAPPING
     _ppsLock
     _ppsUnlock
   _adcInit
   _configureController
     _eepromWrite
       _nvmUnlock
     _lutInit
       _Map
         ___awdiv
           ___wmul (ARG)
         ___wmul
       _eepromRead
     _readADC
     _readController
   _lutInit
     _Map
       ___awdiv
         ___wmul (ARG)
       ___wmul
     _eepromRead
   _picInit
     _spiInit
   _readController
   _readControllerAnalog
     _readADC
     _reversebyte

 _PS2Command (ROOT)
   _pollController
   _spiRead
     _spiReceiveWait
   _spiWrite
   i1_reversebyte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3A      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      3      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       8       9       10.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      B1      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      B1      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              30      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14               0      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15               0      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16               0      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17               0      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18               0      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19               0      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20               0      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21               0      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22               0      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23               0      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Dec 06 10:22:49 2021

                  __CFG_CP$OFF 0000                   ___awdiv@sign 002C            ___wmul@multiplicand 0022  
        __end_ofi1_reversebyte 0E76                            l310 0505                            l400 0D2A  
                          l320 05D0                            l314 056A                            l403 0D34  
                          l323 0DE8                            l316 058E                            l308 0489  
                          l350 0E13                            l318 05B2                            l406 0D92  
                          l190 0FA5                            l344 0466                            l192 0FC1  
                          l505 0E3F                            l353 0EAC                            l193 0FBD  
                          l450 07F2                            l362 0680                            l418 0D79  
                          l347 0DF1                            l363 068A                            l419 0D7E  
                          l452 07FA                            l372 0732                            l364 0694  
                          l356 0F76                            l196 0FD9                            l365 069E  
                          l366 06A8                            l455 0D6A                            l367 06B2  
                          l448 07ED                            l368 06BC                            l458 0D22  
                          l810 0F0C                            l397 0D1B                            l657 0DB2  
                          l659 0DC6                            _RA0 0060                            _RA1 0061  
                          _RB0 0068                            _RA2 0062                            _RB1 0069  
                          _RA3 0063                            _RA4 0064                            _RB2 006A  
                          _RA5 0065                            _RB3 006B                            _RA6 0066  
                          _RD0 0078                            _RC2 0072                            _RB4 006C  
                          _RA7 0067                            _RB5 006D                            _RB6 006E  
                          _RB7 006F                            _RD4 007C                            _RD5 007D  
                          _RD6 007E                            _RD7 007F                   __CFG_CPD$OFF 0000  
                          _Map 0DC7                   __CFG_BORV$LO 0000                            wreg 0009  
               eepromRead@data 0022                   __CFG_LVP$OFF 0000                   __CFG_ZCD$OFF 0000  
                         ?_Map 002F                           l2531 0DBC                           l2523 0DA7  
                         l2611 02B8                           l2603 0276                           l2541 0EB3  
                         l2533 0DC2                           l2525 0DAA                           l2621 0320  
                         l2613 02C6                           l2605 02B6                           l2701 04F2  
                         l2551 0EC7                           l2543 0EB8                           l2527 0DAE  
                         l2631 0387                           l2623 032D                           l2615 02D3  
                         l2711 0525                           l2703 04F3                           l2801 0E25  
                         l2561 0EDB                           l2553 0EC9                           l2545 0EBA  
                         l2537 0EAD                           l2529 0DB7                           l2641 03EE  
                         l2633 0394                           l2625 033A                           l2617 02DF  
                         l2721 054F                           l2713 052A                           l2705 04FC  
                         l2811 0E35                           l2803 0E2E                           l2571 0EF8  
                         l2563 0EDF                           l2555 0ECF                           l2547 0EBE  
                         l2539 0EAF                           l2651 0455                           l2643 03FB  
                         l2635 03A1                           l2627 0346                           l2619 02F1  
                         l2731 0586                           l2723 0554                           l2715 0536  
                         l2707 050E                           l2813 0E36                           l2805 0E2F  
                         l2821 0D2E                           l2565 0EEE                           l2557 0ED2  
                         l2573 0EFE                           l2549 0EC3                           l2581 0DC7  
                         l2653 0459                           l2645 0408                           l2637 03AD  
                         l2629 0358                           l2741 0DED                           l2733 0598  
                         l2725 0560                           l2717 053B                           l2709 0517  
                         l2661 0475                           l2901 0F8D                           l2815 0E39  
                         l2807 0E31                           l2823 0D2F                           l2751 07D8  
                         l2575 0F03                           l2567 0EF2                           l2559 0ED7  
                         l2647 0414                           l2639 03BF                           l2743 0DEE  
                         l2735 05AA                           l2727 0565                           l2719 0540  
                         l2671 0492                           l2663 047B                           l2655 0469  
                         l2831 05D1                           l2911 0FA7                           l2903 0F94  
                         l2817 0E3C                           l2809 0E33                           l2825 0D30  
                         l2593 0D1C                           l2761 07E2                           l2753 07DC  
                         l2577 0F08                           l2569 0EF3                           l2585 0D5B  
                         l2649 0426                           l2745 0DF0                           l2737 05CC  
                         l2729 0574                           l2681 04B0                           l2673 0498  
                         l2665 047F                           l2657 046D                           l2833 05D3  
                         l2921 0FBF                           l2913 0FAC                           l2905 0F9A  
                         l2771 0D15                           l2827 0D31                           l2819 0D2B  
                         l2595 0D21                           l2763 07E6                           l2755 07DD  
                         l2587 0D5D                           l2747 0DF5                           l2739 0DE9  
                         l2691 04CE                           l2683 04B6                           l2675 049E  
                         l2667 0485                           l2659 0473                           l2851 0690  
                         l2843 0646                           l2835 0634                           l2931 0FDF  
                         l2923 0FC3                           l2915 0FB1                           l2907 0F9D  
                         l2773 0D1A                           l2829 0D33                           l2765 07EA  
                         l2757 07DF                           l2589 0D63                           l2693 04D4  
                         l2685 04BC                           l2677 04A4                           l2669 048D  
                         l2861 06C2                           l2853 069A                           l2845 0676  
                         l2837 0638                           l2781 0D75                           l2597 0E78  
                         l2941 0FF2                           l2933 0FE0                           l2925 0FC8  
                         l2917 0FB6                           l2909 0FA2                           l2775 0D23  
                         l2767 07F3                           l2759 07E0                           l2695 04DA  
                         l2687 04C2                           l2679 04AA                           l2871 06D7  
                         l2863 06C6                           l2855 06A4                           l2847 067C  
                         l2839 063F                           l2791 0D91                           l2783 0D7F  
                         l2599 0EAB                           l2943 0FF6                           l2935 0FE6  
                         l2927 0FCD                           l2919 0FBB                           l2793 0E14  
                         l2769 07F9                           l2697 04E0                           l2689 04C8  
                         l2881 072D                           l2873 06DC                           l2865 06CC  
                         l2857 06AE                           l2849 0686                           l2777 0D6D  
                         l2785 0D8D                           l2945 0FFA                           l2937 0FEC  
                         l2929 0FD3                           l2795 0E1F                           l2699 04E6  
                         l2883 0730                           l2875 06DD                           l2867 06D2  
                         l2859 06B8                           l2779 0D71                           l2787 0D8E  
                         l2939 0FED                           l2891 0F80                           l2797 0E21  
                         l2885 0731                           l2877 06E2                           l2869 06D3  
                         l2789 0D8F                           l2893 0F83                           l2799 0E24  
                         l2879 06E6                           l2887 0F0D                           l2895 0F89  
                         l2897 0F8A                           l2889 0F77                           l2899 0F8B  
                         u2100 0EBE                           u2101 0EBD                           u2110 0ECF  
                         u2111 0ECE                           u2130 0EDF                           u2050 0DAE  
                         u2131 0EDE                           u2051 0DAD                           u2300 03FB  
                         u2125 0ED3                           u2301 03FA                           u2205 0E82  
                         u2150 0EEE                           u2310 0414                           u2151 0EED  
                         u2311 0413                           u2215 0E8F                           u2080 0DC2  
                         u2320 0466                           u2240 02C6                           u2145 0EE0  
                         u2081 0DC1                           u2065 0DB3                           u2321 0465  
                         u2305 03F7                           u2241 02C5                           u2225 0E95  
                         u2170 0EFE                           u2090 0EB3                           u2250 02DF  
                         u2410 053B                           u2330 0473                           u2171 0EFD  
                         u2155 0EEA                           u2091 0EB2                           u2075 0DB8  
                         u2315 0410                           u2251 02DE                           u2411 053A  
                         u2331 0472                           u2235 0EA2                           u2180 0F03  
                         u2260 032D                           u2500 05AA                           u2420 054F  
                         u2404 0530                           u2340 047B                           u2181 0F02  
                         u2165 0EF4                           u2325 0462                           u2261 032C  
                         u2245 02C2                           u2501 05A9                           u2421 054E  
                         u2405 052F                           u2341 047A                           u2270 0346  
                         u2510 0DF5                           u2350 0485                           u2271 0345  
                         u2255 02DB                           u2511 0DF4                           u2351 0484  
                         u2280 0394                           u2440 0565                           u2360 04F2  
                         u2600 0686                           u2281 0393                           u2265 0329  
                         u2441 0564                           u2361 04F1                           u2601 0685  
                         u2290 03AD                           u2450 0574                           u2434 055A  
                         u2370 04FC                           u2610 0690                           u2291 03AC  
                         u2275 0342                           u2451 0573                           u2435 0559  
                         u2371 04FB                           u2611 068F                           u2195 0E7C  
                         u2540 07F2                           u2380 050E                           u2620 069A  
                         u2700 0F9A                           u2541 07F1                           u2285 0390  
                         u2525 0DF9                           u2381 050D                           u2621 0699  
                         u2701 0F99                           u2550 07F9                           u2470 0586  
                         u2390 0525                           u2630 06A4                           u2710 0FA2  
                         u2551 07F8                           u2295 03A9                           u2535 0E05  
                         u2471 0585                           u2391 0524                           u2631 06A3  
                         u2711 0FA1                           u2480 0598                           u2464 057A  
                         u2640 06AE                           u2560 0D71                           u2720 0FAC  
                         u2481 0597                           u2465 0579                           u2641 06AD  
                         u2561 0D70                           u2721 0FAB                           u2650 06B8  
                         u2570 063F                           u2730 0FB1                           u2651 06B7  
                         u2571 063E                           u2731 0FB0                           u2660 06C2  
                         u2580 0645                           u2740 0FB6                           u2661 06C1  
                         u2581 0644                           u2741 0FB5                           u2494 059E  
                         u2670 06CC                           u2590 067C                           u2750 0FBB  
                         u2495 059D                           u2671 06CB                           u2591 067B  
                         u2751 0FBA                           u2680 06D2                           u2760 0FCD  
                         u2681 06D1                           u2761 0FCC                           u2770 0FD3  
                         u2690 0F94                           u2771 0FD2                           u2691 0F93  
                         u2780 0FDF                           u2781 0FDE                           u2790 0FEC  
                         u2791 0FEB                           Map@x 002F                           _WPUA 0F39  
                         _WPUB 0F44                           _WPUC 0F4F                           _WPUD 0F5A  
                         _WPUE 0F65                   __CFG_WRT$OFF 0000                  __CFG_FCMEN$ON 0000  
                  ?_IO_MAPPING 0070                           _main 0F77                           fsr0h 0005  
                         fsr1h 0007                           indf0 0000                           fsr0l 0004  
                         indf1 0001                           fsr1l 0006                           btemp 007E  
                __CFG_BOREN$ON 0000                           start 0224                    ?_PS2Command 0070  
                __CFG_CSWEN$ON 0000                lutInit@position 004A              i1reversebyte@byte 0073  
                        ??_Map 0039       configureController@lxMax 004E       configureController@lxMin 004D  
     configureController@lyMax 0050       configureController@lyMin 004F       configureController@rxMax 0052  
     configureController@rxMin 0051       configureController@ryMax 0054       configureController@ryMin 0053  
                        _ADACQ 009D                          ?_main 0070                          _ADCLK 0098  
                        _ADPCH 009E                __end_of_adcInit 0D35                          _ADREF 009A  
              __end_of___awdiv 0F0D                          _ADPRE 009C                  __CFG_WDTE$OFF 0000  
              ___awdiv@divisor 0026       main@slaveSelectStatePrev 00EC                          i1l113 07D5  
                        i1l125 0025                          i1l145 00A9                          i1l181 0215  
                        i1l422 0D09                          i1l431 0D14                          i1l183 0222  
                        i1l425 0D0E                          i1l353 0E75                          i1l177 01F6  
                        i1l428 07FF                ___awdiv@counter 002B                          _TRISA 0011  
                        _TRISB 0012                          _TRISC 0013                          _TRISD 0014  
                        _TRISE 0015    __end_of_configureController 0733                __end_of_readADC 0E14  
              __end_of_picInit 0D93                          _index 007A  __size_of_readControllerAnalog 006A  
                        _lutLX 26F0                          _lutLY 25F0                          _lutRX 24F0  
                        _lutRY 23F0                __end_of_lutInit 0467                __end_of_ppsLock 0D2B  
              __end_of_spiInit 0D7F                __end_of_spiRead 0D15                          status 0003  
                        wtemp0 007E                  PS2Command@cmd 0075                 __CFG_MCLRE$OFF 0000  
              __initialization 0226                   __end_of_main 1000                         ??_main 0059  
          __size_of_IO_MAPPING 002C            __size_of_PS2Command 0220                         _ADCON0 0093  
                       _ADCON1 0094                         _ADCON2 0095                         _ADRESH 008D  
                       _ADRESL 008C               ___awdiv@dividend 0028                         _ANSELA 0F38  
                       _ANSELB 0F43                         _ANSELC 0F4E                         _ANSELD 0F59  
                       _ANSELE 0F64           _PreviousDigitalByte1 00B0           _PreviousDigitalByte2 0120  
                       i1l2111 076F                         i1l2103 0D09                         i1l2121 0798  
                       i1l2113 0778                         i1l2105 0734                         i1l2131 07C0  
                       i1l2123 07A0                         i1l2115 0780                         i1l2107 0765  
                       _RC5PPS 0F25                         i1l2133 07C8                         i1l2125 07A8  
                       i1l2117 0788                         i1l2109 076B                         i1l2301 0066  
                       i1l2127 07B0                         i1l2119 0790                         i1l2135 07D1  
                       i1l2143 07FC                         i1l2311 008E                         i1l2303 0068  
                       i1l2129 07B8                         i1l2137 0D0F                         i1l2401 015D  
                       i1l2321 00B2                         i1l2313 0094                         i1l2305 006E  
                       i1l2139 0D12                         i1l2251 0E41                         i1l2411 016E  
                       i1l2403 0160                         i1l2331 00C5                         i1l2323 00B6  
                       i1l2315 009B                         i1l2253 0E74                         i1l2421 0196  
                       i1l2413 0172                         i1l2405 0164                         i1l2341 00E4  
                       i1l2333 00D6                         i1l2325 00B9                         i1l2317 00A6  
                       i1l2309 0074                         i1l2261 0012                         i1l2423 019C  
                       i1l2415 0173                         i1l2351 00F3                         i1l2343 00E8  
                       i1l2327 00BF                         i1l2319 00AC                         i1l2271 002D  
                       i1l2263 0018                         i1l2441 01E4                         i1l2433 01AE  
                       i1l2425 01A0                         i1l2409 016A                         i1l2361 0115  
                       i1l2353 00F8                         i1l2345 00E9                         i1l2337 00DC  
                       i1l2281 003D                         i1l2273 0030                         i1l2265 001E  
                       i1l2257 0006                         i1l2451 01FB                         i1l2443 01E6  
                       i1l2427 01A4                         i1l2419 0175                         i1l2371 0129  
                       i1l2363 0117                         i1l2355 00FD                         i1l2347 00EA  
                       i1l2339 00E1                         i1l2291 0052                         i1l2283 0043  
                       i1l2275 0032                         i1l2267 0023                         i1l2259 000B  
                       i1l2461 021B                         i1l2453 0201                         i1l2445 01EA  
                       i1l2429 01A9                         i1l2381 0137                         i1l2357 0102  
                       i1l2349 00EE                         i1l2293 0057                         i1l2285 0046  
                       i1l2277 0038                         i1l2269 0027                         i1l2437 01D1  
                       i1l2455 0206                         i1l2463 0220                         i1l2447 01EC  
                       i1l2391 014C                         i1l2383 013C                         i1l2367 011C  
                       i1l2359 0113                         i1l2295 005D                         i1l2287 004A  
                       i1l2279 003B                         i1l2439 01DC                         i1l2457 020B  
                       i1l2449 01F2                         i1l2393 014F                         i1l2385 0141  
                       i1l2369 0121                         i1l2297 0061                         i1l2289 004E  
                       i1l2459 0210                         i1l2395 0153                         i1l2387 0142  
                       i1l2379 012E                         i1l2299 0065                         i1l2397 0158  
                       i1l2389 0146                 __CFG_WDTCCS$SC 0000                         u170_25 0E4B  
                       u155_20 0D0E                         u155_21 0D0D                         u171_25 0E58  
                       u156_20 076B                         u180_20 005D                         u156_21 076A  
                       u180_21 005C                         u172_25 0E5E                         u181_20 009B  
                       u181_21 009A                         u173_25 0E6B                         u190_20 01FB  
                       u182_20 00A6                         u174_20 000B                         u190_21 01FA  
                       u182_21 00A5                         u174_21 000A                         u191_20 0206  
                       u183_20 00B2                         u175_20 001E                         u191_21 0205  
                       u183_21 00B1                         u175_21 001D                         u192_20 0210  
                       u184_20 00F8                         u176_20 0023                         u192_21 020F  
                       u184_21 00F7                         u176_21 0022                         _AN_btn 0065  
                       u193_20 021B                         u185_20 0102                         u177_20 002D  
                       u193_21 021A                         u185_21 0101                         u177_21 002C  
                       u169_25 0E45                         u186_20 0121                         u178_20 0038  
                       u186_21 0120                         u178_21 0037                         u187_20 013C  
                       u179_20 0043                         u187_21 013B                         u179_21 0042  
                       u188_20 01A9                         u188_21 01A8                         u189_20 01F2  
                       u189_21 01F1                         _SSP1IE 38C8                         _SSP1IF 3878  
               __CFG_PWRTE$OFF 0000           __size_of_eepromWrite 0025                         ___wmul 0DA7  
                    ??_adcInit 0020                      ??___awdiv 002A                 __CFG_STVREN$ON 0000  
      __size_of_pollController 00A3                         _lxData 0060                         _lyData 005F  
              eepromWrite@data 0020                         _rxData 0062               ___awdiv@quotient 002D  
                       _ryData 0061                   ?_reversebyte 0070                      ??_readADC 0022  
                    ??_picInit 0024                   __pdataCOMMON 007B                      ??_lutInit 0039  
             __end_of_spiWrite 0800                      ??_ppsLock 0020                      ??_spiInit 0023  
                    ??_spiRead 0070              _IndexDigitalByte1 00A8              _IndexDigitalByte2 00A0  
              _MAP_LARGE_MOTOR 005B        __end_of__initialization 0272                 __pcstackCOMMON 0070  
                 __pidataBANK0 0D4D                   __pidataBANK1 0D93         _DigitalControllerByte1 00C0  
       _DigitalControllerByte2 00B8              eepromRead@address 0021        __size_of_readController 016A  
                   _cmdCounter 0079                     __pbssBANK0 0066                     __pbssBANK1 00A0  
                   __pbssBANK2 0120                   ??_IO_MAPPING 0020                     _analogMode 0078  
                 ??_PS2Command 0074                     __pmaintext 0F77                        ?___wmul 0020  
                   __pintentry 0004        __size_of_spiReceiveWait 0006            __CFG_RSTOSC$HFINT32 0000  
           __size_of_nvmUnlock 0007             __size_of_ppsUnlock 0007                     _eepromRead 0D59  
           __end_of_IO_MAPPING 0E40                        _AN_temp 007B                        _AN_prev 005A  
   eepromWrite@interruptStatus 0022                        _NVMADRH 081B                        _NVMADRL 081A  
                      _NVMDATL 081C                        _NVMCON2 081F             __end_of_PS2Command 0224  
                      _PPSLOCK 0E8F                        _SSP1BUF 018C                     _escapeMode 0077  
     readController@analogMode 0022         __size_ofi1_reversebyte 0036   __end_of_readControllerAnalog 0F77  
         __CFG_SCANE$available 0000                      ?_spiWrite 0070                        _adcInit 0D2B  
                      ___awdiv 0EAD                 _pollController 0733                __size_of___wmul 0020  
              _MAP_SMALL_MOTOR 005C                        __ptext1 0F0D                        __ptext2 0E76  
                      __ptext3 0D7F                        __ptext4 0D6B                        __ptext5 05D1  
                      __ptext6 0467                        __ptext7 0DE9                        __ptext8 0276  
                      __ptext9 0D59                        _readADC 0DE9                   __size_of_Map 0022  
                      _picInit 0D7F           __size_of_reversebyte 0037                        _lutInit 0276  
                      _ppsLock 0D23                        _spiInit 0D6B                        _spiRead 0D0F  
                      clrloop0 0D36           end_of_initialization 0272         _CONTROL_RESPONSE_byte3 0069  
       _CONTROL_RESPONSE_byte4 0068         _CONTROL_RESPONSE_byte5 0067                      _MODE_LOCK 006D  
                      init_ram 0D41   __size_of_configureController 0162                        initloop 0D42  
            __end_of_nvmUnlock 0D23              __end_of_ppsUnlock 0D1C         __end_of_pollController 07D6  
                   ??_spiWrite 0070                reversebyte@byte 0023          __CFG_WDTCPS$WDTCPS_31 0000  
                    Map@outMax 0037                      Map@outMin 0035                  i1_reversebyte 0E40  
                  ?_eepromRead 0070                 _readController 0467                      _TRISAbits 0011  
                    _TRISCbits 0013                      _TRISDbits 0014                    spiWrite@dat 0070  
             __CFG_FEXTOSC$OFF 0000     _INIT_PRESSURE_SENSOR_byte3 006B     _INIT_PRESSURE_SENSOR_byte4 006A  
           _digitalStateSecond 0063                  ??_eepromWrite 0021                ?_pollController 0070  
               _spiReceiveWait 0D09                 __end_of___wmul 0DC7                  __pidataCOMMON 0003  
               ?i1_reversebyte 0070         __end_of_readController 05D1            start_initialization 0226  
                  __end_of_Map 0DE9           _readControllerAnalog 0F0D                  _debounceLoops 005E  
          __size_of_eepromRead 0012               __CFG_LPBOREN$OFF 0000         __end_of_spiReceiveWait 0D0F  
          __end_of_eepromWrite 07FB                       ??___wmul 0024                    __pdataBANK0 005A  
                  __pdataBANK1 00D8                ?_readController 0070                    __pbssBIGRAM 23F0  
                  __pbssCOMMON 0076                      ___latbits 0003                  __pcstackBANK0 0020  
                __pcstackBANK1 00EC          configureController@lx 0055          configureController@ly 0056  
        configureController@rx 0057          configureController@ry 0058          ?_readControllerAnalog 0070  
               _responseLength 005D              _analogStateSecond 00C8                ?_spiReceiveWait 0070  
                     ?_adcInit 0070                       ?___awdiv 0026                ??i1_reversebyte 0070  
             __CFG_PPS1WAY$OFF 0000              __size_of_spiWrite 0005            _configureController 05D1  
                     ?_readADC 0020                       ?_picInit 0070                       ?_lutInit 0070  
                     ?_ppsLock 0070                       ?_spiInit 0020                       ?_spiRead 0070  
           eepromWrite@address 0021           spiInit@sTransmitEdge 0022           ?_configureController 0070  
               ___wmul@product 0024                    _eepromWrite 07D6                      clear_ram0 0D35  
                     _AN_latch 006C             spiInit@sDataSample 0020                       _AN_timer 0066  
                    _nvmUnlock 0D1C                       Map@inMax 0033                       Map@inMin 0031  
                    _ppsUnlock 0D15                       _SSP1CON1 0190                       _SSP1STAT 018F  
                ??_reversebyte 0020                     _ADCON0bits 0093              ___wmul@multiplier 0020  
                 lutInit@lxMax 0043                   lutInit@lxMin 0042                   lutInit@lyMax 0045  
                 lutInit@lyMin 0044              _digitalStateFirst 0064                   lutInit@rxMax 0047  
                 lutInit@rxMin 0046                   lutInit@ryMax 0049                   lutInit@ryMin 0048  
                 ??_eepromRead 0020                       _WPUDbits 0F5A                      main@count 00ED  
       ??_readControllerAnalog 0029          ??_configureController 004C               ??_pollController 0070  
           __end_of_eepromRead 0D6B                     ?_nvmUnlock 0070                     ?_ppsUnlock 0070  
             __size_of_adcInit 000A               __size_of___awdiv 0060                 readADC@channel 0020  
             _analogStateFirst 00D0               __size_of_readADC 002B               __size_of_picInit 0014  
          __end_of_reversebyte 0EAD               __size_of_lutInit 01F1                       __ptext10 0DC7  
                     __ptext11 0DA7                       __ptext20 0E40                       __ptext12 0EAD  
                     __ptext21 07FB                       __ptext13 07D6                       __ptext22 0D0F  
                     __ptext14 0D1C                       __ptext23 0D09                       __ptext15 0D2B  
                     __ptext24 0733                       __ptext16 0E14                       __ptext17 0D15  
                     __ptext18 0D23               __size_of_ppsLock 0008               __size_of_spiInit 0014  
             __size_of_spiRead 0006                  __size_of_main 0089           __CFG_WDTCWS$WDTCWS_7 0000  
                     _response 00D8               ??_readController 0020                       _spiWrite 07FB  
                     int$flags 007E                   spiInit@sType 0023                main@slaveSelect 00EE  
                 _SSP1STATbits 018F              spiInit@sClockIdle 0021                     _INTCONbits 000B  
                  _NVMCON1bits 081E         pollController@response 0071                       intlevel1 0000  
                   _IO_MAPPING 0E14               ??_spiReceiveWait 0070              __CFG_CLKOUTEN$OFF 0000  
                   _PS2Command 0004                    ??_nvmUnlock 0020                    ??_ppsUnlock 0020  
                  _reversebyte 0E76                    _previousCmd 0076                   ?_eepromWrite 0020  
