

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Dec 05 09:51:22 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18876
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	dabs	1,0xCA0,32
    46                           	dabs	1,0xC20,80
    47                           	dabs	1,0xBA0,80
    48                           	dabs	1,0xB30,64
    49                           	dabs	1,0xB20,16
    50                           	dabs	1,0xAA0,80
    51                           	dabs	1,0xA20,80
    52                           	dabs	1,0x9A0,80
    53                           	dabs	1,0x920,80
    54                           	dabs	1,0x8A0,80
    55                           	dabs	1,0x820,80
    56                           	dabs	1,0x7E0,16
    57                           	dabs	1,0x7A0,64
    58                           	dabs	1,0x720,80
    59                           	dabs	1,0x6A0,80
    60                           	dabs	1,0x650,32
    61                           	dabs	1,0x23F0,0,_lutRY
    62                           	dabs	1,0x24F0,0,_lutRX
    63                           	dabs	1,0x25F0,0,_lutLY
    64                           	dabs	1,0x26F0,0,_lutLX
    65                           	dabs	1,0x7E,2
    66  0000                     
    67                           ; Version 2.10
    68                           ; Generated 31/07/2019 GMT
    69                           ; 
    70                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC16F18876 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101  0000                     	;# 
   102  0001                     	;# 
   103  0002                     	;# 
   104  0003                     	;# 
   105  0004                     	;# 
   106  0005                     	;# 
   107  0006                     	;# 
   108  0007                     	;# 
   109  0008                     	;# 
   110  0009                     	;# 
   111  000A                     	;# 
   112  000B                     	;# 
   113  000C                     	;# 
   114  000D                     	;# 
   115  000E                     	;# 
   116  000F                     	;# 
   117  0010                     	;# 
   118  0011                     	;# 
   119  0012                     	;# 
   120  0013                     	;# 
   121  0014                     	;# 
   122  0015                     	;# 
   123  0016                     	;# 
   124  0017                     	;# 
   125  0018                     	;# 
   126  0019                     	;# 
   127  001A                     	;# 
   128  001C                     	;# 
   129  001C                     	;# 
   130  001D                     	;# 
   131  001D                     	;# 
   132  001E                     	;# 
   133  001F                     	;# 
   134  008C                     	;# 
   135  008C                     	;# 
   136  008D                     	;# 
   137  008E                     	;# 
   138  008E                     	;# 
   139  008F                     	;# 
   140  0090                     	;# 
   141  0090                     	;# 
   142  0091                     	;# 
   143  0093                     	;# 
   144  0094                     	;# 
   145  0095                     	;# 
   146  0096                     	;# 
   147  0097                     	;# 
   148  0098                     	;# 
   149  0099                     	;# 
   150  009A                     	;# 
   151  009B                     	;# 
   152  009C                     	;# 
   153  009D                     	;# 
   154  009E                     	;# 
   155  010C                     	;# 
   156  010D                     	;# 
   157  010E                     	;# 
   158  010E                     	;# 
   159  010F                     	;# 
   160  0110                     	;# 
   161  0110                     	;# 
   162  0111                     	;# 
   163  0112                     	;# 
   164  0112                     	;# 
   165  0113                     	;# 
   166  0114                     	;# 
   167  0114                     	;# 
   168  0115                     	;# 
   169  0116                     	;# 
   170  0116                     	;# 
   171  0117                     	;# 
   172  0119                     	;# 
   173  0119                     	;# 
   174  0119                     	;# 
   175  011A                     	;# 
   176  011A                     	;# 
   177  011A                     	;# 
   178  011B                     	;# 
   179  011B                     	;# 
   180  011B                     	;# 
   181  011B                     	;# 
   182  011B                     	;# 
   183  011C                     	;# 
   184  011C                     	;# 
   185  011C                     	;# 
   186  011D                     	;# 
   187  011D                     	;# 
   188  011D                     	;# 
   189  011E                     	;# 
   190  011E                     	;# 
   191  011E                     	;# 
   192  011F                     	;# 
   193  011F                     	;# 
   194  011F                     	;# 
   195  011F                     	;# 
   196  011F                     	;# 
   197  018C                     	;# 
   198  018D                     	;# 
   199  018E                     	;# 
   200  018F                     	;# 
   201  0190                     	;# 
   202  0191                     	;# 
   203  0192                     	;# 
   204  0196                     	;# 
   205  0197                     	;# 
   206  0198                     	;# 
   207  0199                     	;# 
   208  019A                     	;# 
   209  019B                     	;# 
   210  019C                     	;# 
   211  020C                     	;# 
   212  020C                     	;# 
   213  020D                     	;# 
   214  020E                     	;# 
   215  020F                     	;# 
   216  020F                     	;# 
   217  0210                     	;# 
   218  0210                     	;# 
   219  0211                     	;# 
   220  0211                     	;# 
   221  0212                     	;# 
   222  0212                     	;# 
   223  0213                     	;# 
   224  0214                     	;# 
   225  0215                     	;# 
   226  0215                     	;# 
   227  0216                     	;# 
   228  0216                     	;# 
   229  0217                     	;# 
   230  0217                     	;# 
   231  0218                     	;# 
   232  0218                     	;# 
   233  0219                     	;# 
   234  021A                     	;# 
   235  021B                     	;# 
   236  021B                     	;# 
   237  021C                     	;# 
   238  021C                     	;# 
   239  021D                     	;# 
   240  021D                     	;# 
   241  021E                     	;# 
   242  021F                     	;# 
   243  028C                     	;# 
   244  028C                     	;# 
   245  028D                     	;# 
   246  028D                     	;# 
   247  028E                     	;# 
   248  028F                     	;# 
   249  0290                     	;# 
   250  0290                     	;# 
   251  0291                     	;# 
   252  0292                     	;# 
   253  0292                     	;# 
   254  0293                     	;# 
   255  0293                     	;# 
   256  0294                     	;# 
   257  0295                     	;# 
   258  0296                     	;# 
   259  0296                     	;# 
   260  0297                     	;# 
   261  0298                     	;# 
   262  0298                     	;# 
   263  0299                     	;# 
   264  0299                     	;# 
   265  029A                     	;# 
   266  029B                     	;# 
   267  029C                     	;# 
   268  029C                     	;# 
   269  029D                     	;# 
   270  030C                     	;# 
   271  030C                     	;# 
   272  030D                     	;# 
   273  030E                     	;# 
   274  030F                     	;# 
   275  0310                     	;# 
   276  0310                     	;# 
   277  0311                     	;# 
   278  0312                     	;# 
   279  0313                     	;# 
   280  0314                     	;# 
   281  0314                     	;# 
   282  0315                     	;# 
   283  0316                     	;# 
   284  0317                     	;# 
   285  0318                     	;# 
   286  0318                     	;# 
   287  0319                     	;# 
   288  031A                     	;# 
   289  031B                     	;# 
   290  031C                     	;# 
   291  031C                     	;# 
   292  031D                     	;# 
   293  031E                     	;# 
   294  031F                     	;# 
   295  038C                     	;# 
   296  038C                     	;# 
   297  038D                     	;# 
   298  038E                     	;# 
   299  0390                     	;# 
   300  0390                     	;# 
   301  0391                     	;# 
   302  0392                     	;# 
   303  040C                     	;# 
   304  040D                     	;# 
   305  040E                     	;# 
   306  040F                     	;# 
   307  0410                     	;# 
   308  0411                     	;# 
   309  0416                     	;# 
   310  0416                     	;# 
   311  0417                     	;# 
   312  0418                     	;# 
   313  0418                     	;# 
   314  0419                     	;# 
   315  041A                     	;# 
   316  041A                     	;# 
   317  041B                     	;# 
   318  041C                     	;# 
   319  041C                     	;# 
   320  041D                     	;# 
   321  041E                     	;# 
   322  041F                     	;# 
   323  048C                     	;# 
   324  048C                     	;# 
   325  048D                     	;# 
   326  048E                     	;# 
   327  048F                     	;# 
   328  048F                     	;# 
   329  0490                     	;# 
   330  0491                     	;# 
   331  0492                     	;# 
   332  0492                     	;# 
   333  0493                     	;# 
   334  0494                     	;# 
   335  0495                     	;# 
   336  0495                     	;# 
   337  0496                     	;# 
   338  0497                     	;# 
   339  0498                     	;# 
   340  0499                     	;# 
   341  049A                     	;# 
   342  049B                     	;# 
   343  049C                     	;# 
   344  049D                     	;# 
   345  050C                     	;# 
   346  050C                     	;# 
   347  050D                     	;# 
   348  050E                     	;# 
   349  050F                     	;# 
   350  050F                     	;# 
   351  0510                     	;# 
   352  0511                     	;# 
   353  0512                     	;# 
   354  0512                     	;# 
   355  0513                     	;# 
   356  0514                     	;# 
   357  0515                     	;# 
   358  0515                     	;# 
   359  0516                     	;# 
   360  0517                     	;# 
   361  0518                     	;# 
   362  0519                     	;# 
   363  051A                     	;# 
   364  051B                     	;# 
   365  051C                     	;# 
   366  051D                     	;# 
   367  058C                     	;# 
   368  058C                     	;# 
   369  058D                     	;# 
   370  058E                     	;# 
   371  058F                     	;# 
   372  058F                     	;# 
   373  0590                     	;# 
   374  0591                     	;# 
   375  0592                     	;# 
   376  0593                     	;# 
   377  060C                     	;# 
   378  060D                     	;# 
   379  060E                     	;# 
   380  060F                     	;# 
   381  0610                     	;# 
   382  0611                     	;# 
   383  0612                     	;# 
   384  0613                     	;# 
   385  0614                     	;# 
   386  0616                     	;# 
   387  0617                     	;# 
   388  0618                     	;# 
   389  0619                     	;# 
   390  061A                     	;# 
   391  061B                     	;# 
   392  061C                     	;# 
   393  061D                     	;# 
   394  061E                     	;# 
   395  068C                     	;# 
   396  068D                     	;# 
   397  068E                     	;# 
   398  068F                     	;# 
   399  0690                     	;# 
   400  0691                     	;# 
   401  0692                     	;# 
   402  0693                     	;# 
   403  0694                     	;# 
   404  070C                     	;# 
   405  070D                     	;# 
   406  070E                     	;# 
   407  070F                     	;# 
   408  0710                     	;# 
   409  0711                     	;# 
   410  0712                     	;# 
   411  0713                     	;# 
   412  0714                     	;# 
   413  0716                     	;# 
   414  0717                     	;# 
   415  0718                     	;# 
   416  0719                     	;# 
   417  071A                     	;# 
   418  071B                     	;# 
   419  071C                     	;# 
   420  071D                     	;# 
   421  071E                     	;# 
   422  0796                     	;# 
   423  0797                     	;# 
   424  0798                     	;# 
   425  0799                     	;# 
   426  079A                     	;# 
   427  079B                     	;# 
   428  080C                     	;# 
   429  080D                     	;# 
   430  080E                     	;# 
   431  080F                     	;# 
   432  0810                     	;# 
   433  0811                     	;# 
   434  0812                     	;# 
   435  0813                     	;# 
   436  0814                     	;# 
   437  081A                     	;# 
   438  081B                     	;# 
   439  081C                     	;# 
   440  081D                     	;# 
   441  081E                     	;# 
   442  081F                     	;# 
   443  088C                     	;# 
   444  088D                     	;# 
   445  088E                     	;# 
   446  088F                     	;# 
   447  0890                     	;# 
   448  0891                     	;# 
   449  0892                     	;# 
   450  0893                     	;# 
   451  0895                     	;# 
   452  0896                     	;# 
   453  0897                     	;# 
   454  0898                     	;# 
   455  0899                     	;# 
   456  089A                     	;# 
   457  089B                     	;# 
   458  090C                     	;# 
   459  090E                     	;# 
   460  090F                     	;# 
   461  091F                     	;# 
   462  098F                     	;# 
   463  098F                     	;# 
   464  0990                     	;# 
   465  0991                     	;# 
   466  0992                     	;# 
   467  0993                     	;# 
   468  0994                     	;# 
   469  0995                     	;# 
   470  0996                     	;# 
   471  0997                     	;# 
   472  0E0F                     	;# 
   473  0E10                     	;# 
   474  0E11                     	;# 
   475  0E12                     	;# 
   476  0E13                     	;# 
   477  0E14                     	;# 
   478  0E15                     	;# 
   479  0E16                     	;# 
   480  0E17                     	;# 
   481  0E18                     	;# 
   482  0E19                     	;# 
   483  0E1A                     	;# 
   484  0E1B                     	;# 
   485  0E1C                     	;# 
   486  0E1D                     	;# 
   487  0E1E                     	;# 
   488  0E1F                     	;# 
   489  0E20                     	;# 
   490  0E21                     	;# 
   491  0E22                     	;# 
   492  0E23                     	;# 
   493  0E24                     	;# 
   494  0E25                     	;# 
   495  0E26                     	;# 
   496  0E27                     	;# 
   497  0E28                     	;# 
   498  0E29                     	;# 
   499  0E2A                     	;# 
   500  0E2B                     	;# 
   501  0E2C                     	;# 
   502  0E2D                     	;# 
   503  0E2E                     	;# 
   504  0E2F                     	;# 
   505  0E30                     	;# 
   506  0E31                     	;# 
   507  0E32                     	;# 
   508  0E33                     	;# 
   509  0E34                     	;# 
   510  0E35                     	;# 
   511  0E36                     	;# 
   512  0E37                     	;# 
   513  0E8F                     	;# 
   514  0E90                     	;# 
   515  0E91                     	;# 
   516  0E92                     	;# 
   517  0E93                     	;# 
   518  0E94                     	;# 
   519  0E95                     	;# 
   520  0E96                     	;# 
   521  0E97                     	;# 
   522  0E9C                     	;# 
   523  0E9D                     	;# 
   524  0E9E                     	;# 
   525  0EA1                     	;# 
   526  0EA2                     	;# 
   527  0EA3                     	;# 
   528  0EA4                     	;# 
   529  0EA5                     	;# 
   530  0EA9                     	;# 
   531  0EAA                     	;# 
   532  0EAB                     	;# 
   533  0EAC                     	;# 
   534  0EB1                     	;# 
   535  0EB2                     	;# 
   536  0EB3                     	;# 
   537  0EB8                     	;# 
   538  0EB9                     	;# 
   539  0EBA                     	;# 
   540  0EBB                     	;# 
   541  0EBC                     	;# 
   542  0EBD                     	;# 
   543  0EBE                     	;# 
   544  0EC3                     	;# 
   545  0EC5                     	;# 
   546  0EC6                     	;# 
   547  0EC7                     	;# 
   548  0EC8                     	;# 
   549  0EC9                     	;# 
   550  0ECA                     	;# 
   551  0ECB                     	;# 
   552  0ECC                     	;# 
   553  0F10                     	;# 
   554  0F11                     	;# 
   555  0F12                     	;# 
   556  0F13                     	;# 
   557  0F14                     	;# 
   558  0F15                     	;# 
   559  0F16                     	;# 
   560  0F17                     	;# 
   561  0F18                     	;# 
   562  0F19                     	;# 
   563  0F1A                     	;# 
   564  0F1B                     	;# 
   565  0F1C                     	;# 
   566  0F1D                     	;# 
   567  0F1E                     	;# 
   568  0F1F                     	;# 
   569  0F20                     	;# 
   570  0F21                     	;# 
   571  0F22                     	;# 
   572  0F23                     	;# 
   573  0F24                     	;# 
   574  0F25                     	;# 
   575  0F26                     	;# 
   576  0F27                     	;# 
   577  0F28                     	;# 
   578  0F29                     	;# 
   579  0F2A                     	;# 
   580  0F2B                     	;# 
   581  0F2C                     	;# 
   582  0F2D                     	;# 
   583  0F2E                     	;# 
   584  0F2F                     	;# 
   585  0F30                     	;# 
   586  0F31                     	;# 
   587  0F32                     	;# 
   588  0F38                     	;# 
   589  0F39                     	;# 
   590  0F3A                     	;# 
   591  0F3B                     	;# 
   592  0F3C                     	;# 
   593  0F3D                     	;# 
   594  0F3E                     	;# 
   595  0F3F                     	;# 
   596  0F40                     	;# 
   597  0F41                     	;# 
   598  0F43                     	;# 
   599  0F44                     	;# 
   600  0F45                     	;# 
   601  0F46                     	;# 
   602  0F47                     	;# 
   603  0F48                     	;# 
   604  0F49                     	;# 
   605  0F4A                     	;# 
   606  0F4B                     	;# 
   607  0F4C                     	;# 
   608  0F4E                     	;# 
   609  0F4F                     	;# 
   610  0F50                     	;# 
   611  0F51                     	;# 
   612  0F52                     	;# 
   613  0F53                     	;# 
   614  0F54                     	;# 
   615  0F55                     	;# 
   616  0F56                     	;# 
   617  0F57                     	;# 
   618  0F59                     	;# 
   619  0F5A                     	;# 
   620  0F5B                     	;# 
   621  0F5C                     	;# 
   622  0F5D                     	;# 
   623  0F61                     	;# 
   624  0F62                     	;# 
   625  0F64                     	;# 
   626  0F65                     	;# 
   627  0F66                     	;# 
   628  0F67                     	;# 
   629  0F68                     	;# 
   630  0F69                     	;# 
   631  0F6A                     	;# 
   632  0F6B                     	;# 
   633  0F6C                     	;# 
   634  0F6D                     	;# 
   635  0FE4                     	;# 
   636  0FE5                     	;# 
   637  0FE6                     	;# 
   638  0FE7                     	;# 
   639  0FE8                     	;# 
   640  0FE9                     	;# 
   641  0FEA                     	;# 
   642  0FEB                     	;# 
   643  0FED                     	;# 
   644  0FEE                     	;# 
   645  0FEF                     	;# 
   646  0000                     	;# 
   647  0001                     	;# 
   648  0002                     	;# 
   649  0003                     	;# 
   650  0004                     	;# 
   651  0005                     	;# 
   652  0006                     	;# 
   653  0007                     	;# 
   654  0008                     	;# 
   655  0009                     	;# 
   656  000A                     	;# 
   657  000B                     	;# 
   658  000C                     	;# 
   659  000D                     	;# 
   660  000E                     	;# 
   661  000F                     	;# 
   662  0010                     	;# 
   663  0011                     	;# 
   664  0012                     	;# 
   665  0013                     	;# 
   666  0014                     	;# 
   667  0015                     	;# 
   668  0016                     	;# 
   669  0017                     	;# 
   670  0018                     	;# 
   671  0019                     	;# 
   672  001A                     	;# 
   673  001C                     	;# 
   674  001C                     	;# 
   675  001D                     	;# 
   676  001D                     	;# 
   677  001E                     	;# 
   678  001F                     	;# 
   679  008C                     	;# 
   680  008C                     	;# 
   681  008D                     	;# 
   682  008E                     	;# 
   683  008E                     	;# 
   684  008F                     	;# 
   685  0090                     	;# 
   686  0090                     	;# 
   687  0091                     	;# 
   688  0093                     	;# 
   689  0094                     	;# 
   690  0095                     	;# 
   691  0096                     	;# 
   692  0097                     	;# 
   693  0098                     	;# 
   694  0099                     	;# 
   695  009A                     	;# 
   696  009B                     	;# 
   697  009C                     	;# 
   698  009D                     	;# 
   699  009E                     	;# 
   700  010C                     	;# 
   701  010D                     	;# 
   702  010E                     	;# 
   703  010E                     	;# 
   704  010F                     	;# 
   705  0110                     	;# 
   706  0110                     	;# 
   707  0111                     	;# 
   708  0112                     	;# 
   709  0112                     	;# 
   710  0113                     	;# 
   711  0114                     	;# 
   712  0114                     	;# 
   713  0115                     	;# 
   714  0116                     	;# 
   715  0116                     	;# 
   716  0117                     	;# 
   717  0119                     	;# 
   718  0119                     	;# 
   719  0119                     	;# 
   720  011A                     	;# 
   721  011A                     	;# 
   722  011A                     	;# 
   723  011B                     	;# 
   724  011B                     	;# 
   725  011B                     	;# 
   726  011B                     	;# 
   727  011B                     	;# 
   728  011C                     	;# 
   729  011C                     	;# 
   730  011C                     	;# 
   731  011D                     	;# 
   732  011D                     	;# 
   733  011D                     	;# 
   734  011E                     	;# 
   735  011E                     	;# 
   736  011E                     	;# 
   737  011F                     	;# 
   738  011F                     	;# 
   739  011F                     	;# 
   740  011F                     	;# 
   741  011F                     	;# 
   742  018C                     	;# 
   743  018D                     	;# 
   744  018E                     	;# 
   745  018F                     	;# 
   746  0190                     	;# 
   747  0191                     	;# 
   748  0192                     	;# 
   749  0196                     	;# 
   750  0197                     	;# 
   751  0198                     	;# 
   752  0199                     	;# 
   753  019A                     	;# 
   754  019B                     	;# 
   755  019C                     	;# 
   756  020C                     	;# 
   757  020C                     	;# 
   758  020D                     	;# 
   759  020E                     	;# 
   760  020F                     	;# 
   761  020F                     	;# 
   762  0210                     	;# 
   763  0210                     	;# 
   764  0211                     	;# 
   765  0211                     	;# 
   766  0212                     	;# 
   767  0212                     	;# 
   768  0213                     	;# 
   769  0214                     	;# 
   770  0215                     	;# 
   771  0215                     	;# 
   772  0216                     	;# 
   773  0216                     	;# 
   774  0217                     	;# 
   775  0217                     	;# 
   776  0218                     	;# 
   777  0218                     	;# 
   778  0219                     	;# 
   779  021A                     	;# 
   780  021B                     	;# 
   781  021B                     	;# 
   782  021C                     	;# 
   783  021C                     	;# 
   784  021D                     	;# 
   785  021D                     	;# 
   786  021E                     	;# 
   787  021F                     	;# 
   788  028C                     	;# 
   789  028C                     	;# 
   790  028D                     	;# 
   791  028D                     	;# 
   792  028E                     	;# 
   793  028F                     	;# 
   794  0290                     	;# 
   795  0290                     	;# 
   796  0291                     	;# 
   797  0292                     	;# 
   798  0292                     	;# 
   799  0293                     	;# 
   800  0293                     	;# 
   801  0294                     	;# 
   802  0295                     	;# 
   803  0296                     	;# 
   804  0296                     	;# 
   805  0297                     	;# 
   806  0298                     	;# 
   807  0298                     	;# 
   808  0299                     	;# 
   809  0299                     	;# 
   810  029A                     	;# 
   811  029B                     	;# 
   812  029C                     	;# 
   813  029C                     	;# 
   814  029D                     	;# 
   815  030C                     	;# 
   816  030C                     	;# 
   817  030D                     	;# 
   818  030E                     	;# 
   819  030F                     	;# 
   820  0310                     	;# 
   821  0310                     	;# 
   822  0311                     	;# 
   823  0312                     	;# 
   824  0313                     	;# 
   825  0314                     	;# 
   826  0314                     	;# 
   827  0315                     	;# 
   828  0316                     	;# 
   829  0317                     	;# 
   830  0318                     	;# 
   831  0318                     	;# 
   832  0319                     	;# 
   833  031A                     	;# 
   834  031B                     	;# 
   835  031C                     	;# 
   836  031C                     	;# 
   837  031D                     	;# 
   838  031E                     	;# 
   839  031F                     	;# 
   840  038C                     	;# 
   841  038C                     	;# 
   842  038D                     	;# 
   843  038E                     	;# 
   844  0390                     	;# 
   845  0390                     	;# 
   846  0391                     	;# 
   847  0392                     	;# 
   848  040C                     	;# 
   849  040D                     	;# 
   850  040E                     	;# 
   851  040F                     	;# 
   852  0410                     	;# 
   853  0411                     	;# 
   854  0416                     	;# 
   855  0416                     	;# 
   856  0417                     	;# 
   857  0418                     	;# 
   858  0418                     	;# 
   859  0419                     	;# 
   860  041A                     	;# 
   861  041A                     	;# 
   862  041B                     	;# 
   863  041C                     	;# 
   864  041C                     	;# 
   865  041D                     	;# 
   866  041E                     	;# 
   867  041F                     	;# 
   868  048C                     	;# 
   869  048C                     	;# 
   870  048D                     	;# 
   871  048E                     	;# 
   872  048F                     	;# 
   873  048F                     	;# 
   874  0490                     	;# 
   875  0491                     	;# 
   876  0492                     	;# 
   877  0492                     	;# 
   878  0493                     	;# 
   879  0494                     	;# 
   880  0495                     	;# 
   881  0495                     	;# 
   882  0496                     	;# 
   883  0497                     	;# 
   884  0498                     	;# 
   885  0499                     	;# 
   886  049A                     	;# 
   887  049B                     	;# 
   888  049C                     	;# 
   889  049D                     	;# 
   890  050C                     	;# 
   891  050C                     	;# 
   892  050D                     	;# 
   893  050E                     	;# 
   894  050F                     	;# 
   895  050F                     	;# 
   896  0510                     	;# 
   897  0511                     	;# 
   898  0512                     	;# 
   899  0512                     	;# 
   900  0513                     	;# 
   901  0514                     	;# 
   902  0515                     	;# 
   903  0515                     	;# 
   904  0516                     	;# 
   905  0517                     	;# 
   906  0518                     	;# 
   907  0519                     	;# 
   908  051A                     	;# 
   909  051B                     	;# 
   910  051C                     	;# 
   911  051D                     	;# 
   912  058C                     	;# 
   913  058C                     	;# 
   914  058D                     	;# 
   915  058E                     	;# 
   916  058F                     	;# 
   917  058F                     	;# 
   918  0590                     	;# 
   919  0591                     	;# 
   920  0592                     	;# 
   921  0593                     	;# 
   922  060C                     	;# 
   923  060D                     	;# 
   924  060E                     	;# 
   925  060F                     	;# 
   926  0610                     	;# 
   927  0611                     	;# 
   928  0612                     	;# 
   929  0613                     	;# 
   930  0614                     	;# 
   931  0616                     	;# 
   932  0617                     	;# 
   933  0618                     	;# 
   934  0619                     	;# 
   935  061A                     	;# 
   936  061B                     	;# 
   937  061C                     	;# 
   938  061D                     	;# 
   939  061E                     	;# 
   940  068C                     	;# 
   941  068D                     	;# 
   942  068E                     	;# 
   943  068F                     	;# 
   944  0690                     	;# 
   945  0691                     	;# 
   946  0692                     	;# 
   947  0693                     	;# 
   948  0694                     	;# 
   949  070C                     	;# 
   950  070D                     	;# 
   951  070E                     	;# 
   952  070F                     	;# 
   953  0710                     	;# 
   954  0711                     	;# 
   955  0712                     	;# 
   956  0713                     	;# 
   957  0714                     	;# 
   958  0716                     	;# 
   959  0717                     	;# 
   960  0718                     	;# 
   961  0719                     	;# 
   962  071A                     	;# 
   963  071B                     	;# 
   964  071C                     	;# 
   965  071D                     	;# 
   966  071E                     	;# 
   967  0796                     	;# 
   968  0797                     	;# 
   969  0798                     	;# 
   970  0799                     	;# 
   971  079A                     	;# 
   972  079B                     	;# 
   973  080C                     	;# 
   974  080D                     	;# 
   975  080E                     	;# 
   976  080F                     	;# 
   977  0810                     	;# 
   978  0811                     	;# 
   979  0812                     	;# 
   980  0813                     	;# 
   981  0814                     	;# 
   982  081A                     	;# 
   983  081B                     	;# 
   984  081C                     	;# 
   985  081D                     	;# 
   986  081E                     	;# 
   987  081F                     	;# 
   988  088C                     	;# 
   989  088D                     	;# 
   990  088E                     	;# 
   991  088F                     	;# 
   992  0890                     	;# 
   993  0891                     	;# 
   994  0892                     	;# 
   995  0893                     	;# 
   996  0895                     	;# 
   997  0896                     	;# 
   998  0897                     	;# 
   999  0898                     	;# 
  1000  0899                     	;# 
  1001  089A                     	;# 
  1002  089B                     	;# 
  1003  090C                     	;# 
  1004  090E                     	;# 
  1005  090F                     	;# 
  1006  091F                     	;# 
  1007  098F                     	;# 
  1008  098F                     	;# 
  1009  0990                     	;# 
  1010  0991                     	;# 
  1011  0992                     	;# 
  1012  0993                     	;# 
  1013  0994                     	;# 
  1014  0995                     	;# 
  1015  0996                     	;# 
  1016  0997                     	;# 
  1017  0E0F                     	;# 
  1018  0E10                     	;# 
  1019  0E11                     	;# 
  1020  0E12                     	;# 
  1021  0E13                     	;# 
  1022  0E14                     	;# 
  1023  0E15                     	;# 
  1024  0E16                     	;# 
  1025  0E17                     	;# 
  1026  0E18                     	;# 
  1027  0E19                     	;# 
  1028  0E1A                     	;# 
  1029  0E1B                     	;# 
  1030  0E1C                     	;# 
  1031  0E1D                     	;# 
  1032  0E1E                     	;# 
  1033  0E1F                     	;# 
  1034  0E20                     	;# 
  1035  0E21                     	;# 
  1036  0E22                     	;# 
  1037  0E23                     	;# 
  1038  0E24                     	;# 
  1039  0E25                     	;# 
  1040  0E26                     	;# 
  1041  0E27                     	;# 
  1042  0E28                     	;# 
  1043  0E29                     	;# 
  1044  0E2A                     	;# 
  1045  0E2B                     	;# 
  1046  0E2C                     	;# 
  1047  0E2D                     	;# 
  1048  0E2E                     	;# 
  1049  0E2F                     	;# 
  1050  0E30                     	;# 
  1051  0E31                     	;# 
  1052  0E32                     	;# 
  1053  0E33                     	;# 
  1054  0E34                     	;# 
  1055  0E35                     	;# 
  1056  0E36                     	;# 
  1057  0E37                     	;# 
  1058  0E8F                     	;# 
  1059  0E90                     	;# 
  1060  0E91                     	;# 
  1061  0E92                     	;# 
  1062  0E93                     	;# 
  1063  0E94                     	;# 
  1064  0E95                     	;# 
  1065  0E96                     	;# 
  1066  0E97                     	;# 
  1067  0E9C                     	;# 
  1068  0E9D                     	;# 
  1069  0E9E                     	;# 
  1070  0EA1                     	;# 
  1071  0EA2                     	;# 
  1072  0EA3                     	;# 
  1073  0EA4                     	;# 
  1074  0EA5                     	;# 
  1075  0EA9                     	;# 
  1076  0EAA                     	;# 
  1077  0EAB                     	;# 
  1078  0EAC                     	;# 
  1079  0EB1                     	;# 
  1080  0EB2                     	;# 
  1081  0EB3                     	;# 
  1082  0EB8                     	;# 
  1083  0EB9                     	;# 
  1084  0EBA                     	;# 
  1085  0EBB                     	;# 
  1086  0EBC                     	;# 
  1087  0EBD                     	;# 
  1088  0EBE                     	;# 
  1089  0EC3                     	;# 
  1090  0EC5                     	;# 
  1091  0EC6                     	;# 
  1092  0EC7                     	;# 
  1093  0EC8                     	;# 
  1094  0EC9                     	;# 
  1095  0ECA                     	;# 
  1096  0ECB                     	;# 
  1097  0ECC                     	;# 
  1098  0F10                     	;# 
  1099  0F11                     	;# 
  1100  0F12                     	;# 
  1101  0F13                     	;# 
  1102  0F14                     	;# 
  1103  0F15                     	;# 
  1104  0F16                     	;# 
  1105  0F17                     	;# 
  1106  0F18                     	;# 
  1107  0F19                     	;# 
  1108  0F1A                     	;# 
  1109  0F1B                     	;# 
  1110  0F1C                     	;# 
  1111  0F1D                     	;# 
  1112  0F1E                     	;# 
  1113  0F1F                     	;# 
  1114  0F20                     	;# 
  1115  0F21                     	;# 
  1116  0F22                     	;# 
  1117  0F23                     	;# 
  1118  0F24                     	;# 
  1119  0F25                     	;# 
  1120  0F26                     	;# 
  1121  0F27                     	;# 
  1122  0F28                     	;# 
  1123  0F29                     	;# 
  1124  0F2A                     	;# 
  1125  0F2B                     	;# 
  1126  0F2C                     	;# 
  1127  0F2D                     	;# 
  1128  0F2E                     	;# 
  1129  0F2F                     	;# 
  1130  0F30                     	;# 
  1131  0F31                     	;# 
  1132  0F32                     	;# 
  1133  0F38                     	;# 
  1134  0F39                     	;# 
  1135  0F3A                     	;# 
  1136  0F3B                     	;# 
  1137  0F3C                     	;# 
  1138  0F3D                     	;# 
  1139  0F3E                     	;# 
  1140  0F3F                     	;# 
  1141  0F40                     	;# 
  1142  0F41                     	;# 
  1143  0F43                     	;# 
  1144  0F44                     	;# 
  1145  0F45                     	;# 
  1146  0F46                     	;# 
  1147  0F47                     	;# 
  1148  0F48                     	;# 
  1149  0F49                     	;# 
  1150  0F4A                     	;# 
  1151  0F4B                     	;# 
  1152  0F4C                     	;# 
  1153  0F4E                     	;# 
  1154  0F4F                     	;# 
  1155  0F50                     	;# 
  1156  0F51                     	;# 
  1157  0F52                     	;# 
  1158  0F53                     	;# 
  1159  0F54                     	;# 
  1160  0F55                     	;# 
  1161  0F56                     	;# 
  1162  0F57                     	;# 
  1163  0F59                     	;# 
  1164  0F5A                     	;# 
  1165  0F5B                     	;# 
  1166  0F5C                     	;# 
  1167  0F5D                     	;# 
  1168  0F61                     	;# 
  1169  0F62                     	;# 
  1170  0F64                     	;# 
  1171  0F65                     	;# 
  1172  0F66                     	;# 
  1173  0F67                     	;# 
  1174  0F68                     	;# 
  1175  0F69                     	;# 
  1176  0F6A                     	;# 
  1177  0F6B                     	;# 
  1178  0F6C                     	;# 
  1179  0F6D                     	;# 
  1180  0FE4                     	;# 
  1181  0FE5                     	;# 
  1182  0FE6                     	;# 
  1183  0FE7                     	;# 
  1184  0FE8                     	;# 
  1185  0FE9                     	;# 
  1186  0FEA                     	;# 
  1187  0FEB                     	;# 
  1188  0FED                     	;# 
  1189  0FEE                     	;# 
  1190  0FEF                     	;# 
  1191  0000                     	;# 
  1192  0001                     	;# 
  1193  0002                     	;# 
  1194  0003                     	;# 
  1195  0004                     	;# 
  1196  0005                     	;# 
  1197  0006                     	;# 
  1198  0007                     	;# 
  1199  0008                     	;# 
  1200  0009                     	;# 
  1201  000A                     	;# 
  1202  000B                     	;# 
  1203  000C                     	;# 
  1204  000D                     	;# 
  1205  000E                     	;# 
  1206  000F                     	;# 
  1207  0010                     	;# 
  1208  0011                     	;# 
  1209  0012                     	;# 
  1210  0013                     	;# 
  1211  0014                     	;# 
  1212  0015                     	;# 
  1213  0016                     	;# 
  1214  0017                     	;# 
  1215  0018                     	;# 
  1216  0019                     	;# 
  1217  001A                     	;# 
  1218  001C                     	;# 
  1219  001C                     	;# 
  1220  001D                     	;# 
  1221  001D                     	;# 
  1222  001E                     	;# 
  1223  001F                     	;# 
  1224  008C                     	;# 
  1225  008C                     	;# 
  1226  008D                     	;# 
  1227  008E                     	;# 
  1228  008E                     	;# 
  1229  008F                     	;# 
  1230  0090                     	;# 
  1231  0090                     	;# 
  1232  0091                     	;# 
  1233  0093                     	;# 
  1234  0094                     	;# 
  1235  0095                     	;# 
  1236  0096                     	;# 
  1237  0097                     	;# 
  1238  0098                     	;# 
  1239  0099                     	;# 
  1240  009A                     	;# 
  1241  009B                     	;# 
  1242  009C                     	;# 
  1243  009D                     	;# 
  1244  009E                     	;# 
  1245  010C                     	;# 
  1246  010D                     	;# 
  1247  010E                     	;# 
  1248  010E                     	;# 
  1249  010F                     	;# 
  1250  0110                     	;# 
  1251  0110                     	;# 
  1252  0111                     	;# 
  1253  0112                     	;# 
  1254  0112                     	;# 
  1255  0113                     	;# 
  1256  0114                     	;# 
  1257  0114                     	;# 
  1258  0115                     	;# 
  1259  0116                     	;# 
  1260  0116                     	;# 
  1261  0117                     	;# 
  1262  0119                     	;# 
  1263  0119                     	;# 
  1264  0119                     	;# 
  1265  011A                     	;# 
  1266  011A                     	;# 
  1267  011A                     	;# 
  1268  011B                     	;# 
  1269  011B                     	;# 
  1270  011B                     	;# 
  1271  011B                     	;# 
  1272  011B                     	;# 
  1273  011C                     	;# 
  1274  011C                     	;# 
  1275  011C                     	;# 
  1276  011D                     	;# 
  1277  011D                     	;# 
  1278  011D                     	;# 
  1279  011E                     	;# 
  1280  011E                     	;# 
  1281  011E                     	;# 
  1282  011F                     	;# 
  1283  011F                     	;# 
  1284  011F                     	;# 
  1285  011F                     	;# 
  1286  011F                     	;# 
  1287  018C                     	;# 
  1288  018D                     	;# 
  1289  018E                     	;# 
  1290  018F                     	;# 
  1291  0190                     	;# 
  1292  0191                     	;# 
  1293  0192                     	;# 
  1294  0196                     	;# 
  1295  0197                     	;# 
  1296  0198                     	;# 
  1297  0199                     	;# 
  1298  019A                     	;# 
  1299  019B                     	;# 
  1300  019C                     	;# 
  1301  020C                     	;# 
  1302  020C                     	;# 
  1303  020D                     	;# 
  1304  020E                     	;# 
  1305  020F                     	;# 
  1306  020F                     	;# 
  1307  0210                     	;# 
  1308  0210                     	;# 
  1309  0211                     	;# 
  1310  0211                     	;# 
  1311  0212                     	;# 
  1312  0212                     	;# 
  1313  0213                     	;# 
  1314  0214                     	;# 
  1315  0215                     	;# 
  1316  0215                     	;# 
  1317  0216                     	;# 
  1318  0216                     	;# 
  1319  0217                     	;# 
  1320  0217                     	;# 
  1321  0218                     	;# 
  1322  0218                     	;# 
  1323  0219                     	;# 
  1324  021A                     	;# 
  1325  021B                     	;# 
  1326  021B                     	;# 
  1327  021C                     	;# 
  1328  021C                     	;# 
  1329  021D                     	;# 
  1330  021D                     	;# 
  1331  021E                     	;# 
  1332  021F                     	;# 
  1333  028C                     	;# 
  1334  028C                     	;# 
  1335  028D                     	;# 
  1336  028D                     	;# 
  1337  028E                     	;# 
  1338  028F                     	;# 
  1339  0290                     	;# 
  1340  0290                     	;# 
  1341  0291                     	;# 
  1342  0292                     	;# 
  1343  0292                     	;# 
  1344  0293                     	;# 
  1345  0293                     	;# 
  1346  0294                     	;# 
  1347  0295                     	;# 
  1348  0296                     	;# 
  1349  0296                     	;# 
  1350  0297                     	;# 
  1351  0298                     	;# 
  1352  0298                     	;# 
  1353  0299                     	;# 
  1354  0299                     	;# 
  1355  029A                     	;# 
  1356  029B                     	;# 
  1357  029C                     	;# 
  1358  029C                     	;# 
  1359  029D                     	;# 
  1360  030C                     	;# 
  1361  030C                     	;# 
  1362  030D                     	;# 
  1363  030E                     	;# 
  1364  030F                     	;# 
  1365  0310                     	;# 
  1366  0310                     	;# 
  1367  0311                     	;# 
  1368  0312                     	;# 
  1369  0313                     	;# 
  1370  0314                     	;# 
  1371  0314                     	;# 
  1372  0315                     	;# 
  1373  0316                     	;# 
  1374  0317                     	;# 
  1375  0318                     	;# 
  1376  0318                     	;# 
  1377  0319                     	;# 
  1378  031A                     	;# 
  1379  031B                     	;# 
  1380  031C                     	;# 
  1381  031C                     	;# 
  1382  031D                     	;# 
  1383  031E                     	;# 
  1384  031F                     	;# 
  1385  038C                     	;# 
  1386  038C                     	;# 
  1387  038D                     	;# 
  1388  038E                     	;# 
  1389  0390                     	;# 
  1390  0390                     	;# 
  1391  0391                     	;# 
  1392  0392                     	;# 
  1393  040C                     	;# 
  1394  040D                     	;# 
  1395  040E                     	;# 
  1396  040F                     	;# 
  1397  0410                     	;# 
  1398  0411                     	;# 
  1399  0416                     	;# 
  1400  0416                     	;# 
  1401  0417                     	;# 
  1402  0418                     	;# 
  1403  0418                     	;# 
  1404  0419                     	;# 
  1405  041A                     	;# 
  1406  041A                     	;# 
  1407  041B                     	;# 
  1408  041C                     	;# 
  1409  041C                     	;# 
  1410  041D                     	;# 
  1411  041E                     	;# 
  1412  041F                     	;# 
  1413  048C                     	;# 
  1414  048C                     	;# 
  1415  048D                     	;# 
  1416  048E                     	;# 
  1417  048F                     	;# 
  1418  048F                     	;# 
  1419  0490                     	;# 
  1420  0491                     	;# 
  1421  0492                     	;# 
  1422  0492                     	;# 
  1423  0493                     	;# 
  1424  0494                     	;# 
  1425  0495                     	;# 
  1426  0495                     	;# 
  1427  0496                     	;# 
  1428  0497                     	;# 
  1429  0498                     	;# 
  1430  0499                     	;# 
  1431  049A                     	;# 
  1432  049B                     	;# 
  1433  049C                     	;# 
  1434  049D                     	;# 
  1435  050C                     	;# 
  1436  050C                     	;# 
  1437  050D                     	;# 
  1438  050E                     	;# 
  1439  050F                     	;# 
  1440  050F                     	;# 
  1441  0510                     	;# 
  1442  0511                     	;# 
  1443  0512                     	;# 
  1444  0512                     	;# 
  1445  0513                     	;# 
  1446  0514                     	;# 
  1447  0515                     	;# 
  1448  0515                     	;# 
  1449  0516                     	;# 
  1450  0517                     	;# 
  1451  0518                     	;# 
  1452  0519                     	;# 
  1453  051A                     	;# 
  1454  051B                     	;# 
  1455  051C                     	;# 
  1456  051D                     	;# 
  1457  058C                     	;# 
  1458  058C                     	;# 
  1459  058D                     	;# 
  1460  058E                     	;# 
  1461  058F                     	;# 
  1462  058F                     	;# 
  1463  0590                     	;# 
  1464  0591                     	;# 
  1465  0592                     	;# 
  1466  0593                     	;# 
  1467  060C                     	;# 
  1468  060D                     	;# 
  1469  060E                     	;# 
  1470  060F                     	;# 
  1471  0610                     	;# 
  1472  0611                     	;# 
  1473  0612                     	;# 
  1474  0613                     	;# 
  1475  0614                     	;# 
  1476  0616                     	;# 
  1477  0617                     	;# 
  1478  0618                     	;# 
  1479  0619                     	;# 
  1480  061A                     	;# 
  1481  061B                     	;# 
  1482  061C                     	;# 
  1483  061D                     	;# 
  1484  061E                     	;# 
  1485  068C                     	;# 
  1486  068D                     	;# 
  1487  068E                     	;# 
  1488  068F                     	;# 
  1489  0690                     	;# 
  1490  0691                     	;# 
  1491  0692                     	;# 
  1492  0693                     	;# 
  1493  0694                     	;# 
  1494  070C                     	;# 
  1495  070D                     	;# 
  1496  070E                     	;# 
  1497  070F                     	;# 
  1498  0710                     	;# 
  1499  0711                     	;# 
  1500  0712                     	;# 
  1501  0713                     	;# 
  1502  0714                     	;# 
  1503  0716                     	;# 
  1504  0717                     	;# 
  1505  0718                     	;# 
  1506  0719                     	;# 
  1507  071A                     	;# 
  1508  071B                     	;# 
  1509  071C                     	;# 
  1510  071D                     	;# 
  1511  071E                     	;# 
  1512  0796                     	;# 
  1513  0797                     	;# 
  1514  0798                     	;# 
  1515  0799                     	;# 
  1516  079A                     	;# 
  1517  079B                     	;# 
  1518  080C                     	;# 
  1519  080D                     	;# 
  1520  080E                     	;# 
  1521  080F                     	;# 
  1522  0810                     	;# 
  1523  0811                     	;# 
  1524  0812                     	;# 
  1525  0813                     	;# 
  1526  0814                     	;# 
  1527  081A                     	;# 
  1528  081B                     	;# 
  1529  081C                     	;# 
  1530  081D                     	;# 
  1531  081E                     	;# 
  1532  081F                     	;# 
  1533  088C                     	;# 
  1534  088D                     	;# 
  1535  088E                     	;# 
  1536  088F                     	;# 
  1537  0890                     	;# 
  1538  0891                     	;# 
  1539  0892                     	;# 
  1540  0893                     	;# 
  1541  0895                     	;# 
  1542  0896                     	;# 
  1543  0897                     	;# 
  1544  0898                     	;# 
  1545  0899                     	;# 
  1546  089A                     	;# 
  1547  089B                     	;# 
  1548  090C                     	;# 
  1549  090E                     	;# 
  1550  090F                     	;# 
  1551  091F                     	;# 
  1552  098F                     	;# 
  1553  098F                     	;# 
  1554  0990                     	;# 
  1555  0991                     	;# 
  1556  0992                     	;# 
  1557  0993                     	;# 
  1558  0994                     	;# 
  1559  0995                     	;# 
  1560  0996                     	;# 
  1561  0997                     	;# 
  1562  0E0F                     	;# 
  1563  0E10                     	;# 
  1564  0E11                     	;# 
  1565  0E12                     	;# 
  1566  0E13                     	;# 
  1567  0E14                     	;# 
  1568  0E15                     	;# 
  1569  0E16                     	;# 
  1570  0E17                     	;# 
  1571  0E18                     	;# 
  1572  0E19                     	;# 
  1573  0E1A                     	;# 
  1574  0E1B                     	;# 
  1575  0E1C                     	;# 
  1576  0E1D                     	;# 
  1577  0E1E                     	;# 
  1578  0E1F                     	;# 
  1579  0E20                     	;# 
  1580  0E21                     	;# 
  1581  0E22                     	;# 
  1582  0E23                     	;# 
  1583  0E24                     	;# 
  1584  0E25                     	;# 
  1585  0E26                     	;# 
  1586  0E27                     	;# 
  1587  0E28                     	;# 
  1588  0E29                     	;# 
  1589  0E2A                     	;# 
  1590  0E2B                     	;# 
  1591  0E2C                     	;# 
  1592  0E2D                     	;# 
  1593  0E2E                     	;# 
  1594  0E2F                     	;# 
  1595  0E30                     	;# 
  1596  0E31                     	;# 
  1597  0E32                     	;# 
  1598  0E33                     	;# 
  1599  0E34                     	;# 
  1600  0E35                     	;# 
  1601  0E36                     	;# 
  1602  0E37                     	;# 
  1603  0E8F                     	;# 
  1604  0E90                     	;# 
  1605  0E91                     	;# 
  1606  0E92                     	;# 
  1607  0E93                     	;# 
  1608  0E94                     	;# 
  1609  0E95                     	;# 
  1610  0E96                     	;# 
  1611  0E97                     	;# 
  1612  0E9C                     	;# 
  1613  0E9D                     	;# 
  1614  0E9E                     	;# 
  1615  0EA1                     	;# 
  1616  0EA2                     	;# 
  1617  0EA3                     	;# 
  1618  0EA4                     	;# 
  1619  0EA5                     	;# 
  1620  0EA9                     	;# 
  1621  0EAA                     	;# 
  1622  0EAB                     	;# 
  1623  0EAC                     	;# 
  1624  0EB1                     	;# 
  1625  0EB2                     	;# 
  1626  0EB3                     	;# 
  1627  0EB8                     	;# 
  1628  0EB9                     	;# 
  1629  0EBA                     	;# 
  1630  0EBB                     	;# 
  1631  0EBC                     	;# 
  1632  0EBD                     	;# 
  1633  0EBE                     	;# 
  1634  0EC3                     	;# 
  1635  0EC5                     	;# 
  1636  0EC6                     	;# 
  1637  0EC7                     	;# 
  1638  0EC8                     	;# 
  1639  0EC9                     	;# 
  1640  0ECA                     	;# 
  1641  0ECB                     	;# 
  1642  0ECC                     	;# 
  1643  0F10                     	;# 
  1644  0F11                     	;# 
  1645  0F12                     	;# 
  1646  0F13                     	;# 
  1647  0F14                     	;# 
  1648  0F15                     	;# 
  1649  0F16                     	;# 
  1650  0F17                     	;# 
  1651  0F18                     	;# 
  1652  0F19                     	;# 
  1653  0F1A                     	;# 
  1654  0F1B                     	;# 
  1655  0F1C                     	;# 
  1656  0F1D                     	;# 
  1657  0F1E                     	;# 
  1658  0F1F                     	;# 
  1659  0F20                     	;# 
  1660  0F21                     	;# 
  1661  0F22                     	;# 
  1662  0F23                     	;# 
  1663  0F24                     	;# 
  1664  0F25                     	;# 
  1665  0F26                     	;# 
  1666  0F27                     	;# 
  1667  0F28                     	;# 
  1668  0F29                     	;# 
  1669  0F2A                     	;# 
  1670  0F2B                     	;# 
  1671  0F2C                     	;# 
  1672  0F2D                     	;# 
  1673  0F2E                     	;# 
  1674  0F2F                     	;# 
  1675  0F30                     	;# 
  1676  0F31                     	;# 
  1677  0F32                     	;# 
  1678  0F38                     	;# 
  1679  0F39                     	;# 
  1680  0F3A                     	;# 
  1681  0F3B                     	;# 
  1682  0F3C                     	;# 
  1683  0F3D                     	;# 
  1684  0F3E                     	;# 
  1685  0F3F                     	;# 
  1686  0F40                     	;# 
  1687  0F41                     	;# 
  1688  0F43                     	;# 
  1689  0F44                     	;# 
  1690  0F45                     	;# 
  1691  0F46                     	;# 
  1692  0F47                     	;# 
  1693  0F48                     	;# 
  1694  0F49                     	;# 
  1695  0F4A                     	;# 
  1696  0F4B                     	;# 
  1697  0F4C                     	;# 
  1698  0F4E                     	;# 
  1699  0F4F                     	;# 
  1700  0F50                     	;# 
  1701  0F51                     	;# 
  1702  0F52                     	;# 
  1703  0F53                     	;# 
  1704  0F54                     	;# 
  1705  0F55                     	;# 
  1706  0F56                     	;# 
  1707  0F57                     	;# 
  1708  0F59                     	;# 
  1709  0F5A                     	;# 
  1710  0F5B                     	;# 
  1711  0F5C                     	;# 
  1712  0F5D                     	;# 
  1713  0F61                     	;# 
  1714  0F62                     	;# 
  1715  0F64                     	;# 
  1716  0F65                     	;# 
  1717  0F66                     	;# 
  1718  0F67                     	;# 
  1719  0F68                     	;# 
  1720  0F69                     	;# 
  1721  0F6A                     	;# 
  1722  0F6B                     	;# 
  1723  0F6C                     	;# 
  1724  0F6D                     	;# 
  1725  0FE4                     	;# 
  1726  0FE5                     	;# 
  1727  0FE6                     	;# 
  1728  0FE7                     	;# 
  1729  0FE8                     	;# 
  1730  0FE9                     	;# 
  1731  0FEA                     	;# 
  1732  0FEB                     	;# 
  1733  0FED                     	;# 
  1734  0FEE                     	;# 
  1735  0FEF                     	;# 
  1736  0000                     	;# 
  1737  0001                     	;# 
  1738  0002                     	;# 
  1739  0003                     	;# 
  1740  0004                     	;# 
  1741  0005                     	;# 
  1742  0006                     	;# 
  1743  0007                     	;# 
  1744  0008                     	;# 
  1745  0009                     	;# 
  1746  000A                     	;# 
  1747  000B                     	;# 
  1748  000C                     	;# 
  1749  000D                     	;# 
  1750  000E                     	;# 
  1751  000F                     	;# 
  1752  0010                     	;# 
  1753  0011                     	;# 
  1754  0012                     	;# 
  1755  0013                     	;# 
  1756  0014                     	;# 
  1757  0015                     	;# 
  1758  0016                     	;# 
  1759  0017                     	;# 
  1760  0018                     	;# 
  1761  0019                     	;# 
  1762  001A                     	;# 
  1763  001C                     	;# 
  1764  001C                     	;# 
  1765  001D                     	;# 
  1766  001D                     	;# 
  1767  001E                     	;# 
  1768  001F                     	;# 
  1769  008C                     	;# 
  1770  008C                     	;# 
  1771  008D                     	;# 
  1772  008E                     	;# 
  1773  008E                     	;# 
  1774  008F                     	;# 
  1775  0090                     	;# 
  1776  0090                     	;# 
  1777  0091                     	;# 
  1778  0093                     	;# 
  1779  0094                     	;# 
  1780  0095                     	;# 
  1781  0096                     	;# 
  1782  0097                     	;# 
  1783  0098                     	;# 
  1784  0099                     	;# 
  1785  009A                     	;# 
  1786  009B                     	;# 
  1787  009C                     	;# 
  1788  009D                     	;# 
  1789  009E                     	;# 
  1790  010C                     	;# 
  1791  010D                     	;# 
  1792  010E                     	;# 
  1793  010E                     	;# 
  1794  010F                     	;# 
  1795  0110                     	;# 
  1796  0110                     	;# 
  1797  0111                     	;# 
  1798  0112                     	;# 
  1799  0112                     	;# 
  1800  0113                     	;# 
  1801  0114                     	;# 
  1802  0114                     	;# 
  1803  0115                     	;# 
  1804  0116                     	;# 
  1805  0116                     	;# 
  1806  0117                     	;# 
  1807  0119                     	;# 
  1808  0119                     	;# 
  1809  0119                     	;# 
  1810  011A                     	;# 
  1811  011A                     	;# 
  1812  011A                     	;# 
  1813  011B                     	;# 
  1814  011B                     	;# 
  1815  011B                     	;# 
  1816  011B                     	;# 
  1817  011B                     	;# 
  1818  011C                     	;# 
  1819  011C                     	;# 
  1820  011C                     	;# 
  1821  011D                     	;# 
  1822  011D                     	;# 
  1823  011D                     	;# 
  1824  011E                     	;# 
  1825  011E                     	;# 
  1826  011E                     	;# 
  1827  011F                     	;# 
  1828  011F                     	;# 
  1829  011F                     	;# 
  1830  011F                     	;# 
  1831  011F                     	;# 
  1832  018C                     	;# 
  1833  018D                     	;# 
  1834  018E                     	;# 
  1835  018F                     	;# 
  1836  0190                     	;# 
  1837  0191                     	;# 
  1838  0192                     	;# 
  1839  0196                     	;# 
  1840  0197                     	;# 
  1841  0198                     	;# 
  1842  0199                     	;# 
  1843  019A                     	;# 
  1844  019B                     	;# 
  1845  019C                     	;# 
  1846  020C                     	;# 
  1847  020C                     	;# 
  1848  020D                     	;# 
  1849  020E                     	;# 
  1850  020F                     	;# 
  1851  020F                     	;# 
  1852  0210                     	;# 
  1853  0210                     	;# 
  1854  0211                     	;# 
  1855  0211                     	;# 
  1856  0212                     	;# 
  1857  0212                     	;# 
  1858  0213                     	;# 
  1859  0214                     	;# 
  1860  0215                     	;# 
  1861  0215                     	;# 
  1862  0216                     	;# 
  1863  0216                     	;# 
  1864  0217                     	;# 
  1865  0217                     	;# 
  1866  0218                     	;# 
  1867  0218                     	;# 
  1868  0219                     	;# 
  1869  021A                     	;# 
  1870  021B                     	;# 
  1871  021B                     	;# 
  1872  021C                     	;# 
  1873  021C                     	;# 
  1874  021D                     	;# 
  1875  021D                     	;# 
  1876  021E                     	;# 
  1877  021F                     	;# 
  1878  028C                     	;# 
  1879  028C                     	;# 
  1880  028D                     	;# 
  1881  028D                     	;# 
  1882  028E                     	;# 
  1883  028F                     	;# 
  1884  0290                     	;# 
  1885  0290                     	;# 
  1886  0291                     	;# 
  1887  0292                     	;# 
  1888  0292                     	;# 
  1889  0293                     	;# 
  1890  0293                     	;# 
  1891  0294                     	;# 
  1892  0295                     	;# 
  1893  0296                     	;# 
  1894  0296                     	;# 
  1895  0297                     	;# 
  1896  0298                     	;# 
  1897  0298                     	;# 
  1898  0299                     	;# 
  1899  0299                     	;# 
  1900  029A                     	;# 
  1901  029B                     	;# 
  1902  029C                     	;# 
  1903  029C                     	;# 
  1904  029D                     	;# 
  1905  030C                     	;# 
  1906  030C                     	;# 
  1907  030D                     	;# 
  1908  030E                     	;# 
  1909  030F                     	;# 
  1910  0310                     	;# 
  1911  0310                     	;# 
  1912  0311                     	;# 
  1913  0312                     	;# 
  1914  0313                     	;# 
  1915  0314                     	;# 
  1916  0314                     	;# 
  1917  0315                     	;# 
  1918  0316                     	;# 
  1919  0317                     	;# 
  1920  0318                     	;# 
  1921  0318                     	;# 
  1922  0319                     	;# 
  1923  031A                     	;# 
  1924  031B                     	;# 
  1925  031C                     	;# 
  1926  031C                     	;# 
  1927  031D                     	;# 
  1928  031E                     	;# 
  1929  031F                     	;# 
  1930  038C                     	;# 
  1931  038C                     	;# 
  1932  038D                     	;# 
  1933  038E                     	;# 
  1934  0390                     	;# 
  1935  0390                     	;# 
  1936  0391                     	;# 
  1937  0392                     	;# 
  1938  040C                     	;# 
  1939  040D                     	;# 
  1940  040E                     	;# 
  1941  040F                     	;# 
  1942  0410                     	;# 
  1943  0411                     	;# 
  1944  0416                     	;# 
  1945  0416                     	;# 
  1946  0417                     	;# 
  1947  0418                     	;# 
  1948  0418                     	;# 
  1949  0419                     	;# 
  1950  041A                     	;# 
  1951  041A                     	;# 
  1952  041B                     	;# 
  1953  041C                     	;# 
  1954  041C                     	;# 
  1955  041D                     	;# 
  1956  041E                     	;# 
  1957  041F                     	;# 
  1958  048C                     	;# 
  1959  048C                     	;# 
  1960  048D                     	;# 
  1961  048E                     	;# 
  1962  048F                     	;# 
  1963  048F                     	;# 
  1964  0490                     	;# 
  1965  0491                     	;# 
  1966  0492                     	;# 
  1967  0492                     	;# 
  1968  0493                     	;# 
  1969  0494                     	;# 
  1970  0495                     	;# 
  1971  0495                     	;# 
  1972  0496                     	;# 
  1973  0497                     	;# 
  1974  0498                     	;# 
  1975  0499                     	;# 
  1976  049A                     	;# 
  1977  049B                     	;# 
  1978  049C                     	;# 
  1979  049D                     	;# 
  1980  050C                     	;# 
  1981  050C                     	;# 
  1982  050D                     	;# 
  1983  050E                     	;# 
  1984  050F                     	;# 
  1985  050F                     	;# 
  1986  0510                     	;# 
  1987  0511                     	;# 
  1988  0512                     	;# 
  1989  0512                     	;# 
  1990  0513                     	;# 
  1991  0514                     	;# 
  1992  0515                     	;# 
  1993  0515                     	;# 
  1994  0516                     	;# 
  1995  0517                     	;# 
  1996  0518                     	;# 
  1997  0519                     	;# 
  1998  051A                     	;# 
  1999  051B                     	;# 
  2000  051C                     	;# 
  2001  051D                     	;# 
  2002  058C                     	;# 
  2003  058C                     	;# 
  2004  058D                     	;# 
  2005  058E                     	;# 
  2006  058F                     	;# 
  2007  058F                     	;# 
  2008  0590                     	;# 
  2009  0591                     	;# 
  2010  0592                     	;# 
  2011  0593                     	;# 
  2012  060C                     	;# 
  2013  060D                     	;# 
  2014  060E                     	;# 
  2015  060F                     	;# 
  2016  0610                     	;# 
  2017  0611                     	;# 
  2018  0612                     	;# 
  2019  0613                     	;# 
  2020  0614                     	;# 
  2021  0616                     	;# 
  2022  0617                     	;# 
  2023  0618                     	;# 
  2024  0619                     	;# 
  2025  061A                     	;# 
  2026  061B                     	;# 
  2027  061C                     	;# 
  2028  061D                     	;# 
  2029  061E                     	;# 
  2030  068C                     	;# 
  2031  068D                     	;# 
  2032  068E                     	;# 
  2033  068F                     	;# 
  2034  0690                     	;# 
  2035  0691                     	;# 
  2036  0692                     	;# 
  2037  0693                     	;# 
  2038  0694                     	;# 
  2039  070C                     	;# 
  2040  070D                     	;# 
  2041  070E                     	;# 
  2042  070F                     	;# 
  2043  0710                     	;# 
  2044  0711                     	;# 
  2045  0712                     	;# 
  2046  0713                     	;# 
  2047  0714                     	;# 
  2048  0716                     	;# 
  2049  0717                     	;# 
  2050  0718                     	;# 
  2051  0719                     	;# 
  2052  071A                     	;# 
  2053  071B                     	;# 
  2054  071C                     	;# 
  2055  071D                     	;# 
  2056  071E                     	;# 
  2057  0796                     	;# 
  2058  0797                     	;# 
  2059  0798                     	;# 
  2060  0799                     	;# 
  2061  079A                     	;# 
  2062  079B                     	;# 
  2063  080C                     	;# 
  2064  080D                     	;# 
  2065  080E                     	;# 
  2066  080F                     	;# 
  2067  0810                     	;# 
  2068  0811                     	;# 
  2069  0812                     	;# 
  2070  0813                     	;# 
  2071  0814                     	;# 
  2072  081A                     	;# 
  2073  081B                     	;# 
  2074  081C                     	;# 
  2075  081D                     	;# 
  2076  081E                     	;# 
  2077  081F                     	;# 
  2078  088C                     	;# 
  2079  088D                     	;# 
  2080  088E                     	;# 
  2081  088F                     	;# 
  2082  0890                     	;# 
  2083  0891                     	;# 
  2084  0892                     	;# 
  2085  0893                     	;# 
  2086  0895                     	;# 
  2087  0896                     	;# 
  2088  0897                     	;# 
  2089  0898                     	;# 
  2090  0899                     	;# 
  2091  089A                     	;# 
  2092  089B                     	;# 
  2093  090C                     	;# 
  2094  090E                     	;# 
  2095  090F                     	;# 
  2096  091F                     	;# 
  2097  098F                     	;# 
  2098  098F                     	;# 
  2099  0990                     	;# 
  2100  0991                     	;# 
  2101  0992                     	;# 
  2102  0993                     	;# 
  2103  0994                     	;# 
  2104  0995                     	;# 
  2105  0996                     	;# 
  2106  0997                     	;# 
  2107  0E0F                     	;# 
  2108  0E10                     	;# 
  2109  0E11                     	;# 
  2110  0E12                     	;# 
  2111  0E13                     	;# 
  2112  0E14                     	;# 
  2113  0E15                     	;# 
  2114  0E16                     	;# 
  2115  0E17                     	;# 
  2116  0E18                     	;# 
  2117  0E19                     	;# 
  2118  0E1A                     	;# 
  2119  0E1B                     	;# 
  2120  0E1C                     	;# 
  2121  0E1D                     	;# 
  2122  0E1E                     	;# 
  2123  0E1F                     	;# 
  2124  0E20                     	;# 
  2125  0E21                     	;# 
  2126  0E22                     	;# 
  2127  0E23                     	;# 
  2128  0E24                     	;# 
  2129  0E25                     	;# 
  2130  0E26                     	;# 
  2131  0E27                     	;# 
  2132  0E28                     	;# 
  2133  0E29                     	;# 
  2134  0E2A                     	;# 
  2135  0E2B                     	;# 
  2136  0E2C                     	;# 
  2137  0E2D                     	;# 
  2138  0E2E                     	;# 
  2139  0E2F                     	;# 
  2140  0E30                     	;# 
  2141  0E31                     	;# 
  2142  0E32                     	;# 
  2143  0E33                     	;# 
  2144  0E34                     	;# 
  2145  0E35                     	;# 
  2146  0E36                     	;# 
  2147  0E37                     	;# 
  2148  0E8F                     	;# 
  2149  0E90                     	;# 
  2150  0E91                     	;# 
  2151  0E92                     	;# 
  2152  0E93                     	;# 
  2153  0E94                     	;# 
  2154  0E95                     	;# 
  2155  0E96                     	;# 
  2156  0E97                     	;# 
  2157  0E9C                     	;# 
  2158  0E9D                     	;# 
  2159  0E9E                     	;# 
  2160  0EA1                     	;# 
  2161  0EA2                     	;# 
  2162  0EA3                     	;# 
  2163  0EA4                     	;# 
  2164  0EA5                     	;# 
  2165  0EA9                     	;# 
  2166  0EAA                     	;# 
  2167  0EAB                     	;# 
  2168  0EAC                     	;# 
  2169  0EB1                     	;# 
  2170  0EB2                     	;# 
  2171  0EB3                     	;# 
  2172  0EB8                     	;# 
  2173  0EB9                     	;# 
  2174  0EBA                     	;# 
  2175  0EBB                     	;# 
  2176  0EBC                     	;# 
  2177  0EBD                     	;# 
  2178  0EBE                     	;# 
  2179  0EC3                     	;# 
  2180  0EC5                     	;# 
  2181  0EC6                     	;# 
  2182  0EC7                     	;# 
  2183  0EC8                     	;# 
  2184  0EC9                     	;# 
  2185  0ECA                     	;# 
  2186  0ECB                     	;# 
  2187  0ECC                     	;# 
  2188  0F10                     	;# 
  2189  0F11                     	;# 
  2190  0F12                     	;# 
  2191  0F13                     	;# 
  2192  0F14                     	;# 
  2193  0F15                     	;# 
  2194  0F16                     	;# 
  2195  0F17                     	;# 
  2196  0F18                     	;# 
  2197  0F19                     	;# 
  2198  0F1A                     	;# 
  2199  0F1B                     	;# 
  2200  0F1C                     	;# 
  2201  0F1D                     	;# 
  2202  0F1E                     	;# 
  2203  0F1F                     	;# 
  2204  0F20                     	;# 
  2205  0F21                     	;# 
  2206  0F22                     	;# 
  2207  0F23                     	;# 
  2208  0F24                     	;# 
  2209  0F25                     	;# 
  2210  0F26                     	;# 
  2211  0F27                     	;# 
  2212  0F28                     	;# 
  2213  0F29                     	;# 
  2214  0F2A                     	;# 
  2215  0F2B                     	;# 
  2216  0F2C                     	;# 
  2217  0F2D                     	;# 
  2218  0F2E                     	;# 
  2219  0F2F                     	;# 
  2220  0F30                     	;# 
  2221  0F31                     	;# 
  2222  0F32                     	;# 
  2223  0F38                     	;# 
  2224  0F39                     	;# 
  2225  0F3A                     	;# 
  2226  0F3B                     	;# 
  2227  0F3C                     	;# 
  2228  0F3D                     	;# 
  2229  0F3E                     	;# 
  2230  0F3F                     	;# 
  2231  0F40                     	;# 
  2232  0F41                     	;# 
  2233  0F43                     	;# 
  2234  0F44                     	;# 
  2235  0F45                     	;# 
  2236  0F46                     	;# 
  2237  0F47                     	;# 
  2238  0F48                     	;# 
  2239  0F49                     	;# 
  2240  0F4A                     	;# 
  2241  0F4B                     	;# 
  2242  0F4C                     	;# 
  2243  0F4E                     	;# 
  2244  0F4F                     	;# 
  2245  0F50                     	;# 
  2246  0F51                     	;# 
  2247  0F52                     	;# 
  2248  0F53                     	;# 
  2249  0F54                     	;# 
  2250  0F55                     	;# 
  2251  0F56                     	;# 
  2252  0F57                     	;# 
  2253  0F59                     	;# 
  2254  0F5A                     	;# 
  2255  0F5B                     	;# 
  2256  0F5C                     	;# 
  2257  0F5D                     	;# 
  2258  0F61                     	;# 
  2259  0F62                     	;# 
  2260  0F64                     	;# 
  2261  0F65                     	;# 
  2262  0F66                     	;# 
  2263  0F67                     	;# 
  2264  0F68                     	;# 
  2265  0F69                     	;# 
  2266  0F6A                     	;# 
  2267  0F6B                     	;# 
  2268  0F6C                     	;# 
  2269  0F6D                     	;# 
  2270  0FE4                     	;# 
  2271  0FE5                     	;# 
  2272  0FE6                     	;# 
  2273  0FE7                     	;# 
  2274  0FE8                     	;# 
  2275  0FE9                     	;# 
  2276  0FEA                     	;# 
  2277  0FEB                     	;# 
  2278  0FED                     	;# 
  2279  0FEE                     	;# 
  2280  0FEF                     	;# 
  2281  0000                     	;# 
  2282  0001                     	;# 
  2283  0002                     	;# 
  2284  0003                     	;# 
  2285  0004                     	;# 
  2286  0005                     	;# 
  2287  0006                     	;# 
  2288  0007                     	;# 
  2289  0008                     	;# 
  2290  0009                     	;# 
  2291  000A                     	;# 
  2292  000B                     	;# 
  2293  000C                     	;# 
  2294  000D                     	;# 
  2295  000E                     	;# 
  2296  000F                     	;# 
  2297  0010                     	;# 
  2298  0011                     	;# 
  2299  0012                     	;# 
  2300  0013                     	;# 
  2301  0014                     	;# 
  2302  0015                     	;# 
  2303  0016                     	;# 
  2304  0017                     	;# 
  2305  0018                     	;# 
  2306  0019                     	;# 
  2307  001A                     	;# 
  2308  001C                     	;# 
  2309  001C                     	;# 
  2310  001D                     	;# 
  2311  001D                     	;# 
  2312  001E                     	;# 
  2313  001F                     	;# 
  2314  008C                     	;# 
  2315  008C                     	;# 
  2316  008D                     	;# 
  2317  008E                     	;# 
  2318  008E                     	;# 
  2319  008F                     	;# 
  2320  0090                     	;# 
  2321  0090                     	;# 
  2322  0091                     	;# 
  2323  0093                     	;# 
  2324  0094                     	;# 
  2325  0095                     	;# 
  2326  0096                     	;# 
  2327  0097                     	;# 
  2328  0098                     	;# 
  2329  0099                     	;# 
  2330  009A                     	;# 
  2331  009B                     	;# 
  2332  009C                     	;# 
  2333  009D                     	;# 
  2334  009E                     	;# 
  2335  010C                     	;# 
  2336  010D                     	;# 
  2337  010E                     	;# 
  2338  010E                     	;# 
  2339  010F                     	;# 
  2340  0110                     	;# 
  2341  0110                     	;# 
  2342  0111                     	;# 
  2343  0112                     	;# 
  2344  0112                     	;# 
  2345  0113                     	;# 
  2346  0114                     	;# 
  2347  0114                     	;# 
  2348  0115                     	;# 
  2349  0116                     	;# 
  2350  0116                     	;# 
  2351  0117                     	;# 
  2352  0119                     	;# 
  2353  0119                     	;# 
  2354  0119                     	;# 
  2355  011A                     	;# 
  2356  011A                     	;# 
  2357  011A                     	;# 
  2358  011B                     	;# 
  2359  011B                     	;# 
  2360  011B                     	;# 
  2361  011B                     	;# 
  2362  011B                     	;# 
  2363  011C                     	;# 
  2364  011C                     	;# 
  2365  011C                     	;# 
  2366  011D                     	;# 
  2367  011D                     	;# 
  2368  011D                     	;# 
  2369  011E                     	;# 
  2370  011E                     	;# 
  2371  011E                     	;# 
  2372  011F                     	;# 
  2373  011F                     	;# 
  2374  011F                     	;# 
  2375  011F                     	;# 
  2376  011F                     	;# 
  2377  018C                     	;# 
  2378  018D                     	;# 
  2379  018E                     	;# 
  2380  018F                     	;# 
  2381  0190                     	;# 
  2382  0191                     	;# 
  2383  0192                     	;# 
  2384  0196                     	;# 
  2385  0197                     	;# 
  2386  0198                     	;# 
  2387  0199                     	;# 
  2388  019A                     	;# 
  2389  019B                     	;# 
  2390  019C                     	;# 
  2391  020C                     	;# 
  2392  020C                     	;# 
  2393  020D                     	;# 
  2394  020E                     	;# 
  2395  020F                     	;# 
  2396  020F                     	;# 
  2397  0210                     	;# 
  2398  0210                     	;# 
  2399  0211                     	;# 
  2400  0211                     	;# 
  2401  0212                     	;# 
  2402  0212                     	;# 
  2403  0213                     	;# 
  2404  0214                     	;# 
  2405  0215                     	;# 
  2406  0215                     	;# 
  2407  0216                     	;# 
  2408  0216                     	;# 
  2409  0217                     	;# 
  2410  0217                     	;# 
  2411  0218                     	;# 
  2412  0218                     	;# 
  2413  0219                     	;# 
  2414  021A                     	;# 
  2415  021B                     	;# 
  2416  021B                     	;# 
  2417  021C                     	;# 
  2418  021C                     	;# 
  2419  021D                     	;# 
  2420  021D                     	;# 
  2421  021E                     	;# 
  2422  021F                     	;# 
  2423  028C                     	;# 
  2424  028C                     	;# 
  2425  028D                     	;# 
  2426  028D                     	;# 
  2427  028E                     	;# 
  2428  028F                     	;# 
  2429  0290                     	;# 
  2430  0290                     	;# 
  2431  0291                     	;# 
  2432  0292                     	;# 
  2433  0292                     	;# 
  2434  0293                     	;# 
  2435  0293                     	;# 
  2436  0294                     	;# 
  2437  0295                     	;# 
  2438  0296                     	;# 
  2439  0296                     	;# 
  2440  0297                     	;# 
  2441  0298                     	;# 
  2442  0298                     	;# 
  2443  0299                     	;# 
  2444  0299                     	;# 
  2445  029A                     	;# 
  2446  029B                     	;# 
  2447  029C                     	;# 
  2448  029C                     	;# 
  2449  029D                     	;# 
  2450  030C                     	;# 
  2451  030C                     	;# 
  2452  030D                     	;# 
  2453  030E                     	;# 
  2454  030F                     	;# 
  2455  0310                     	;# 
  2456  0310                     	;# 
  2457  0311                     	;# 
  2458  0312                     	;# 
  2459  0313                     	;# 
  2460  0314                     	;# 
  2461  0314                     	;# 
  2462  0315                     	;# 
  2463  0316                     	;# 
  2464  0317                     	;# 
  2465  0318                     	;# 
  2466  0318                     	;# 
  2467  0319                     	;# 
  2468  031A                     	;# 
  2469  031B                     	;# 
  2470  031C                     	;# 
  2471  031C                     	;# 
  2472  031D                     	;# 
  2473  031E                     	;# 
  2474  031F                     	;# 
  2475  038C                     	;# 
  2476  038C                     	;# 
  2477  038D                     	;# 
  2478  038E                     	;# 
  2479  0390                     	;# 
  2480  0390                     	;# 
  2481  0391                     	;# 
  2482  0392                     	;# 
  2483  040C                     	;# 
  2484  040D                     	;# 
  2485  040E                     	;# 
  2486  040F                     	;# 
  2487  0410                     	;# 
  2488  0411                     	;# 
  2489  0416                     	;# 
  2490  0416                     	;# 
  2491  0417                     	;# 
  2492  0418                     	;# 
  2493  0418                     	;# 
  2494  0419                     	;# 
  2495  041A                     	;# 
  2496  041A                     	;# 
  2497  041B                     	;# 
  2498  041C                     	;# 
  2499  041C                     	;# 
  2500  041D                     	;# 
  2501  041E                     	;# 
  2502  041F                     	;# 
  2503  048C                     	;# 
  2504  048C                     	;# 
  2505  048D                     	;# 
  2506  048E                     	;# 
  2507  048F                     	;# 
  2508  048F                     	;# 
  2509  0490                     	;# 
  2510  0491                     	;# 
  2511  0492                     	;# 
  2512  0492                     	;# 
  2513  0493                     	;# 
  2514  0494                     	;# 
  2515  0495                     	;# 
  2516  0495                     	;# 
  2517  0496                     	;# 
  2518  0497                     	;# 
  2519  0498                     	;# 
  2520  0499                     	;# 
  2521  049A                     	;# 
  2522  049B                     	;# 
  2523  049C                     	;# 
  2524  049D                     	;# 
  2525  050C                     	;# 
  2526  050C                     	;# 
  2527  050D                     	;# 
  2528  050E                     	;# 
  2529  050F                     	;# 
  2530  050F                     	;# 
  2531  0510                     	;# 
  2532  0511                     	;# 
  2533  0512                     	;# 
  2534  0512                     	;# 
  2535  0513                     	;# 
  2536  0514                     	;# 
  2537  0515                     	;# 
  2538  0515                     	;# 
  2539  0516                     	;# 
  2540  0517                     	;# 
  2541  0518                     	;# 
  2542  0519                     	;# 
  2543  051A                     	;# 
  2544  051B                     	;# 
  2545  051C                     	;# 
  2546  051D                     	;# 
  2547  058C                     	;# 
  2548  058C                     	;# 
  2549  058D                     	;# 
  2550  058E                     	;# 
  2551  058F                     	;# 
  2552  058F                     	;# 
  2553  0590                     	;# 
  2554  0591                     	;# 
  2555  0592                     	;# 
  2556  0593                     	;# 
  2557  060C                     	;# 
  2558  060D                     	;# 
  2559  060E                     	;# 
  2560  060F                     	;# 
  2561  0610                     	;# 
  2562  0611                     	;# 
  2563  0612                     	;# 
  2564  0613                     	;# 
  2565  0614                     	;# 
  2566  0616                     	;# 
  2567  0617                     	;# 
  2568  0618                     	;# 
  2569  0619                     	;# 
  2570  061A                     	;# 
  2571  061B                     	;# 
  2572  061C                     	;# 
  2573  061D                     	;# 
  2574  061E                     	;# 
  2575  068C                     	;# 
  2576  068D                     	;# 
  2577  068E                     	;# 
  2578  068F                     	;# 
  2579  0690                     	;# 
  2580  0691                     	;# 
  2581  0692                     	;# 
  2582  0693                     	;# 
  2583  0694                     	;# 
  2584  070C                     	;# 
  2585  070D                     	;# 
  2586  070E                     	;# 
  2587  070F                     	;# 
  2588  0710                     	;# 
  2589  0711                     	;# 
  2590  0712                     	;# 
  2591  0713                     	;# 
  2592  0714                     	;# 
  2593  0716                     	;# 
  2594  0717                     	;# 
  2595  0718                     	;# 
  2596  0719                     	;# 
  2597  071A                     	;# 
  2598  071B                     	;# 
  2599  071C                     	;# 
  2600  071D                     	;# 
  2601  071E                     	;# 
  2602  0796                     	;# 
  2603  0797                     	;# 
  2604  0798                     	;# 
  2605  0799                     	;# 
  2606  079A                     	;# 
  2607  079B                     	;# 
  2608  080C                     	;# 
  2609  080D                     	;# 
  2610  080E                     	;# 
  2611  080F                     	;# 
  2612  0810                     	;# 
  2613  0811                     	;# 
  2614  0812                     	;# 
  2615  0813                     	;# 
  2616  0814                     	;# 
  2617  081A                     	;# 
  2618  081B                     	;# 
  2619  081C                     	;# 
  2620  081D                     	;# 
  2621  081E                     	;# 
  2622  081F                     	;# 
  2623  088C                     	;# 
  2624  088D                     	;# 
  2625  088E                     	;# 
  2626  088F                     	;# 
  2627  0890                     	;# 
  2628  0891                     	;# 
  2629  0892                     	;# 
  2630  0893                     	;# 
  2631  0895                     	;# 
  2632  0896                     	;# 
  2633  0897                     	;# 
  2634  0898                     	;# 
  2635  0899                     	;# 
  2636  089A                     	;# 
  2637  089B                     	;# 
  2638  090C                     	;# 
  2639  090E                     	;# 
  2640  090F                     	;# 
  2641  091F                     	;# 
  2642  098F                     	;# 
  2643  098F                     	;# 
  2644  0990                     	;# 
  2645  0991                     	;# 
  2646  0992                     	;# 
  2647  0993                     	;# 
  2648  0994                     	;# 
  2649  0995                     	;# 
  2650  0996                     	;# 
  2651  0997                     	;# 
  2652  0E0F                     	;# 
  2653  0E10                     	;# 
  2654  0E11                     	;# 
  2655  0E12                     	;# 
  2656  0E13                     	;# 
  2657  0E14                     	;# 
  2658  0E15                     	;# 
  2659  0E16                     	;# 
  2660  0E17                     	;# 
  2661  0E18                     	;# 
  2662  0E19                     	;# 
  2663  0E1A                     	;# 
  2664  0E1B                     	;# 
  2665  0E1C                     	;# 
  2666  0E1D                     	;# 
  2667  0E1E                     	;# 
  2668  0E1F                     	;# 
  2669  0E20                     	;# 
  2670  0E21                     	;# 
  2671  0E22                     	;# 
  2672  0E23                     	;# 
  2673  0E24                     	;# 
  2674  0E25                     	;# 
  2675  0E26                     	;# 
  2676  0E27                     	;# 
  2677  0E28                     	;# 
  2678  0E29                     	;# 
  2679  0E2A                     	;# 
  2680  0E2B                     	;# 
  2681  0E2C                     	;# 
  2682  0E2D                     	;# 
  2683  0E2E                     	;# 
  2684  0E2F                     	;# 
  2685  0E30                     	;# 
  2686  0E31                     	;# 
  2687  0E32                     	;# 
  2688  0E33                     	;# 
  2689  0E34                     	;# 
  2690  0E35                     	;# 
  2691  0E36                     	;# 
  2692  0E37                     	;# 
  2693  0E8F                     	;# 
  2694  0E90                     	;# 
  2695  0E91                     	;# 
  2696  0E92                     	;# 
  2697  0E93                     	;# 
  2698  0E94                     	;# 
  2699  0E95                     	;# 
  2700  0E96                     	;# 
  2701  0E97                     	;# 
  2702  0E9C                     	;# 
  2703  0E9D                     	;# 
  2704  0E9E                     	;# 
  2705  0EA1                     	;# 
  2706  0EA2                     	;# 
  2707  0EA3                     	;# 
  2708  0EA4                     	;# 
  2709  0EA5                     	;# 
  2710  0EA9                     	;# 
  2711  0EAA                     	;# 
  2712  0EAB                     	;# 
  2713  0EAC                     	;# 
  2714  0EB1                     	;# 
  2715  0EB2                     	;# 
  2716  0EB3                     	;# 
  2717  0EB8                     	;# 
  2718  0EB9                     	;# 
  2719  0EBA                     	;# 
  2720  0EBB                     	;# 
  2721  0EBC                     	;# 
  2722  0EBD                     	;# 
  2723  0EBE                     	;# 
  2724  0EC3                     	;# 
  2725  0EC5                     	;# 
  2726  0EC6                     	;# 
  2727  0EC7                     	;# 
  2728  0EC8                     	;# 
  2729  0EC9                     	;# 
  2730  0ECA                     	;# 
  2731  0ECB                     	;# 
  2732  0ECC                     	;# 
  2733  0F10                     	;# 
  2734  0F11                     	;# 
  2735  0F12                     	;# 
  2736  0F13                     	;# 
  2737  0F14                     	;# 
  2738  0F15                     	;# 
  2739  0F16                     	;# 
  2740  0F17                     	;# 
  2741  0F18                     	;# 
  2742  0F19                     	;# 
  2743  0F1A                     	;# 
  2744  0F1B                     	;# 
  2745  0F1C                     	;# 
  2746  0F1D                     	;# 
  2747  0F1E                     	;# 
  2748  0F1F                     	;# 
  2749  0F20                     	;# 
  2750  0F21                     	;# 
  2751  0F22                     	;# 
  2752  0F23                     	;# 
  2753  0F24                     	;# 
  2754  0F25                     	;# 
  2755  0F26                     	;# 
  2756  0F27                     	;# 
  2757  0F28                     	;# 
  2758  0F29                     	;# 
  2759  0F2A                     	;# 
  2760  0F2B                     	;# 
  2761  0F2C                     	;# 
  2762  0F2D                     	;# 
  2763  0F2E                     	;# 
  2764  0F2F                     	;# 
  2765  0F30                     	;# 
  2766  0F31                     	;# 
  2767  0F32                     	;# 
  2768  0F38                     	;# 
  2769  0F39                     	;# 
  2770  0F3A                     	;# 
  2771  0F3B                     	;# 
  2772  0F3C                     	;# 
  2773  0F3D                     	;# 
  2774  0F3E                     	;# 
  2775  0F3F                     	;# 
  2776  0F40                     	;# 
  2777  0F41                     	;# 
  2778  0F43                     	;# 
  2779  0F44                     	;# 
  2780  0F45                     	;# 
  2781  0F46                     	;# 
  2782  0F47                     	;# 
  2783  0F48                     	;# 
  2784  0F49                     	;# 
  2785  0F4A                     	;# 
  2786  0F4B                     	;# 
  2787  0F4C                     	;# 
  2788  0F4E                     	;# 
  2789  0F4F                     	;# 
  2790  0F50                     	;# 
  2791  0F51                     	;# 
  2792  0F52                     	;# 
  2793  0F53                     	;# 
  2794  0F54                     	;# 
  2795  0F55                     	;# 
  2796  0F56                     	;# 
  2797  0F57                     	;# 
  2798  0F59                     	;# 
  2799  0F5A                     	;# 
  2800  0F5B                     	;# 
  2801  0F5C                     	;# 
  2802  0F5D                     	;# 
  2803  0F61                     	;# 
  2804  0F62                     	;# 
  2805  0F64                     	;# 
  2806  0F65                     	;# 
  2807  0F66                     	;# 
  2808  0F67                     	;# 
  2809  0F68                     	;# 
  2810  0F69                     	;# 
  2811  0F6A                     	;# 
  2812  0F6B                     	;# 
  2813  0F6C                     	;# 
  2814  0F6D                     	;# 
  2815  0FE4                     	;# 
  2816  0FE5                     	;# 
  2817  0FE6                     	;# 
  2818  0FE7                     	;# 
  2819  0FE8                     	;# 
  2820  0FE9                     	;# 
  2821  0FEA                     	;# 
  2822  0FEB                     	;# 
  2823  0FED                     	;# 
  2824  0FEE                     	;# 
  2825  0FEF                     	;# 
  2826  0000                     	;# 
  2827  0001                     	;# 
  2828  0002                     	;# 
  2829  0003                     	;# 
  2830  0004                     	;# 
  2831  0005                     	;# 
  2832  0006                     	;# 
  2833  0007                     	;# 
  2834  0008                     	;# 
  2835  0009                     	;# 
  2836  000A                     	;# 
  2837  000B                     	;# 
  2838  000C                     	;# 
  2839  000D                     	;# 
  2840  000E                     	;# 
  2841  000F                     	;# 
  2842  0010                     	;# 
  2843  0011                     	;# 
  2844  0012                     	;# 
  2845  0013                     	;# 
  2846  0014                     	;# 
  2847  0015                     	;# 
  2848  0016                     	;# 
  2849  0017                     	;# 
  2850  0018                     	;# 
  2851  0019                     	;# 
  2852  001A                     	;# 
  2853  001C                     	;# 
  2854  001C                     	;# 
  2855  001D                     	;# 
  2856  001D                     	;# 
  2857  001E                     	;# 
  2858  001F                     	;# 
  2859  008C                     	;# 
  2860  008C                     	;# 
  2861  008D                     	;# 
  2862  008E                     	;# 
  2863  008E                     	;# 
  2864  008F                     	;# 
  2865  0090                     	;# 
  2866  0090                     	;# 
  2867  0091                     	;# 
  2868  0093                     	;# 
  2869  0094                     	;# 
  2870  0095                     	;# 
  2871  0096                     	;# 
  2872  0097                     	;# 
  2873  0098                     	;# 
  2874  0099                     	;# 
  2875  009A                     	;# 
  2876  009B                     	;# 
  2877  009C                     	;# 
  2878  009D                     	;# 
  2879  009E                     	;# 
  2880  010C                     	;# 
  2881  010D                     	;# 
  2882  010E                     	;# 
  2883  010E                     	;# 
  2884  010F                     	;# 
  2885  0110                     	;# 
  2886  0110                     	;# 
  2887  0111                     	;# 
  2888  0112                     	;# 
  2889  0112                     	;# 
  2890  0113                     	;# 
  2891  0114                     	;# 
  2892  0114                     	;# 
  2893  0115                     	;# 
  2894  0116                     	;# 
  2895  0116                     	;# 
  2896  0117                     	;# 
  2897  0119                     	;# 
  2898  0119                     	;# 
  2899  0119                     	;# 
  2900  011A                     	;# 
  2901  011A                     	;# 
  2902  011A                     	;# 
  2903  011B                     	;# 
  2904  011B                     	;# 
  2905  011B                     	;# 
  2906  011B                     	;# 
  2907  011B                     	;# 
  2908  011C                     	;# 
  2909  011C                     	;# 
  2910  011C                     	;# 
  2911  011D                     	;# 
  2912  011D                     	;# 
  2913  011D                     	;# 
  2914  011E                     	;# 
  2915  011E                     	;# 
  2916  011E                     	;# 
  2917  011F                     	;# 
  2918  011F                     	;# 
  2919  011F                     	;# 
  2920  011F                     	;# 
  2921  011F                     	;# 
  2922  018C                     	;# 
  2923  018D                     	;# 
  2924  018E                     	;# 
  2925  018F                     	;# 
  2926  0190                     	;# 
  2927  0191                     	;# 
  2928  0192                     	;# 
  2929  0196                     	;# 
  2930  0197                     	;# 
  2931  0198                     	;# 
  2932  0199                     	;# 
  2933  019A                     	;# 
  2934  019B                     	;# 
  2935  019C                     	;# 
  2936  020C                     	;# 
  2937  020C                     	;# 
  2938  020D                     	;# 
  2939  020E                     	;# 
  2940  020F                     	;# 
  2941  020F                     	;# 
  2942  0210                     	;# 
  2943  0210                     	;# 
  2944  0211                     	;# 
  2945  0211                     	;# 
  2946  0212                     	;# 
  2947  0212                     	;# 
  2948  0213                     	;# 
  2949  0214                     	;# 
  2950  0215                     	;# 
  2951  0215                     	;# 
  2952  0216                     	;# 
  2953  0216                     	;# 
  2954  0217                     	;# 
  2955  0217                     	;# 
  2956  0218                     	;# 
  2957  0218                     	;# 
  2958  0219                     	;# 
  2959  021A                     	;# 
  2960  021B                     	;# 
  2961  021B                     	;# 
  2962  021C                     	;# 
  2963  021C                     	;# 
  2964  021D                     	;# 
  2965  021D                     	;# 
  2966  021E                     	;# 
  2967  021F                     	;# 
  2968  028C                     	;# 
  2969  028C                     	;# 
  2970  028D                     	;# 
  2971  028D                     	;# 
  2972  028E                     	;# 
  2973  028F                     	;# 
  2974  0290                     	;# 
  2975  0290                     	;# 
  2976  0291                     	;# 
  2977  0292                     	;# 
  2978  0292                     	;# 
  2979  0293                     	;# 
  2980  0293                     	;# 
  2981  0294                     	;# 
  2982  0295                     	;# 
  2983  0296                     	;# 
  2984  0296                     	;# 
  2985  0297                     	;# 
  2986  0298                     	;# 
  2987  0298                     	;# 
  2988  0299                     	;# 
  2989  0299                     	;# 
  2990  029A                     	;# 
  2991  029B                     	;# 
  2992  029C                     	;# 
  2993  029C                     	;# 
  2994  029D                     	;# 
  2995  030C                     	;# 
  2996  030C                     	;# 
  2997  030D                     	;# 
  2998  030E                     	;# 
  2999  030F                     	;# 
  3000  0310                     	;# 
  3001  0310                     	;# 
  3002  0311                     	;# 
  3003  0312                     	;# 
  3004  0313                     	;# 
  3005  0314                     	;# 
  3006  0314                     	;# 
  3007  0315                     	;# 
  3008  0316                     	;# 
  3009  0317                     	;# 
  3010  0318                     	;# 
  3011  0318                     	;# 
  3012  0319                     	;# 
  3013  031A                     	;# 
  3014  031B                     	;# 
  3015  031C                     	;# 
  3016  031C                     	;# 
  3017  031D                     	;# 
  3018  031E                     	;# 
  3019  031F                     	;# 
  3020  038C                     	;# 
  3021  038C                     	;# 
  3022  038D                     	;# 
  3023  038E                     	;# 
  3024  0390                     	;# 
  3025  0390                     	;# 
  3026  0391                     	;# 
  3027  0392                     	;# 
  3028  040C                     	;# 
  3029  040D                     	;# 
  3030  040E                     	;# 
  3031  040F                     	;# 
  3032  0410                     	;# 
  3033  0411                     	;# 
  3034  0416                     	;# 
  3035  0416                     	;# 
  3036  0417                     	;# 
  3037  0418                     	;# 
  3038  0418                     	;# 
  3039  0419                     	;# 
  3040  041A                     	;# 
  3041  041A                     	;# 
  3042  041B                     	;# 
  3043  041C                     	;# 
  3044  041C                     	;# 
  3045  041D                     	;# 
  3046  041E                     	;# 
  3047  041F                     	;# 
  3048  048C                     	;# 
  3049  048C                     	;# 
  3050  048D                     	;# 
  3051  048E                     	;# 
  3052  048F                     	;# 
  3053  048F                     	;# 
  3054  0490                     	;# 
  3055  0491                     	;# 
  3056  0492                     	;# 
  3057  0492                     	;# 
  3058  0493                     	;# 
  3059  0494                     	;# 
  3060  0495                     	;# 
  3061  0495                     	;# 
  3062  0496                     	;# 
  3063  0497                     	;# 
  3064  0498                     	;# 
  3065  0499                     	;# 
  3066  049A                     	;# 
  3067  049B                     	;# 
  3068  049C                     	;# 
  3069  049D                     	;# 
  3070  050C                     	;# 
  3071  050C                     	;# 
  3072  050D                     	;# 
  3073  050E                     	;# 
  3074  050F                     	;# 
  3075  050F                     	;# 
  3076  0510                     	;# 
  3077  0511                     	;# 
  3078  0512                     	;# 
  3079  0512                     	;# 
  3080  0513                     	;# 
  3081  0514                     	;# 
  3082  0515                     	;# 
  3083  0515                     	;# 
  3084  0516                     	;# 
  3085  0517                     	;# 
  3086  0518                     	;# 
  3087  0519                     	;# 
  3088  051A                     	;# 
  3089  051B                     	;# 
  3090  051C                     	;# 
  3091  051D                     	;# 
  3092  058C                     	;# 
  3093  058C                     	;# 
  3094  058D                     	;# 
  3095  058E                     	;# 
  3096  058F                     	;# 
  3097  058F                     	;# 
  3098  0590                     	;# 
  3099  0591                     	;# 
  3100  0592                     	;# 
  3101  0593                     	;# 
  3102  060C                     	;# 
  3103  060D                     	;# 
  3104  060E                     	;# 
  3105  060F                     	;# 
  3106  0610                     	;# 
  3107  0611                     	;# 
  3108  0612                     	;# 
  3109  0613                     	;# 
  3110  0614                     	;# 
  3111  0616                     	;# 
  3112  0617                     	;# 
  3113  0618                     	;# 
  3114  0619                     	;# 
  3115  061A                     	;# 
  3116  061B                     	;# 
  3117  061C                     	;# 
  3118  061D                     	;# 
  3119  061E                     	;# 
  3120  068C                     	;# 
  3121  068D                     	;# 
  3122  068E                     	;# 
  3123  068F                     	;# 
  3124  0690                     	;# 
  3125  0691                     	;# 
  3126  0692                     	;# 
  3127  0693                     	;# 
  3128  0694                     	;# 
  3129  070C                     	;# 
  3130  070D                     	;# 
  3131  070E                     	;# 
  3132  070F                     	;# 
  3133  0710                     	;# 
  3134  0711                     	;# 
  3135  0712                     	;# 
  3136  0713                     	;# 
  3137  0714                     	;# 
  3138  0716                     	;# 
  3139  0717                     	;# 
  3140  0718                     	;# 
  3141  0719                     	;# 
  3142  071A                     	;# 
  3143  071B                     	;# 
  3144  071C                     	;# 
  3145  071D                     	;# 
  3146  071E                     	;# 
  3147  0796                     	;# 
  3148  0797                     	;# 
  3149  0798                     	;# 
  3150  0799                     	;# 
  3151  079A                     	;# 
  3152  079B                     	;# 
  3153  080C                     	;# 
  3154  080D                     	;# 
  3155  080E                     	;# 
  3156  080F                     	;# 
  3157  0810                     	;# 
  3158  0811                     	;# 
  3159  0812                     	;# 
  3160  0813                     	;# 
  3161  0814                     	;# 
  3162  081A                     	;# 
  3163  081B                     	;# 
  3164  081C                     	;# 
  3165  081D                     	;# 
  3166  081E                     	;# 
  3167  081F                     	;# 
  3168  088C                     	;# 
  3169  088D                     	;# 
  3170  088E                     	;# 
  3171  088F                     	;# 
  3172  0890                     	;# 
  3173  0891                     	;# 
  3174  0892                     	;# 
  3175  0893                     	;# 
  3176  0895                     	;# 
  3177  0896                     	;# 
  3178  0897                     	;# 
  3179  0898                     	;# 
  3180  0899                     	;# 
  3181  089A                     	;# 
  3182  089B                     	;# 
  3183  090C                     	;# 
  3184  090E                     	;# 
  3185  090F                     	;# 
  3186  091F                     	;# 
  3187  098F                     	;# 
  3188  098F                     	;# 
  3189  0990                     	;# 
  3190  0991                     	;# 
  3191  0992                     	;# 
  3192  0993                     	;# 
  3193  0994                     	;# 
  3194  0995                     	;# 
  3195  0996                     	;# 
  3196  0997                     	;# 
  3197  0E0F                     	;# 
  3198  0E10                     	;# 
  3199  0E11                     	;# 
  3200  0E12                     	;# 
  3201  0E13                     	;# 
  3202  0E14                     	;# 
  3203  0E15                     	;# 
  3204  0E16                     	;# 
  3205  0E17                     	;# 
  3206  0E18                     	;# 
  3207  0E19                     	;# 
  3208  0E1A                     	;# 
  3209  0E1B                     	;# 
  3210  0E1C                     	;# 
  3211  0E1D                     	;# 
  3212  0E1E                     	;# 
  3213  0E1F                     	;# 
  3214  0E20                     	;# 
  3215  0E21                     	;# 
  3216  0E22                     	;# 
  3217  0E23                     	;# 
  3218  0E24                     	;# 
  3219  0E25                     	;# 
  3220  0E26                     	;# 
  3221  0E27                     	;# 
  3222  0E28                     	;# 
  3223  0E29                     	;# 
  3224  0E2A                     	;# 
  3225  0E2B                     	;# 
  3226  0E2C                     	;# 
  3227  0E2D                     	;# 
  3228  0E2E                     	;# 
  3229  0E2F                     	;# 
  3230  0E30                     	;# 
  3231  0E31                     	;# 
  3232  0E32                     	;# 
  3233  0E33                     	;# 
  3234  0E34                     	;# 
  3235  0E35                     	;# 
  3236  0E36                     	;# 
  3237  0E37                     	;# 
  3238  0E8F                     	;# 
  3239  0E90                     	;# 
  3240  0E91                     	;# 
  3241  0E92                     	;# 
  3242  0E93                     	;# 
  3243  0E94                     	;# 
  3244  0E95                     	;# 
  3245  0E96                     	;# 
  3246  0E97                     	;# 
  3247  0E9C                     	;# 
  3248  0E9D                     	;# 
  3249  0E9E                     	;# 
  3250  0EA1                     	;# 
  3251  0EA2                     	;# 
  3252  0EA3                     	;# 
  3253  0EA4                     	;# 
  3254  0EA5                     	;# 
  3255  0EA9                     	;# 
  3256  0EAA                     	;# 
  3257  0EAB                     	;# 
  3258  0EAC                     	;# 
  3259  0EB1                     	;# 
  3260  0EB2                     	;# 
  3261  0EB3                     	;# 
  3262  0EB8                     	;# 
  3263  0EB9                     	;# 
  3264  0EBA                     	;# 
  3265  0EBB                     	;# 
  3266  0EBC                     	;# 
  3267  0EBD                     	;# 
  3268  0EBE                     	;# 
  3269  0EC3                     	;# 
  3270  0EC5                     	;# 
  3271  0EC6                     	;# 
  3272  0EC7                     	;# 
  3273  0EC8                     	;# 
  3274  0EC9                     	;# 
  3275  0ECA                     	;# 
  3276  0ECB                     	;# 
  3277  0ECC                     	;# 
  3278  0F10                     	;# 
  3279  0F11                     	;# 
  3280  0F12                     	;# 
  3281  0F13                     	;# 
  3282  0F14                     	;# 
  3283  0F15                     	;# 
  3284  0F16                     	;# 
  3285  0F17                     	;# 
  3286  0F18                     	;# 
  3287  0F19                     	;# 
  3288  0F1A                     	;# 
  3289  0F1B                     	;# 
  3290  0F1C                     	;# 
  3291  0F1D                     	;# 
  3292  0F1E                     	;# 
  3293  0F1F                     	;# 
  3294  0F20                     	;# 
  3295  0F21                     	;# 
  3296  0F22                     	;# 
  3297  0F23                     	;# 
  3298  0F24                     	;# 
  3299  0F25                     	;# 
  3300  0F26                     	;# 
  3301  0F27                     	;# 
  3302  0F28                     	;# 
  3303  0F29                     	;# 
  3304  0F2A                     	;# 
  3305  0F2B                     	;# 
  3306  0F2C                     	;# 
  3307  0F2D                     	;# 
  3308  0F2E                     	;# 
  3309  0F2F                     	;# 
  3310  0F30                     	;# 
  3311  0F31                     	;# 
  3312  0F32                     	;# 
  3313  0F38                     	;# 
  3314  0F39                     	;# 
  3315  0F3A                     	;# 
  3316  0F3B                     	;# 
  3317  0F3C                     	;# 
  3318  0F3D                     	;# 
  3319  0F3E                     	;# 
  3320  0F3F                     	;# 
  3321  0F40                     	;# 
  3322  0F41                     	;# 
  3323  0F43                     	;# 
  3324  0F44                     	;# 
  3325  0F45                     	;# 
  3326  0F46                     	;# 
  3327  0F47                     	;# 
  3328  0F48                     	;# 
  3329  0F49                     	;# 
  3330  0F4A                     	;# 
  3331  0F4B                     	;# 
  3332  0F4C                     	;# 
  3333  0F4E                     	;# 
  3334  0F4F                     	;# 
  3335  0F50                     	;# 
  3336  0F51                     	;# 
  3337  0F52                     	;# 
  3338  0F53                     	;# 
  3339  0F54                     	;# 
  3340  0F55                     	;# 
  3341  0F56                     	;# 
  3342  0F57                     	;# 
  3343  0F59                     	;# 
  3344  0F5A                     	;# 
  3345  0F5B                     	;# 
  3346  0F5C                     	;# 
  3347  0F5D                     	;# 
  3348  0F61                     	;# 
  3349  0F62                     	;# 
  3350  0F64                     	;# 
  3351  0F65                     	;# 
  3352  0F66                     	;# 
  3353  0F67                     	;# 
  3354  0F68                     	;# 
  3355  0F69                     	;# 
  3356  0F6A                     	;# 
  3357  0F6B                     	;# 
  3358  0F6C                     	;# 
  3359  0F6D                     	;# 
  3360  0FE4                     	;# 
  3361  0FE5                     	;# 
  3362  0FE6                     	;# 
  3363  0FE7                     	;# 
  3364  0FE8                     	;# 
  3365  0FE9                     	;# 
  3366  0FEA                     	;# 
  3367  0FEB                     	;# 
  3368  0FED                     	;# 
  3369  0FEE                     	;# 
  3370  0FEF                     	;# 
  3371  0000                     	;# 
  3372  0001                     	;# 
  3373  0002                     	;# 
  3374  0003                     	;# 
  3375  0004                     	;# 
  3376  0005                     	;# 
  3377  0006                     	;# 
  3378  0007                     	;# 
  3379  0008                     	;# 
  3380  0009                     	;# 
  3381  000A                     	;# 
  3382  000B                     	;# 
  3383  000C                     	;# 
  3384  000D                     	;# 
  3385  000E                     	;# 
  3386  000F                     	;# 
  3387  0010                     	;# 
  3388  0011                     	;# 
  3389  0012                     	;# 
  3390  0013                     	;# 
  3391  0014                     	;# 
  3392  0015                     	;# 
  3393  0016                     	;# 
  3394  0017                     	;# 
  3395  0018                     	;# 
  3396  0019                     	;# 
  3397  001A                     	;# 
  3398  001C                     	;# 
  3399  001C                     	;# 
  3400  001D                     	;# 
  3401  001D                     	;# 
  3402  001E                     	;# 
  3403  001F                     	;# 
  3404  008C                     	;# 
  3405  008C                     	;# 
  3406  008D                     	;# 
  3407  008E                     	;# 
  3408  008E                     	;# 
  3409  008F                     	;# 
  3410  0090                     	;# 
  3411  0090                     	;# 
  3412  0091                     	;# 
  3413  0093                     	;# 
  3414  0094                     	;# 
  3415  0095                     	;# 
  3416  0096                     	;# 
  3417  0097                     	;# 
  3418  0098                     	;# 
  3419  0099                     	;# 
  3420  009A                     	;# 
  3421  009B                     	;# 
  3422  009C                     	;# 
  3423  009D                     	;# 
  3424  009E                     	;# 
  3425  010C                     	;# 
  3426  010D                     	;# 
  3427  010E                     	;# 
  3428  010E                     	;# 
  3429  010F                     	;# 
  3430  0110                     	;# 
  3431  0110                     	;# 
  3432  0111                     	;# 
  3433  0112                     	;# 
  3434  0112                     	;# 
  3435  0113                     	;# 
  3436  0114                     	;# 
  3437  0114                     	;# 
  3438  0115                     	;# 
  3439  0116                     	;# 
  3440  0116                     	;# 
  3441  0117                     	;# 
  3442  0119                     	;# 
  3443  0119                     	;# 
  3444  0119                     	;# 
  3445  011A                     	;# 
  3446  011A                     	;# 
  3447  011A                     	;# 
  3448  011B                     	;# 
  3449  011B                     	;# 
  3450  011B                     	;# 
  3451  011B                     	;# 
  3452  011B                     	;# 
  3453  011C                     	;# 
  3454  011C                     	;# 
  3455  011C                     	;# 
  3456  011D                     	;# 
  3457  011D                     	;# 
  3458  011D                     	;# 
  3459  011E                     	;# 
  3460  011E                     	;# 
  3461  011E                     	;# 
  3462  011F                     	;# 
  3463  011F                     	;# 
  3464  011F                     	;# 
  3465  011F                     	;# 
  3466  011F                     	;# 
  3467  018C                     	;# 
  3468  018D                     	;# 
  3469  018E                     	;# 
  3470  018F                     	;# 
  3471  0190                     	;# 
  3472  0191                     	;# 
  3473  0192                     	;# 
  3474  0196                     	;# 
  3475  0197                     	;# 
  3476  0198                     	;# 
  3477  0199                     	;# 
  3478  019A                     	;# 
  3479  019B                     	;# 
  3480  019C                     	;# 
  3481  020C                     	;# 
  3482  020C                     	;# 
  3483  020D                     	;# 
  3484  020E                     	;# 
  3485  020F                     	;# 
  3486  020F                     	;# 
  3487  0210                     	;# 
  3488  0210                     	;# 
  3489  0211                     	;# 
  3490  0211                     	;# 
  3491  0212                     	;# 
  3492  0212                     	;# 
  3493  0213                     	;# 
  3494  0214                     	;# 
  3495  0215                     	;# 
  3496  0215                     	;# 
  3497  0216                     	;# 
  3498  0216                     	;# 
  3499  0217                     	;# 
  3500  0217                     	;# 
  3501  0218                     	;# 
  3502  0218                     	;# 
  3503  0219                     	;# 
  3504  021A                     	;# 
  3505  021B                     	;# 
  3506  021B                     	;# 
  3507  021C                     	;# 
  3508  021C                     	;# 
  3509  021D                     	;# 
  3510  021D                     	;# 
  3511  021E                     	;# 
  3512  021F                     	;# 
  3513  028C                     	;# 
  3514  028C                     	;# 
  3515  028D                     	;# 
  3516  028D                     	;# 
  3517  028E                     	;# 
  3518  028F                     	;# 
  3519  0290                     	;# 
  3520  0290                     	;# 
  3521  0291                     	;# 
  3522  0292                     	;# 
  3523  0292                     	;# 
  3524  0293                     	;# 
  3525  0293                     	;# 
  3526  0294                     	;# 
  3527  0295                     	;# 
  3528  0296                     	;# 
  3529  0296                     	;# 
  3530  0297                     	;# 
  3531  0298                     	;# 
  3532  0298                     	;# 
  3533  0299                     	;# 
  3534  0299                     	;# 
  3535  029A                     	;# 
  3536  029B                     	;# 
  3537  029C                     	;# 
  3538  029C                     	;# 
  3539  029D                     	;# 
  3540  030C                     	;# 
  3541  030C                     	;# 
  3542  030D                     	;# 
  3543  030E                     	;# 
  3544  030F                     	;# 
  3545  0310                     	;# 
  3546  0310                     	;# 
  3547  0311                     	;# 
  3548  0312                     	;# 
  3549  0313                     	;# 
  3550  0314                     	;# 
  3551  0314                     	;# 
  3552  0315                     	;# 
  3553  0316                     	;# 
  3554  0317                     	;# 
  3555  0318                     	;# 
  3556  0318                     	;# 
  3557  0319                     	;# 
  3558  031A                     	;# 
  3559  031B                     	;# 
  3560  031C                     	;# 
  3561  031C                     	;# 
  3562  031D                     	;# 
  3563  031E                     	;# 
  3564  031F                     	;# 
  3565  038C                     	;# 
  3566  038C                     	;# 
  3567  038D                     	;# 
  3568  038E                     	;# 
  3569  0390                     	;# 
  3570  0390                     	;# 
  3571  0391                     	;# 
  3572  0392                     	;# 
  3573  040C                     	;# 
  3574  040D                     	;# 
  3575  040E                     	;# 
  3576  040F                     	;# 
  3577  0410                     	;# 
  3578  0411                     	;# 
  3579  0416                     	;# 
  3580  0416                     	;# 
  3581  0417                     	;# 
  3582  0418                     	;# 
  3583  0418                     	;# 
  3584  0419                     	;# 
  3585  041A                     	;# 
  3586  041A                     	;# 
  3587  041B                     	;# 
  3588  041C                     	;# 
  3589  041C                     	;# 
  3590  041D                     	;# 
  3591  041E                     	;# 
  3592  041F                     	;# 
  3593  048C                     	;# 
  3594  048C                     	;# 
  3595  048D                     	;# 
  3596  048E                     	;# 
  3597  048F                     	;# 
  3598  048F                     	;# 
  3599  0490                     	;# 
  3600  0491                     	;# 
  3601  0492                     	;# 
  3602  0492                     	;# 
  3603  0493                     	;# 
  3604  0494                     	;# 
  3605  0495                     	;# 
  3606  0495                     	;# 
  3607  0496                     	;# 
  3608  0497                     	;# 
  3609  0498                     	;# 
  3610  0499                     	;# 
  3611  049A                     	;# 
  3612  049B                     	;# 
  3613  049C                     	;# 
  3614  049D                     	;# 
  3615  050C                     	;# 
  3616  050C                     	;# 
  3617  050D                     	;# 
  3618  050E                     	;# 
  3619  050F                     	;# 
  3620  050F                     	;# 
  3621  0510                     	;# 
  3622  0511                     	;# 
  3623  0512                     	;# 
  3624  0512                     	;# 
  3625  0513                     	;# 
  3626  0514                     	;# 
  3627  0515                     	;# 
  3628  0515                     	;# 
  3629  0516                     	;# 
  3630  0517                     	;# 
  3631  0518                     	;# 
  3632  0519                     	;# 
  3633  051A                     	;# 
  3634  051B                     	;# 
  3635  051C                     	;# 
  3636  051D                     	;# 
  3637  058C                     	;# 
  3638  058C                     	;# 
  3639  058D                     	;# 
  3640  058E                     	;# 
  3641  058F                     	;# 
  3642  058F                     	;# 
  3643  0590                     	;# 
  3644  0591                     	;# 
  3645  0592                     	;# 
  3646  0593                     	;# 
  3647  060C                     	;# 
  3648  060D                     	;# 
  3649  060E                     	;# 
  3650  060F                     	;# 
  3651  0610                     	;# 
  3652  0611                     	;# 
  3653  0612                     	;# 
  3654  0613                     	;# 
  3655  0614                     	;# 
  3656  0616                     	;# 
  3657  0617                     	;# 
  3658  0618                     	;# 
  3659  0619                     	;# 
  3660  061A                     	;# 
  3661  061B                     	;# 
  3662  061C                     	;# 
  3663  061D                     	;# 
  3664  061E                     	;# 
  3665  068C                     	;# 
  3666  068D                     	;# 
  3667  068E                     	;# 
  3668  068F                     	;# 
  3669  0690                     	;# 
  3670  0691                     	;# 
  3671  0692                     	;# 
  3672  0693                     	;# 
  3673  0694                     	;# 
  3674  070C                     	;# 
  3675  070D                     	;# 
  3676  070E                     	;# 
  3677  070F                     	;# 
  3678  0710                     	;# 
  3679  0711                     	;# 
  3680  0712                     	;# 
  3681  0713                     	;# 
  3682  0714                     	;# 
  3683  0716                     	;# 
  3684  0717                     	;# 
  3685  0718                     	;# 
  3686  0719                     	;# 
  3687  071A                     	;# 
  3688  071B                     	;# 
  3689  071C                     	;# 
  3690  071D                     	;# 
  3691  071E                     	;# 
  3692  0796                     	;# 
  3693  0797                     	;# 
  3694  0798                     	;# 
  3695  0799                     	;# 
  3696  079A                     	;# 
  3697  079B                     	;# 
  3698  080C                     	;# 
  3699  080D                     	;# 
  3700  080E                     	;# 
  3701  080F                     	;# 
  3702  0810                     	;# 
  3703  0811                     	;# 
  3704  0812                     	;# 
  3705  0813                     	;# 
  3706  0814                     	;# 
  3707  081A                     	;# 
  3708  081B                     	;# 
  3709  081C                     	;# 
  3710  081D                     	;# 
  3711  081E                     	;# 
  3712  081F                     	;# 
  3713  088C                     	;# 
  3714  088D                     	;# 
  3715  088E                     	;# 
  3716  088F                     	;# 
  3717  0890                     	;# 
  3718  0891                     	;# 
  3719  0892                     	;# 
  3720  0893                     	;# 
  3721  0895                     	;# 
  3722  0896                     	;# 
  3723  0897                     	;# 
  3724  0898                     	;# 
  3725  0899                     	;# 
  3726  089A                     	;# 
  3727  089B                     	;# 
  3728  090C                     	;# 
  3729  090E                     	;# 
  3730  090F                     	;# 
  3731  091F                     	;# 
  3732  098F                     	;# 
  3733  098F                     	;# 
  3734  0990                     	;# 
  3735  0991                     	;# 
  3736  0992                     	;# 
  3737  0993                     	;# 
  3738  0994                     	;# 
  3739  0995                     	;# 
  3740  0996                     	;# 
  3741  0997                     	;# 
  3742  0E0F                     	;# 
  3743  0E10                     	;# 
  3744  0E11                     	;# 
  3745  0E12                     	;# 
  3746  0E13                     	;# 
  3747  0E14                     	;# 
  3748  0E15                     	;# 
  3749  0E16                     	;# 
  3750  0E17                     	;# 
  3751  0E18                     	;# 
  3752  0E19                     	;# 
  3753  0E1A                     	;# 
  3754  0E1B                     	;# 
  3755  0E1C                     	;# 
  3756  0E1D                     	;# 
  3757  0E1E                     	;# 
  3758  0E1F                     	;# 
  3759  0E20                     	;# 
  3760  0E21                     	;# 
  3761  0E22                     	;# 
  3762  0E23                     	;# 
  3763  0E24                     	;# 
  3764  0E25                     	;# 
  3765  0E26                     	;# 
  3766  0E27                     	;# 
  3767  0E28                     	;# 
  3768  0E29                     	;# 
  3769  0E2A                     	;# 
  3770  0E2B                     	;# 
  3771  0E2C                     	;# 
  3772  0E2D                     	;# 
  3773  0E2E                     	;# 
  3774  0E2F                     	;# 
  3775  0E30                     	;# 
  3776  0E31                     	;# 
  3777  0E32                     	;# 
  3778  0E33                     	;# 
  3779  0E34                     	;# 
  3780  0E35                     	;# 
  3781  0E36                     	;# 
  3782  0E37                     	;# 
  3783  0E8F                     	;# 
  3784  0E90                     	;# 
  3785  0E91                     	;# 
  3786  0E92                     	;# 
  3787  0E93                     	;# 
  3788  0E94                     	;# 
  3789  0E95                     	;# 
  3790  0E96                     	;# 
  3791  0E97                     	;# 
  3792  0E9C                     	;# 
  3793  0E9D                     	;# 
  3794  0E9E                     	;# 
  3795  0EA1                     	;# 
  3796  0EA2                     	;# 
  3797  0EA3                     	;# 
  3798  0EA4                     	;# 
  3799  0EA5                     	;# 
  3800  0EA9                     	;# 
  3801  0EAA                     	;# 
  3802  0EAB                     	;# 
  3803  0EAC                     	;# 
  3804  0EB1                     	;# 
  3805  0EB2                     	;# 
  3806  0EB3                     	;# 
  3807  0EB8                     	;# 
  3808  0EB9                     	;# 
  3809  0EBA                     	;# 
  3810  0EBB                     	;# 
  3811  0EBC                     	;# 
  3812  0EBD                     	;# 
  3813  0EBE                     	;# 
  3814  0EC3                     	;# 
  3815  0EC5                     	;# 
  3816  0EC6                     	;# 
  3817  0EC7                     	;# 
  3818  0EC8                     	;# 
  3819  0EC9                     	;# 
  3820  0ECA                     	;# 
  3821  0ECB                     	;# 
  3822  0ECC                     	;# 
  3823  0F10                     	;# 
  3824  0F11                     	;# 
  3825  0F12                     	;# 
  3826  0F13                     	;# 
  3827  0F14                     	;# 
  3828  0F15                     	;# 
  3829  0F16                     	;# 
  3830  0F17                     	;# 
  3831  0F18                     	;# 
  3832  0F19                     	;# 
  3833  0F1A                     	;# 
  3834  0F1B                     	;# 
  3835  0F1C                     	;# 
  3836  0F1D                     	;# 
  3837  0F1E                     	;# 
  3838  0F1F                     	;# 
  3839  0F20                     	;# 
  3840  0F21                     	;# 
  3841  0F22                     	;# 
  3842  0F23                     	;# 
  3843  0F24                     	;# 
  3844  0F25                     	;# 
  3845  0F26                     	;# 
  3846  0F27                     	;# 
  3847  0F28                     	;# 
  3848  0F29                     	;# 
  3849  0F2A                     	;# 
  3850  0F2B                     	;# 
  3851  0F2C                     	;# 
  3852  0F2D                     	;# 
  3853  0F2E                     	;# 
  3854  0F2F                     	;# 
  3855  0F30                     	;# 
  3856  0F31                     	;# 
  3857  0F32                     	;# 
  3858  0F38                     	;# 
  3859  0F39                     	;# 
  3860  0F3A                     	;# 
  3861  0F3B                     	;# 
  3862  0F3C                     	;# 
  3863  0F3D                     	;# 
  3864  0F3E                     	;# 
  3865  0F3F                     	;# 
  3866  0F40                     	;# 
  3867  0F41                     	;# 
  3868  0F43                     	;# 
  3869  0F44                     	;# 
  3870  0F45                     	;# 
  3871  0F46                     	;# 
  3872  0F47                     	;# 
  3873  0F48                     	;# 
  3874  0F49                     	;# 
  3875  0F4A                     	;# 
  3876  0F4B                     	;# 
  3877  0F4C                     	;# 
  3878  0F4E                     	;# 
  3879  0F4F                     	;# 
  3880  0F50                     	;# 
  3881  0F51                     	;# 
  3882  0F52                     	;# 
  3883  0F53                     	;# 
  3884  0F54                     	;# 
  3885  0F55                     	;# 
  3886  0F56                     	;# 
  3887  0F57                     	;# 
  3888  0F59                     	;# 
  3889  0F5A                     	;# 
  3890  0F5B                     	;# 
  3891  0F5C                     	;# 
  3892  0F5D                     	;# 
  3893  0F61                     	;# 
  3894  0F62                     	;# 
  3895  0F64                     	;# 
  3896  0F65                     	;# 
  3897  0F66                     	;# 
  3898  0F67                     	;# 
  3899  0F68                     	;# 
  3900  0F69                     	;# 
  3901  0F6A                     	;# 
  3902  0F6B                     	;# 
  3903  0F6C                     	;# 
  3904  0F6D                     	;# 
  3905  0FE4                     	;# 
  3906  0FE5                     	;# 
  3907  0FE6                     	;# 
  3908  0FE7                     	;# 
  3909  0FE8                     	;# 
  3910  0FE9                     	;# 
  3911  0FEA                     	;# 
  3912  0FEB                     	;# 
  3913  0FED                     	;# 
  3914  0FEE                     	;# 
  3915  0FEF                     	;_lutRY
  3916                           
  3917                           	psect	idataCOMMON
  3918  07FC                     __pidataCOMMON:	
  3919                           
  3920                           ;initializer for _AN_temp
  3921  07FC  3401               	retlw	1
  3922                           
  3923                           	psect	idataBANK0
  3924  07F0                     __pidataBANK0:	
  3925                           
  3926                           ;initializer for _AN_prev
  3927  07F0  3401               	retlw	1
  3928                           
  3929                           ;initializer for _MAP_LARGE_MOTOR
  3930  07F1  34FF               	retlw	255
  3931                           
  3932                           ;initializer for _MAP_SMALL_MOTOR
  3933  07F2  34FF               	retlw	255
  3934                           
  3935                           ;initializer for _responseLength
  3936  07F3  3409               	retlw	9
  3937                           
  3938                           ;initializer for _debounceLoops
  3939  07F4  3403               	retlw	3
  3940                           
  3941                           ;initializer for _lyData
  3942  07F5  34F7               	retlw	247
  3943                           
  3944                           ;initializer for _lxData
  3945  07F6  34F7               	retlw	247
  3946                           
  3947                           ;initializer for _ryData
  3948  07F7  34F7               	retlw	247
  3949                           
  3950                           ;initializer for _rxData
  3951  07F8  34F7               	retlw	247
  3952                           
  3953                           ;initializer for _digitalStateSecond
  3954  07F9  34FF               	retlw	255
  3955                           
  3956                           ;initializer for _digitalStateFirst
  3957  07FA  34FF               	retlw	255
  3958                           
  3959                           ;initializer for _AN_btn
  3960  07FB  3401               	retlw	1
  3961                           
  3962                           	psect	idataBANK1
  3963  0D97                     __pidataBANK1:	
  3964                           
  3965                           ;initializer for _response
  3966  0D97  3482               	retlw	130
  3967  0D98  345A               	retlw	90
  3968  0D99  3400               	retlw	0
  3969  0D9A  3400               	retlw	0
  3970  0D9B  3400               	retlw	0
  3971  0D9C  3400               	retlw	0
  3972  0D9D  3400               	retlw	0
  3973  0D9E  3400               	retlw	0
  3974  0D9F  3400               	retlw	0
  3975  0DA0  3400               	retlw	0
  3976  0DA1  3400               	retlw	0
  3977  0DA2  3400               	retlw	0
  3978  0DA3  3400               	retlw	0
  3979  0DA4  3400               	retlw	0
  3980  0DA5  3400               	retlw	0
  3981  0DA6  3400               	retlw	0
  3982  0DA7  3400               	retlw	0
  3983  0DA8  3400               	retlw	0
  3984  0DA9  3400               	retlw	0
  3985  0DAA  3400               	retlw	0
  3986  0011                     _TRISAbits	set	17
  3987  0013                     _TRISCbits	set	19
  3988  0015                     _TRISE	set	21
  3989  0014                     _TRISD	set	20
  3990  0013                     _TRISC	set	19
  3991  0012                     _TRISB	set	18
  3992  0011                     _TRISA	set	17
  3993  000B                     _INTCONbits	set	11
  3994  006B                     _RB3	set	107
  3995  006A                     _RB2	set	106
  3996  006D                     _RB5	set	109
  3997  006C                     _RB4	set	108
  3998  0061                     _RA1	set	97
  3999  0062                     _RA2	set	98
  4000  0063                     _RA3	set	99
  4001  0060                     _RA0	set	96
  4002  006F                     _RB7	set	111
  4003  006E                     _RB6	set	110
  4004  0072                     _RC2	set	114
  4005  0078                     _RD0	set	120
  4006  0069                     _RB1	set	105
  4007  0068                     _RB0	set	104
  4008  0066                     _RA6	set	102
  4009  0067                     _RA7	set	103
  4010  0065                     _RA5	set	101
  4011  0064                     _RA4	set	100
  4012  007C                     _RD4	set	124
  4013  0098                     _ADCLK	set	152
  4014  009A                     _ADREF	set	154
  4015  0095                     _ADCON2	set	149
  4016  0094                     _ADCON1	set	148
  4017  0093                     _ADCON0	set	147
  4018  008C                     _ADRESL	set	140
  4019  008D                     _ADRESH	set	141
  4020  0093                     _ADCON0bits	set	147
  4021  009D                     _ADACQ	set	157
  4022  009C                     _ADPRE	set	156
  4023  009E                     _ADPCH	set	158
  4024  018F                     _SSP1STATbits	set	399
  4025  0190                     _SSP1CON1	set	400
  4026  018F                     _SSP1STAT	set	399
  4027  018C                     _SSP1BUF	set	396
  4028  38C8                     _SSP1IE	set	14536
  4029  3878                     _SSP1IF	set	14456
  4030  081F                     _NVMCON2	set	2079
  4031  081C                     _NVMDATL	set	2076
  4032  081A                     _NVMADRL	set	2074
  4033  081B                     _NVMADRH	set	2075
  4034  081E                     _NVMCON1bits	set	2078
  4035  0E8F                     _PPSLOCK	set	3727
  4036  0F25                     _RC5PPS	set	3877
  4037  0F65                     _WPUE	set	3941
  4038  0F5A                     _WPUD	set	3930
  4039  0F4F                     _WPUC	set	3919
  4040  0F44                     _WPUB	set	3908
  4041  0F39                     _WPUA	set	3897
  4042  0F64                     _ANSELE	set	3940
  4043  0F59                     _ANSELD	set	3929
  4044  0F4E                     _ANSELC	set	3918
  4045  0F43                     _ANSELB	set	3907
  4046  0F38                     _ANSELA	set	3896
  4047                           
  4048                           ; #config settings
  4049  0000                     
  4050                           	psect	cinit
  4051  0240                     start_initialization:	
  4052  0240                     __initialization:		;BIGRAM
  4053                           
  4054                           ; Initialize objects allocated to COMMON
  4055  0240  3187  27FC  3182   	fcall	__pidataCOMMON	;fetch initializer
  4056  0243  00FB               	movwf	__pdataCOMMON& (0+127)
  4057                           
  4058                           ; Initialize objects allocated to BANK0
  4059  0244  30F0               	movlw	low __pidataBANK0
  4060  0245  0084               	movwf	4
  4061  0246  3087               	movlw	(high __pidataBANK0)| (0+128)
  4062  0247  0085               	movwf	5
  4063  0248  305A               	movlw	low __pdataBANK0
  4064  0249  0086               	movwf	6
  4065  024A  3000               	movlw	high __pdataBANK0
  4066  024B  0087               	movwf	7
  4067  024C  3000               	movlw	0
  4068  024D  00FF               	movwf	btemp+1
  4069  024E  300C               	movlw	12
  4070  024F  318D  2551  3182   	fcall	init_ram
  4071                           
  4072                           ; Initialize objects allocated to BANK1
  4073  0252  3097               	movlw	low __pidataBANK1
  4074  0253  0084               	movwf	4
  4075  0254  308D               	movlw	(high __pidataBANK1)| (0+128)
  4076  0255  0085               	movwf	5
  4077  0256  30D8               	movlw	low __pdataBANK1
  4078  0257  0086               	movwf	6
  4079  0258  3000               	movlw	high __pdataBANK1
  4080  0259  0087               	movwf	7
  4081  025A  3000               	movlw	0
  4082  025B  00FF               	movwf	btemp+1
  4083  025C  3014               	movlw	20
  4084  025D  318D  2551  3182   	fcall	init_ram
  4085                           
  4086                           ; Clear objects allocated to BIGRAM
  4087  0260  30F0               	movlw	low (0+9200)
  4088  0261  0084               	movwf	4
  4089  0262  3023               	movlw	high (0+9200)
  4090  0263  0085               	movwf	5
  4091  0264  3000               	movlw	0
  4092  0265  00FE               	movwf	btemp
  4093  0266  3004               	movlw	4
  4094  0267  00FF               	movwf	btemp+1
  4095  0268  318D  2545  3182   	fcall	clear_ram0
  4096                           
  4097                           ; Clear objects allocated to COMMON
  4098  026B  01F6               	clrf	__pbssCOMMON& (0+127)
  4099  026C  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  4100  026D  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  4101  026E  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  4102  026F  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
  4103                           
  4104                           ; Clear objects allocated to BANK0
  4105  0270  01E6               	clrf	__pbssBANK0& (0+127)
  4106  0271  01E7               	clrf	(__pbssBANK0+1)& (0+127)
  4107  0272  01E8               	clrf	(__pbssBANK0+2)& (0+127)
  4108  0273  01E9               	clrf	(__pbssBANK0+3)& (0+127)
  4109  0274  01EA               	clrf	(__pbssBANK0+4)& (0+127)
  4110  0275  01EB               	clrf	(__pbssBANK0+5)& (0+127)
  4111  0276  01EC               	clrf	(__pbssBANK0+6)& (0+127)
  4112  0277  01ED               	clrf	(__pbssBANK0+7)& (0+127)
  4113                           
  4114                           ; Clear objects allocated to BANK1
  4115  0278  30A0               	movlw	low __pbssBANK1
  4116  0279  0084               	movwf	4
  4117  027A  3000               	movlw	high __pbssBANK1
  4118  027B  0085               	movwf	5
  4119  027C  3038               	movlw	56
  4120  027D  00FE               	movwf	btemp
  4121  027E  3000               	movlw	0
  4122  027F  00FF               	movwf	btemp+1
  4123  0280  318D  2545  3182   	fcall	clear_ram0
  4124                           
  4125                           ; Clear objects allocated to BANK2
  4126  0283  0022               	movlb	2	; select bank2
  4127  0284  01A0               	clrf	__pbssBANK2& (0+127)
  4128  0285  01A1               	clrf	(__pbssBANK2+1)& (0+127)
  4129  0286  01A2               	clrf	(__pbssBANK2+2)& (0+127)
  4130  0287  01A3               	clrf	(__pbssBANK2+3)& (0+127)
  4131  0288  01A4               	clrf	(__pbssBANK2+4)& (0+127)
  4132  0289  01A5               	clrf	(__pbssBANK2+5)& (0+127)
  4133  028A  01A6               	clrf	(__pbssBANK2+6)& (0+127)
  4134  028B  01A7               	clrf	(__pbssBANK2+7)& (0+127)
  4135  028C                     end_of_initialization:	
  4136                           ;End of C runtime variable initialization code
  4137                           
  4138  028C                     __end_of__initialization:	
  4139  028C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4140  028D  0020               	movlb	0
  4141  028E  318F  2F32         	ljmp	_main	;jump to C main() function
  4142                           
  4143                           	psect	bssCOMMON
  4144  0076                     __pbssCOMMON:	
  4145  0076                     _previousCmd:	
  4146  0076                     	ds	1
  4147  0077                     _escapeMode:	
  4148  0077                     	ds	1
  4149  0078                     _analogMode:	
  4150  0078                     	ds	1
  4151  0079                     _cmdCounter:	
  4152  0079                     	ds	1
  4153  007A                     _index:	
  4154  007A                     	ds	1
  4155                           
  4156                           	psect	dataCOMMON
  4157  007B                     __pdataCOMMON:	
  4158  007B                     _AN_temp:	
  4159  007B                     	ds	1
  4160                           
  4161                           	psect	bssBANK0
  4162  0066                     __pbssBANK0:	
  4163  0066                     _AN_timer:	
  4164  0066                     	ds	1
  4165  0067                     _CONTROL_RESPONSE_byte5:	
  4166  0067                     	ds	1
  4167  0068                     _CONTROL_RESPONSE_byte4:	
  4168  0068                     	ds	1
  4169  0069                     _CONTROL_RESPONSE_byte3:	
  4170  0069                     	ds	1
  4171  006A                     _INIT_PRESSURE_SENSOR_byte4:	
  4172  006A                     	ds	1
  4173  006B                     _INIT_PRESSURE_SENSOR_byte3:	
  4174  006B                     	ds	1
  4175  006C                     _AN_latch:	
  4176  006C                     	ds	1
  4177  006D                     _MODE_LOCK:	
  4178  006D                     	ds	1
  4179                           
  4180                           	psect	dataBANK0
  4181  005A                     __pdataBANK0:	
  4182  005A                     _AN_prev:	
  4183  005A                     	ds	1
  4184  005B                     _MAP_LARGE_MOTOR:	
  4185  005B                     	ds	1
  4186  005C                     _MAP_SMALL_MOTOR:	
  4187  005C                     	ds	1
  4188  005D                     _responseLength:	
  4189  005D                     	ds	1
  4190  005E                     _debounceLoops:	
  4191  005E                     	ds	1
  4192  005F                     _lyData:	
  4193  005F                     	ds	1
  4194  0060                     _lxData:	
  4195  0060                     	ds	1
  4196  0061                     _ryData:	
  4197  0061                     	ds	1
  4198  0062                     _rxData:	
  4199  0062                     	ds	1
  4200  0063                     _digitalStateSecond:	
  4201  0063                     	ds	1
  4202  0064                     _digitalStateFirst:	
  4203  0064                     	ds	1
  4204  0065                     _AN_btn:	
  4205  0065                     	ds	1
  4206                           
  4207                           	psect	bssBANK1
  4208  00A0                     __pbssBANK1:	
  4209  00A0                     _IndexDigitalByte2:	
  4210  00A0                     	ds	8
  4211  00A8                     _IndexDigitalByte1:	
  4212  00A8                     	ds	8
  4213  00B0                     _PreviousDigitalByte1:	
  4214  00B0                     	ds	8
  4215  00B8                     _DigitalControllerByte2:	
  4216  00B8                     	ds	8
  4217  00C0                     _DigitalControllerByte1:	
  4218  00C0                     	ds	8
  4219  00C8                     _analogStateSecond:	
  4220  00C8                     	ds	8
  4221  00D0                     _analogStateFirst:	
  4222  00D0                     	ds	8
  4223                           
  4224                           	psect	dataBANK1
  4225  00D8                     __pdataBANK1:	
  4226  00D8                     _response:	
  4227  00D8                     	ds	20
  4228                           
  4229                           	psect	bssBANK2
  4230  0120                     __pbssBANK2:	
  4231  0120                     _PreviousDigitalByte2:	
  4232  0120                     	ds	8
  4233                           
  4234                           	psect	inittext
  4235  0D51                     init_ram:	
  4236  0D51  00FE               	movwf	btemp
  4237  0D52                     initloop:	
  4238  0D52  0012               	moviw fsr0++
  4239  0D53  001E               	movwi fsr1++
  4240  0D54  3001               	movlw	1
  4241  0D55  02FE               	subwf	btemp,f
  4242  0D56  3000               	movlw	0
  4243  0D57  3BFF               	subwfb	btemp+1,f
  4244  0D58  087F               	movf	btemp+1,w
  4245  0D59  047E               	iorwf	btemp,w
  4246  0D5A  1D03               	skipz
  4247  0D5B  2D52               	goto	initloop
  4248  0D5C  3400               	retlw	0
  4249                           
  4250                           	psect	clrtext
  4251  0D45                     clear_ram0:	
  4252                           ;	Called with FSR0 containing the base address, and
  4253                           ;	btemp/btemp+1 has the size to clear
  4254                           
  4255  0D45  0064               	clrwdt	;clear the watchdog before getting into this loop
  4256  0D46                     clrloop0:	
  4257  0D46  0180               	clrf	0	;clear RAM location pointed to by FSR
  4258  0D47  3101               	addfsr 0,1
  4259  0D48  3001               	movlw	1
  4260  0D49  02FE               	subwf	btemp,f
  4261  0D4A  3000               	movlw	0
  4262  0D4B  3BFF               	subwfb	btemp+1,f
  4263  0D4C  087F               	movf	btemp+1,w
  4264  0D4D  047E               	iorwf	btemp,w
  4265  0D4E  1D03               	skipz
  4266  0D4F  2D46               	goto	clrloop0	;have we reached the end yet?
  4267  0D50  3400               	retlw	0	;all done for this memory range, return
  4268                           
  4269                           	psect	cstackBANK1
  4270  00EC                     __pcstackBANK1:	
  4271  00EC                     main@slaveSelectStatePrev:	
  4272                           
  4273                           ; 1 bytes @ 0x0
  4274  00EC                     	ds	1
  4275  00ED                     main@count:	
  4276                           
  4277                           ; 1 bytes @ 0x1
  4278  00ED                     	ds	1
  4279  00EE                     main@slaveSelect:	
  4280                           
  4281                           ; 1 bytes @ 0x2
  4282  00EE                     	ds	1
  4283                           
  4284                           	psect	cstackCOMMON
  4285  0070                     __pcstackCOMMON:	
  4286  0070                     ?_spiRead:	
  4287  0070                     ??_spiRead:	
  4288                           ; 1 bytes @ 0x0
  4289                           
  4290  0070                     ?_reversebyte:	
  4291                           ; 1 bytes @ 0x0
  4292                           
  4293  0070                     ?_spiWrite:	
  4294                           ; 1 bytes @ 0x0
  4295                           
  4296  0070                     ??_spiWrite:	
  4297                           ; 1 bytes @ 0x0
  4298                           
  4299  0070                     ?_picInit:	
  4300                           ; 1 bytes @ 0x0
  4301                           
  4302  0070                     ?_IO_MAPPING:	
  4303                           ; 1 bytes @ 0x0
  4304                           
  4305  0070                     ?_adcInit:	
  4306                           ; 1 bytes @ 0x0
  4307                           
  4308  0070                     ?_lutInit:	
  4309                           ; 1 bytes @ 0x0
  4310                           
  4311  0070                     ?_configureController:	
  4312                           ; 1 bytes @ 0x0
  4313                           
  4314  0070                     ?_readController:	
  4315                           ; 1 bytes @ 0x0
  4316                           
  4317  0070                     ?_readControllerAnalog:	
  4318                           ; 1 bytes @ 0x0
  4319                           
  4320  0070                     ?_eepromRead:	
  4321                           ; 1 bytes @ 0x0
  4322                           
  4323  0070                     ?_nvmUnlock:	
  4324                           ; 1 bytes @ 0x0
  4325                           
  4326  0070                     ?_pollController:	
  4327                           ; 1 bytes @ 0x0
  4328                           
  4329  0070                     ??_pollController:	
  4330                           ; 1 bytes @ 0x0
  4331                           
  4332  0070                     ?_PS2Command:	
  4333                           ; 1 bytes @ 0x0
  4334                           
  4335  0070                     ?_main:	
  4336                           ; 1 bytes @ 0x0
  4337                           
  4338  0070                     ?_ppsUnlock:	
  4339                           ; 1 bytes @ 0x0
  4340                           
  4341  0070                     ?_ppsLock:	
  4342                           ; 1 bytes @ 0x0
  4343                           
  4344  0070                     ?_spiReceiveWait:	
  4345                           ; 1 bytes @ 0x0
  4346                           
  4347  0070                     ??_spiReceiveWait:	
  4348                           ; 1 bytes @ 0x0
  4349                           
  4350  0070                     ?i1_reversebyte:	
  4351                           ; 1 bytes @ 0x0
  4352                           
  4353  0070                     ??i1_reversebyte:	
  4354                           ; 1 bytes @ 0x0
  4355                           
  4356  0070                     spiWrite@dat:	
  4357                           ; 1 bytes @ 0x0
  4358                           
  4359                           
  4360                           ; 1 bytes @ 0x0
  4361  0070                     	ds	1
  4362  0071                     pollController@response:	
  4363                           
  4364                           ; 1 bytes @ 0x1
  4365  0071                     	ds	2
  4366  0073                     i1reversebyte@byte:	
  4367                           
  4368                           ; 1 bytes @ 0x3
  4369  0073                     	ds	1
  4370  0074                     ??_PS2Command:	
  4371                           
  4372                           ; 1 bytes @ 0x4
  4373  0074                     	ds	1
  4374  0075                     PS2Command@cmd:	
  4375                           
  4376                           ; 1 bytes @ 0x5
  4377  0075                     	ds	1
  4378                           
  4379                           	psect	cstackBANK0
  4380  0020                     __pcstackBANK0:	
  4381  0020                     ??_reversebyte:	
  4382  0020                     ??_IO_MAPPING:	
  4383                           ; 1 bytes @ 0x0
  4384                           
  4385  0020                     ??_adcInit:	
  4386                           ; 1 bytes @ 0x0
  4387                           
  4388  0020                     ??_readController:	
  4389                           ; 1 bytes @ 0x0
  4390                           
  4391  0020                     ??_eepromRead:	
  4392                           ; 1 bytes @ 0x0
  4393                           
  4394  0020                     ?_eepromWrite:	
  4395                           ; 1 bytes @ 0x0
  4396                           
  4397  0020                     ?_spiInit:	
  4398                           ; 1 bytes @ 0x0
  4399                           
  4400  0020                     ??_nvmUnlock:	
  4401                           ; 1 bytes @ 0x0
  4402                           
  4403  0020                     ??_ppsUnlock:	
  4404                           ; 1 bytes @ 0x0
  4405                           
  4406  0020                     ??_ppsLock:	
  4407                           ; 1 bytes @ 0x0
  4408                           
  4409  0020                     ?_readADC:	
  4410                           ; 1 bytes @ 0x0
  4411                           
  4412  0020                     ?___wmul:	
  4413                           ; 2 bytes @ 0x0
  4414                           
  4415  0020                     spiInit@sDataSample:	
  4416                           ; 2 bytes @ 0x0
  4417                           
  4418  0020                     eepromWrite@data:	
  4419                           ; 1 bytes @ 0x0
  4420                           
  4421  0020                     readADC@channel:	
  4422                           ; 1 bytes @ 0x0
  4423                           
  4424  0020                     ___wmul@multiplier:	
  4425                           ; 2 bytes @ 0x0
  4426                           
  4427                           
  4428                           ; 2 bytes @ 0x0
  4429  0020                     	ds	1
  4430  0021                     ??_eepromWrite:	
  4431  0021                     spiInit@sClockIdle:	
  4432                           ; 1 bytes @ 0x1
  4433                           
  4434  0021                     eepromWrite@address:	
  4435                           ; 1 bytes @ 0x1
  4436                           
  4437  0021                     eepromRead@address:	
  4438                           ; 1 bytes @ 0x1
  4439                           
  4440                           
  4441                           ; 1 bytes @ 0x1
  4442  0021                     	ds	1
  4443  0022                     ??_readADC:	
  4444  0022                     readController@analogMode:	
  4445                           ; 1 bytes @ 0x2
  4446                           
  4447  0022                     spiInit@sTransmitEdge:	
  4448                           ; 1 bytes @ 0x2
  4449                           
  4450  0022                     eepromWrite@interruptStatus:	
  4451                           ; 1 bytes @ 0x2
  4452                           
  4453  0022                     eepromRead@data:	
  4454                           ; 1 bytes @ 0x2
  4455                           
  4456  0022                     ___wmul@multiplicand:	
  4457                           ; 1 bytes @ 0x2
  4458                           
  4459                           
  4460                           ; 2 bytes @ 0x2
  4461  0022                     	ds	1
  4462  0023                     ??_spiInit:	
  4463  0023                     reversebyte@byte:	
  4464                           ; 1 bytes @ 0x3
  4465                           
  4466  0023                     spiInit@sType:	
  4467                           ; 1 bytes @ 0x3
  4468                           
  4469                           
  4470                           ; 1 bytes @ 0x3
  4471  0023                     	ds	1
  4472  0024                     ??_picInit:	
  4473  0024                     ??___wmul:	
  4474                           ; 1 bytes @ 0x4
  4475                           
  4476  0024                     ___wmul@product:	
  4477                           ; 1 bytes @ 0x4
  4478                           
  4479                           
  4480                           ; 2 bytes @ 0x4
  4481  0024                     	ds	2
  4482  0026                     ?___awdiv:	
  4483  0026                     ___awdiv@divisor:	
  4484                           ; 2 bytes @ 0x6
  4485                           
  4486                           
  4487                           ; 2 bytes @ 0x6
  4488  0026                     	ds	2
  4489  0028                     ___awdiv@dividend:	
  4490                           
  4491                           ; 2 bytes @ 0x8
  4492  0028                     	ds	1
  4493  0029                     ??_readControllerAnalog:	
  4494                           
  4495                           ; 1 bytes @ 0x9
  4496  0029                     	ds	1
  4497  002A                     ??___awdiv:	
  4498                           
  4499                           ; 1 bytes @ 0xA
  4500  002A                     	ds	1
  4501  002B                     ___awdiv@counter:	
  4502                           
  4503                           ; 1 bytes @ 0xB
  4504  002B                     	ds	1
  4505  002C                     ___awdiv@sign:	
  4506                           
  4507                           ; 1 bytes @ 0xC
  4508  002C                     	ds	1
  4509  002D                     ___awdiv@quotient:	
  4510                           
  4511                           ; 2 bytes @ 0xD
  4512  002D                     	ds	2
  4513  002F                     ?_Map:	
  4514  002F                     Map@x:	
  4515                           ; 1 bytes @ 0xF
  4516                           
  4517                           
  4518                           ; 2 bytes @ 0xF
  4519  002F                     	ds	2
  4520  0031                     Map@inMin:	
  4521                           
  4522                           ; 2 bytes @ 0x11
  4523  0031                     	ds	2
  4524  0033                     Map@inMax:	
  4525                           
  4526                           ; 2 bytes @ 0x13
  4527  0033                     	ds	2
  4528  0035                     Map@outMin:	
  4529                           
  4530                           ; 2 bytes @ 0x15
  4531  0035                     	ds	2
  4532  0037                     Map@outMax:	
  4533                           
  4534                           ; 2 bytes @ 0x17
  4535  0037                     	ds	2
  4536  0039                     ??_lutInit:	
  4537  0039                     ??_Map:	
  4538                           ; 1 bytes @ 0x19
  4539                           
  4540                           
  4541                           ; 1 bytes @ 0x19
  4542  0039                     	ds	9
  4543  0042                     lutInit@lxMin:	
  4544                           
  4545                           ; 1 bytes @ 0x22
  4546  0042                     	ds	1
  4547  0043                     lutInit@lxMax:	
  4548                           
  4549                           ; 1 bytes @ 0x23
  4550  0043                     	ds	1
  4551  0044                     lutInit@lyMin:	
  4552                           
  4553                           ; 1 bytes @ 0x24
  4554  0044                     	ds	1
  4555  0045                     lutInit@lyMax:	
  4556                           
  4557                           ; 1 bytes @ 0x25
  4558  0045                     	ds	1
  4559  0046                     lutInit@rxMin:	
  4560                           
  4561                           ; 1 bytes @ 0x26
  4562  0046                     	ds	1
  4563  0047                     lutInit@rxMax:	
  4564                           
  4565                           ; 1 bytes @ 0x27
  4566  0047                     	ds	1
  4567  0048                     lutInit@ryMin:	
  4568                           
  4569                           ; 1 bytes @ 0x28
  4570  0048                     	ds	1
  4571  0049                     lutInit@ryMax:	
  4572                           
  4573                           ; 1 bytes @ 0x29
  4574  0049                     	ds	1
  4575  004A                     lutInit@position:	
  4576                           
  4577                           ; 2 bytes @ 0x2A
  4578  004A                     	ds	2
  4579  004C                     ??_configureController:	
  4580                           
  4581                           ; 1 bytes @ 0x2C
  4582  004C                     	ds	1
  4583  004D                     configureController@lxMin:	
  4584                           
  4585                           ; 1 bytes @ 0x2D
  4586  004D                     	ds	1
  4587  004E                     configureController@lxMax:	
  4588                           
  4589                           ; 1 bytes @ 0x2E
  4590  004E                     	ds	1
  4591  004F                     configureController@lyMin:	
  4592                           
  4593                           ; 1 bytes @ 0x2F
  4594  004F                     	ds	1
  4595  0050                     configureController@lyMax:	
  4596                           
  4597                           ; 1 bytes @ 0x30
  4598  0050                     	ds	1
  4599  0051                     configureController@rxMin:	
  4600                           
  4601                           ; 1 bytes @ 0x31
  4602  0051                     	ds	1
  4603  0052                     configureController@rxMax:	
  4604                           
  4605                           ; 1 bytes @ 0x32
  4606  0052                     	ds	1
  4607  0053                     configureController@ryMin:	
  4608                           
  4609                           ; 1 bytes @ 0x33
  4610  0053                     	ds	1
  4611  0054                     configureController@ryMax:	
  4612                           
  4613                           ; 1 bytes @ 0x34
  4614  0054                     	ds	1
  4615  0055                     configureController@lx:	
  4616                           
  4617                           ; 1 bytes @ 0x35
  4618  0055                     	ds	1
  4619  0056                     configureController@ly:	
  4620                           
  4621                           ; 1 bytes @ 0x36
  4622  0056                     	ds	1
  4623  0057                     configureController@rx:	
  4624                           
  4625                           ; 1 bytes @ 0x37
  4626  0057                     	ds	1
  4627  0058                     configureController@ry:	
  4628                           
  4629                           ; 1 bytes @ 0x38
  4630  0058                     	ds	1
  4631  0059                     ??_main:	
  4632                           
  4633                           ; 1 bytes @ 0x39
  4634  0059                     	ds	1
  4635                           
  4636                           	psect	maintext
  4637  0F32                     __pmaintext:	
  4638 ;;
  4639 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4640 ;;
  4641 ;; *************** function _main *****************
  4642 ;; Defined at:
  4643 ;;		line 349 in file "main.c"
  4644 ;; Parameters:    Size  Location     Type
  4645 ;;		None
  4646 ;; Auto vars:     Size  Location     Type
  4647 ;;  slaveSelect     1    2[BANK1 ] unsigned char 
  4648 ;;  count           1    1[BANK1 ] unsigned char 
  4649 ;;  slaveSelectS    1    0[BANK1 ] unsigned char 
  4650 ;; Return value:  Size  Location     Type
  4651 ;;                  1    wreg      void 
  4652 ;; Registers used:
  4653 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4654 ;; Tracked objects:
  4655 ;;		On entry : B1F/0
  4656 ;;		On exit  : 0/0
  4657 ;;		Unchanged: 0/0
  4658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4660 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4661 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4662 ;;      Totals:         0       1       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4663 ;;Total ram usage:        4 bytes
  4664 ;; Hardware stack levels required when called:    7
  4665 ;; This function calls:
  4666 ;;		_IO_MAPPING
  4667 ;;		_adcInit
  4668 ;;		_configureController
  4669 ;;		_lutInit
  4670 ;;		_picInit
  4671 ;;		_readController
  4672 ;;		_readControllerAnalog
  4673 ;; This function is called by:
  4674 ;;		Startup code after reset
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677                           
  4678                           
  4679                           ;psect for function _main
  4680  0F32                     _main:	
  4681  0F32                     l2869:	
  4682                           ;incstack = 0
  4683                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4684                           
  4685                           
  4686                           ;main.c: 351: picInit();
  4687  0F32  318D  2583  318F   	fcall	_picInit
  4688                           
  4689                           ;main.c: 352: IO_MAPPING();
  4690  0F35  318E  2612  318F   	fcall	_IO_MAPPING
  4691                           
  4692                           ;main.c: 353: adcInit();
  4693  0F38  318D  253B  318F   	fcall	_adcInit
  4694  0F3B                     l2871:	
  4695                           
  4696                           ;main.c: 354: lutInit();
  4697  0F3B  3182  2290  318F   	fcall	_lutInit
  4698  0F3E                     l2873:	
  4699                           
  4700                           ;main.c: 356: response[1] = 0x5A;
  4701  0F3E  305A               	movlw	90
  4702  0F3F  0020               	movlb	0	; select bank0
  4703  0F40  00D9               	movwf	??_main
  4704  0F41  0859               	movf	??_main,w
  4705  0F42  0021               	movlb	1	; select bank1
  4706  0F43  00D9               	movwf	(_response^(0+128)+1)
  4707  0F44                     l2875:	
  4708                           
  4709                           ;main.c: 358: char slaveSelect;;main.c: 359: char slaveSelectStatePrev = 0;
  4710  0F44  01EC               	clrf	main@slaveSelectStatePrev^(0+128)
  4711  0F45                     l2877:	
  4712                           
  4713                           ;main.c: 360: char count = 0;
  4714  0F45  01ED               	clrf	main@count^(0+128)
  4715  0F46                     l2879:	
  4716                           
  4717                           ;main.c: 361: RA4 = 1;
  4718  0F46  0020               	movlb	0	; select bank0
  4719  0F47  160C               	bsf	12,4	;volatile
  4720  0F48                     l2881:	
  4721                           
  4722                           ;main.c: 365: if(digitalStateFirst == 0x7F && digitalStateSecond == 0x5F){
  4723  0F48  307F               	movlw	127
  4724  0F49  0020               	movlb	0	; select bank0
  4725  0F4A  0664               	xorwf	_digitalStateFirst,w
  4726  0F4B  1D03               	btfss	3,2
  4727  0F4C  2F4E               	goto	u2591
  4728  0F4D  2F4F               	goto	u2590
  4729  0F4E                     u2591:	
  4730  0F4E  2F58               	goto	l2887
  4731  0F4F                     u2590:	
  4732  0F4F                     l2883:	
  4733  0F4F  305F               	movlw	95
  4734  0F50  0663               	xorwf	_digitalStateSecond,w
  4735  0F51  1D03               	btfss	3,2
  4736  0F52  2F54               	goto	u2601
  4737  0F53  2F55               	goto	u2600
  4738  0F54                     u2601:	
  4739  0F54  2F58               	goto	l2887
  4740  0F55                     u2600:	
  4741  0F55                     l2885:	
  4742                           
  4743                           ;main.c: 366: configureController();
  4744  0F55  3185  25EB  318F   	fcall	_configureController
  4745  0F58                     l2887:	
  4746                           
  4747                           ;main.c: 367: };main.c: 386: slaveSelect = RA5;
  4748  0F58  3000               	movlw	0
  4749  0F59  0020               	movlb	0	; select bank0
  4750  0F5A  1A8C               	btfsc	12,5	;volatile
  4751  0F5B  3001               	movlw	1
  4752  0F5C  0021               	movlb	1	; select bank1
  4753  0F5D  00EE               	movwf	main@slaveSelect^(0+128)
  4754  0F5E                     l2889:	
  4755                           
  4756                           ;main.c: 387: if (slaveSelect) if(count < 3) count++;
  4757  0F5E  086E               	movf	main@slaveSelect^(0+128),w
  4758  0F5F  1903               	btfsc	3,2
  4759  0F60  2F62               	goto	u2611
  4760  0F61  2F63               	goto	u2610
  4761  0F62                     u2611:	
  4762  0F62  2F6F               	goto	l188
  4763  0F63                     u2610:	
  4764  0F63                     l2891:	
  4765  0F63  3003               	movlw	3
  4766  0F64  026D               	subwf	main@count^(0+128),w
  4767  0F65  1803               	skipnc
  4768  0F66  2F68               	goto	u2621
  4769  0F67  2F69               	goto	u2620
  4770  0F68                     u2621:	
  4771  0F68  2F6F               	goto	l188
  4772  0F69                     u2620:	
  4773  0F69                     l2893:	
  4774  0F69  3001               	movlw	1
  4775  0F6A  0020               	movlb	0	; select bank0
  4776  0F6B  00D9               	movwf	??_main
  4777  0F6C  0859               	movf	??_main,w
  4778  0F6D  0021               	movlb	1	; select bank1
  4779  0F6E  07ED               	addwf	main@count^(0+128),f
  4780  0F6F                     l188:	
  4781                           
  4782                           ;main.c: 388: if (slaveSelect ^ slaveSelectStatePrev) count = 0;
  4783  0F6F  086E               	movf	main@slaveSelect^(0+128),w
  4784  0F70  066C               	xorwf	main@slaveSelectStatePrev^(0+128),w
  4785  0F71  1903               	btfsc	3,2
  4786  0F72  2F74               	goto	u2631
  4787  0F73  2F75               	goto	u2630
  4788  0F74                     u2631:	
  4789  0F74  2F76               	goto	l2897
  4790  0F75                     u2630:	
  4791  0F75                     l2895:	
  4792  0F75  01ED               	clrf	main@count^(0+128)
  4793  0F76                     l2897:	
  4794                           
  4795                           ;main.c: 389: slaveSelectStatePrev = slaveSelect;
  4796  0F76  086E               	movf	main@slaveSelect^(0+128),w
  4797  0F77  0020               	movlb	0	; select bank0
  4798  0F78  00D9               	movwf	??_main
  4799  0F79  0859               	movf	??_main,w
  4800  0F7A  0021               	movlb	1	; select bank1
  4801  0F7B  00EC               	movwf	main@slaveSelectStatePrev^(0+128)
  4802  0F7C                     l2899:	
  4803                           
  4804                           ;main.c: 390: if (count >= 3) {
  4805  0F7C  3003               	movlw	3
  4806  0F7D  026D               	subwf	main@count^(0+128),w
  4807  0F7E  1C03               	skipc
  4808  0F7F  2F81               	goto	u2641
  4809  0F80  2F82               	goto	u2640
  4810  0F81                     u2641:	
  4811  0F81  2F8C               	goto	l2907
  4812  0F82                     u2640:	
  4813  0F82                     l2901:	
  4814                           
  4815                           ;main.c: 391: cmdCounter = 0;
  4816  0F82  01F9               	clrf	_cmdCounter
  4817  0F83                     l2903:	
  4818                           
  4819                           ;main.c: 392: responseLength = 9;
  4820  0F83  3009               	movlw	9
  4821  0F84  0020               	movlb	0	; select bank0
  4822  0F85  00D9               	movwf	??_main
  4823  0F86  0859               	movf	??_main,w
  4824  0F87  00DD               	movwf	_responseLength
  4825  0F88                     l2905:	
  4826                           
  4827                           ;main.c: 393: SSP1BUF = 0xFF;
  4828  0F88  30FF               	movlw	255
  4829  0F89  0023               	movlb	3	; select bank3
  4830  0F8A  008C               	movwf	12	;volatile
  4831                           
  4832                           ;main.c: 394: previousCmd = 0x00;
  4833  0F8B  01F6               	clrf	_previousCmd
  4834  0F8C                     l2907:	
  4835                           
  4836                           ;main.c: 395: };main.c: 397: readController(analogMode);
  4837  0F8C  0878               	movf	_analogMode,w
  4838  0F8D  3184  2481  318F   	fcall	_readController
  4839  0F90                     l2909:	
  4840                           
  4841                           ;main.c: 398: readControllerAnalog();
  4842  0F90  318F  2796  318F   	fcall	_readControllerAnalog
  4843  0F93  2F48               	goto	l2881
  4844  0F94  3182  2A3E         	ljmp	start
  4845  0F96                     __end_of_main:	
  4846                           
  4847                           	psect	text1
  4848  0F96                     __ptext1:	
  4849 ;; *************** function _readControllerAnalog *****************
  4850 ;; Defined at:
  4851 ;;		line 184 in file "Controller.c"
  4852 ;; Parameters:    Size  Location     Type
  4853 ;;		None
  4854 ;; Auto vars:     Size  Location     Type
  4855 ;;		None
  4856 ;; Return value:  Size  Location     Type
  4857 ;;                  1    wreg      void 
  4858 ;; Registers used:
  4859 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4860 ;; Tracked objects:
  4861 ;;		On entry : 0/0
  4862 ;;		On exit  : 0/0
  4863 ;;		Unchanged: 0/0
  4864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4867 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4868 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4869 ;;Total ram usage:        3 bytes
  4870 ;; Hardware stack levels used:    1
  4871 ;; Hardware stack levels required when called:    4
  4872 ;; This function calls:
  4873 ;;		_readADC
  4874 ;;		_reversebyte
  4875 ;; This function is called by:
  4876 ;;		_main
  4877 ;; This function uses a non-reentrant model
  4878 ;;
  4879                           
  4880                           
  4881                           ;psect for function _readControllerAnalog
  4882  0F96                     _readControllerAnalog:	
  4883  0F96                     l2867:	
  4884                           ;incstack = 0
  4885                           ; Regs used in _readControllerAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4886                           
  4887                           
  4888                           ;Controller.c: 186: lxData = reversebyte(lutLX[readADC(0b10001)]);
  4889  0F96  3011               	movlw	17
  4890  0F97  0020               	movlb	0	; select bank0
  4891  0F98  00A0               	movwf	readADC@channel
  4892  0F99  3000               	movlw	0
  4893  0F9A  00A1               	movwf	readADC@channel+1
  4894  0F9B  318E  263A  318F   	fcall	_readADC
  4895  0F9E  30F0               	movlw	240
  4896  0F9F  0020               	movlb	0	; select bank0
  4897  0FA0  00A9               	movwf	??_readControllerAnalog
  4898  0FA1  3026               	movlw	38
  4899  0FA2  00AA               	movwf	??_readControllerAnalog+1
  4900  0FA3  0820               	movf	?_readADC,w
  4901  0FA4  0729               	addwf	??_readControllerAnalog,w
  4902  0FA5  0086               	movwf	6
  4903  0FA6  0821               	movf	?_readADC+1,w
  4904  0FA7  3D2A               	addwfc	??_readControllerAnalog+1,w
  4905  0FA8  0087               	movwf	7
  4906  0FA9  0801               	movf	1,w
  4907  0FAA  318E  269B  318F   	fcall	_reversebyte
  4908  0FAD  0020               	movlb	0	; select bank0
  4909  0FAE  00AB               	movwf	??_readControllerAnalog+2
  4910  0FAF  082B               	movf	??_readControllerAnalog+2,w
  4911  0FB0  00E0               	movwf	_lxData
  4912                           
  4913                           ;Controller.c: 187: lyData = reversebyte(lutLY[readADC(0b010000)]);
  4914  0FB1  3010               	movlw	16
  4915  0FB2  00A0               	movwf	readADC@channel
  4916  0FB3  3000               	movlw	0
  4917  0FB4  00A1               	movwf	readADC@channel+1
  4918  0FB5  318E  263A  318F   	fcall	_readADC
  4919  0FB8  30F0               	movlw	240
  4920  0FB9  0020               	movlb	0	; select bank0
  4921  0FBA  00A9               	movwf	??_readControllerAnalog
  4922  0FBB  3025               	movlw	37
  4923  0FBC  00AA               	movwf	??_readControllerAnalog+1
  4924  0FBD  0820               	movf	?_readADC,w
  4925  0FBE  0729               	addwf	??_readControllerAnalog,w
  4926  0FBF  0086               	movwf	6
  4927  0FC0  0821               	movf	?_readADC+1,w
  4928  0FC1  3D2A               	addwfc	??_readControllerAnalog+1,w
  4929  0FC2  0087               	movwf	7
  4930  0FC3  0801               	movf	1,w
  4931  0FC4  318E  269B  318F   	fcall	_reversebyte
  4932  0FC7  0020               	movlb	0	; select bank0
  4933  0FC8  00AB               	movwf	??_readControllerAnalog+2
  4934  0FC9  082B               	movf	??_readControllerAnalog+2,w
  4935  0FCA  00DF               	movwf	_lyData
  4936                           
  4937                           ;Controller.c: 189: rxData = reversebyte(lutRX[readADC(0b010110)]);
  4938  0FCB  3016               	movlw	22
  4939  0FCC  00A0               	movwf	readADC@channel
  4940  0FCD  3000               	movlw	0
  4941  0FCE  00A1               	movwf	readADC@channel+1
  4942  0FCF  318E  263A  318F   	fcall	_readADC
  4943  0FD2  30F0               	movlw	240
  4944  0FD3  0020               	movlb	0	; select bank0
  4945  0FD4  00A9               	movwf	??_readControllerAnalog
  4946  0FD5  3024               	movlw	36
  4947  0FD6  00AA               	movwf	??_readControllerAnalog+1
  4948  0FD7  0820               	movf	?_readADC,w
  4949  0FD8  0729               	addwf	??_readControllerAnalog,w
  4950  0FD9  0086               	movwf	6
  4951  0FDA  0821               	movf	?_readADC+1,w
  4952  0FDB  3D2A               	addwfc	??_readControllerAnalog+1,w
  4953  0FDC  0087               	movwf	7
  4954  0FDD  0801               	movf	1,w
  4955  0FDE  318E  269B  318F   	fcall	_reversebyte
  4956  0FE1  0020               	movlb	0	; select bank0
  4957  0FE2  00AB               	movwf	??_readControllerAnalog+2
  4958  0FE3  082B               	movf	??_readControllerAnalog+2,w
  4959  0FE4  00E2               	movwf	_rxData
  4960                           
  4961                           ;Controller.c: 190: ryData = reversebyte(lutRY[readADC(0b010111)]);
  4962  0FE5  3017               	movlw	23
  4963  0FE6  00A0               	movwf	readADC@channel
  4964  0FE7  3000               	movlw	0
  4965  0FE8  00A1               	movwf	readADC@channel+1
  4966  0FE9  318E  263A  318F   	fcall	_readADC
  4967  0FEC  30F0               	movlw	240
  4968  0FED  0020               	movlb	0	; select bank0
  4969  0FEE  00A9               	movwf	??_readControllerAnalog
  4970  0FEF  3023               	movlw	35
  4971  0FF0  00AA               	movwf	??_readControllerAnalog+1
  4972  0FF1  0820               	movf	?_readADC,w
  4973  0FF2  0729               	addwf	??_readControllerAnalog,w
  4974  0FF3  0086               	movwf	6
  4975  0FF4  0821               	movf	?_readADC+1,w
  4976  0FF5  3D2A               	addwfc	??_readControllerAnalog+1,w
  4977  0FF6  0087               	movwf	7
  4978  0FF7  0801               	movf	1,w
  4979  0FF8  318E  269B  318F   	fcall	_reversebyte
  4980  0FFB  0020               	movlb	0	; select bank0
  4981  0FFC  00AB               	movwf	??_readControllerAnalog+2
  4982  0FFD  082B               	movf	??_readControllerAnalog+2,w
  4983  0FFE  00E1               	movwf	_ryData
  4984  0FFF                     l348:	
  4985  0FFF  0008               	return
  4986  1000                     __end_of_readControllerAnalog:	
  4987                           
  4988                           	psect	text2
  4989  0E9B                     __ptext2:	
  4990 ;; *************** function _reversebyte *****************
  4991 ;; Defined at:
  4992 ;;		line 176 in file "Controller.c"
  4993 ;; Parameters:    Size  Location     Type
  4994 ;;  byte            1    wreg     unsigned char 
  4995 ;; Auto vars:     Size  Location     Type
  4996 ;;  byte            1    3[BANK0 ] unsigned char 
  4997 ;; Return value:  Size  Location     Type
  4998 ;;                  1    wreg      unsigned char 
  4999 ;; Registers used:
  5000 ;;		wreg, status,2, status,0
  5001 ;; Tracked objects:
  5002 ;;		On entry : 0/0
  5003 ;;		On exit  : 0/0
  5004 ;;		Unchanged: 0/0
  5005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5007 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5008 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5009 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5010 ;;Total ram usage:        4 bytes
  5011 ;; Hardware stack levels used:    1
  5012 ;; Hardware stack levels required when called:    3
  5013 ;; This function calls:
  5014 ;;		Nothing
  5015 ;; This function is called by:
  5016 ;;		_readControllerAnalog
  5017 ;; This function uses a non-reentrant model
  5018 ;;
  5019                           
  5020                           
  5021                           ;psect for function _reversebyte
  5022  0E9B                     _reversebyte:	
  5023                           
  5024                           ;incstack = 0
  5025                           ; Regs used in _reversebyte: [wreg+status,2+status,0]
  5026                           ;reversebyte@byte stored from wreg
  5027  0E9B  0020               	movlb	0	; select bank0
  5028  0E9C  00A3               	movwf	reversebyte@byte
  5029  0E9D                     l2581:	
  5030                           
  5031                           ;Controller.c: 177: byte = (byte & 0xF0) >> 4 | (byte & 0x0F) << 4;
  5032  0E9D  0823               	movf	reversebyte@byte,w
  5033  0E9E  390F               	andlw	15
  5034  0E9F  00A0               	movwf	??_reversebyte
  5035  0EA0  3004               	movlw	4
  5036  0EA1                     u2095:	
  5037  0EA1  35A0               	lslf	??_reversebyte,f
  5038  0EA2  0B89               	decfsz	9,f
  5039  0EA3  2EA1               	goto	u2095
  5040  0EA4  0823               	movf	reversebyte@byte,w
  5041  0EA5  00A1               	movwf	??_reversebyte+1
  5042  0EA6  3004               	movlw	4
  5043  0EA7                     u2105:	
  5044  0EA7  36A1               	lsrf	??_reversebyte+1,f
  5045  0EA8  0B89               	decfsz	9,f
  5046  0EA9  2EA7               	goto	u2105
  5047  0EAA  0821               	movf	??_reversebyte+1,w
  5048  0EAB  390F               	andlw	15
  5049  0EAC  0420               	iorwf	??_reversebyte,w
  5050  0EAD  00A2               	movwf	??_reversebyte+2
  5051  0EAE  0822               	movf	??_reversebyte+2,w
  5052  0EAF  00A3               	movwf	reversebyte@byte
  5053                           
  5054                           ;Controller.c: 178: byte = (byte & 0xCC) >> 2 | (byte & 0x33) << 2;
  5055  0EB0  0823               	movf	reversebyte@byte,w
  5056  0EB1  3933               	andlw	51
  5057  0EB2  00A0               	movwf	??_reversebyte
  5058  0EB3  3002               	movlw	2
  5059  0EB4                     u2115:	
  5060  0EB4  35A0               	lslf	??_reversebyte,f
  5061  0EB5  0B89               	decfsz	9,f
  5062  0EB6  2EB4               	goto	u2115
  5063  0EB7  0823               	movf	reversebyte@byte,w
  5064  0EB8  00A1               	movwf	??_reversebyte+1
  5065  0EB9  3002               	movlw	2
  5066  0EBA                     u2125:	
  5067  0EBA  36A1               	lsrf	??_reversebyte+1,f
  5068  0EBB  0B89               	decfsz	9,f
  5069  0EBC  2EBA               	goto	u2125
  5070  0EBD  0821               	movf	??_reversebyte+1,w
  5071  0EBE  3933               	andlw	51
  5072  0EBF  0420               	iorwf	??_reversebyte,w
  5073  0EC0  00A2               	movwf	??_reversebyte+2
  5074  0EC1  0822               	movf	??_reversebyte+2,w
  5075  0EC2  00A3               	movwf	reversebyte@byte
  5076                           
  5077                           ;Controller.c: 179: byte = (byte & 0xAA) >> 1 | (byte & 0x55) << 1;
  5078  0EC3  0823               	movf	reversebyte@byte,w
  5079  0EC4  3955               	andlw	85
  5080  0EC5  00A0               	movwf	??_reversebyte
  5081  0EC6  3001               	movlw	1
  5082  0EC7                     u2135:	
  5083  0EC7  35A0               	lslf	??_reversebyte,f
  5084  0EC8  0B89               	decfsz	9,f
  5085  0EC9  2EC7               	goto	u2135
  5086  0ECA  3623               	lsrf	reversebyte@byte,w
  5087  0ECB  3955               	andlw	85
  5088  0ECC  0420               	iorwf	??_reversebyte,w
  5089  0ECD  00A1               	movwf	??_reversebyte+1
  5090  0ECE  0821               	movf	??_reversebyte+1,w
  5091  0ECF  00A3               	movwf	reversebyte@byte
  5092  0ED0                     l2583:	
  5093                           
  5094                           ;Controller.c: 181: return byte;
  5095  0ED0  0823               	movf	reversebyte@byte,w
  5096  0ED1                     l345:	
  5097  0ED1  0008               	return
  5098  0ED2                     __end_of_reversebyte:	
  5099                           
  5100                           	psect	text3
  5101  0D83                     __ptext3:	
  5102 ;; *************** function _picInit *****************
  5103 ;; Defined at:
  5104 ;;		line 30 in file "PicConfig.c"
  5105 ;; Parameters:    Size  Location     Type
  5106 ;;		None
  5107 ;; Auto vars:     Size  Location     Type
  5108 ;;		None
  5109 ;; Return value:  Size  Location     Type
  5110 ;;                  1    wreg      void 
  5111 ;; Registers used:
  5112 ;;		wreg, status,2, status,0, pclath, cstack
  5113 ;; Tracked objects:
  5114 ;;		On entry : 0/0
  5115 ;;		On exit  : 0/0
  5116 ;;		Unchanged: 0/0
  5117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5120 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5121 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5122 ;;Total ram usage:        2 bytes
  5123 ;; Hardware stack levels used:    1
  5124 ;; Hardware stack levels required when called:    4
  5125 ;; This function calls:
  5126 ;;		_spiInit
  5127 ;; This function is called by:
  5128 ;;		_main
  5129 ;; This function uses a non-reentrant model
  5130 ;;
  5131                           
  5132                           
  5133                           ;psect for function _picInit
  5134  0D83                     _picInit:	
  5135  0D83                     l2767:	
  5136                           ;incstack = 0
  5137                           ; Regs used in _picInit: [wreg+status,2+status,0+pclath+cstack]
  5138                           
  5139                           
  5140                           ;PicConfig.c: 32: spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_HIGH, 
      +                          SPI_ACTIVE_2_IDLE);
  5141  0D83  0020               	movlb	0	; select bank0
  5142  0D84  01A0               	clrf	spiInit@sDataSample
  5143  0D85  3010               	movlw	16
  5144  0D86  00A4               	movwf	??_picInit
  5145  0D87  0824               	movf	??_picInit,w
  5146  0D88  00A1               	movwf	spiInit@sClockIdle
  5147  0D89  3040               	movlw	64
  5148  0D8A  00A5               	movwf	??_picInit+1
  5149  0D8B  0825               	movf	??_picInit+1,w
  5150  0D8C  00A2               	movwf	spiInit@sTransmitEdge
  5151  0D8D  3024               	movlw	36
  5152  0D8E  318D  256F  318D   	fcall	_spiInit
  5153  0D91                     l2769:	
  5154                           
  5155                           ;PicConfig.c: 35: INTCONbits.GIE = 1;
  5156  0D91  178B               	bsf	11,7	;volatile
  5157  0D92                     l2771:	
  5158                           
  5159                           ;PicConfig.c: 36: INTCONbits.PEIE = 1;
  5160  0D92  170B               	bsf	11,6	;volatile
  5161  0D93                     l2773:	
  5162                           
  5163                           ;PicConfig.c: 37: SSP1IF = 0;
  5164  0D93  002E               	movlb	14	; select bank14
  5165  0D94  100F               	bcf	15,0	;volatile
  5166  0D95                     l2775:	
  5167                           
  5168                           ;PicConfig.c: 38: SSP1IE = 1;
  5169  0D95  1419               	bsf	25,0	;volatile
  5170  0D96                     l398:	
  5171  0D96  0008               	return
  5172  0D97                     __end_of_picInit:	
  5173                           
  5174                           	psect	text4
  5175  0D6F                     __ptext4:	
  5176 ;; *************** function _spiInit *****************
  5177 ;; Defined at:
  5178 ;;		line 10 in file "Spi.c"
  5179 ;; Parameters:    Size  Location     Type
  5180 ;;  sType           1    wreg     enum E11980
  5181 ;;  sDataSample     1    0[BANK0 ] enum E11988
  5182 ;;  sClockIdle      1    1[BANK0 ] enum E11992
  5183 ;;  sTransmitEdg    1    2[BANK0 ] enum E11996
  5184 ;; Auto vars:     Size  Location     Type
  5185 ;;  sType           1    3[BANK0 ] enum E11980
  5186 ;; Return value:  Size  Location     Type
  5187 ;;                  1    wreg      void 
  5188 ;; Registers used:
  5189 ;;		wreg, status,2, status,0
  5190 ;; Tracked objects:
  5191 ;;		On entry : 0/0
  5192 ;;		On exit  : 0/0
  5193 ;;		Unchanged: 0/0
  5194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5195 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5196 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5198 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5199 ;;Total ram usage:        4 bytes
  5200 ;; Hardware stack levels used:    1
  5201 ;; Hardware stack levels required when called:    3
  5202 ;; This function calls:
  5203 ;;		Nothing
  5204 ;; This function is called by:
  5205 ;;		_picInit
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           
  5210                           ;psect for function _spiInit
  5211  0D6F                     _spiInit:	
  5212                           
  5213                           ;incstack = 0
  5214                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  5215                           ;spiInit@sType stored from wreg
  5216  0D6F  0020               	movlb	0	; select bank0
  5217  0D70  00A3               	movwf	spiInit@sType
  5218  0D71                     l2761:	
  5219                           
  5220                           ;Spi.c: 13: if(sType & 0b00000100)
  5221  0D71  1D23               	btfss	spiInit@sType,2
  5222  0D72  2D74               	goto	u2461
  5223  0D73  2D75               	goto	u2460
  5224  0D74                     u2461:	
  5225  0D74  2D79               	goto	l2765
  5226  0D75                     u2460:	
  5227  0D75                     l2763:	
  5228                           
  5229                           ;Spi.c: 14: {;Spi.c: 15: SSP1STAT = sTransmitEdge;
  5230  0D75  0822               	movf	spiInit@sTransmitEdge,w
  5231  0D76  0023               	movlb	3	; select bank3
  5232  0D77  008F               	movwf	15	;volatile
  5233                           
  5234                           ;Spi.c: 17: }
  5235  0D78  2D7D               	goto	l410
  5236  0D79                     l2765:	
  5237                           
  5238                           ;Spi.c: 18: else;Spi.c: 19: {;Spi.c: 20: SSP1STAT = sDataSample | sTransmitEdge;
  5239  0D79  0820               	movf	spiInit@sDataSample,w
  5240  0D7A  0422               	iorwf	spiInit@sTransmitEdge,w
  5241  0D7B  0023               	movlb	3	; select bank3
  5242  0D7C  008F               	movwf	15	;volatile
  5243  0D7D                     l410:	
  5244                           
  5245                           ;Spi.c: 22: };Spi.c: 24: SSP1CON1 = sType | sClockIdle;
  5246  0D7D  0020               	movlb	0	; select bank0
  5247  0D7E  0823               	movf	spiInit@sType,w
  5248  0D7F  0421               	iorwf	spiInit@sClockIdle,w
  5249  0D80  0023               	movlb	3	; select bank3
  5250  0D81  0090               	movwf	16	;volatile
  5251  0D82                     l411:	
  5252  0D82  0008               	return
  5253  0D83                     __end_of_spiInit:	
  5254                           
  5255                           	psect	text5
  5256  05EB                     __ptext5:	
  5257 ;; *************** function _configureController *****************
  5258 ;; Defined at:
  5259 ;;		line 193 in file "Controller.c"
  5260 ;; Parameters:    Size  Location     Type
  5261 ;;		None
  5262 ;; Auto vars:     Size  Location     Type
  5263 ;;  ry              1   56[BANK0 ] unsigned char 
  5264 ;;  rx              1   55[BANK0 ] unsigned char 
  5265 ;;  ly              1   54[BANK0 ] unsigned char 
  5266 ;;  lx              1   53[BANK0 ] unsigned char 
  5267 ;;  ryMax           1   52[BANK0 ] unsigned char 
  5268 ;;  ryMin           1   51[BANK0 ] unsigned char 
  5269 ;;  rxMax           1   50[BANK0 ] unsigned char 
  5270 ;;  rxMin           1   49[BANK0 ] unsigned char 
  5271 ;;  lyMax           1   48[BANK0 ] unsigned char 
  5272 ;;  lyMin           1   47[BANK0 ] unsigned char 
  5273 ;;  lxMax           1   46[BANK0 ] unsigned char 
  5274 ;;  lxMin           1   45[BANK0 ] unsigned char 
  5275 ;; Return value:  Size  Location     Type
  5276 ;;                  1    wreg      void 
  5277 ;; Registers used:
  5278 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5279 ;; Tracked objects:
  5280 ;;		On entry : 0/0
  5281 ;;		On exit  : 0/0
  5282 ;;		Unchanged: 0/0
  5283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5285 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5286 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5287 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5288 ;;Total ram usage:       13 bytes
  5289 ;; Hardware stack levels used:    1
  5290 ;; Hardware stack levels required when called:    6
  5291 ;; This function calls:
  5292 ;;		_eepromWrite
  5293 ;;		_lutInit
  5294 ;;		_readADC
  5295 ;;		_readController
  5296 ;; This function is called by:
  5297 ;;		_main
  5298 ;; This function uses a non-reentrant model
  5299 ;;
  5300                           
  5301                           
  5302                           ;psect for function _configureController
  5303  05EB                     _configureController:	
  5304  05EB                     l2811:	
  5305                           ;incstack = 0
  5306                           ; Regs used in _configureController: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5307                           
  5308                           
  5309                           ;Controller.c: 195: INTCONbits.GIE = 0;
  5310  05EB  138B               	bcf	11,7	;volatile
  5311                           
  5312                           ;Controller.c: 196: INTCONbits.PEIE = 0;
  5313  05EC  130B               	bcf	11,6	;volatile
  5314  05ED                     l2813:	
  5315                           
  5316                           ;Controller.c: 198: char lxMin = readADC(0b10001);
  5317  05ED  3011               	movlw	17
  5318  05EE  0020               	movlb	0	; select bank0
  5319  05EF  00A0               	movwf	readADC@channel
  5320  05F0  3000               	movlw	0
  5321  05F1  00A1               	movwf	readADC@channel+1
  5322  05F2  318E  263A  3185   	fcall	_readADC
  5323  05F5  0020               	movlb	0	; select bank0
  5324  05F6  0820               	movf	?_readADC,w
  5325  05F7  00CC               	movwf	??_configureController
  5326  05F8  084C               	movf	??_configureController,w
  5327  05F9  00CD               	movwf	configureController@lxMin
  5328                           
  5329                           ;Controller.c: 199: char lxMax = readADC(0b10001);
  5330  05FA  3011               	movlw	17
  5331  05FB  00A0               	movwf	readADC@channel
  5332  05FC  3000               	movlw	0
  5333  05FD  00A1               	movwf	readADC@channel+1
  5334  05FE  318E  263A  3185   	fcall	_readADC
  5335  0601  0020               	movlb	0	; select bank0
  5336  0602  0820               	movf	?_readADC,w
  5337  0603  00CC               	movwf	??_configureController
  5338  0604  084C               	movf	??_configureController,w
  5339  0605  00CE               	movwf	configureController@lxMax
  5340                           
  5341                           ;Controller.c: 200: char lyMin = readADC(0b010000);
  5342  0606  3010               	movlw	16
  5343  0607  00A0               	movwf	readADC@channel
  5344  0608  3000               	movlw	0
  5345  0609  00A1               	movwf	readADC@channel+1
  5346  060A  318E  263A  3185   	fcall	_readADC
  5347  060D  0020               	movlb	0	; select bank0
  5348  060E  0820               	movf	?_readADC,w
  5349  060F  00CC               	movwf	??_configureController
  5350  0610  084C               	movf	??_configureController,w
  5351  0611  00CF               	movwf	configureController@lyMin
  5352                           
  5353                           ;Controller.c: 201: char lyMax = readADC(0b010000);
  5354  0612  3010               	movlw	16
  5355  0613  00A0               	movwf	readADC@channel
  5356  0614  3000               	movlw	0
  5357  0615  00A1               	movwf	readADC@channel+1
  5358  0616  318E  263A  3185   	fcall	_readADC
  5359  0619  0020               	movlb	0	; select bank0
  5360  061A  0820               	movf	?_readADC,w
  5361  061B  00CC               	movwf	??_configureController
  5362  061C  084C               	movf	??_configureController,w
  5363  061D  00D0               	movwf	configureController@lyMax
  5364                           
  5365                           ;Controller.c: 203: char rxMin = readADC(0b010110);
  5366  061E  3016               	movlw	22
  5367  061F  00A0               	movwf	readADC@channel
  5368  0620  3000               	movlw	0
  5369  0621  00A1               	movwf	readADC@channel+1
  5370  0622  318E  263A  3185   	fcall	_readADC
  5371  0625  0020               	movlb	0	; select bank0
  5372  0626  0820               	movf	?_readADC,w
  5373  0627  00CC               	movwf	??_configureController
  5374  0628  084C               	movf	??_configureController,w
  5375  0629  00D1               	movwf	configureController@rxMin
  5376                           
  5377                           ;Controller.c: 204: char rxMax = readADC(0b010110);
  5378  062A  3016               	movlw	22
  5379  062B  00A0               	movwf	readADC@channel
  5380  062C  3000               	movlw	0
  5381  062D  00A1               	movwf	readADC@channel+1
  5382  062E  318E  263A  3185   	fcall	_readADC
  5383  0631  0020               	movlb	0	; select bank0
  5384  0632  0820               	movf	?_readADC,w
  5385  0633  00CC               	movwf	??_configureController
  5386  0634  084C               	movf	??_configureController,w
  5387  0635  00D2               	movwf	configureController@rxMax
  5388                           
  5389                           ;Controller.c: 205: char ryMin = readADC(0b010111);
  5390  0636  3017               	movlw	23
  5391  0637  00A0               	movwf	readADC@channel
  5392  0638  3000               	movlw	0
  5393  0639  00A1               	movwf	readADC@channel+1
  5394  063A  318E  263A  3185   	fcall	_readADC
  5395  063D  0020               	movlb	0	; select bank0
  5396  063E  0820               	movf	?_readADC,w
  5397  063F  00CC               	movwf	??_configureController
  5398  0640  084C               	movf	??_configureController,w
  5399  0641  00D3               	movwf	configureController@ryMin
  5400                           
  5401                           ;Controller.c: 206: char ryMax = readADC(0b010111);
  5402  0642  3017               	movlw	23
  5403  0643  00A0               	movwf	readADC@channel
  5404  0644  3000               	movlw	0
  5405  0645  00A1               	movwf	readADC@channel+1
  5406  0646  318E  263A  3185   	fcall	_readADC
  5407  0649  0020               	movlb	0	; select bank0
  5408  064A  0820               	movf	?_readADC,w
  5409  064B  00CC               	movwf	??_configureController
  5410  064C  084C               	movf	??_configureController,w
  5411  064D  00D4               	movwf	configureController@ryMax
  5412  064E                     l2815:	
  5413                           
  5414                           ;Controller.c: 216: readController(0);
  5415  064E  3000               	movlw	0
  5416  064F  3184  2481  3185   	fcall	_readController
  5417  0652                     l2817:	
  5418                           
  5419                           ;Controller.c: 218: if (digitalStateFirst == 0x7F && digitalStateSecond == 0xCF) {
  5420  0652  307F               	movlw	127
  5421  0653  0020               	movlb	0	; select bank0
  5422  0654  0664               	xorwf	_digitalStateFirst,w
  5423  0655  1D03               	btfss	3,2
  5424  0656  2E58               	goto	u2471
  5425  0657  2E59               	goto	u2470
  5426  0658                     u2471:	
  5427  0658  2E60               	goto	l2823
  5428  0659                     u2470:	
  5429  0659                     l2819:	
  5430  0659  30CF               	movlw	207
  5431  065A  0663               	xorwf	_digitalStateSecond,w
  5432  065B  1D03               	btfss	3,2
  5433  065C  2E5E               	goto	u2481
  5434  065D  2E5F               	goto	u2480
  5435  065E                     u2481:	
  5436  065E  2E60               	goto	l2823
  5437  065F                     u2480:	
  5438  065F  2F00               	goto	l2859
  5439  0660                     l2823:	
  5440                           
  5441                           ;Controller.c: 220: };Controller.c: 222: lx = readADC(0b10001);
  5442  0660  3011               	movlw	17
  5443  0661  00A0               	movwf	readADC@channel
  5444  0662  3000               	movlw	0
  5445  0663  00A1               	movwf	readADC@channel+1
  5446  0664  318E  263A  3185   	fcall	_readADC
  5447  0667  0020               	movlb	0	; select bank0
  5448  0668  0820               	movf	?_readADC,w
  5449  0669  00CC               	movwf	??_configureController
  5450  066A  084C               	movf	??_configureController,w
  5451  066B  00D5               	movwf	configureController@lx
  5452                           
  5453                           ;Controller.c: 223: ly = readADC(0b010000);
  5454  066C  3010               	movlw	16
  5455  066D  00A0               	movwf	readADC@channel
  5456  066E  3000               	movlw	0
  5457  066F  00A1               	movwf	readADC@channel+1
  5458  0670  318E  263A  3185   	fcall	_readADC
  5459  0673  0020               	movlb	0	; select bank0
  5460  0674  0820               	movf	?_readADC,w
  5461  0675  00CC               	movwf	??_configureController
  5462  0676  084C               	movf	??_configureController,w
  5463  0677  00D6               	movwf	configureController@ly
  5464                           
  5465                           ;Controller.c: 224: rx = readADC(0b010110);
  5466  0678  3016               	movlw	22
  5467  0679  00A0               	movwf	readADC@channel
  5468  067A  3000               	movlw	0
  5469  067B  00A1               	movwf	readADC@channel+1
  5470  067C  318E  263A  3185   	fcall	_readADC
  5471  067F  0020               	movlb	0	; select bank0
  5472  0680  0820               	movf	?_readADC,w
  5473  0681  00CC               	movwf	??_configureController
  5474  0682  084C               	movf	??_configureController,w
  5475  0683  00D7               	movwf	configureController@rx
  5476                           
  5477                           ;Controller.c: 225: ry = readADC(0b010111);
  5478  0684  3017               	movlw	23
  5479  0685  00A0               	movwf	readADC@channel
  5480  0686  3000               	movlw	0
  5481  0687  00A1               	movwf	readADC@channel+1
  5482  0688  318E  263A  3185   	fcall	_readADC
  5483  068B  0020               	movlb	0	; select bank0
  5484  068C  0820               	movf	?_readADC,w
  5485  068D  00CC               	movwf	??_configureController
  5486  068E  084C               	movf	??_configureController,w
  5487  068F  00D8               	movwf	configureController@ry
  5488  0690                     l2825:	
  5489                           
  5490                           ;Controller.c: 228: if (ly > lyMax) lyMax = ly;
  5491  0690  0856               	movf	configureController@ly,w
  5492  0691  0250               	subwf	configureController@lyMax,w
  5493  0692  1803               	skipnc
  5494  0693  2E95               	goto	u2491
  5495  0694  2E96               	goto	u2490
  5496  0695                     u2491:	
  5497  0695  2E9A               	goto	l354
  5498  0696                     u2490:	
  5499  0696                     l2827:	
  5500  0696  0856               	movf	configureController@ly,w
  5501  0697  00CC               	movwf	??_configureController
  5502  0698  084C               	movf	??_configureController,w
  5503  0699  00D0               	movwf	configureController@lyMax
  5504  069A                     l354:	
  5505                           
  5506                           ;Controller.c: 229: if (ly < lyMin) lyMin = ly;
  5507  069A  084F               	movf	configureController@lyMin,w
  5508  069B  0256               	subwf	configureController@ly,w
  5509  069C  1803               	skipnc
  5510  069D  2E9F               	goto	u2501
  5511  069E  2EA0               	goto	u2500
  5512  069F                     u2501:	
  5513  069F  2EA4               	goto	l355
  5514  06A0                     u2500:	
  5515  06A0                     l2829:	
  5516  06A0  0856               	movf	configureController@ly,w
  5517  06A1  00CC               	movwf	??_configureController
  5518  06A2  084C               	movf	??_configureController,w
  5519  06A3  00CF               	movwf	configureController@lyMin
  5520  06A4                     l355:	
  5521                           
  5522                           ;Controller.c: 230: if (lx > lxMax) lxMax = lx;
  5523  06A4  0855               	movf	configureController@lx,w
  5524  06A5  024E               	subwf	configureController@lxMax,w
  5525  06A6  1803               	skipnc
  5526  06A7  2EA9               	goto	u2511
  5527  06A8  2EAA               	goto	u2510
  5528  06A9                     u2511:	
  5529  06A9  2EAE               	goto	l356
  5530  06AA                     u2510:	
  5531  06AA                     l2831:	
  5532  06AA  0855               	movf	configureController@lx,w
  5533  06AB  00CC               	movwf	??_configureController
  5534  06AC  084C               	movf	??_configureController,w
  5535  06AD  00CE               	movwf	configureController@lxMax
  5536  06AE                     l356:	
  5537                           
  5538                           ;Controller.c: 231: if (lx < lxMin) lxMin = lx;
  5539  06AE  084D               	movf	configureController@lxMin,w
  5540  06AF  0255               	subwf	configureController@lx,w
  5541  06B0  1803               	skipnc
  5542  06B1  2EB3               	goto	u2521
  5543  06B2  2EB4               	goto	u2520
  5544  06B3                     u2521:	
  5545  06B3  2EB8               	goto	l357
  5546  06B4                     u2520:	
  5547  06B4                     l2833:	
  5548  06B4  0855               	movf	configureController@lx,w
  5549  06B5  00CC               	movwf	??_configureController
  5550  06B6  084C               	movf	??_configureController,w
  5551  06B7  00CD               	movwf	configureController@lxMin
  5552  06B8                     l357:	
  5553                           
  5554                           ;Controller.c: 234: if (ry > ryMax) ryMax = ry;
  5555  06B8  0858               	movf	configureController@ry,w
  5556  06B9  0254               	subwf	configureController@ryMax,w
  5557  06BA  1803               	skipnc
  5558  06BB  2EBD               	goto	u2531
  5559  06BC  2EBE               	goto	u2530
  5560  06BD                     u2531:	
  5561  06BD  2EC2               	goto	l358
  5562  06BE                     u2530:	
  5563  06BE                     l2835:	
  5564  06BE  0858               	movf	configureController@ry,w
  5565  06BF  00CC               	movwf	??_configureController
  5566  06C0  084C               	movf	??_configureController,w
  5567  06C1  00D4               	movwf	configureController@ryMax
  5568  06C2                     l358:	
  5569                           
  5570                           ;Controller.c: 235: if (ry < ryMin) ryMin = ry;
  5571  06C2  0853               	movf	configureController@ryMin,w
  5572  06C3  0258               	subwf	configureController@ry,w
  5573  06C4  1803               	skipnc
  5574  06C5  2EC7               	goto	u2541
  5575  06C6  2EC8               	goto	u2540
  5576  06C7                     u2541:	
  5577  06C7  2ECC               	goto	l359
  5578  06C8                     u2540:	
  5579  06C8                     l2837:	
  5580  06C8  0858               	movf	configureController@ry,w
  5581  06C9  00CC               	movwf	??_configureController
  5582  06CA  084C               	movf	??_configureController,w
  5583  06CB  00D3               	movwf	configureController@ryMin
  5584  06CC                     l359:	
  5585                           
  5586                           ;Controller.c: 236: if (rx > rxMax) rxMax = rx;
  5587  06CC  0857               	movf	configureController@rx,w
  5588  06CD  0252               	subwf	configureController@rxMax,w
  5589  06CE  1803               	skipnc
  5590  06CF  2ED1               	goto	u2551
  5591  06D0  2ED2               	goto	u2550
  5592  06D1                     u2551:	
  5593  06D1  2ED6               	goto	l360
  5594  06D2                     u2550:	
  5595  06D2                     l2839:	
  5596  06D2  0857               	movf	configureController@rx,w
  5597  06D3  00CC               	movwf	??_configureController
  5598  06D4  084C               	movf	??_configureController,w
  5599  06D5  00D2               	movwf	configureController@rxMax
  5600  06D6                     l360:	
  5601                           
  5602                           ;Controller.c: 237: if (rx < rxMin) rxMin = rx;
  5603  06D6  0851               	movf	configureController@rxMin,w
  5604  06D7  0257               	subwf	configureController@rx,w
  5605  06D8  1803               	skipnc
  5606  06D9  2EDB               	goto	u2561
  5607  06DA  2EDC               	goto	u2560
  5608  06DB                     u2561:	
  5609  06DB  2EE0               	goto	l2843
  5610  06DC                     u2560:	
  5611  06DC                     l2841:	
  5612  06DC  0857               	movf	configureController@rx,w
  5613  06DD  00CC               	movwf	??_configureController
  5614  06DE  084C               	movf	??_configureController,w
  5615  06DF  00D1               	movwf	configureController@rxMin
  5616  06E0                     l2843:	
  5617                           
  5618                           ;Controller.c: 239: if (digitalStateFirst == 0x6F && digitalStateSecond == 0x3F) {
  5619  06E0  306F               	movlw	111
  5620  06E1  0664               	xorwf	_digitalStateFirst,w
  5621  06E2  1D03               	btfss	3,2
  5622  06E3  2EE5               	goto	u2571
  5623  06E4  2EE6               	goto	u2570
  5624  06E5                     u2571:	
  5625  06E5  2E4E               	goto	l2815
  5626  06E6                     u2570:	
  5627  06E6                     l2845:	
  5628  06E6  303F               	movlw	63
  5629  06E7  0663               	xorwf	_digitalStateSecond,w
  5630  06E8  1D03               	btfss	3,2
  5631  06E9  2EEB               	goto	u2581
  5632  06EA  2EEC               	goto	u2580
  5633  06EB                     u2581:	
  5634  06EB  2E4E               	goto	l2815
  5635  06EC                     u2580:	
  5636  06EC                     l2847:	
  5637                           
  5638                           ;Controller.c: 241: lxMin = 0;
  5639  06EC  01CD               	clrf	configureController@lxMin
  5640  06ED                     l2849:	
  5641                           
  5642                           ;Controller.c: 242: lxMax = 255;
  5643  06ED  30FF               	movlw	255
  5644  06EE  00CC               	movwf	??_configureController
  5645  06EF  084C               	movf	??_configureController,w
  5646  06F0  00CE               	movwf	configureController@lxMax
  5647  06F1                     l2851:	
  5648                           
  5649                           ;Controller.c: 243: lyMin = 0;
  5650  06F1  01CF               	clrf	configureController@lyMin
  5651                           
  5652                           ;Controller.c: 244: lyMax = 255;
  5653  06F2  30FF               	movlw	255
  5654  06F3  00CC               	movwf	??_configureController
  5655  06F4  084C               	movf	??_configureController,w
  5656  06F5  00D0               	movwf	configureController@lyMax
  5657  06F6                     l2853:	
  5658                           
  5659                           ;Controller.c: 245: rxMin = 0;
  5660  06F6  01D1               	clrf	configureController@rxMin
  5661  06F7                     l2855:	
  5662                           
  5663                           ;Controller.c: 246: rxMax = 255;
  5664  06F7  30FF               	movlw	255
  5665  06F8  00CC               	movwf	??_configureController
  5666  06F9  084C               	movf	??_configureController,w
  5667  06FA  00D2               	movwf	configureController@rxMax
  5668                           
  5669                           ;Controller.c: 247: ryMin = 0;
  5670  06FB  01D3               	clrf	configureController@ryMin
  5671  06FC                     l2857:	
  5672                           
  5673                           ;Controller.c: 248: ryMax = 255;
  5674  06FC  30FF               	movlw	255
  5675  06FD  00CC               	movwf	??_configureController
  5676  06FE  084C               	movf	??_configureController,w
  5677  06FF  00D4               	movwf	configureController@ryMax
  5678  0700                     l2859:	
  5679                           ;Controller.c: 249: break;
  5680                           
  5681                           
  5682                           ;Controller.c: 250: };Controller.c: 251: };Controller.c: 253: eepromWrite(0x60, lxMin);
  5683  0700  084D               	movf	configureController@lxMin,w
  5684  0701  00CC               	movwf	??_configureController
  5685  0702  084C               	movf	??_configureController,w
  5686  0703  00A0               	movwf	eepromWrite@data
  5687  0704  3060               	movlw	96
  5688  0705  318D  25ED  3185   	fcall	_eepromWrite
  5689                           
  5690                           ;Controller.c: 254: eepromWrite(0x61, lxMax);
  5691  0708  0020               	movlb	0	; select bank0
  5692  0709  084E               	movf	configureController@lxMax,w
  5693  070A  00CC               	movwf	??_configureController
  5694  070B  084C               	movf	??_configureController,w
  5695  070C  00A0               	movwf	eepromWrite@data
  5696  070D  3061               	movlw	97
  5697  070E  318D  25ED  3185   	fcall	_eepromWrite
  5698                           
  5699                           ;Controller.c: 255: eepromWrite(0x62, lyMin);
  5700  0711  0020               	movlb	0	; select bank0
  5701  0712  084F               	movf	configureController@lyMin,w
  5702  0713  00CC               	movwf	??_configureController
  5703  0714  084C               	movf	??_configureController,w
  5704  0715  00A0               	movwf	eepromWrite@data
  5705  0716  3062               	movlw	98
  5706  0717  318D  25ED  3185   	fcall	_eepromWrite
  5707                           
  5708                           ;Controller.c: 256: eepromWrite(0x63, lyMax);
  5709  071A  0020               	movlb	0	; select bank0
  5710  071B  0850               	movf	configureController@lyMax,w
  5711  071C  00CC               	movwf	??_configureController
  5712  071D  084C               	movf	??_configureController,w
  5713  071E  00A0               	movwf	eepromWrite@data
  5714  071F  3063               	movlw	99
  5715  0720  318D  25ED  3185   	fcall	_eepromWrite
  5716                           
  5717                           ;Controller.c: 257: eepromWrite(0x64, rxMin);
  5718  0723  0020               	movlb	0	; select bank0
  5719  0724  0851               	movf	configureController@rxMin,w
  5720  0725  00CC               	movwf	??_configureController
  5721  0726  084C               	movf	??_configureController,w
  5722  0727  00A0               	movwf	eepromWrite@data
  5723  0728  3064               	movlw	100
  5724  0729  318D  25ED  3185   	fcall	_eepromWrite
  5725                           
  5726                           ;Controller.c: 258: eepromWrite(0x65, rxMax);
  5727  072C  0020               	movlb	0	; select bank0
  5728  072D  0852               	movf	configureController@rxMax,w
  5729  072E  00CC               	movwf	??_configureController
  5730  072F  084C               	movf	??_configureController,w
  5731  0730  00A0               	movwf	eepromWrite@data
  5732  0731  3065               	movlw	101
  5733  0732  318D  25ED  3185   	fcall	_eepromWrite
  5734                           
  5735                           ;Controller.c: 259: eepromWrite(0x66, ryMin);
  5736  0735  0020               	movlb	0	; select bank0
  5737  0736  0853               	movf	configureController@ryMin,w
  5738  0737  00CC               	movwf	??_configureController
  5739  0738  084C               	movf	??_configureController,w
  5740  0739  00A0               	movwf	eepromWrite@data
  5741  073A  3066               	movlw	102
  5742  073B  318D  25ED  3185   	fcall	_eepromWrite
  5743                           
  5744                           ;Controller.c: 260: eepromWrite(0x67, ryMax);
  5745  073E  0020               	movlb	0	; select bank0
  5746  073F  0854               	movf	configureController@ryMax,w
  5747  0740  00CC               	movwf	??_configureController
  5748  0741  084C               	movf	??_configureController,w
  5749  0742  00A0               	movwf	eepromWrite@data
  5750  0743  3067               	movlw	103
  5751  0744  318D  25ED  3185   	fcall	_eepromWrite
  5752  0747                     l2861:	
  5753                           
  5754                           ;Controller.c: 262: lutInit();
  5755  0747  3182  2290  3185   	fcall	_lutInit
  5756  074A                     l2863:	
  5757                           
  5758                           ;Controller.c: 264: INTCONbits.GIE = 1;
  5759  074A  178B               	bsf	11,7	;volatile
  5760  074B                     l2865:	
  5761                           
  5762                           ;Controller.c: 265: INTCONbits.PEIE = 1;
  5763  074B  170B               	bsf	11,6	;volatile
  5764  074C                     l364:	
  5765  074C  0008               	return
  5766  074D                     __end_of_configureController:	
  5767                           
  5768                           	psect	text6
  5769  0481                     __ptext6:	
  5770 ;; *************** function _readController *****************
  5771 ;; Defined at:
  5772 ;;		line 16 in file "Controller.c"
  5773 ;; Parameters:    Size  Location     Type
  5774 ;;  analogMode      1    wreg     unsigned char 
  5775 ;; Auto vars:     Size  Location     Type
  5776 ;;  analogMode      1    2[BANK0 ] unsigned char 
  5777 ;; Return value:  Size  Location     Type
  5778 ;;                  1    wreg      void 
  5779 ;; Registers used:
  5780 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5781 ;; Tracked objects:
  5782 ;;		On entry : 0/0
  5783 ;;		On exit  : 0/0
  5784 ;;		Unchanged: 0/0
  5785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5787 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5788 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5789 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5790 ;;Total ram usage:        3 bytes
  5791 ;; Hardware stack levels used:    1
  5792 ;; Hardware stack levels required when called:    3
  5793 ;; This function calls:
  5794 ;;		Nothing
  5795 ;; This function is called by:
  5796 ;;		_main
  5797 ;;		_configureController
  5798 ;; This function uses a non-reentrant model
  5799 ;;
  5800                           
  5801                           
  5802                           ;psect for function _readController
  5803  0481                     _readController:	
  5804                           
  5805                           ;incstack = 0
  5806                           ; Regs used in _readController: [wreg-fsr1h+status,2+status,0]
  5807                           ;readController@analogMode stored from wreg
  5808  0481  0020               	movlb	0	; select bank0
  5809  0482  00A2               	movwf	readController@analogMode
  5810  0483                     l2639:	
  5811                           
  5812                           ;Controller.c: 19: AN_temp = RD4;
  5813  0483  3000               	movlw	0
  5814  0484  1A0F               	btfsc	15,4	;volatile
  5815  0485  3001               	movlw	1
  5816  0486  00FB               	movwf	_AN_temp
  5817  0487                     l2641:	
  5818                           
  5819                           ;Controller.c: 20: if(AN_temp ^ AN_prev) AN_timer = 0;
  5820  0487  087B               	movf	_AN_temp,w
  5821  0488  065A               	xorwf	_AN_prev,w
  5822  0489  1903               	btfsc	3,2
  5823  048A  2C8C               	goto	u2231
  5824  048B  2C8D               	goto	u2230
  5825  048C                     u2231:	
  5826  048C  2C8F               	goto	l2645
  5827  048D                     u2230:	
  5828  048D                     l2643:	
  5829  048D  01E6               	clrf	_AN_timer
  5830  048E  2C99               	goto	l2649
  5831  048F                     l2645:	
  5832                           
  5833                           ;Controller.c: 21: else if(AN_timer < 4) AN_timer++;
  5834  048F  3004               	movlw	4
  5835  0490  0266               	subwf	_AN_timer,w
  5836  0491  1803               	skipnc
  5837  0492  2C94               	goto	u2241
  5838  0493  2C95               	goto	u2240
  5839  0494                     u2241:	
  5840  0494  2C99               	goto	l2649
  5841  0495                     u2240:	
  5842  0495                     l2647:	
  5843  0495  3001               	movlw	1
  5844  0496  00A0               	movwf	??_readController
  5845  0497  0820               	movf	??_readController,w
  5846  0498  07E6               	addwf	_AN_timer,f
  5847  0499                     l2649:	
  5848                           
  5849                           ;Controller.c: 22: if(AN_timer > 3) AN_btn = AN_temp;
  5850  0499  3004               	movlw	4
  5851  049A  0266               	subwf	_AN_timer,w
  5852  049B  1C03               	skipc
  5853  049C  2C9E               	goto	u2251
  5854  049D  2C9F               	goto	u2250
  5855  049E                     u2251:	
  5856  049E  2CA3               	goto	l300
  5857  049F                     u2250:	
  5858  049F                     l2651:	
  5859  049F  087B               	movf	_AN_temp,w
  5860  04A0  00A0               	movwf	??_readController
  5861  04A1  0820               	movf	??_readController,w
  5862  04A2  00E5               	movwf	_AN_btn
  5863  04A3                     l300:	
  5864                           
  5865                           ;Controller.c: 23: AN_prev = AN_temp;
  5866  04A3  087B               	movf	_AN_temp,w
  5867  04A4  00A0               	movwf	??_readController
  5868  04A5  0820               	movf	??_readController,w
  5869  04A6  00DA               	movwf	_AN_prev
  5870  04A7                     l2653:	
  5871                           
  5872                           ;Controller.c: 26: DigitalControllerByte1[DDown] = RA7;
  5873  04A7  3000               	movlw	0
  5874  04A8  1B8C               	btfsc	12,7	;volatile
  5875  04A9  3001               	movlw	1
  5876  04AA  0021               	movlb	1	; select bank1
  5877  04AB  00C1               	movwf	(_DigitalControllerByte1^(0+128)+1)
  5878  04AC                     l2655:	
  5879                           
  5880                           ;Controller.c: 27: DigitalControllerByte1[DUp] = RA6;
  5881  04AC  3000               	movlw	0
  5882  04AD  0020               	movlb	0	; select bank0
  5883  04AE  1B0C               	btfsc	12,6	;volatile
  5884  04AF  3001               	movlw	1
  5885  04B0  0021               	movlb	1	; select bank1
  5886  04B1  00C3               	movwf	(_DigitalControllerByte1^(0+128)+3)
  5887  04B2                     l2657:	
  5888                           
  5889                           ;Controller.c: 28: DigitalControllerByte1[DLeft] = RB0;
  5890  04B2  3000               	movlw	0
  5891  04B3  0020               	movlb	0	; select bank0
  5892  04B4  180D               	btfsc	13,0	;volatile
  5893  04B5  3001               	movlw	1
  5894  04B6  0021               	movlb	1	; select bank1
  5895  04B7  00C0               	movwf	_DigitalControllerByte1^(0+128)
  5896  04B8                     l2659:	
  5897                           
  5898                           ;Controller.c: 29: DigitalControllerByte1[DRight] = RB1;
  5899  04B8  3000               	movlw	0
  5900  04B9  0020               	movlb	0	; select bank0
  5901  04BA  188D               	btfsc	13,1	;volatile
  5902  04BB  3001               	movlw	1
  5903  04BC  0021               	movlb	1	; select bank1
  5904  04BD  00C2               	movwf	(_DigitalControllerByte1^(0+128)+2)
  5905  04BE                     l2661:	
  5906                           
  5907                           ;Controller.c: 30: DigitalControllerByte1[R3] = RD0;
  5908  04BE  3000               	movlw	0
  5909  04BF  0020               	movlb	0	; select bank0
  5910  04C0  180F               	btfsc	15,0	;volatile
  5911  04C1  3001               	movlw	1
  5912  04C2  0021               	movlb	1	; select bank1
  5913  04C3  00C5               	movwf	(_DigitalControllerByte1^(0+128)+5)
  5914  04C4                     l2663:	
  5915                           
  5916                           ;Controller.c: 31: DigitalControllerByte1[L3] = RC2;
  5917  04C4  3000               	movlw	0
  5918  04C5  0020               	movlb	0	; select bank0
  5919  04C6  190E               	btfsc	14,2	;volatile
  5920  04C7  3001               	movlw	1
  5921  04C8  0021               	movlb	1	; select bank1
  5922  04C9  00C6               	movwf	(_DigitalControllerByte1^(0+128)+6)
  5923  04CA                     l2665:	
  5924                           
  5925                           ;Controller.c: 32: DigitalControllerByte1[Start] = RB6;
  5926  04CA  3000               	movlw	0
  5927  04CB  0020               	movlb	0	; select bank0
  5928  04CC  1B0D               	btfsc	13,6	;volatile
  5929  04CD  3001               	movlw	1
  5930  04CE  0021               	movlb	1	; select bank1
  5931  04CF  00C4               	movwf	(_DigitalControllerByte1^(0+128)+4)
  5932  04D0                     l2667:	
  5933                           
  5934                           ;Controller.c: 33: DigitalControllerByte1[Select] = RB7;
  5935  04D0  3000               	movlw	0
  5936  04D1  0020               	movlb	0	; select bank0
  5937  04D2  1B8D               	btfsc	13,7	;volatile
  5938  04D3  3001               	movlw	1
  5939  04D4  0021               	movlb	1	; select bank1
  5940  04D5  00C7               	movwf	(_DigitalControllerByte1^(0+128)+7)
  5941  04D6                     l2669:	
  5942                           
  5943                           ;Controller.c: 35: DigitalControllerByte2[Square] = RA0;
  5944  04D6  3000               	movlw	0
  5945  04D7  0020               	movlb	0	; select bank0
  5946  04D8  180C               	btfsc	12,0	;volatile
  5947  04D9  3001               	movlw	1
  5948  04DA  0021               	movlb	1	; select bank1
  5949  04DB  00B8               	movwf	_DigitalControllerByte2^(0+128)
  5950  04DC                     l2671:	
  5951                           
  5952                           ;Controller.c: 36: DigitalControllerByte2[Circle] = RA3;
  5953  04DC  3000               	movlw	0
  5954  04DD  0020               	movlb	0	; select bank0
  5955  04DE  198C               	btfsc	12,3	;volatile
  5956  04DF  3001               	movlw	1
  5957  04E0  0021               	movlb	1	; select bank1
  5958  04E1  00BA               	movwf	(_DigitalControllerByte2^(0+128)+2)
  5959  04E2                     l2673:	
  5960                           
  5961                           ;Controller.c: 37: DigitalControllerByte2[X] = RA2;
  5962  04E2  3000               	movlw	0
  5963  04E3  0020               	movlb	0	; select bank0
  5964  04E4  190C               	btfsc	12,2	;volatile
  5965  04E5  3001               	movlw	1
  5966  04E6  0021               	movlb	1	; select bank1
  5967  04E7  00B9               	movwf	(_DigitalControllerByte2^(0+128)+1)
  5968  04E8                     l2675:	
  5969                           
  5970                           ;Controller.c: 38: DigitalControllerByte2[Triangle] = RA1;
  5971  04E8  3000               	movlw	0
  5972  04E9  0020               	movlb	0	; select bank0
  5973  04EA  188C               	btfsc	12,1	;volatile
  5974  04EB  3001               	movlw	1
  5975  04EC  0021               	movlb	1	; select bank1
  5976  04ED  00BB               	movwf	(_DigitalControllerByte2^(0+128)+3)
  5977  04EE                     l2677:	
  5978                           
  5979                           ;Controller.c: 39: DigitalControllerByte2[R1] = RB4;
  5980  04EE  3000               	movlw	0
  5981  04EF  0020               	movlb	0	; select bank0
  5982  04F0  1A0D               	btfsc	13,4	;volatile
  5983  04F1  3001               	movlw	1
  5984  04F2  0021               	movlb	1	; select bank1
  5985  04F3  00BC               	movwf	(_DigitalControllerByte2^(0+128)+4)
  5986  04F4                     l2679:	
  5987                           
  5988                           ;Controller.c: 40: DigitalControllerByte2[R2] = RB5;
  5989  04F4  3000               	movlw	0
  5990  04F5  0020               	movlb	0	; select bank0
  5991  04F6  1A8D               	btfsc	13,5	;volatile
  5992  04F7  3001               	movlw	1
  5993  04F8  0021               	movlb	1	; select bank1
  5994  04F9  00BE               	movwf	(_DigitalControllerByte2^(0+128)+6)
  5995  04FA                     l2681:	
  5996                           
  5997                           ;Controller.c: 41: DigitalControllerByte2[L1] = RB2;
  5998  04FA  3000               	movlw	0
  5999  04FB  0020               	movlb	0	; select bank0
  6000  04FC  190D               	btfsc	13,2	;volatile
  6001  04FD  3001               	movlw	1
  6002  04FE  0021               	movlb	1	; select bank1
  6003  04FF  00BD               	movwf	(_DigitalControllerByte2^(0+128)+5)
  6004  0500                     l2683:	
  6005                           
  6006                           ;Controller.c: 42: DigitalControllerByte2[L2] = RB3;
  6007  0500  3000               	movlw	0
  6008  0501  0020               	movlb	0	; select bank0
  6009  0502  198D               	btfsc	13,3	;volatile
  6010  0503  3001               	movlw	1
  6011  0504  0021               	movlb	1	; select bank1
  6012  0505  00BF               	movwf	(_DigitalControllerByte2^(0+128)+7)
  6013                           
  6014                           ;Controller.c: 45: if (index > Select) {
  6015  0506  3008               	movlw	8
  6016  0507  027A               	subwf	_index,w
  6017  0508  1C03               	skipc
  6018  0509  2D0B               	goto	u2261
  6019  050A  2D0C               	goto	u2260
  6020  050B                     u2261:	
  6021  050B  2D0D               	goto	l2687
  6022  050C                     u2260:	
  6023  050C                     l2685:	
  6024                           
  6025                           ;Controller.c: 46: index = 0;
  6026  050C  01FA               	clrf	_index
  6027  050D                     l2687:	
  6028                           
  6029                           ;Controller.c: 47: };Controller.c: 50: if (!DigitalControllerByte1[index]) {
  6030  050D  087A               	movf	_index,w
  6031  050E  3EC0               	addlw	(low (_DigitalControllerByte1| 0))& (0+255)
  6032  050F  0086               	movwf	6
  6033  0510  0187               	clrf	7
  6034  0511  0801               	movf	1,w
  6035  0512  1D03               	btfss	3,2
  6036  0513  2D15               	goto	u2271
  6037  0514  2D16               	goto	u2270
  6038  0515                     u2271:	
  6039  0515  2D1F               	goto	l302
  6040  0516                     u2270:	
  6041  0516                     l2689:	
  6042                           
  6043                           ;Controller.c: 51: IndexDigitalByte1[index]++;
  6044  0516  3001               	movlw	1
  6045  0517  0020               	movlb	0	; select bank0
  6046  0518  00A0               	movwf	??_readController
  6047  0519  087A               	movf	_index,w
  6048  051A  3EA8               	addlw	(low (_IndexDigitalByte1| 0))& (0+255)
  6049  051B  0086               	movwf	6
  6050  051C  0187               	clrf	7
  6051  051D  0820               	movf	??_readController,w
  6052  051E  0781               	addwf	1,f
  6053  051F                     l302:	
  6054                           
  6055                           ;Controller.c: 52: };Controller.c: 53: if (!DigitalControllerByte2[index]) {
  6056  051F  087A               	movf	_index,w
  6057  0520  3EB8               	addlw	(low (_DigitalControllerByte2| 0))& (0+255)
  6058  0521  0086               	movwf	6
  6059  0522  0187               	clrf	7
  6060  0523  0801               	movf	1,w
  6061  0524  1D03               	btfss	3,2
  6062  0525  2D27               	goto	u2281
  6063  0526  2D28               	goto	u2280
  6064  0527                     u2281:	
  6065  0527  2D31               	goto	l2693
  6066  0528                     u2280:	
  6067  0528                     l2691:	
  6068                           
  6069                           ;Controller.c: 54: IndexDigitalByte2[index]++;
  6070  0528  3001               	movlw	1
  6071  0529  0020               	movlb	0	; select bank0
  6072  052A  00A0               	movwf	??_readController
  6073  052B  087A               	movf	_index,w
  6074  052C  3EA0               	addlw	(low (_IndexDigitalByte2| 0))& (0+255)
  6075  052D  0086               	movwf	6
  6076  052E  0187               	clrf	7
  6077  052F  0820               	movf	??_readController,w
  6078  0530  0781               	addwf	1,f
  6079  0531                     l2693:	
  6080                           
  6081                           ;Controller.c: 55: };Controller.c: 58: if (DigitalControllerByte1[index] ^ PreviousDigit
      +                          alByte1[index]) {
  6082  0531  087A               	movf	_index,w
  6083  0532  3EB0               	addlw	(low (_PreviousDigitalByte1| 0))& (0+255)
  6084  0533  0086               	movwf	6
  6085  0534  0187               	clrf	7
  6086  0535  087A               	movf	_index,w
  6087  0536  3EC0               	addlw	(low (_DigitalControllerByte1| 0))& (0+255)
  6088  0537  0084               	movwf	4
  6089  0538  0185               	clrf	5
  6090  0539  0800               	movf	0,w
  6091  053A  0601               	xorwf	1,w
  6092  053B  1903               	btfsc	3,2
  6093  053C  2D3E               	goto	u2291
  6094  053D  2D3F               	goto	u2290
  6095  053E                     u2291:	
  6096  053E  2D5A               	goto	l2703
  6097  053F                     u2290:	
  6098  053F                     l2695:	
  6099                           
  6100                           ;Controller.c: 59: IndexDigitalByte1[index] = 0;
  6101  053F  087A               	movf	_index,w
  6102  0540  3EA8               	addlw	(low (_IndexDigitalByte1| 0))& (0+255)
  6103  0541  0086               	movwf	6
  6104  0542  0187               	clrf	7
  6105  0543  0181               	clrf	1
  6106  0544                     l2697:	
  6107                           
  6108                           ;Controller.c: 60: digitalStateFirst |= 1 << index;
  6109  0544  3001               	movlw	1
  6110  0545  0020               	movlb	0	; select bank0
  6111  0546  00A0               	movwf	??_readController
  6112  0547  0A7A               	incf	_index,w
  6113  0548  2D4A               	goto	u2304
  6114  0549                     u2305:	
  6115  0549  35A0               	lslf	??_readController,f
  6116  054A                     u2304:	
  6117  054A  0B89               	decfsz	9,f
  6118  054B  2D49               	goto	u2305
  6119  054C  0820               	movf	??_readController,w
  6120  054D  00A1               	movwf	??_readController+1
  6121  054E  0821               	movf	??_readController+1,w
  6122  054F  04E4               	iorwf	_digitalStateFirst,f
  6123  0550                     l2699:	
  6124                           
  6125                           ;Controller.c: 62: if (analogMode >= 1) {
  6126  0550  0822               	movf	readController@analogMode,w
  6127  0551  1903               	btfsc	3,2
  6128  0552  2D54               	goto	u2311
  6129  0553  2D55               	goto	u2310
  6130  0554                     u2311:	
  6131  0554  2D5A               	goto	l2703
  6132  0555                     u2310:	
  6133  0555                     l2701:	
  6134                           
  6135                           ;Controller.c: 63: analogStateFirst[index] = 0x00;
  6136  0555  087A               	movf	_index,w
  6137  0556  3ED0               	addlw	(low (_analogStateFirst| 0))& (0+255)
  6138  0557  0086               	movwf	6
  6139  0558  0187               	clrf	7
  6140  0559  0181               	clrf	1
  6141  055A                     l2703:	
  6142                           
  6143                           ;Controller.c: 64: };Controller.c: 66: };Controller.c: 67: if (DigitalControllerByte2[in
      +                          dex] ^ PreviousDigitalByte2[index]) {
  6144  055A  087A               	movf	_index,w
  6145  055B  3E20               	addlw	(low (_PreviousDigitalByte2| (0+256)))& (0+255)
  6146  055C  0086               	movwf	6
  6147  055D  3001               	movlw	1	; select bank2/3
  6148  055E  0087               	movwf	7
  6149  055F  087A               	movf	_index,w
  6150  0560  3EB8               	addlw	(low (_DigitalControllerByte2| 0))& (0+255)
  6151  0561  0084               	movwf	4
  6152  0562  0185               	clrf	5
  6153  0563  0800               	movf	0,w
  6154  0564  0601               	xorwf	1,w
  6155  0565  1903               	btfsc	3,2
  6156  0566  2D68               	goto	u2321
  6157  0567  2D69               	goto	u2320
  6158  0568                     u2321:	
  6159  0568  2D84               	goto	l306
  6160  0569                     u2320:	
  6161  0569                     l2705:	
  6162                           
  6163                           ;Controller.c: 68: IndexDigitalByte2[index] = 0;
  6164  0569  087A               	movf	_index,w
  6165  056A  3EA0               	addlw	(low (_IndexDigitalByte2| 0))& (0+255)
  6166  056B  0086               	movwf	6
  6167  056C  0187               	clrf	7
  6168  056D  0181               	clrf	1
  6169  056E                     l2707:	
  6170                           
  6171                           ;Controller.c: 69: digitalStateSecond |= 1 << index;
  6172  056E  3001               	movlw	1
  6173  056F  0020               	movlb	0	; select bank0
  6174  0570  00A0               	movwf	??_readController
  6175  0571  0A7A               	incf	_index,w
  6176  0572  2D74               	goto	u2334
  6177  0573                     u2335:	
  6178  0573  35A0               	lslf	??_readController,f
  6179  0574                     u2334:	
  6180  0574  0B89               	decfsz	9,f
  6181  0575  2D73               	goto	u2335
  6182  0576  0820               	movf	??_readController,w
  6183  0577  00A1               	movwf	??_readController+1
  6184  0578  0821               	movf	??_readController+1,w
  6185  0579  04E3               	iorwf	_digitalStateSecond,f
  6186  057A                     l2709:	
  6187                           
  6188                           ;Controller.c: 71: if (analogMode >= 1) {
  6189  057A  0822               	movf	readController@analogMode,w
  6190  057B  1903               	btfsc	3,2
  6191  057C  2D7E               	goto	u2341
  6192  057D  2D7F               	goto	u2340
  6193  057E                     u2341:	
  6194  057E  2D84               	goto	l306
  6195  057F                     u2340:	
  6196  057F                     l2711:	
  6197                           
  6198                           ;Controller.c: 72: analogStateSecond[index] = 0x00;
  6199  057F  087A               	movf	_index,w
  6200  0580  3EC8               	addlw	(low (_analogStateSecond| 0))& (0+255)
  6201  0581  0086               	movwf	6
  6202  0582  0187               	clrf	7
  6203  0583  0181               	clrf	1
  6204  0584                     l306:	
  6205  0584  087A               	movf	_index,w
  6206  0585  3EA8               	addlw	(low (_IndexDigitalByte1| 0))& (0+255)
  6207  0586  0086               	movwf	6
  6208  0587  0187               	clrf	7
  6209  0588  3003               	movlw	3
  6210  0589  0201               	subwf	1,w
  6211  058A  1C03               	skipc
  6212  058B  2D8D               	goto	u2351
  6213  058C  2D8E               	goto	u2350
  6214  058D                     u2351:	
  6215  058D  2DA8               	goto	l308
  6216  058E                     u2350:	
  6217  058E                     l2713:	
  6218                           
  6219                           ;Controller.c: 79: digitalStateFirst &= ~(1 << index);
  6220  058E  3001               	movlw	1
  6221  058F  0020               	movlb	0	; select bank0
  6222  0590  00A0               	movwf	??_readController
  6223  0591  0A7A               	incf	_index,w
  6224  0592  2D94               	goto	u2364
  6225  0593                     u2365:	
  6226  0593  35A0               	lslf	??_readController,f
  6227  0594                     u2364:	
  6228  0594  0B89               	decfsz	9,f
  6229  0595  2D93               	goto	u2365
  6230  0596  0820               	movf	??_readController,w
  6231  0597  3AFF               	xorlw	255
  6232  0598  00A1               	movwf	??_readController+1
  6233  0599  0821               	movf	??_readController+1,w
  6234  059A  05E4               	andwf	_digitalStateFirst,f
  6235                           
  6236                           ;Controller.c: 81: if (analogMode >= 1) {
  6237  059B  0822               	movf	readController@analogMode,w
  6238  059C  1903               	btfsc	3,2
  6239  059D  2D9F               	goto	u2371
  6240  059E  2DA0               	goto	u2370
  6241  059F                     u2371:	
  6242  059F  2DA8               	goto	l308
  6243  05A0                     u2370:	
  6244  05A0                     l2715:	
  6245                           
  6246                           ;Controller.c: 82: analogStateFirst[index] = 0xFF;
  6247  05A0  30FF               	movlw	255
  6248  05A1  00A0               	movwf	??_readController
  6249  05A2  087A               	movf	_index,w
  6250  05A3  3ED0               	addlw	(low (_analogStateFirst| 0))& (0+255)
  6251  05A4  0086               	movwf	6
  6252  05A5  0187               	clrf	7
  6253  05A6  0820               	movf	??_readController,w
  6254  05A7  0081               	movwf	1
  6255  05A8                     l308:	
  6256  05A8  087A               	movf	_index,w
  6257  05A9  3EA0               	addlw	(low (_IndexDigitalByte2| 0))& (0+255)
  6258  05AA  0086               	movwf	6
  6259  05AB  0187               	clrf	7
  6260  05AC  3003               	movlw	3
  6261  05AD  0201               	subwf	1,w
  6262  05AE  1C03               	skipc
  6263  05AF  2DB1               	goto	u2381
  6264  05B0  2DB2               	goto	u2380
  6265  05B1                     u2381:	
  6266  05B1  2DCC               	goto	l310
  6267  05B2                     u2380:	
  6268  05B2                     l2717:	
  6269                           
  6270                           ;Controller.c: 87: digitalStateSecond &= ~(1 << index);
  6271  05B2  3001               	movlw	1
  6272  05B3  0020               	movlb	0	; select bank0
  6273  05B4  00A0               	movwf	??_readController
  6274  05B5  0A7A               	incf	_index,w
  6275  05B6  2DB8               	goto	u2394
  6276  05B7                     u2395:	
  6277  05B7  35A0               	lslf	??_readController,f
  6278  05B8                     u2394:	
  6279  05B8  0B89               	decfsz	9,f
  6280  05B9  2DB7               	goto	u2395
  6281  05BA  0820               	movf	??_readController,w
  6282  05BB  3AFF               	xorlw	255
  6283  05BC  00A1               	movwf	??_readController+1
  6284  05BD  0821               	movf	??_readController+1,w
  6285  05BE  05E3               	andwf	_digitalStateSecond,f
  6286                           
  6287                           ;Controller.c: 89: if (analogMode >= 1) {
  6288  05BF  0822               	movf	readController@analogMode,w
  6289  05C0  1903               	btfsc	3,2
  6290  05C1  2DC3               	goto	u2401
  6291  05C2  2DC4               	goto	u2400
  6292  05C3                     u2401:	
  6293  05C3  2DCC               	goto	l310
  6294  05C4                     u2400:	
  6295  05C4                     l2719:	
  6296                           
  6297                           ;Controller.c: 90: analogStateSecond[index] = 0xFF;
  6298  05C4  30FF               	movlw	255
  6299  05C5  00A0               	movwf	??_readController
  6300  05C6  087A               	movf	_index,w
  6301  05C7  3EC8               	addlw	(low (_analogStateSecond| 0))& (0+255)
  6302  05C8  0086               	movwf	6
  6303  05C9  0187               	clrf	7
  6304  05CA  0820               	movf	??_readController,w
  6305  05CB  0081               	movwf	1
  6306  05CC                     l310:	
  6307                           
  6308                           ;Controller.c: 91: };Controller.c: 93: };Controller.c: 96: PreviousDigitalByte1[index] =
      +                           DigitalControllerByte1[index];
  6309  05CC  087A               	movf	_index,w
  6310  05CD  3EC0               	addlw	(low (_DigitalControllerByte1| 0))& (0+255)
  6311  05CE  0086               	movwf	6
  6312  05CF  0187               	clrf	7
  6313  05D0  0801               	movf	1,w
  6314  05D1  0020               	movlb	0	; select bank0
  6315  05D2  00A0               	movwf	??_readController
  6316  05D3  087A               	movf	_index,w
  6317  05D4  3EB0               	addlw	(low (_PreviousDigitalByte1| 0))& (0+255)
  6318  05D5  0086               	movwf	6
  6319  05D6  0187               	clrf	7
  6320  05D7  0820               	movf	??_readController,w
  6321  05D8  0081               	movwf	1
  6322                           
  6323                           ;Controller.c: 97: PreviousDigitalByte2[index] = DigitalControllerByte2[index];
  6324  05D9  087A               	movf	_index,w
  6325  05DA  3EB8               	addlw	(low (_DigitalControllerByte2| 0))& (0+255)
  6326  05DB  0086               	movwf	6
  6327  05DC  0187               	clrf	7
  6328  05DD  0801               	movf	1,w
  6329  05DE  00A0               	movwf	??_readController
  6330  05DF  087A               	movf	_index,w
  6331  05E0  3E20               	addlw	(low (_PreviousDigitalByte2| (0+256)))& (0+255)
  6332  05E1  0086               	movwf	6
  6333  05E2  3001               	movlw	1	; select bank2/3
  6334  05E3  0087               	movwf	7
  6335  05E4  0820               	movf	??_readController,w
  6336  05E5  0081               	movwf	1
  6337  05E6                     l2721:	
  6338                           
  6339                           ;Controller.c: 99: index++;
  6340  05E6  3001               	movlw	1
  6341  05E7  00A0               	movwf	??_readController
  6342  05E8  0820               	movf	??_readController,w
  6343  05E9  07FA               	addwf	_index,f
  6344  05EA                     l312:	
  6345  05EA  0008               	return
  6346  05EB                     __end_of_readController:	
  6347                           
  6348                           	psect	text7
  6349  0E3A                     __ptext7:	
  6350 ;; *************** function _readADC *****************
  6351 ;; Defined at:
  6352 ;;		line 165 in file "Controller.c"
  6353 ;; Parameters:    Size  Location     Type
  6354 ;;  channel         2    0[BANK0 ] int 
  6355 ;; Auto vars:     Size  Location     Type
  6356 ;;		None
  6357 ;; Return value:  Size  Location     Type
  6358 ;;                  2    0[BANK0 ] unsigned int 
  6359 ;; Registers used:
  6360 ;;		wreg, status,2, status,0
  6361 ;; Tracked objects:
  6362 ;;		On entry : 0/0
  6363 ;;		On exit  : 0/0
  6364 ;;		Unchanged: 0/0
  6365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6366 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6368 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6369 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6370 ;;Total ram usage:        9 bytes
  6371 ;; Hardware stack levels used:    1
  6372 ;; Hardware stack levels required when called:    3
  6373 ;; This function calls:
  6374 ;;		Nothing
  6375 ;; This function is called by:
  6376 ;;		_readControllerAnalog
  6377 ;;		_configureController
  6378 ;; This function uses a non-reentrant model
  6379 ;;
  6380                           
  6381                           
  6382                           ;psect for function _readADC
  6383  0E3A                     _readADC:	
  6384  0E3A                     l2723:	
  6385                           ;incstack = 0
  6386                           ; Regs used in _readADC: [wreg+status,2+status,0]
  6387                           
  6388                           
  6389                           ;Controller.c: 166: ADPCH = channel;
  6390  0E3A  0020               	movlb	0	; select bank0
  6391  0E3B  0820               	movf	readADC@channel,w
  6392  0E3C  0021               	movlb	1	; select bank1
  6393  0E3D  009E               	movwf	30	;volatile
  6394  0E3E                     l2725:	
  6395                           
  6396                           ;Controller.c: 167: ADPRE = 0x00;
  6397  0E3E  019C               	clrf	28	;volatile
  6398  0E3F                     l2727:	
  6399                           
  6400                           ;Controller.c: 168: ADACQ = 0x3F;
  6401  0E3F  303F               	movlw	63
  6402  0E40  009D               	movwf	29	;volatile
  6403  0E41                     l2729:	
  6404                           
  6405                           ;Controller.c: 170: ADCON0bits.ADGO = 1;
  6406  0E41  1413               	bsf	19,0	;volatile
  6407  0E42                     l339:	
  6408                           ;Controller.c: 171: while (ADCON0bits.ADGO);
  6409                           
  6410  0E42  1813               	btfsc	19,0	;volatile
  6411  0E43  2E45               	goto	u2411
  6412  0E44  2E46               	goto	u2410
  6413  0E45                     u2411:	
  6414  0E45  2E42               	goto	l339
  6415  0E46                     u2410:	
  6416  0E46                     l2731:	
  6417                           
  6418                           ;Controller.c: 173: return ((ADRESH << 6) | (ADRESL >> 2));
  6419  0E46  080C               	movf	12,w	;volatile
  6420  0E47  0020               	movlb	0	; select bank0
  6421  0E48  00A2               	movwf	??_readADC
  6422  0E49  3002               	movlw	2
  6423  0E4A                     u2425:	
  6424  0E4A  36A2               	lsrf	??_readADC,f
  6425  0E4B  0B89               	decfsz	9,f
  6426  0E4C  2E4A               	goto	u2425
  6427  0E4D  0822               	movf	??_readADC,w
  6428  0E4E  00A3               	movwf	??_readADC+1
  6429  0E4F  01A4               	clrf	??_readADC+2
  6430  0E50  0021               	movlb	1	; select bank1
  6431  0E51  080D               	movf	13,w	;volatile
  6432  0E52  0020               	movlb	0	; select bank0
  6433  0E53  00A5               	movwf	??_readADC+3
  6434  0E54  01A6               	clrf	??_readADC+4
  6435  0E55  3006               	movlw	6
  6436  0E56                     u2435:	
  6437  0E56  35A5               	lslf	??_readADC+3,f
  6438  0E57  0DA6               	rlf	??_readADC+4,f
  6439  0E58  0B89               	decfsz	9,f
  6440  0E59  2E56               	goto	u2435
  6441  0E5A  0823               	movf	??_readADC+1,w
  6442  0E5B  0425               	iorwf	??_readADC+3,w
  6443  0E5C  00A7               	movwf	??_readADC+5
  6444  0E5D  0824               	movf	??_readADC+2,w
  6445  0E5E  0426               	iorwf	??_readADC+4,w
  6446  0E5F  00A8               	movwf	??_readADC+6
  6447  0E60  0827               	movf	??_readADC+5,w
  6448  0E61  00A0               	movwf	?_readADC
  6449  0E62  0828               	movf	??_readADC+6,w
  6450  0E63  00A1               	movwf	?_readADC+1
  6451  0E64                     l342:	
  6452  0E64  0008               	return
  6453  0E65                     __end_of_readADC:	
  6454                           
  6455                           	psect	text8
  6456  0290                     __ptext8:	
  6457 ;; *************** function _lutInit *****************
  6458 ;; Defined at:
  6459 ;;		line 107 in file "Controller.c"
  6460 ;; Parameters:    Size  Location     Type
  6461 ;;		None
  6462 ;; Auto vars:     Size  Location     Type
  6463 ;;  position        2   42[BANK0 ] int 
  6464 ;;  ryMax           1   41[BANK0 ] unsigned char 
  6465 ;;  ryMin           1   40[BANK0 ] unsigned char 
  6466 ;;  rxMax           1   39[BANK0 ] unsigned char 
  6467 ;;  rxMin           1   38[BANK0 ] unsigned char 
  6468 ;;  lyMax           1   37[BANK0 ] unsigned char 
  6469 ;;  lyMin           1   36[BANK0 ] unsigned char 
  6470 ;;  lxMax           1   35[BANK0 ] unsigned char 
  6471 ;;  lxMin           1   34[BANK0 ] unsigned char 
  6472 ;; Return value:  Size  Location     Type
  6473 ;;                  1    wreg      void 
  6474 ;; Registers used:
  6475 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6476 ;; Tracked objects:
  6477 ;;		On entry : 0/0
  6478 ;;		On exit  : 0/0
  6479 ;;		Unchanged: 0/0
  6480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6482 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6483 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6484 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6485 ;;Total ram usage:       19 bytes
  6486 ;; Hardware stack levels used:    1
  6487 ;; Hardware stack levels required when called:    5
  6488 ;; This function calls:
  6489 ;;		_Map
  6490 ;;		_eepromRead
  6491 ;; This function is called by:
  6492 ;;		_main
  6493 ;;		_configureController
  6494 ;; This function uses a non-reentrant model
  6495 ;;
  6496                           
  6497                           
  6498                           ;psect for function _lutInit
  6499  0290                     _lutInit:	
  6500  0290                     l2587:	
  6501                           ;incstack = 0
  6502                           ; Regs used in _lutInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6503                           
  6504                           
  6505                           ;Controller.c: 109: char lxMin = eepromRead(0x60);
  6506  0290  3060               	movlw	96
  6507  0291  318D  255D  3182   	fcall	_eepromRead
  6508  0294  0020               	movlb	0	; select bank0
  6509  0295  00B9               	movwf	??_lutInit
  6510  0296  0839               	movf	??_lutInit,w
  6511  0297  00C2               	movwf	lutInit@lxMin
  6512                           
  6513                           ;Controller.c: 110: char lxMax = eepromRead(0x61);
  6514  0298  3061               	movlw	97
  6515  0299  318D  255D  3182   	fcall	_eepromRead
  6516  029C  0020               	movlb	0	; select bank0
  6517  029D  00B9               	movwf	??_lutInit
  6518  029E  0839               	movf	??_lutInit,w
  6519  029F  00C3               	movwf	lutInit@lxMax
  6520                           
  6521                           ;Controller.c: 111: char lyMin = eepromRead(0x62);
  6522  02A0  3062               	movlw	98
  6523  02A1  318D  255D  3182   	fcall	_eepromRead
  6524  02A4  0020               	movlb	0	; select bank0
  6525  02A5  00B9               	movwf	??_lutInit
  6526  02A6  0839               	movf	??_lutInit,w
  6527  02A7  00C4               	movwf	lutInit@lyMin
  6528                           
  6529                           ;Controller.c: 112: char lyMax = eepromRead(0x63);
  6530  02A8  3063               	movlw	99
  6531  02A9  318D  255D  3182   	fcall	_eepromRead
  6532  02AC  0020               	movlb	0	; select bank0
  6533  02AD  00B9               	movwf	??_lutInit
  6534  02AE  0839               	movf	??_lutInit,w
  6535  02AF  00C5               	movwf	lutInit@lyMax
  6536                           
  6537                           ;Controller.c: 114: char rxMin = eepromRead(0x64);
  6538  02B0  3064               	movlw	100
  6539  02B1  318D  255D  3182   	fcall	_eepromRead
  6540  02B4  0020               	movlb	0	; select bank0
  6541  02B5  00B9               	movwf	??_lutInit
  6542  02B6  0839               	movf	??_lutInit,w
  6543  02B7  00C6               	movwf	lutInit@rxMin
  6544                           
  6545                           ;Controller.c: 115: char rxMax = eepromRead(0x65);
  6546  02B8  3065               	movlw	101
  6547  02B9  318D  255D  3182   	fcall	_eepromRead
  6548  02BC  0020               	movlb	0	; select bank0
  6549  02BD  00B9               	movwf	??_lutInit
  6550  02BE  0839               	movf	??_lutInit,w
  6551  02BF  00C7               	movwf	lutInit@rxMax
  6552                           
  6553                           ;Controller.c: 116: char ryMin = eepromRead(0x66);
  6554  02C0  3066               	movlw	102
  6555  02C1  318D  255D  3182   	fcall	_eepromRead
  6556  02C4  0020               	movlb	0	; select bank0
  6557  02C5  00B9               	movwf	??_lutInit
  6558  02C6  0839               	movf	??_lutInit,w
  6559  02C7  00C8               	movwf	lutInit@ryMin
  6560                           
  6561                           ;Controller.c: 117: char ryMax = eepromRead(0x67);
  6562  02C8  3067               	movlw	103
  6563  02C9  318D  255D  3182   	fcall	_eepromRead
  6564  02CC  0020               	movlb	0	; select bank0
  6565  02CD  00B9               	movwf	??_lutInit
  6566  02CE  0839               	movf	??_lutInit,w
  6567  02CF  00C9               	movwf	lutInit@ryMax
  6568  02D0                     l2589:	
  6569                           
  6570                           ;Controller.c: 119: for (int position = 0; position < 256; position++) {
  6571  02D0  01CA               	clrf	lutInit@position
  6572  02D1  01CB               	clrf	lutInit@position+1
  6573  02D2                     l2595:	
  6574                           
  6575                           ;Controller.c: 122: if (position < lxMin) {
  6576  02D2  0020               	movlb	0	; select bank0
  6577  02D3  084B               	movf	lutInit@position+1,w
  6578  02D4  3A80               	xorlw	128
  6579  02D5  00B9               	movwf	??_lutInit
  6580  02D6  3080               	movlw	128
  6581  02D7  0239               	subwf	??_lutInit,w
  6582  02D8  1D03               	skipz
  6583  02D9  2ADC               	goto	u2145
  6584  02DA  0842               	movf	lutInit@lxMin,w
  6585  02DB  024A               	subwf	lutInit@position,w
  6586  02DC                     u2145:	
  6587  02DC  1803               	skipnc
  6588  02DD  2ADF               	goto	u2141
  6589  02DE  2AE0               	goto	u2140
  6590  02DF                     u2141:	
  6591  02DF  2AED               	goto	l2599
  6592  02E0                     u2140:	
  6593  02E0                     l2597:	
  6594                           
  6595                           ;Controller.c: 124: lutLX[position] = 0;
  6596  02E0  30F0               	movlw	240
  6597  02E1  0020               	movlb	0	; select bank0
  6598  02E2  00B9               	movwf	??_lutInit
  6599  02E3  3026               	movlw	38
  6600  02E4  00BA               	movwf	??_lutInit+1
  6601  02E5  084A               	movf	lutInit@position,w
  6602  02E6  0739               	addwf	??_lutInit,w
  6603  02E7  0086               	movwf	6
  6604  02E8  084B               	movf	lutInit@position+1,w
  6605  02E9  3D3A               	addwfc	??_lutInit+1,w
  6606  02EA  0087               	movwf	7
  6607  02EB  0181               	clrf	1
  6608                           
  6609                           ;Controller.c: 125: } else if (position > lxMax) {
  6610  02EC  2B3A               	goto	l2605
  6611  02ED                     l2599:	
  6612  02ED  0020               	movlb	0	; select bank0
  6613  02EE  084B               	movf	lutInit@position+1,w
  6614  02EF  3A80               	xorlw	128
  6615  02F0  3C80               	sublw	128
  6616  02F1  1D03               	skipz
  6617  02F2  2AF5               	goto	u2155
  6618  02F3  084A               	movf	lutInit@position,w
  6619  02F4  0243               	subwf	lutInit@lxMax,w
  6620  02F5                     u2155:	
  6621  02F5  1803               	skipnc
  6622  02F6  2AF8               	goto	u2151
  6623  02F7  2AF9               	goto	u2150
  6624  02F8                     u2151:	
  6625  02F8  2B0B               	goto	l2603
  6626  02F9                     u2150:	
  6627  02F9                     l2601:	
  6628                           
  6629                           ;Controller.c: 126: lutLX[position] = 255;
  6630  02F9  30F0               	movlw	240
  6631  02FA  0020               	movlb	0	; select bank0
  6632  02FB  00B9               	movwf	??_lutInit
  6633  02FC  3026               	movlw	38
  6634  02FD  00BA               	movwf	??_lutInit+1
  6635  02FE  084A               	movf	lutInit@position,w
  6636  02FF  0739               	addwf	??_lutInit,w
  6637  0300  00BB               	movwf	??_lutInit+2
  6638  0301  084B               	movf	lutInit@position+1,w
  6639  0302  3D3A               	addwfc	??_lutInit+1,w
  6640  0303  00BC               	movwf	??_lutInit+3
  6641  0304  083B               	movf	??_lutInit+2,w
  6642  0305  0086               	movwf	6
  6643  0306  083C               	movf	??_lutInit+3,w
  6644  0307  0087               	movwf	7
  6645  0308  30FF               	movlw	255
  6646  0309  0081               	movwf	1
  6647                           
  6648                           ;Controller.c: 128: } else {
  6649  030A  2B3A               	goto	l2605
  6650  030B                     l2603:	
  6651                           
  6652                           ;Controller.c: 129: lutLX[position] = Map(position, lxMin, lxMax, 0, 255);
  6653  030B  0020               	movlb	0	; select bank0
  6654  030C  084B               	movf	lutInit@position+1,w
  6655  030D  00B0               	movwf	Map@x+1
  6656  030E  084A               	movf	lutInit@position,w
  6657  030F  00AF               	movwf	Map@x
  6658  0310  0842               	movf	lutInit@lxMin,w
  6659  0311  00B9               	movwf	??_lutInit
  6660  0312  01BA               	clrf	??_lutInit+1
  6661  0313  0839               	movf	??_lutInit,w
  6662  0314  00B1               	movwf	Map@inMin
  6663  0315  083A               	movf	??_lutInit+1,w
  6664  0316  00B2               	movwf	Map@inMin+1
  6665  0317  0843               	movf	lutInit@lxMax,w
  6666  0318  00BB               	movwf	??_lutInit+2
  6667  0319  01BC               	clrf	??_lutInit+3
  6668  031A  083B               	movf	??_lutInit+2,w
  6669  031B  00B3               	movwf	Map@inMax
  6670  031C  083C               	movf	??_lutInit+3,w
  6671  031D  00B4               	movwf	Map@inMax+1
  6672  031E  3000               	movlw	0
  6673  031F  00B5               	movwf	Map@outMin
  6674  0320  00B6               	movwf	Map@outMin+1
  6675  0321  30FF               	movlw	255
  6676  0322  00B7               	movwf	Map@outMax
  6677  0323  3000               	movlw	0
  6678  0324  00B8               	movwf	Map@outMax+1
  6679  0325  318D  25CB  3182   	fcall	_Map
  6680  0328  0020               	movlb	0	; select bank0
  6681  0329  00BD               	movwf	??_lutInit+4
  6682  032A  30F0               	movlw	240
  6683  032B  00BE               	movwf	??_lutInit+5
  6684  032C  3026               	movlw	38
  6685  032D  00BF               	movwf	??_lutInit+6
  6686  032E  084A               	movf	lutInit@position,w
  6687  032F  073E               	addwf	??_lutInit+5,w
  6688  0330  00C0               	movwf	??_lutInit+7
  6689  0331  084B               	movf	lutInit@position+1,w
  6690  0332  3D3F               	addwfc	??_lutInit+6,w
  6691  0333  00C1               	movwf	??_lutInit+8
  6692  0334  0840               	movf	??_lutInit+7,w
  6693  0335  0086               	movwf	6
  6694  0336  0841               	movf	??_lutInit+8,w
  6695  0337  0087               	movwf	7
  6696  0338  083D               	movf	??_lutInit+4,w
  6697  0339  0081               	movwf	1
  6698  033A                     l2605:	
  6699                           
  6700                           ;Controller.c: 130: };Controller.c: 133: if (position < lyMin) {
  6701  033A  084B               	movf	lutInit@position+1,w
  6702  033B  3A80               	xorlw	128
  6703  033C  00B9               	movwf	??_lutInit
  6704  033D  3080               	movlw	128
  6705  033E  0239               	subwf	??_lutInit,w
  6706  033F  1D03               	skipz
  6707  0340  2B43               	goto	u2165
  6708  0341  0844               	movf	lutInit@lyMin,w
  6709  0342  024A               	subwf	lutInit@position,w
  6710  0343                     u2165:	
  6711  0343  1803               	skipnc
  6712  0344  2B46               	goto	u2161
  6713  0345  2B47               	goto	u2160
  6714  0346                     u2161:	
  6715  0346  2B54               	goto	l2609
  6716  0347                     u2160:	
  6717  0347                     l2607:	
  6718                           
  6719                           ;Controller.c: 134: lutLY[position] = 0;
  6720  0347  30F0               	movlw	240
  6721  0348  0020               	movlb	0	; select bank0
  6722  0349  00B9               	movwf	??_lutInit
  6723  034A  3025               	movlw	37
  6724  034B  00BA               	movwf	??_lutInit+1
  6725  034C  084A               	movf	lutInit@position,w
  6726  034D  0739               	addwf	??_lutInit,w
  6727  034E  0086               	movwf	6
  6728  034F  084B               	movf	lutInit@position+1,w
  6729  0350  3D3A               	addwfc	??_lutInit+1,w
  6730  0351  0087               	movwf	7
  6731  0352  0181               	clrf	1
  6732                           
  6733                           ;Controller.c: 135: } else if (position > lyMax) {
  6734  0353  2BA1               	goto	l2615
  6735  0354                     l2609:	
  6736  0354  0020               	movlb	0	; select bank0
  6737  0355  084B               	movf	lutInit@position+1,w
  6738  0356  3A80               	xorlw	128
  6739  0357  3C80               	sublw	128
  6740  0358  1D03               	skipz
  6741  0359  2B5C               	goto	u2175
  6742  035A  084A               	movf	lutInit@position,w
  6743  035B  0245               	subwf	lutInit@lyMax,w
  6744  035C                     u2175:	
  6745  035C  1803               	skipnc
  6746  035D  2B5F               	goto	u2171
  6747  035E  2B60               	goto	u2170
  6748  035F                     u2171:	
  6749  035F  2B72               	goto	l2613
  6750  0360                     u2170:	
  6751  0360                     l2611:	
  6752                           
  6753                           ;Controller.c: 136: lutLY[position] = 255;
  6754  0360  30F0               	movlw	240
  6755  0361  0020               	movlb	0	; select bank0
  6756  0362  00B9               	movwf	??_lutInit
  6757  0363  3025               	movlw	37
  6758  0364  00BA               	movwf	??_lutInit+1
  6759  0365  084A               	movf	lutInit@position,w
  6760  0366  0739               	addwf	??_lutInit,w
  6761  0367  00BB               	movwf	??_lutInit+2
  6762  0368  084B               	movf	lutInit@position+1,w
  6763  0369  3D3A               	addwfc	??_lutInit+1,w
  6764  036A  00BC               	movwf	??_lutInit+3
  6765  036B  083B               	movf	??_lutInit+2,w
  6766  036C  0086               	movwf	6
  6767  036D  083C               	movf	??_lutInit+3,w
  6768  036E  0087               	movwf	7
  6769  036F  30FF               	movlw	255
  6770  0370  0081               	movwf	1
  6771                           
  6772                           ;Controller.c: 138: } else {
  6773  0371  2BA1               	goto	l2615
  6774  0372                     l2613:	
  6775                           
  6776                           ;Controller.c: 139: lutLY[position] = Map(position, lyMin, lyMax, 0, 255);
  6777  0372  0020               	movlb	0	; select bank0
  6778  0373  084B               	movf	lutInit@position+1,w
  6779  0374  00B0               	movwf	Map@x+1
  6780  0375  084A               	movf	lutInit@position,w
  6781  0376  00AF               	movwf	Map@x
  6782  0377  0844               	movf	lutInit@lyMin,w
  6783  0378  00B9               	movwf	??_lutInit
  6784  0379  01BA               	clrf	??_lutInit+1
  6785  037A  0839               	movf	??_lutInit,w
  6786  037B  00B1               	movwf	Map@inMin
  6787  037C  083A               	movf	??_lutInit+1,w
  6788  037D  00B2               	movwf	Map@inMin+1
  6789  037E  0845               	movf	lutInit@lyMax,w
  6790  037F  00BB               	movwf	??_lutInit+2
  6791  0380  01BC               	clrf	??_lutInit+3
  6792  0381  083B               	movf	??_lutInit+2,w
  6793  0382  00B3               	movwf	Map@inMax
  6794  0383  083C               	movf	??_lutInit+3,w
  6795  0384  00B4               	movwf	Map@inMax+1
  6796  0385  3000               	movlw	0
  6797  0386  00B5               	movwf	Map@outMin
  6798  0387  00B6               	movwf	Map@outMin+1
  6799  0388  30FF               	movlw	255
  6800  0389  00B7               	movwf	Map@outMax
  6801  038A  3000               	movlw	0
  6802  038B  00B8               	movwf	Map@outMax+1
  6803  038C  318D  25CB  3182   	fcall	_Map
  6804  038F  0020               	movlb	0	; select bank0
  6805  0390  00BD               	movwf	??_lutInit+4
  6806  0391  30F0               	movlw	240
  6807  0392  00BE               	movwf	??_lutInit+5
  6808  0393  3025               	movlw	37
  6809  0394  00BF               	movwf	??_lutInit+6
  6810  0395  084A               	movf	lutInit@position,w
  6811  0396  073E               	addwf	??_lutInit+5,w
  6812  0397  00C0               	movwf	??_lutInit+7
  6813  0398  084B               	movf	lutInit@position+1,w
  6814  0399  3D3F               	addwfc	??_lutInit+6,w
  6815  039A  00C1               	movwf	??_lutInit+8
  6816  039B  0840               	movf	??_lutInit+7,w
  6817  039C  0086               	movwf	6
  6818  039D  0841               	movf	??_lutInit+8,w
  6819  039E  0087               	movwf	7
  6820  039F  083D               	movf	??_lutInit+4,w
  6821  03A0  0081               	movwf	1
  6822  03A1                     l2615:	
  6823                           
  6824                           ;Controller.c: 140: };Controller.c: 143: if (position < rxMin) {
  6825  03A1  084B               	movf	lutInit@position+1,w
  6826  03A2  3A80               	xorlw	128
  6827  03A3  00B9               	movwf	??_lutInit
  6828  03A4  3080               	movlw	128
  6829  03A5  0239               	subwf	??_lutInit,w
  6830  03A6  1D03               	skipz
  6831  03A7  2BAA               	goto	u2185
  6832  03A8  0846               	movf	lutInit@rxMin,w
  6833  03A9  024A               	subwf	lutInit@position,w
  6834  03AA                     u2185:	
  6835  03AA  1803               	skipnc
  6836  03AB  2BAD               	goto	u2181
  6837  03AC  2BAE               	goto	u2180
  6838  03AD                     u2181:	
  6839  03AD  2BBB               	goto	l2619
  6840  03AE                     u2180:	
  6841  03AE                     l2617:	
  6842                           
  6843                           ;Controller.c: 144: lutRX[position] = 0;
  6844  03AE  30F0               	movlw	240
  6845  03AF  0020               	movlb	0	; select bank0
  6846  03B0  00B9               	movwf	??_lutInit
  6847  03B1  3024               	movlw	36
  6848  03B2  00BA               	movwf	??_lutInit+1
  6849  03B3  084A               	movf	lutInit@position,w
  6850  03B4  0739               	addwf	??_lutInit,w
  6851  03B5  0086               	movwf	6
  6852  03B6  084B               	movf	lutInit@position+1,w
  6853  03B7  3D3A               	addwfc	??_lutInit+1,w
  6854  03B8  0087               	movwf	7
  6855  03B9  0181               	clrf	1
  6856                           
  6857                           ;Controller.c: 145: } else if (position > rxMax) {
  6858  03BA  2C08               	goto	l2625
  6859  03BB                     l2619:	
  6860  03BB  0020               	movlb	0	; select bank0
  6861  03BC  084B               	movf	lutInit@position+1,w
  6862  03BD  3A80               	xorlw	128
  6863  03BE  3C80               	sublw	128
  6864  03BF  1D03               	skipz
  6865  03C0  2BC3               	goto	u2195
  6866  03C1  084A               	movf	lutInit@position,w
  6867  03C2  0247               	subwf	lutInit@rxMax,w
  6868  03C3                     u2195:	
  6869  03C3  1803               	skipnc
  6870  03C4  2BC6               	goto	u2191
  6871  03C5  2BC7               	goto	u2190
  6872  03C6                     u2191:	
  6873  03C6  2BD9               	goto	l2623
  6874  03C7                     u2190:	
  6875  03C7                     l2621:	
  6876                           
  6877                           ;Controller.c: 146: lutRX[position] = 255;
  6878  03C7  30F0               	movlw	240
  6879  03C8  0020               	movlb	0	; select bank0
  6880  03C9  00B9               	movwf	??_lutInit
  6881  03CA  3024               	movlw	36
  6882  03CB  00BA               	movwf	??_lutInit+1
  6883  03CC  084A               	movf	lutInit@position,w
  6884  03CD  0739               	addwf	??_lutInit,w
  6885  03CE  00BB               	movwf	??_lutInit+2
  6886  03CF  084B               	movf	lutInit@position+1,w
  6887  03D0  3D3A               	addwfc	??_lutInit+1,w
  6888  03D1  00BC               	movwf	??_lutInit+3
  6889  03D2  083B               	movf	??_lutInit+2,w
  6890  03D3  0086               	movwf	6
  6891  03D4  083C               	movf	??_lutInit+3,w
  6892  03D5  0087               	movwf	7
  6893  03D6  30FF               	movlw	255
  6894  03D7  0081               	movwf	1
  6895                           
  6896                           ;Controller.c: 148: } else {
  6897  03D8  2C08               	goto	l2625
  6898  03D9                     l2623:	
  6899                           
  6900                           ;Controller.c: 149: lutRX[position] = Map(position, rxMin, rxMax, 0, 255);
  6901  03D9  0020               	movlb	0	; select bank0
  6902  03DA  084B               	movf	lutInit@position+1,w
  6903  03DB  00B0               	movwf	Map@x+1
  6904  03DC  084A               	movf	lutInit@position,w
  6905  03DD  00AF               	movwf	Map@x
  6906  03DE  0846               	movf	lutInit@rxMin,w
  6907  03DF  00B9               	movwf	??_lutInit
  6908  03E0  01BA               	clrf	??_lutInit+1
  6909  03E1  0839               	movf	??_lutInit,w
  6910  03E2  00B1               	movwf	Map@inMin
  6911  03E3  083A               	movf	??_lutInit+1,w
  6912  03E4  00B2               	movwf	Map@inMin+1
  6913  03E5  0847               	movf	lutInit@rxMax,w
  6914  03E6  00BB               	movwf	??_lutInit+2
  6915  03E7  01BC               	clrf	??_lutInit+3
  6916  03E8  083B               	movf	??_lutInit+2,w
  6917  03E9  00B3               	movwf	Map@inMax
  6918  03EA  083C               	movf	??_lutInit+3,w
  6919  03EB  00B4               	movwf	Map@inMax+1
  6920  03EC  3000               	movlw	0
  6921  03ED  00B5               	movwf	Map@outMin
  6922  03EE  00B6               	movwf	Map@outMin+1
  6923  03EF  30FF               	movlw	255
  6924  03F0  00B7               	movwf	Map@outMax
  6925  03F1  3000               	movlw	0
  6926  03F2  00B8               	movwf	Map@outMax+1
  6927  03F3  318D  25CB  3182   	fcall	_Map
  6928  03F6  0020               	movlb	0	; select bank0
  6929  03F7  00BD               	movwf	??_lutInit+4
  6930  03F8  30F0               	movlw	240
  6931  03F9  00BE               	movwf	??_lutInit+5
  6932  03FA  3024               	movlw	36
  6933  03FB  00BF               	movwf	??_lutInit+6
  6934  03FC  084A               	movf	lutInit@position,w
  6935  03FD  073E               	addwf	??_lutInit+5,w
  6936  03FE  00C0               	movwf	??_lutInit+7
  6937  03FF  084B               	movf	lutInit@position+1,w
  6938  0400  3D3F               	addwfc	??_lutInit+6,w
  6939  0401  00C1               	movwf	??_lutInit+8
  6940  0402  0840               	movf	??_lutInit+7,w
  6941  0403  0086               	movwf	6
  6942  0404  0841               	movf	??_lutInit+8,w
  6943  0405  0087               	movwf	7
  6944  0406  083D               	movf	??_lutInit+4,w
  6945  0407  0081               	movwf	1
  6946  0408                     l2625:	
  6947                           
  6948                           ;Controller.c: 150: };Controller.c: 153: if (position < ryMin) {
  6949  0408  084B               	movf	lutInit@position+1,w
  6950  0409  3A80               	xorlw	128
  6951  040A  00B9               	movwf	??_lutInit
  6952  040B  3080               	movlw	128
  6953  040C  0239               	subwf	??_lutInit,w
  6954  040D  1D03               	skipz
  6955  040E  2C11               	goto	u2205
  6956  040F  0848               	movf	lutInit@ryMin,w
  6957  0410  024A               	subwf	lutInit@position,w
  6958  0411                     u2205:	
  6959  0411  1803               	skipnc
  6960  0412  2C14               	goto	u2201
  6961  0413  2C15               	goto	u2200
  6962  0414                     u2201:	
  6963  0414  2C22               	goto	l2629
  6964  0415                     u2200:	
  6965  0415                     l2627:	
  6966                           
  6967                           ;Controller.c: 154: lutRY[position] = 0;
  6968  0415  30F0               	movlw	240
  6969  0416  0020               	movlb	0	; select bank0
  6970  0417  00B9               	movwf	??_lutInit
  6971  0418  3023               	movlw	35
  6972  0419  00BA               	movwf	??_lutInit+1
  6973  041A  084A               	movf	lutInit@position,w
  6974  041B  0739               	addwf	??_lutInit,w
  6975  041C  0086               	movwf	6
  6976  041D  084B               	movf	lutInit@position+1,w
  6977  041E  3D3A               	addwfc	??_lutInit+1,w
  6978  041F  0087               	movwf	7
  6979  0420  0181               	clrf	1
  6980                           
  6981                           ;Controller.c: 155: } else if (position > ryMax) {
  6982  0421  2C6F               	goto	l2635
  6983  0422                     l2629:	
  6984  0422  0020               	movlb	0	; select bank0
  6985  0423  084B               	movf	lutInit@position+1,w
  6986  0424  3A80               	xorlw	128
  6987  0425  3C80               	sublw	128
  6988  0426  1D03               	skipz
  6989  0427  2C2A               	goto	u2215
  6990  0428  084A               	movf	lutInit@position,w
  6991  0429  0249               	subwf	lutInit@ryMax,w
  6992  042A                     u2215:	
  6993  042A  1803               	skipnc
  6994  042B  2C2D               	goto	u2211
  6995  042C  2C2E               	goto	u2210
  6996  042D                     u2211:	
  6997  042D  2C40               	goto	l2633
  6998  042E                     u2210:	
  6999  042E                     l2631:	
  7000                           
  7001                           ;Controller.c: 156: lutRY[position] = 255;
  7002  042E  30F0               	movlw	240
  7003  042F  0020               	movlb	0	; select bank0
  7004  0430  00B9               	movwf	??_lutInit
  7005  0431  3023               	movlw	35
  7006  0432  00BA               	movwf	??_lutInit+1
  7007  0433  084A               	movf	lutInit@position,w
  7008  0434  0739               	addwf	??_lutInit,w
  7009  0435  00BB               	movwf	??_lutInit+2
  7010  0436  084B               	movf	lutInit@position+1,w
  7011  0437  3D3A               	addwfc	??_lutInit+1,w
  7012  0438  00BC               	movwf	??_lutInit+3
  7013  0439  083B               	movf	??_lutInit+2,w
  7014  043A  0086               	movwf	6
  7015  043B  083C               	movf	??_lutInit+3,w
  7016  043C  0087               	movwf	7
  7017  043D  30FF               	movlw	255
  7018  043E  0081               	movwf	1
  7019                           
  7020                           ;Controller.c: 158: } else {
  7021  043F  2C6F               	goto	l2635
  7022  0440                     l2633:	
  7023                           
  7024                           ;Controller.c: 159: lutRY[position] = Map(position, ryMin, ryMax, 0, 255);
  7025  0440  0020               	movlb	0	; select bank0
  7026  0441  084B               	movf	lutInit@position+1,w
  7027  0442  00B0               	movwf	Map@x+1
  7028  0443  084A               	movf	lutInit@position,w
  7029  0444  00AF               	movwf	Map@x
  7030  0445  0848               	movf	lutInit@ryMin,w
  7031  0446  00B9               	movwf	??_lutInit
  7032  0447  01BA               	clrf	??_lutInit+1
  7033  0448  0839               	movf	??_lutInit,w
  7034  0449  00B1               	movwf	Map@inMin
  7035  044A  083A               	movf	??_lutInit+1,w
  7036  044B  00B2               	movwf	Map@inMin+1
  7037  044C  0849               	movf	lutInit@ryMax,w
  7038  044D  00BB               	movwf	??_lutInit+2
  7039  044E  01BC               	clrf	??_lutInit+3
  7040  044F  083B               	movf	??_lutInit+2,w
  7041  0450  00B3               	movwf	Map@inMax
  7042  0451  083C               	movf	??_lutInit+3,w
  7043  0452  00B4               	movwf	Map@inMax+1
  7044  0453  3000               	movlw	0
  7045  0454  00B5               	movwf	Map@outMin
  7046  0455  00B6               	movwf	Map@outMin+1
  7047  0456  30FF               	movlw	255
  7048  0457  00B7               	movwf	Map@outMax
  7049  0458  3000               	movlw	0
  7050  0459  00B8               	movwf	Map@outMax+1
  7051  045A  318D  25CB  3182   	fcall	_Map
  7052  045D  0020               	movlb	0	; select bank0
  7053  045E  00BD               	movwf	??_lutInit+4
  7054  045F  30F0               	movlw	240
  7055  0460  00BE               	movwf	??_lutInit+5
  7056  0461  3023               	movlw	35
  7057  0462  00BF               	movwf	??_lutInit+6
  7058  0463  084A               	movf	lutInit@position,w
  7059  0464  073E               	addwf	??_lutInit+5,w
  7060  0465  00C0               	movwf	??_lutInit+7
  7061  0466  084B               	movf	lutInit@position+1,w
  7062  0467  3D3F               	addwfc	??_lutInit+6,w
  7063  0468  00C1               	movwf	??_lutInit+8
  7064  0469  0840               	movf	??_lutInit+7,w
  7065  046A  0086               	movwf	6
  7066  046B  0841               	movf	??_lutInit+8,w
  7067  046C  0087               	movwf	7
  7068  046D  083D               	movf	??_lutInit+4,w
  7069  046E  0081               	movwf	1
  7070  046F                     l2635:	
  7071  046F  3001               	movlw	1
  7072  0470  07CA               	addwf	lutInit@position,f
  7073  0471  3000               	movlw	0
  7074  0472  3DCB               	addwfc	lutInit@position+1,f
  7075  0473                     l2637:	
  7076  0473  084B               	movf	lutInit@position+1,w
  7077  0474  3A80               	xorlw	128
  7078  0475  00B9               	movwf	??_lutInit
  7079  0476  3081               	movlw	129
  7080  0477  0239               	subwf	??_lutInit,w
  7081  0478  1D03               	skipz
  7082  0479  2C7C               	goto	u2225
  7083  047A  3000               	movlw	0
  7084  047B  024A               	subwf	lutInit@position,w
  7085  047C                     u2225:	
  7086  047C  1C03               	skipc
  7087  047D  2C7F               	goto	u2221
  7088  047E  2C80               	goto	u2220
  7089  047F                     u2221:	
  7090  047F  2AD2               	goto	l2595
  7091  0480                     u2220:	
  7092  0480                     l336:	
  7093  0480  0008               	return
  7094  0481                     __end_of_lutInit:	
  7095                           
  7096                           	psect	text9
  7097  0D5D                     __ptext9:	
  7098 ;; *************** function _eepromRead *****************
  7099 ;; Defined at:
  7100 ;;		line 31 in file "Nvm.c"
  7101 ;; Parameters:    Size  Location     Type
  7102 ;;  address         1    wreg     unsigned char 
  7103 ;; Auto vars:     Size  Location     Type
  7104 ;;  address         1    1[BANK0 ] unsigned char 
  7105 ;;  data            1    2[BANK0 ] unsigned char 
  7106 ;; Return value:  Size  Location     Type
  7107 ;;                  1    wreg      unsigned char 
  7108 ;; Registers used:
  7109 ;;		wreg
  7110 ;; Tracked objects:
  7111 ;;		On entry : 0/0
  7112 ;;		On exit  : 0/0
  7113 ;;		Unchanged: 0/0
  7114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7116 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7117 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7118 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7119 ;;Total ram usage:        3 bytes
  7120 ;; Hardware stack levels used:    1
  7121 ;; Hardware stack levels required when called:    3
  7122 ;; This function calls:
  7123 ;;		Nothing
  7124 ;; This function is called by:
  7125 ;;		_lutInit
  7126 ;; This function uses a non-reentrant model
  7127 ;;
  7128                           
  7129                           
  7130                           ;psect for function _eepromRead
  7131  0D5D                     _eepromRead:	
  7132                           
  7133                           ;incstack = 0
  7134                           ; Regs used in _eepromRead: [wreg]
  7135                           ;eepromRead@address stored from wreg
  7136  0D5D  0020               	movlb	0	; select bank0
  7137  0D5E  00A1               	movwf	eepromRead@address
  7138  0D5F                     l2569:	
  7139                           
  7140                           ;Nvm.c: 33: char data;;Nvm.c: 35: NVMCON1bits.NVMREGS = 1;
  7141  0D5F  0030               	movlb	16	; select bank16
  7142  0D60  171E               	bsf	30,6	;volsfr
  7143  0D61                     l2571:	
  7144                           
  7145                           ;Nvm.c: 36: NVMADRH = 0xF0;
  7146  0D61  30F0               	movlw	240
  7147  0D62  009B               	movwf	27	;volatile
  7148                           
  7149                           ;Nvm.c: 37: NVMADRL = address;
  7150  0D63  0020               	movlb	0	; select bank0
  7151  0D64  0821               	movf	eepromRead@address,w
  7152  0D65  0030               	movlb	16	; select bank16
  7153  0D66  009A               	movwf	26	;volatile
  7154  0D67                     l2573:	
  7155                           
  7156                           ;Nvm.c: 38: NVMCON1bits.RD = 1;
  7157  0D67  141E               	bsf	30,0	;volsfr
  7158                           
  7159                           ;Nvm.c: 40: data = NVMDATL;
  7160  0D68  081C               	movf	28,w	;volatile
  7161  0D69  0020               	movlb	0	; select bank0
  7162  0D6A  00A0               	movwf	??_eepromRead
  7163  0D6B  0820               	movf	??_eepromRead,w
  7164  0D6C  00A2               	movwf	eepromRead@data
  7165                           
  7166                           ;Nvm.c: 42: return data;
  7167  0D6D  0822               	movf	eepromRead@data,w
  7168  0D6E                     l447:	
  7169  0D6E  0008               	return
  7170  0D6F                     __end_of_eepromRead:	
  7171                           
  7172                           	psect	text10
  7173  0DCB                     __ptext10:	
  7174 ;; *************** function _Map *****************
  7175 ;; Defined at:
  7176 ;;		line 102 in file "Controller.c"
  7177 ;; Parameters:    Size  Location     Type
  7178 ;;  x               2   15[BANK0 ] int 
  7179 ;;  inMin           2   17[BANK0 ] int 
  7180 ;;  inMax           2   19[BANK0 ] int 
  7181 ;;  outMin          2   21[BANK0 ] int 
  7182 ;;  outMax          2   23[BANK0 ] int 
  7183 ;; Auto vars:     Size  Location     Type
  7184 ;;		None
  7185 ;; Return value:  Size  Location     Type
  7186 ;;                  1    wreg      unsigned char 
  7187 ;; Registers used:
  7188 ;;		wreg, status,2, status,0, pclath, cstack
  7189 ;; Tracked objects:
  7190 ;;		On entry : 0/0
  7191 ;;		On exit  : 0/0
  7192 ;;		Unchanged: 0/0
  7193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7194 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7197 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7198 ;;Total ram usage:       10 bytes
  7199 ;; Hardware stack levels used:    1
  7200 ;; Hardware stack levels required when called:    4
  7201 ;; This function calls:
  7202 ;;		___awdiv
  7203 ;;		___wmul
  7204 ;; This function is called by:
  7205 ;;		_lutInit
  7206 ;; This function uses a non-reentrant model
  7207 ;;
  7208                           
  7209                           
  7210                           ;psect for function _Map
  7211  0DCB                     _Map:	
  7212  0DCB                     l2565:	
  7213                           ;incstack = 0
  7214                           ; Regs used in _Map: [wreg+status,2+status,0+pclath+cstack]
  7215                           
  7216                           
  7217                           ;Controller.c: 104: return (((x - inMin) * (outMax - outMin)) / (inMax - inMin)) + outMi
      +                          n;
  7218  0DCB  0020               	movlb	0	; select bank0
  7219  0DCC  0831               	movf	Map@inMin,w
  7220  0DCD  0233               	subwf	Map@inMax,w
  7221  0DCE  00A6               	movwf	___awdiv@divisor
  7222  0DCF  0832               	movf	Map@inMin+1,w
  7223  0DD0  3B34               	subwfb	Map@inMax+1,w
  7224  0DD1  00A7               	movwf	___awdiv@divisor+1
  7225  0DD2  0831               	movf	Map@inMin,w
  7226  0DD3  022F               	subwf	Map@x,w
  7227  0DD4  00A0               	movwf	___wmul@multiplier
  7228  0DD5  0832               	movf	Map@inMin+1,w
  7229  0DD6  3B30               	subwfb	Map@x+1,w
  7230  0DD7  00A1               	movwf	___wmul@multiplier+1
  7231  0DD8  0835               	movf	Map@outMin,w
  7232  0DD9  0237               	subwf	Map@outMax,w
  7233  0DDA  00A2               	movwf	___wmul@multiplicand
  7234  0DDB  0836               	movf	Map@outMin+1,w
  7235  0DDC  3B38               	subwfb	Map@outMax+1,w
  7236  0DDD  00A3               	movwf	___wmul@multiplicand+1
  7237  0DDE  318D  25AB  318D   	fcall	___wmul
  7238  0DE1  0020               	movlb	0	; select bank0
  7239  0DE2  0821               	movf	?___wmul+1,w
  7240  0DE3  00A9               	movwf	___awdiv@dividend+1
  7241  0DE4  0820               	movf	?___wmul,w
  7242  0DE5  00A8               	movwf	___awdiv@dividend
  7243  0DE6  318E  26D2  318D   	fcall	___awdiv
  7244  0DE9  0020               	movlb	0	; select bank0
  7245  0DEA  0826               	movf	?___awdiv,w
  7246  0DEB  0735               	addwf	Map@outMin,w
  7247  0DEC                     l315:	
  7248  0DEC  0008               	return
  7249  0DED                     __end_of_Map:	
  7250                           
  7251                           	psect	text11
  7252  0DAB                     __ptext11:	
  7253 ;; *************** function ___wmul *****************
  7254 ;; Defined at:
  7255 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  7256 ;; Parameters:    Size  Location     Type
  7257 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7258 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7259 ;; Auto vars:     Size  Location     Type
  7260 ;;  product         2    4[BANK0 ] unsigned int 
  7261 ;; Return value:  Size  Location     Type
  7262 ;;                  2    0[BANK0 ] unsigned int 
  7263 ;; Registers used:
  7264 ;;		wreg, status,2, status,0
  7265 ;; Tracked objects:
  7266 ;;		On entry : 0/0
  7267 ;;		On exit  : 0/0
  7268 ;;		Unchanged: 0/0
  7269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7270 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7271 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7273 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7274 ;;Total ram usage:        6 bytes
  7275 ;; Hardware stack levels used:    1
  7276 ;; Hardware stack levels required when called:    3
  7277 ;; This function calls:
  7278 ;;		Nothing
  7279 ;; This function is called by:
  7280 ;;		_Map
  7281 ;; This function uses a non-reentrant model
  7282 ;;
  7283                           
  7284                           
  7285                           ;psect for function ___wmul
  7286  0DAB                     ___wmul:	
  7287  0DAB                     l2507:	
  7288                           ;incstack = 0
  7289                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7290                           
  7291  0DAB  0020               	movlb	0	; select bank0
  7292  0DAC  01A4               	clrf	___wmul@product
  7293  0DAD  01A5               	clrf	___wmul@product+1
  7294  0DAE                     l2509:	
  7295  0DAE  1C20               	btfss	___wmul@multiplier,0
  7296  0DAF  2DB1               	goto	u1951
  7297  0DB0  2DB2               	goto	u1950
  7298  0DB1                     u1951:	
  7299  0DB1  2DB6               	goto	l645
  7300  0DB2                     u1950:	
  7301  0DB2                     l2511:	
  7302  0DB2  0822               	movf	___wmul@multiplicand,w
  7303  0DB3  07A4               	addwf	___wmul@product,f
  7304  0DB4  0823               	movf	___wmul@multiplicand+1,w
  7305  0DB5  3DA5               	addwfc	___wmul@product+1,f
  7306  0DB6                     l645:	
  7307  0DB6  3001               	movlw	1
  7308  0DB7                     u1965:	
  7309  0DB7  35A2               	lslf	___wmul@multiplicand,f
  7310  0DB8  0DA3               	rlf	___wmul@multiplicand+1,f
  7311  0DB9  0B89               	decfsz	9,f
  7312  0DBA  2DB7               	goto	u1965
  7313  0DBB                     l2513:	
  7314  0DBB  3001               	movlw	1
  7315  0DBC                     u1975:	
  7316  0DBC  36A1               	lsrf	___wmul@multiplier+1,f
  7317  0DBD  0CA0               	rrf	___wmul@multiplier,f
  7318  0DBE  0B89               	decfsz	9,f
  7319  0DBF  2DBC               	goto	u1975
  7320  0DC0                     l2515:	
  7321  0DC0  0820               	movf	___wmul@multiplier,w
  7322  0DC1  0421               	iorwf	___wmul@multiplier+1,w
  7323  0DC2  1D03               	btfss	3,2
  7324  0DC3  2DC5               	goto	u1981
  7325  0DC4  2DC6               	goto	u1980
  7326  0DC5                     u1981:	
  7327  0DC5  2DAE               	goto	l2509
  7328  0DC6                     u1980:	
  7329  0DC6                     l2517:	
  7330  0DC6  0825               	movf	___wmul@product+1,w
  7331  0DC7  00A1               	movwf	?___wmul+1
  7332  0DC8  0824               	movf	___wmul@product,w
  7333  0DC9  00A0               	movwf	?___wmul
  7334  0DCA                     l647:	
  7335  0DCA  0008               	return
  7336  0DCB                     __end_of___wmul:	
  7337                           
  7338                           	psect	text12
  7339  0ED2                     __ptext12:	
  7340 ;; *************** function ___awdiv *****************
  7341 ;; Defined at:
  7342 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  7343 ;; Parameters:    Size  Location     Type
  7344 ;;  divisor         2    6[BANK0 ] int 
  7345 ;;  dividend        2    8[BANK0 ] int 
  7346 ;; Auto vars:     Size  Location     Type
  7347 ;;  quotient        2   13[BANK0 ] int 
  7348 ;;  sign            1   12[BANK0 ] unsigned char 
  7349 ;;  counter         1   11[BANK0 ] unsigned char 
  7350 ;; Return value:  Size  Location     Type
  7351 ;;                  2    6[BANK0 ] int 
  7352 ;; Registers used:
  7353 ;;		wreg, status,2, status,0
  7354 ;; Tracked objects:
  7355 ;;		On entry : 0/0
  7356 ;;		On exit  : 0/0
  7357 ;;		Unchanged: 0/0
  7358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7359 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7360 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7361 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7362 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7363 ;;Total ram usage:        9 bytes
  7364 ;; Hardware stack levels used:    1
  7365 ;; Hardware stack levels required when called:    3
  7366 ;; This function calls:
  7367 ;;		Nothing
  7368 ;; This function is called by:
  7369 ;;		_Map
  7370 ;; This function uses a non-reentrant model
  7371 ;;
  7372                           
  7373                           
  7374                           ;psect for function ___awdiv
  7375  0ED2                     ___awdiv:	
  7376  0ED2                     l2521:	
  7377                           ;incstack = 0
  7378                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7379                           
  7380  0ED2  0020               	movlb	0	; select bank0
  7381  0ED3  01AC               	clrf	___awdiv@sign
  7382  0ED4                     l2523:	
  7383  0ED4  1FA7               	btfss	___awdiv@divisor+1,7
  7384  0ED5  2ED7               	goto	u1991
  7385  0ED6  2ED8               	goto	u1990
  7386  0ED7                     u1991:	
  7387  0ED7  2EDF               	goto	l2529
  7388  0ED8                     u1990:	
  7389  0ED8                     l2525:	
  7390  0ED8  09A6               	comf	___awdiv@divisor,f
  7391  0ED9  09A7               	comf	___awdiv@divisor+1,f
  7392  0EDA  0AA6               	incf	___awdiv@divisor,f
  7393  0EDB  1903               	skipnz
  7394  0EDC  0AA7               	incf	___awdiv@divisor+1,f
  7395  0EDD                     l2527:	
  7396  0EDD  01AC               	clrf	___awdiv@sign
  7397  0EDE  0AAC               	incf	___awdiv@sign,f
  7398  0EDF                     l2529:	
  7399  0EDF  1FA9               	btfss	___awdiv@dividend+1,7
  7400  0EE0  2EE2               	goto	u2001
  7401  0EE1  2EE3               	goto	u2000
  7402  0EE2                     u2001:	
  7403  0EE2  2EEC               	goto	l2535
  7404  0EE3                     u2000:	
  7405  0EE3                     l2531:	
  7406  0EE3  09A8               	comf	___awdiv@dividend,f
  7407  0EE4  09A9               	comf	___awdiv@dividend+1,f
  7408  0EE5  0AA8               	incf	___awdiv@dividend,f
  7409  0EE6  1903               	skipnz
  7410  0EE7  0AA9               	incf	___awdiv@dividend+1,f
  7411  0EE8                     l2533:	
  7412  0EE8  3001               	movlw	1
  7413  0EE9  00AA               	movwf	??___awdiv
  7414  0EEA  082A               	movf	??___awdiv,w
  7415  0EEB  06AC               	xorwf	___awdiv@sign,f
  7416  0EEC                     l2535:	
  7417  0EEC  01AD               	clrf	___awdiv@quotient
  7418  0EED  01AE               	clrf	___awdiv@quotient+1
  7419  0EEE                     l2537:	
  7420  0EEE  0826               	movf	___awdiv@divisor,w
  7421  0EEF  0427               	iorwf	___awdiv@divisor+1,w
  7422  0EF0  1903               	btfsc	3,2
  7423  0EF1  2EF3               	goto	u2011
  7424  0EF2  2EF4               	goto	u2010
  7425  0EF3                     u2011:	
  7426  0EF3  2F23               	goto	l2557
  7427  0EF4                     u2010:	
  7428  0EF4                     l2539:	
  7429  0EF4  01AB               	clrf	___awdiv@counter
  7430  0EF5  0AAB               	incf	___awdiv@counter,f
  7431  0EF6  2F00               	goto	l2545
  7432  0EF7                     l2541:	
  7433  0EF7  3001               	movlw	1
  7434  0EF8                     u2025:	
  7435  0EF8  35A6               	lslf	___awdiv@divisor,f
  7436  0EF9  0DA7               	rlf	___awdiv@divisor+1,f
  7437  0EFA  0B89               	decfsz	9,f
  7438  0EFB  2EF8               	goto	u2025
  7439  0EFC                     l2543:	
  7440  0EFC  3001               	movlw	1
  7441  0EFD  00AA               	movwf	??___awdiv
  7442  0EFE  082A               	movf	??___awdiv,w
  7443  0EFF  07AB               	addwf	___awdiv@counter,f
  7444  0F00                     l2545:	
  7445  0F00  1FA7               	btfss	___awdiv@divisor+1,7
  7446  0F01  2F03               	goto	u2031
  7447  0F02  2F04               	goto	u2030
  7448  0F03                     u2031:	
  7449  0F03  2EF7               	goto	l2541
  7450  0F04                     u2030:	
  7451  0F04                     l2547:	
  7452  0F04  3001               	movlw	1
  7453  0F05                     u2045:	
  7454  0F05  35AD               	lslf	___awdiv@quotient,f
  7455  0F06  0DAE               	rlf	___awdiv@quotient+1,f
  7456  0F07  0B89               	decfsz	9,f
  7457  0F08  2F05               	goto	u2045
  7458  0F09  0827               	movf	___awdiv@divisor+1,w
  7459  0F0A  0229               	subwf	___awdiv@dividend+1,w
  7460  0F0B  1D03               	skipz
  7461  0F0C  2F0F               	goto	u2055
  7462  0F0D  0826               	movf	___awdiv@divisor,w
  7463  0F0E  0228               	subwf	___awdiv@dividend,w
  7464  0F0F                     u2055:	
  7465  0F0F  1C03               	skipc
  7466  0F10  2F12               	goto	u2051
  7467  0F11  2F13               	goto	u2050
  7468  0F12                     u2051:	
  7469  0F12  2F18               	goto	l2553
  7470  0F13                     u2050:	
  7471  0F13                     l2549:	
  7472  0F13  0826               	movf	___awdiv@divisor,w
  7473  0F14  02A8               	subwf	___awdiv@dividend,f
  7474  0F15  0827               	movf	___awdiv@divisor+1,w
  7475  0F16  3BA9               	subwfb	___awdiv@dividend+1,f
  7476  0F17                     l2551:	
  7477  0F17  142D               	bsf	___awdiv@quotient,0
  7478  0F18                     l2553:	
  7479  0F18  3001               	movlw	1
  7480  0F19                     u2065:	
  7481  0F19  36A7               	lsrf	___awdiv@divisor+1,f
  7482  0F1A  0CA6               	rrf	___awdiv@divisor,f
  7483  0F1B  0B89               	decfsz	9,f
  7484  0F1C  2F19               	goto	u2065
  7485  0F1D                     l2555:	
  7486  0F1D  3001               	movlw	1
  7487  0F1E  02AB               	subwf	___awdiv@counter,f
  7488  0F1F  1D03               	btfss	3,2
  7489  0F20  2F22               	goto	u2071
  7490  0F21  2F23               	goto	u2070
  7491  0F22                     u2071:	
  7492  0F22  2F04               	goto	l2547
  7493  0F23                     u2070:	
  7494  0F23                     l2557:	
  7495  0F23  082C               	movf	___awdiv@sign,w
  7496  0F24  1903               	btfsc	3,2
  7497  0F25  2F27               	goto	u2081
  7498  0F26  2F28               	goto	u2080
  7499  0F27                     u2081:	
  7500  0F27  2F2D               	goto	l2561
  7501  0F28                     u2080:	
  7502  0F28                     l2559:	
  7503  0F28  09AD               	comf	___awdiv@quotient,f
  7504  0F29  09AE               	comf	___awdiv@quotient+1,f
  7505  0F2A  0AAD               	incf	___awdiv@quotient,f
  7506  0F2B  1903               	skipnz
  7507  0F2C  0AAE               	incf	___awdiv@quotient+1,f
  7508  0F2D                     l2561:	
  7509  0F2D  082E               	movf	___awdiv@quotient+1,w
  7510  0F2E  00A7               	movwf	?___awdiv+1
  7511  0F2F  082D               	movf	___awdiv@quotient,w
  7512  0F30  00A6               	movwf	?___awdiv
  7513  0F31                     l798:	
  7514  0F31  0008               	return
  7515  0F32                     __end_of___awdiv:	
  7516                           
  7517                           	psect	text13
  7518  0DED                     __ptext13:	
  7519 ;; *************** function _eepromWrite *****************
  7520 ;; Defined at:
  7521 ;;		line 8 in file "Nvm.c"
  7522 ;; Parameters:    Size  Location     Type
  7523 ;;  address         1    wreg     unsigned char 
  7524 ;;  data            1    0[BANK0 ] unsigned char 
  7525 ;; Auto vars:     Size  Location     Type
  7526 ;;  address         1    1[BANK0 ] unsigned char 
  7527 ;;  interruptSta    1    2[BANK0 ] unsigned char 
  7528 ;; Return value:  Size  Location     Type
  7529 ;;                  1    wreg      void 
  7530 ;; Registers used:
  7531 ;;		wreg, status,2, status,0, pclath, cstack
  7532 ;; Tracked objects:
  7533 ;;		On entry : 0/0
  7534 ;;		On exit  : 0/0
  7535 ;;		Unchanged: 0/0
  7536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7537 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7538 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7540 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7541 ;;Total ram usage:        3 bytes
  7542 ;; Hardware stack levels used:    1
  7543 ;; Hardware stack levels required when called:    4
  7544 ;; This function calls:
  7545 ;;		_nvmUnlock
  7546 ;; This function is called by:
  7547 ;;		_configureController
  7548 ;; This function uses a non-reentrant model
  7549 ;;
  7550                           
  7551                           
  7552                           ;psect for function _eepromWrite
  7553  0DED                     _eepromWrite:	
  7554                           
  7555                           ;incstack = 0
  7556                           ; Regs used in _eepromWrite: [wreg+status,2+status,0+pclath+cstack]
  7557                           ;eepromWrite@address stored from wreg
  7558  0DED  0020               	movlb	0	; select bank0
  7559  0DEE  00A1               	movwf	eepromWrite@address
  7560  0DEF                     l2735:	
  7561                           
  7562                           ;Nvm.c: 10: unsigned char interruptStatus = INTCONbits.GIE;
  7563  0DEF  3000               	movlw	0
  7564  0DF0  1B8B               	btfsc	11,7	;volatile
  7565  0DF1  3001               	movlw	1
  7566  0DF2  00A2               	movwf	eepromWrite@interruptStatus
  7567  0DF3                     l2737:	
  7568                           
  7569                           ;Nvm.c: 12: INTCONbits.GIE = 0;
  7570  0DF3  138B               	bcf	11,7	;volatile
  7571  0DF4                     l2739:	
  7572                           
  7573                           ;Nvm.c: 14: NVMCON1bits.NVMREGS = 1;
  7574  0DF4  0030               	movlb	16	; select bank16
  7575  0DF5  171E               	bsf	30,6	;volsfr
  7576  0DF6                     l2741:	
  7577                           
  7578                           ;Nvm.c: 15: NVMCON1bits.WREN = 1;
  7579  0DF6  151E               	bsf	30,2	;volsfr
  7580  0DF7                     l2743:	
  7581                           
  7582                           ;Nvm.c: 17: NVMADRH = 0xF0;
  7583  0DF7  30F0               	movlw	240
  7584  0DF8  009B               	movwf	27	;volatile
  7585  0DF9                     l2745:	
  7586                           
  7587                           ;Nvm.c: 18: NVMADRL = address;
  7588  0DF9  0020               	movlb	0	; select bank0
  7589  0DFA  0821               	movf	eepromWrite@address,w
  7590  0DFB  0030               	movlb	16	; select bank16
  7591  0DFC  009A               	movwf	26	;volatile
  7592  0DFD                     l2747:	
  7593                           
  7594                           ;Nvm.c: 20: NVMDATL = data;
  7595  0DFD  0020               	movlb	0	; select bank0
  7596  0DFE  0820               	movf	eepromWrite@data,w
  7597  0DFF  0030               	movlb	16	; select bank16
  7598  0E00  009C               	movwf	28	;volatile
  7599  0E01                     l2749:	
  7600                           
  7601                           ;Nvm.c: 22: nvmUnlock();
  7602  0E01  318D  252C  318D   	fcall	_nvmUnlock
  7603  0E04                     l440:	
  7604                           ;Nvm.c: 24: while (NVMCON1bits.WR);
  7605                           
  7606  0E04  0030               	movlb	16	; select bank16
  7607  0E05  189E               	btfsc	30,1	;volsfr
  7608  0E06  2E08               	goto	u2441
  7609  0E07  2E09               	goto	u2440
  7610  0E08                     u2441:	
  7611  0E08  2E04               	goto	l440
  7612  0E09                     u2440:	
  7613  0E09                     l442:	
  7614                           
  7615                           ;Nvm.c: 26: NVMCON1bits.WREN = 0;
  7616  0E09  111E               	bcf	30,2	;volsfr
  7617  0E0A                     l2751:	
  7618                           
  7619                           ;Nvm.c: 28: if (interruptStatus) INTCONbits.GIE = 1;
  7620  0E0A  0020               	movlb	0	; select bank0
  7621  0E0B  0822               	movf	eepromWrite@interruptStatus,w
  7622  0E0C  1903               	btfsc	3,2
  7623  0E0D  2E0F               	goto	u2451
  7624  0E0E  2E10               	goto	u2450
  7625  0E0F                     u2451:	
  7626  0E0F  2E11               	goto	l444
  7627  0E10                     u2450:	
  7628  0E10                     l2753:	
  7629  0E10  178B               	bsf	11,7	;volatile
  7630  0E11                     l444:	
  7631  0E11  0008               	return
  7632  0E12                     __end_of_eepromWrite:	
  7633                           
  7634                           	psect	text14
  7635  0D2C                     __ptext14:	
  7636 ;; *************** function _nvmUnlock *****************
  7637 ;; Defined at:
  7638 ;;		line 45 in file "Nvm.c"
  7639 ;; Parameters:    Size  Location     Type
  7640 ;;		None
  7641 ;; Auto vars:     Size  Location     Type
  7642 ;;		None
  7643 ;; Return value:  Size  Location     Type
  7644 ;;                  1    wreg      void 
  7645 ;; Registers used:
  7646 ;;		wreg
  7647 ;; Tracked objects:
  7648 ;;		On entry : 0/0
  7649 ;;		On exit  : 0/0
  7650 ;;		Unchanged: 0/0
  7651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7656 ;;Total ram usage:        0 bytes
  7657 ;; Hardware stack levels used:    1
  7658 ;; Hardware stack levels required when called:    3
  7659 ;; This function calls:
  7660 ;;		Nothing
  7661 ;; This function is called by:
  7662 ;;		_eepromWrite
  7663 ;; This function uses a non-reentrant model
  7664 ;;
  7665                           
  7666                           
  7667                           ;psect for function _nvmUnlock
  7668  0D2C                     _nvmUnlock:	
  7669  0D2C                     l2577:	
  7670                           ;incstack = 0
  7671                           ; Regs used in _nvmUnlock: [wreg]
  7672                           
  7673                           
  7674                           ;Nvm.c: 47: NVMCON2 = 0x55;
  7675  0D2C  3055               	movlw	85
  7676  0D2D  0030               	movlb	16	; select bank16
  7677  0D2E  009F               	movwf	31	;volsfr
  7678                           
  7679                           ;Nvm.c: 48: NVMCON2 = 0xAA;
  7680  0D2F  30AA               	movlw	170
  7681  0D30  009F               	movwf	31	;volsfr
  7682  0D31                     l2579:	
  7683                           
  7684                           ;Nvm.c: 49: NVMCON1bits.WR = 1;
  7685  0D31  149E               	bsf	30,1	;volsfr
  7686  0D32                     l450:	
  7687  0D32  0008               	return
  7688  0D33                     __end_of_nvmUnlock:	
  7689                           
  7690                           	psect	text15
  7691  0D3B                     __ptext15:	
  7692 ;; *************** function _adcInit *****************
  7693 ;; Defined at:
  7694 ;;		line 21 in file "PicConfig.c"
  7695 ;; Parameters:    Size  Location     Type
  7696 ;;		None
  7697 ;; Auto vars:     Size  Location     Type
  7698 ;;		None
  7699 ;; Return value:  Size  Location     Type
  7700 ;;                  1    wreg      void 
  7701 ;; Registers used:
  7702 ;;		wreg, status,2
  7703 ;; Tracked objects:
  7704 ;;		On entry : 0/0
  7705 ;;		On exit  : 0/0
  7706 ;;		Unchanged: 0/0
  7707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7712 ;;Total ram usage:        0 bytes
  7713 ;; Hardware stack levels used:    1
  7714 ;; Hardware stack levels required when called:    3
  7715 ;; This function calls:
  7716 ;;		Nothing
  7717 ;; This function is called by:
  7718 ;;		_main
  7719 ;; This function uses a non-reentrant model
  7720 ;;
  7721                           
  7722                           
  7723                           ;psect for function _adcInit
  7724  0D3B                     _adcInit:	
  7725  0D3B                     l2799:	
  7726                           ;incstack = 0
  7727                           ; Regs used in _adcInit: [wreg+status,2]
  7728                           
  7729                           
  7730                           ;PicConfig.c: 22: ADCON0 = 0x04;
  7731  0D3B  3004               	movlw	4
  7732  0D3C  0021               	movlb	1	; select bank1
  7733  0D3D  0093               	movwf	19	;volatile
  7734  0D3E                     l2801:	
  7735                           
  7736                           ;PicConfig.c: 23: ADCON1 = 0;
  7737  0D3E  0194               	clrf	20	;volatile
  7738  0D3F                     l2803:	
  7739                           
  7740                           ;PicConfig.c: 24: ADCON2 = 0;
  7741  0D3F  0195               	clrf	21	;volatile
  7742  0D40                     l2805:	
  7743                           
  7744                           ;PicConfig.c: 25: ADREF = 0;
  7745  0D40  019A               	clrf	26	;volatile
  7746  0D41                     l2807:	
  7747                           
  7748                           ;PicConfig.c: 26: ADCLK = 0x3F;
  7749  0D41  303F               	movlw	63
  7750  0D42  0098               	movwf	24	;volatile
  7751  0D43                     l2809:	
  7752                           
  7753                           ;PicConfig.c: 27: ADCON0bits.ADON = 1;
  7754  0D43  1793               	bsf	19,7	;volatile
  7755  0D44                     l395:	
  7756  0D44  0008               	return
  7757  0D45                     __end_of_adcInit:	
  7758                           
  7759                           	psect	text16
  7760  0E12                     __ptext16:	
  7761 ;; *************** function _IO_MAPPING *****************
  7762 ;; Defined at:
  7763 ;;		line 88 in file "MAPPING.c"
  7764 ;; Parameters:    Size  Location     Type
  7765 ;;		None
  7766 ;; Auto vars:     Size  Location     Type
  7767 ;;		None
  7768 ;; Return value:  Size  Location     Type
  7769 ;;                  1    wreg      void 
  7770 ;; Registers used:
  7771 ;;		wreg, status,2, status,0, pclath, cstack
  7772 ;; Tracked objects:
  7773 ;;		On entry : 0/0
  7774 ;;		On exit  : 0/0
  7775 ;;		Unchanged: 0/0
  7776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7781 ;;Total ram usage:        0 bytes
  7782 ;; Hardware stack levels used:    1
  7783 ;; Hardware stack levels required when called:    4
  7784 ;; This function calls:
  7785 ;;		_ppsLock
  7786 ;;		_ppsUnlock
  7787 ;; This function is called by:
  7788 ;;		_main
  7789 ;; This function uses a non-reentrant model
  7790 ;;
  7791                           
  7792                           
  7793                           ;psect for function _IO_MAPPING
  7794  0E12                     _IO_MAPPING:	
  7795  0E12                     l2777:	
  7796                           ;incstack = 0
  7797                           ; Regs used in _IO_MAPPING: [wreg+status,2+status,0+pclath+cstack]
  7798                           
  7799                           
  7800                           ;MAPPING.c: 90: TRISA = 0xFF;
  7801  0E12  30FF               	movlw	255
  7802  0E13  0020               	movlb	0	; select bank0
  7803  0E14  0091               	movwf	17	;volatile
  7804                           
  7805                           ;MAPPING.c: 91: TRISB = 0xFF;
  7806  0E15  30FF               	movlw	255
  7807  0E16  0092               	movwf	18	;volatile
  7808                           
  7809                           ;MAPPING.c: 92: TRISC = 0xFF;
  7810  0E17  30FF               	movlw	255
  7811  0E18  0093               	movwf	19	;volatile
  7812                           
  7813                           ;MAPPING.c: 93: TRISD = 0xEF;
  7814  0E19  30EF               	movlw	239
  7815  0E1A  0094               	movwf	20	;volatile
  7816                           
  7817                           ;MAPPING.c: 94: TRISE = 0xFF;
  7818  0E1B  30FF               	movlw	255
  7819  0E1C  0095               	movwf	21	;volatile
  7820  0E1D                     l2779:	
  7821                           
  7822                           ;MAPPING.c: 97: ANSELA = 0;
  7823  0E1D  003E               	movlb	30	; select bank30
  7824  0E1E  01B8               	clrf	56	;volatile
  7825  0E1F                     l2781:	
  7826                           
  7827                           ;MAPPING.c: 98: ANSELB = 0;
  7828  0E1F  01C3               	clrf	67	;volatile
  7829                           
  7830                           ;MAPPING.c: 99: ANSELC = 0xC3;
  7831  0E20  30C3               	movlw	195
  7832  0E21  00CE               	movwf	78	;volatile
  7833  0E22                     l2783:	
  7834                           
  7835                           ;MAPPING.c: 100: ANSELD = 0;
  7836  0E22  01D9               	clrf	89	;volatile
  7837  0E23                     l2785:	
  7838                           
  7839                           ;MAPPING.c: 101: ANSELE = 0;
  7840  0E23  01E4               	clrf	100	;volatile
  7841                           
  7842                           ;MAPPING.c: 104: WPUA = 0xCF;
  7843  0E24  30CF               	movlw	207
  7844  0E25  00B9               	movwf	57	;volatile
  7845                           
  7846                           ;MAPPING.c: 105: WPUB = 0xFF;
  7847  0E26  30FF               	movlw	255
  7848  0E27  00C4               	movwf	68	;volatile
  7849                           
  7850                           ;MAPPING.c: 106: WPUC = 0x04;
  7851  0E28  3004               	movlw	4
  7852  0E29  00CF               	movwf	79	;volatile
  7853                           
  7854                           ;MAPPING.c: 107: WPUD = 0x01;
  7855  0E2A  3001               	movlw	1
  7856  0E2B  00DA               	movwf	90	;volatile
  7857  0E2C                     l2787:	
  7858                           
  7859                           ;MAPPING.c: 108: WPUE = 0;
  7860  0E2C  01E5               	clrf	101	;volatile
  7861  0E2D                     l2789:	
  7862                           
  7863                           ;MAPPING.c: 110: TRISCbits.TRISC5 = 0;
  7864  0E2D  0020               	movlb	0	; select bank0
  7865  0E2E  1293               	bcf	19,5	;volatile
  7866  0E2F                     l2791:	
  7867                           
  7868                           ;MAPPING.c: 111: TRISAbits.TRISA4 = 0;
  7869  0E2F  1211               	bcf	17,4	;volatile
  7870  0E30                     l2793:	
  7871                           
  7872                           ;MAPPING.c: 112: ppsUnlock();
  7873  0E30  318D  2525  318E   	fcall	_ppsUnlock
  7874  0E33                     l2795:	
  7875                           
  7876                           ;MAPPING.c: 113: RC5PPS = 0x15;
  7877  0E33  3015               	movlw	21
  7878  0E34  003E               	movlb	30	; select bank30
  7879  0E35  00A5               	movwf	37	;volatile
  7880  0E36                     l2797:	
  7881                           
  7882                           ;MAPPING.c: 114: ppsLock();
  7883  0E36  318D  2533  318E   	fcall	_ppsLock
  7884  0E39                     l493:	
  7885  0E39  0008               	return
  7886  0E3A                     __end_of_IO_MAPPING:	
  7887                           
  7888                           	psect	text17
  7889  0D25                     __ptext17:	
  7890 ;; *************** function _ppsUnlock *****************
  7891 ;; Defined at:
  7892 ;;		line 9 in file "PicConfig.c"
  7893 ;; Parameters:    Size  Location     Type
  7894 ;;		None
  7895 ;; Auto vars:     Size  Location     Type
  7896 ;;		None
  7897 ;; Return value:  Size  Location     Type
  7898 ;;                  1    wreg      void 
  7899 ;; Registers used:
  7900 ;;		wreg, status,2
  7901 ;; Tracked objects:
  7902 ;;		On entry : 0/0
  7903 ;;		On exit  : 0/0
  7904 ;;		Unchanged: 0/0
  7905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7910 ;;Total ram usage:        0 bytes
  7911 ;; Hardware stack levels used:    1
  7912 ;; Hardware stack levels required when called:    3
  7913 ;; This function calls:
  7914 ;;		Nothing
  7915 ;; This function is called by:
  7916 ;;		_IO_MAPPING
  7917 ;; This function uses a non-reentrant model
  7918 ;;
  7919                           
  7920                           
  7921                           ;psect for function _ppsUnlock
  7922  0D25                     _ppsUnlock:	
  7923  0D25                     l2755:	
  7924                           ;incstack = 0
  7925                           ; Regs used in _ppsUnlock: [wreg+status,2]
  7926                           
  7927                           
  7928                           ;PicConfig.c: 10: PPSLOCK = 0x55;
  7929  0D25  3055               	movlw	85
  7930  0D26  003D               	movlb	29	; select bank29
  7931  0D27  008F               	movwf	15	;volsfr
  7932                           
  7933                           ;PicConfig.c: 11: PPSLOCK = 0xAA;
  7934  0D28  30AA               	movlw	170
  7935  0D29  008F               	movwf	15	;volsfr
  7936  0D2A                     l2757:	
  7937                           
  7938                           ;PicConfig.c: 12: PPSLOCK = 0;
  7939  0D2A  018F               	clrf	15	;volsfr
  7940  0D2B                     l389:	
  7941  0D2B  0008               	return
  7942  0D2C                     __end_of_ppsUnlock:	
  7943                           
  7944                           	psect	text18
  7945  0D33                     __ptext18:	
  7946 ;; *************** function _ppsLock *****************
  7947 ;; Defined at:
  7948 ;;		line 15 in file "PicConfig.c"
  7949 ;; Parameters:    Size  Location     Type
  7950 ;;		None
  7951 ;; Auto vars:     Size  Location     Type
  7952 ;;		None
  7953 ;; Return value:  Size  Location     Type
  7954 ;;                  1    wreg      void 
  7955 ;; Registers used:
  7956 ;;		wreg
  7957 ;; Tracked objects:
  7958 ;;		On entry : 0/0
  7959 ;;		On exit  : 0/0
  7960 ;;		Unchanged: 0/0
  7961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7966 ;;Total ram usage:        0 bytes
  7967 ;; Hardware stack levels used:    1
  7968 ;; Hardware stack levels required when called:    3
  7969 ;; This function calls:
  7970 ;;		Nothing
  7971 ;; This function is called by:
  7972 ;;		_IO_MAPPING
  7973 ;; This function uses a non-reentrant model
  7974 ;;
  7975                           
  7976                           
  7977                           ;psect for function _ppsLock
  7978  0D33                     _ppsLock:	
  7979  0D33                     l2759:	
  7980                           ;incstack = 0
  7981                           ; Regs used in _ppsLock: [wreg]
  7982                           
  7983                           
  7984                           ;PicConfig.c: 16: PPSLOCK = 0x55;
  7985  0D33  3055               	movlw	85
  7986  0D34  003D               	movlb	29	; select bank29
  7987  0D35  008F               	movwf	15	;volsfr
  7988                           
  7989                           ;PicConfig.c: 17: PPSLOCK = 0xAA;
  7990  0D36  30AA               	movlw	170
  7991  0D37  008F               	movwf	15	;volsfr
  7992                           
  7993                           ;PicConfig.c: 18: PPSLOCK = 1;
  7994  0D38  3001               	movlw	1
  7995  0D39  008F               	movwf	15	;volsfr
  7996  0D3A                     l392:	
  7997  0D3A  0008               	return
  7998  0D3B                     __end_of_ppsLock:	
  7999                           
  8000                           	psect	intentry
  8001  0004                     __pintentry:	
  8002 ;; *************** function _PS2Command *****************
  8003 ;; Defined at:
  8004 ;;		line 61 in file "main.c"
  8005 ;; Parameters:    Size  Location     Type
  8006 ;;		None
  8007 ;; Auto vars:     Size  Location     Type
  8008 ;;  cmd             1    5[COMMON] unsigned char 
  8009 ;; Return value:  Size  Location     Type
  8010 ;;                  1    wreg      void 
  8011 ;; Registers used:
  8012 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8013 ;; Tracked objects:
  8014 ;;		On entry : 0/0
  8015 ;;		On exit  : 0/0
  8016 ;;		Unchanged: 0/0
  8017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8019 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8020 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8021 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8022 ;;Total ram usage:        2 bytes
  8023 ;; Hardware stack levels used:    1
  8024 ;; Hardware stack levels required when called:    2
  8025 ;; This function calls:
  8026 ;;		_pollController
  8027 ;;		_spiRead
  8028 ;;		_spiWrite
  8029 ;;		i1_reversebyte
  8030 ;; This function is called by:
  8031 ;;		Interrupt level 1
  8032 ;; This function uses a non-reentrant model
  8033 ;;
  8034                           
  8035  0004                     _PS2Command:	
  8036                           
  8037                           ;incstack = 0
  8038  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  8039                           
  8040                           ; Regs used in _PS2Command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8041  0005  3180               	pagesel	$
  8042  0006                     i1l2239:	
  8043                           
  8044                           ;main.c: 63: if (SSP1IF) {
  8045  0006  002E               	movlb	14	; select bank14
  8046  0007  1C0F               	btfss	15,0	;volatile
  8047  0008  280A               	goto	u169_21
  8048  0009  280B               	goto	u169_20
  8049  000A                     u169_21:	
  8050  000A  2A3C               	goto	i1l181
  8051  000B                     u169_20:	
  8052  000B                     i1l2241:	
  8053                           
  8054                           ;main.c: 64: char cmd = spiRead();
  8055  000B  318D  251F  3180   	fcall	_spiRead
  8056  000E  00F4               	movwf	??_PS2Command
  8057  000F  0874               	movf	??_PS2Command,w
  8058  0010  00F5               	movwf	PS2Command@cmd
  8059                           
  8060                           ;main.c: 66: switch (cmdCounter) {
  8061  0011  29EB               	goto	i1l2437
  8062  0012                     i1l2243:	
  8063                           
  8064                           ;main.c: 70: INIT_PRESSURE_SENSOR_byte3 = cmd;
  8065  0012  0875               	movf	PS2Command@cmd,w
  8066  0013  00F4               	movwf	??_PS2Command
  8067  0014  0874               	movf	??_PS2Command,w
  8068  0015  0020               	movlb	0	; select bank0
  8069  0016  00EB               	movwf	_INIT_PRESSURE_SENSOR_byte3
  8070                           
  8071                           ;main.c: 71: break;
  8072  0017  29F6               	goto	i1l2439
  8073  0018                     i1l2245:	
  8074                           
  8075                           ;main.c: 73: if(MAP_SMALL_MOTOR == 0 && cmd == 0xFF) RD4 = 1;
  8076  0018  0020               	movlb	0	; select bank0
  8077  0019  085C               	movf	_MAP_SMALL_MOTOR,w
  8078  001A  1D03               	btfss	3,2
  8079  001B  281D               	goto	u170_21
  8080  001C  281E               	goto	u170_20
  8081  001D                     u170_21:	
  8082  001D  2826               	goto	i1l121
  8083  001E                     u170_20:	
  8084  001E                     i1l2247:	
  8085  001E  0A75               	incf	PS2Command@cmd,w
  8086  001F  1D03               	btfss	3,2
  8087  0020  2822               	goto	u171_21
  8088  0021  2823               	goto	u171_20
  8089  0022                     u171_21:	
  8090  0022  2826               	goto	i1l121
  8091  0023                     u171_20:	
  8092  0023                     i1l2249:	
  8093  0023  0020               	movlb	0	; select bank0
  8094  0024  160F               	bsf	15,4	;volatile
  8095  0025  29F6               	goto	i1l2439
  8096  0026                     i1l121:	
  8097                           
  8098                           ;main.c: 74: else RD4 = 0;
  8099  0026  0020               	movlb	0	; select bank0
  8100  0027  120F               	bcf	15,4	;volatile
  8101  0028  29F6               	goto	i1l2439
  8102  0029                     i1l2251:	
  8103                           
  8104                           ;main.c: 77: if (cmd == 0x80) escapeMode = 1;
  8105  0029  3080               	movlw	128
  8106  002A  0675               	xorwf	PS2Command@cmd,w
  8107  002B  1D03               	btfss	3,2
  8108  002C  282E               	goto	u172_21
  8109  002D  282F               	goto	u172_20
  8110  002E                     u172_21:	
  8111  002E  2832               	goto	i1l2255
  8112  002F                     u172_20:	
  8113  002F                     i1l2253:	
  8114  002F  01F7               	clrf	_escapeMode
  8115  0030  0AF7               	incf	_escapeMode,f
  8116  0031  29F6               	goto	i1l2439
  8117  0032                     i1l2255:	
  8118                           
  8119                           ;main.c: 78: else escapeMode = 0;
  8120  0032  01F7               	clrf	_escapeMode
  8121  0033  29F6               	goto	i1l2439
  8122  0034                     i1l2257:	
  8123                           
  8124                           ;main.c: 81: if (cmd == 0x80) analogMode = 1;
  8125  0034  3080               	movlw	128
  8126  0035  0675               	xorwf	PS2Command@cmd,w
  8127  0036  1D03               	btfss	3,2
  8128  0037  2839               	goto	u173_21
  8129  0038  283A               	goto	u173_20
  8130  0039                     u173_21:	
  8131  0039  283D               	goto	i1l2261
  8132  003A                     u173_20:	
  8133  003A                     i1l2259:	
  8134  003A  01F8               	clrf	_analogMode
  8135  003B  0AF8               	incf	_analogMode,f
  8136  003C  29F6               	goto	i1l2439
  8137  003D                     i1l2261:	
  8138                           
  8139                           ;main.c: 82: else analogMode = 0;
  8140  003D  01F8               	clrf	_analogMode
  8141  003E  29F6               	goto	i1l2439
  8142  003F                     i1l2263:	
  8143                           
  8144                           ;main.c: 85: if (cmd == 0x80) {
  8145  003F  3080               	movlw	128
  8146  0040  0675               	xorwf	PS2Command@cmd,w
  8147  0041  1D03               	btfss	3,2
  8148  0042  2844               	goto	u174_21
  8149  0043  2845               	goto	u174_20
  8150  0044                     u174_21:	
  8151  0044  2859               	goto	i1l2275
  8152  0045                     u174_20:	
  8153  0045                     i1l2265:	
  8154                           
  8155                           ;main.c: 86: response[2] = 0x00;
  8156  0045  0021               	movlb	1	; select bank1
  8157  0046  01DA               	clrf	(_response^(0+128)+2)
  8158                           
  8159                           ;main.c: 87: response[3] = 0x00;
  8160  0047  01DB               	clrf	(_response^(0+128)+3)
  8161  0048                     i1l2267:	
  8162                           
  8163                           ;main.c: 88: response[4] = 0x80;
  8164  0048  3080               	movlw	128
  8165  0049  00F4               	movwf	??_PS2Command
  8166  004A  0874               	movf	??_PS2Command,w
  8167  004B  00DC               	movwf	(_response^(0+128)+4)
  8168  004C                     i1l2269:	
  8169                           
  8170                           ;main.c: 89: response[5] = 0x80;
  8171  004C  3080               	movlw	128
  8172  004D  00F4               	movwf	??_PS2Command
  8173  004E  0874               	movf	??_PS2Command,w
  8174  004F  00DD               	movwf	(_response^(0+128)+5)
  8175  0050                     i1l2271:	
  8176                           
  8177                           ;main.c: 90: response[6] = 0x80;
  8178  0050  3080               	movlw	128
  8179  0051  00F4               	movwf	??_PS2Command
  8180  0052  0874               	movf	??_PS2Command,w
  8181  0053  00DE               	movwf	(_response^(0+128)+6)
  8182  0054                     i1l2273:	
  8183                           
  8184                           ;main.c: 91: response[7] = 0x28;
  8185  0054  3028               	movlw	40
  8186  0055  00F4               	movwf	??_PS2Command
  8187  0056  0874               	movf	??_PS2Command,w
  8188  0057  00DF               	movwf	(_response^(0+128)+7)
  8189                           
  8190                           ;main.c: 92: } else {
  8191  0058  29F6               	goto	i1l2439
  8192  0059                     i1l2275:	
  8193                           
  8194                           ;main.c: 93: response[2] = 0x00;
  8195  0059  0021               	movlb	1	; select bank1
  8196  005A  01DA               	clrf	(_response^(0+128)+2)
  8197                           
  8198                           ;main.c: 94: response[3] = 0x00;
  8199  005B  01DB               	clrf	(_response^(0+128)+3)
  8200  005C                     i1l2277:	
  8201                           
  8202                           ;main.c: 95: response[4] = 0x80;
  8203  005C  3080               	movlw	128
  8204  005D  00F4               	movwf	??_PS2Command
  8205  005E  0874               	movf	??_PS2Command,w
  8206  005F  00DC               	movwf	(_response^(0+128)+4)
  8207  0060                     i1l2279:	
  8208                           
  8209                           ;main.c: 96: response[5] = 0x40;
  8210  0060  3040               	movlw	64
  8211  0061  00F4               	movwf	??_PS2Command
  8212  0062  0874               	movf	??_PS2Command,w
  8213  0063  00DD               	movwf	(_response^(0+128)+5)
  8214                           
  8215                           ;main.c: 97: response[6] = 0x00;
  8216  0064  01DE               	clrf	(_response^(0+128)+6)
  8217  0065                     i1l2281:	
  8218                           
  8219                           ;main.c: 98: response[7] = 0x50;
  8220  0065  3050               	movlw	80
  8221  0066  00F4               	movwf	??_PS2Command
  8222  0067  0874               	movf	??_PS2Command,w
  8223  0068  00DF               	movwf	(_response^(0+128)+7)
  8224  0069  29F6               	goto	i1l2439
  8225  006A                     i1l2283:	
  8226                           
  8227                           ;main.c: 102: if (cmd == 0x80) {
  8228  006A  3080               	movlw	128
  8229  006B  0675               	xorwf	PS2Command@cmd,w
  8230  006C  1D03               	btfss	3,2
  8231  006D  286F               	goto	u175_21
  8232  006E  2870               	goto	u175_20
  8233  006F                     u175_21:	
  8234  006F  287B               	goto	i1l2293
  8235  0070                     u175_20:	
  8236  0070                     i1l2285:	
  8237                           
  8238                           ;main.c: 103: response[2] = 0x00;
  8239  0070  0021               	movlb	1	; select bank1
  8240  0071  01DA               	clrf	(_response^(0+128)+2)
  8241                           
  8242                           ;main.c: 104: response[3] = 0x00;
  8243  0072  01DB               	clrf	(_response^(0+128)+3)
  8244                           
  8245                           ;main.c: 105: response[4] = 0x00;
  8246  0073  01DC               	clrf	(_response^(0+128)+4)
  8247  0074                     i1l2287:	
  8248                           
  8249                           ;main.c: 106: response[5] = 0xE0;
  8250  0074  30E0               	movlw	224
  8251  0075  00F4               	movwf	??_PS2Command
  8252  0076  0874               	movf	??_PS2Command,w
  8253  0077  00DD               	movwf	(_response^(0+128)+5)
  8254  0078                     i1l2289:	
  8255                           
  8256                           ;main.c: 107: response[6] = 0x00;
  8257  0078  01DE               	clrf	(_response^(0+128)+6)
  8258  0079                     i1l2291:	
  8259                           
  8260                           ;main.c: 108: response[7] = 0x00;
  8261  0079  01DF               	clrf	(_response^(0+128)+7)
  8262                           
  8263                           ;main.c: 109: } else {
  8264  007A  29F6               	goto	i1l2439
  8265  007B                     i1l2293:	
  8266                           
  8267                           ;main.c: 110: response[2] = 0x00;
  8268  007B  0021               	movlb	1	; select bank1
  8269  007C  01DA               	clrf	(_response^(0+128)+2)
  8270                           
  8271                           ;main.c: 111: response[3] = 0x00;
  8272  007D  01DB               	clrf	(_response^(0+128)+3)
  8273                           
  8274                           ;main.c: 112: response[4] = 0x00;
  8275  007E  01DC               	clrf	(_response^(0+128)+4)
  8276  007F                     i1l2295:	
  8277                           
  8278                           ;main.c: 113: response[5] = 0x20;
  8279  007F  3020               	movlw	32
  8280  0080  00F4               	movwf	??_PS2Command
  8281  0081  0874               	movf	??_PS2Command,w
  8282  0082  00DD               	movwf	(_response^(0+128)+5)
  8283  0083  2878               	goto	i1l2289
  8284  0084                     i1l2301:	
  8285                           
  8286                           ;main.c: 120: CONTROL_RESPONSE_byte3 = cmd;
  8287  0084  0875               	movf	PS2Command@cmd,w
  8288  0085  00F4               	movwf	??_PS2Command
  8289  0086  0874               	movf	??_PS2Command,w
  8290  0087  0020               	movlb	0	; select bank0
  8291  0088  00E9               	movwf	_CONTROL_RESPONSE_byte3
  8292                           
  8293                           ;main.c: 121: break;
  8294  0089  29F6               	goto	i1l2439
  8295  008A                     i1l2303:	
  8296                           
  8297                           ;main.c: 123: MAP_SMALL_MOTOR = cmd;
  8298  008A  0875               	movf	PS2Command@cmd,w
  8299  008B  00F4               	movwf	??_PS2Command
  8300  008C  0874               	movf	??_PS2Command,w
  8301  008D  0020               	movlb	0	; select bank0
  8302  008E  00DC               	movwf	_MAP_SMALL_MOTOR
  8303                           
  8304                           ;main.c: 124: break;
  8305  008F  29F6               	goto	i1l2439
  8306  0090                     i1l2307:	
  8307  0090  0876               	movf	_previousCmd,w
  8308                           
  8309                           ; Switch size 1, requested type "simple"
  8310                           ; Number of cases is 8, Range of values is 2 to 242
  8311                           ; switch strategies available:
  8312                           ; Name         Instructions Cycles
  8313                           ; simple_byte           25    13 (average)
  8314                           ; jumptable            263     9 (fixed)
  8315                           ;	Chosen strategy is simple_byte
  8316  0091  3A02               	xorlw	2	; case 2
  8317  0092  1903               	skipnz
  8318  0093  2812               	goto	i1l2243
  8319  0094  3A20               	xorlw	32	; case 34
  8320  0095  1903               	skipnz
  8321  0096  2834               	goto	i1l2257
  8322  0097  3A10               	xorlw	16	; case 50
  8323  0098  1903               	skipnz
  8324  0099  286A               	goto	i1l2283
  8325  009A  3A70               	xorlw	112	; case 66
  8326  009B  1903               	skipnz
  8327  009C  2818               	goto	i1l2245
  8328  009D  3A20               	xorlw	32	; case 98
  8329  009E  1903               	skipnz
  8330  009F  283F               	goto	i1l2263
  8331  00A0  3AD0               	xorlw	208	; case 178
  8332  00A1  1903               	skipnz
  8333  00A2  288A               	goto	i1l2303
  8334  00A3  3A70               	xorlw	112	; case 194
  8335  00A4  1903               	skipnz
  8336  00A5  2829               	goto	i1l2251
  8337  00A6  3A30               	xorlw	48	; case 242
  8338  00A7  1903               	skipnz
  8339  00A8  2884               	goto	i1l2301
  8340  00A9  29F6               	goto	i1l2439
  8341  00AA                     i1l2309:	
  8342                           
  8343                           ;main.c: 130: INIT_PRESSURE_SENSOR_byte4 = cmd;
  8344  00AA  0875               	movf	PS2Command@cmd,w
  8345  00AB  00F4               	movwf	??_PS2Command
  8346  00AC  0874               	movf	??_PS2Command,w
  8347  00AD  0020               	movlb	0	; select bank0
  8348  00AE  00EA               	movwf	_INIT_PRESSURE_SENSOR_byte4
  8349                           
  8350                           ;main.c: 131: break;
  8351  00AF  29F6               	goto	i1l2439
  8352  00B0                     i1l2311:	
  8353                           
  8354                           ;main.c: 133: if(MAP_LARGE_MOTOR == 0x80 && reversebyte(cmd) >= 0x40) RD4 = 1;
  8355  00B0  3080               	movlw	128
  8356  00B1  0020               	movlb	0	; select bank0
  8357  00B2  065B               	xorwf	_MAP_LARGE_MOTOR,w
  8358  00B3  1D03               	btfss	3,2
  8359  00B4  28B6               	goto	u176_21
  8360  00B5  28B7               	goto	u176_20
  8361  00B6                     u176_21:	
  8362  00B6  2826               	goto	i1l121
  8363  00B7                     u176_20:	
  8364  00B7                     i1l2313:	
  8365  00B7  0875               	movf	PS2Command@cmd,w
  8366  00B8  318E  2665  3180   	fcall	i1_reversebyte
  8367  00BB  00F4               	movwf	??_PS2Command
  8368  00BC  3040               	movlw	64
  8369  00BD  0274               	subwf	??_PS2Command,w
  8370  00BE  1C03               	skipc
  8371  00BF  28C1               	goto	u177_21
  8372  00C0  28C2               	goto	u177_20
  8373  00C1                     u177_21:	
  8374  00C1  2826               	goto	i1l121
  8375  00C2                     u177_20:	
  8376  00C2  2823               	goto	i1l2249
  8377  00C3                     i1l2317:	
  8378                           
  8379                           ;main.c: 137: if(cmd == 0xC0) MODE_LOCK = 1;
  8380  00C3  30C0               	movlw	192
  8381  00C4  0675               	xorwf	PS2Command@cmd,w
  8382  00C5  1D03               	btfss	3,2
  8383  00C6  28C8               	goto	u178_21
  8384  00C7  28C9               	goto	u178_20
  8385  00C8                     u178_21:	
  8386  00C8  28CD               	goto	i1l2321
  8387  00C9                     u178_20:	
  8388  00C9                     i1l2319:	
  8389  00C9  0020               	movlb	0	; select bank0
  8390  00CA  01ED               	clrf	_MODE_LOCK
  8391  00CB  0AED               	incf	_MODE_LOCK,f
  8392  00CC  29F6               	goto	i1l2439
  8393  00CD                     i1l2321:	
  8394                           
  8395                           ;main.c: 138: else MODE_LOCK = 0;
  8396  00CD  0020               	movlb	0	; select bank0
  8397  00CE  01ED               	clrf	_MODE_LOCK
  8398  00CF  29F6               	goto	i1l2439
  8399  00D0                     i1l2323:	
  8400                           
  8401                           ;main.c: 142: CONTROL_RESPONSE_byte4 = cmd;
  8402  00D0  0875               	movf	PS2Command@cmd,w
  8403  00D1  00F4               	movwf	??_PS2Command
  8404  00D2  0874               	movf	??_PS2Command,w
  8405  00D3  0020               	movlb	0	; select bank0
  8406  00D4  00E8               	movwf	_CONTROL_RESPONSE_byte4
  8407                           
  8408                           ;main.c: 143: break;
  8409  00D5  29F6               	goto	i1l2439
  8410  00D6                     i1l2325:	
  8411                           
  8412                           ;main.c: 145: MAP_LARGE_MOTOR = cmd;
  8413  00D6  0875               	movf	PS2Command@cmd,w
  8414  00D7  00F4               	movwf	??_PS2Command
  8415  00D8  0874               	movf	??_PS2Command,w
  8416  00D9  0020               	movlb	0	; select bank0
  8417  00DA  00DB               	movwf	_MAP_LARGE_MOTOR
  8418                           
  8419                           ;main.c: 146: break;
  8420  00DB  29F6               	goto	i1l2439
  8421  00DC                     i1l2329:	
  8422  00DC  0876               	movf	_previousCmd,w
  8423                           
  8424                           ; Switch size 1, requested type "simple"
  8425                           ; Number of cases is 5, Range of values is 2 to 242
  8426                           ; switch strategies available:
  8427                           ; Name         Instructions Cycles
  8428                           ; simple_byte           16     9 (average)
  8429                           ; jumptable            263     9 (fixed)
  8430                           ;	Chosen strategy is simple_byte
  8431  00DD  3A02               	xorlw	2	; case 2
  8432  00DE  1903               	skipnz
  8433  00DF  28AA               	goto	i1l2309
  8434  00E0  3A20               	xorlw	32	; case 34
  8435  00E1  1903               	skipnz
  8436  00E2  28C3               	goto	i1l2317
  8437  00E3  3A60               	xorlw	96	; case 66
  8438  00E4  1903               	skipnz
  8439  00E5  28B0               	goto	i1l2311
  8440  00E6  3AF0               	xorlw	240	; case 178
  8441  00E7  1903               	skipnz
  8442  00E8  28D6               	goto	i1l2325
  8443  00E9  3A40               	xorlw	64	; case 242
  8444  00EA  1903               	skipnz
  8445  00EB  28D0               	goto	i1l2323
  8446  00EC  29F6               	goto	i1l2439
  8447  00ED                     i1l2331:	
  8448                           
  8449                           ;main.c: 153: CONTROL_RESPONSE_byte5 = cmd;
  8450  00ED  0875               	movf	PS2Command@cmd,w
  8451  00EE  00F4               	movwf	??_PS2Command
  8452  00EF  0874               	movf	??_PS2Command,w
  8453  00F0  0020               	movlb	0	; select bank0
  8454  00F1  00E7               	movwf	_CONTROL_RESPONSE_byte5
  8455                           
  8456                           ;main.c: 154: break;
  8457  00F2  29F6               	goto	i1l2439
  8458  00F3                     i1l2335:	
  8459  00F3  0876               	movf	_previousCmd,w
  8460                           
  8461                           ; Switch size 1, requested type "simple"
  8462                           ; Number of cases is 1, Range of values is 242 to 242
  8463                           ; switch strategies available:
  8464                           ; Name         Instructions Cycles
  8465                           ; simple_byte            4     3 (average)
  8466                           ; direct_byte           11     9 (fixed)
  8467                           ; jumptable            263     9 (fixed)
  8468                           ;	Chosen strategy is simple_byte
  8469  00F4  3AF2               	xorlw	242	; case 242
  8470  00F5  1903               	skipnz
  8471  00F6  28ED               	goto	i1l2331
  8472  00F7  29F6               	goto	i1l2439
  8473  00F8                     i1l2337:	
  8474                           
  8475                           ;main.c: 163: response[2] = 0x00;
  8476  00F8  0021               	movlb	1	; select bank1
  8477  00F9  01DA               	clrf	(_response^(0+128)+2)
  8478                           
  8479                           ;main.c: 164: response[3] = 0x00;
  8480  00FA  01DB               	clrf	(_response^(0+128)+3)
  8481  00FB                     i1l2339:	
  8482                           
  8483                           ;main.c: 165: response[4] = 0x40;
  8484  00FB  3040               	movlw	64
  8485  00FC  00F4               	movwf	??_PS2Command
  8486  00FD  0874               	movf	??_PS2Command,w
  8487  00FE  00DC               	movwf	(_response^(0+128)+4)
  8488  00FF                     i1l2341:	
  8489                           
  8490                           ;main.c: 166: response[5] = 0x00;
  8491  00FF  01DD               	clrf	(_response^(0+128)+5)
  8492  0100                     i1l2343:	
  8493                           
  8494                           ;main.c: 167: response[6] = 0x00;
  8495  0100  01DE               	clrf	(_response^(0+128)+6)
  8496  0101                     i1l2345:	
  8497                           
  8498                           ;main.c: 168: response[7] = 0x5A;
  8499  0101  305A               	movlw	90
  8500  0102  00F4               	movwf	??_PS2Command
  8501  0103  0874               	movf	??_PS2Command,w
  8502  0104  00DF               	movwf	(_response^(0+128)+7)
  8503  0105                     i1l2347:	
  8504                           
  8505                           ;main.c: 169: previousCmd = cmd;
  8506  0105  0875               	movf	PS2Command@cmd,w
  8507  0106  00F4               	movwf	??_PS2Command
  8508  0107  0874               	movf	??_PS2Command,w
  8509  0108  00F6               	movwf	_previousCmd
  8510                           
  8511                           ;main.c: 170: break;
  8512  0109  29F6               	goto	i1l2439
  8513  010A                     i1l2349:	
  8514                           
  8515                           ;main.c: 177: if(analogMode == 0) {
  8516  010A  0878               	movf	_analogMode,w
  8517  010B  1D03               	btfss	3,2
  8518  010C  290E               	goto	u179_21
  8519  010D  290F               	goto	u179_20
  8520  010E                     u179_21:	
  8521  010E  2914               	goto	i1l2353
  8522  010F                     u179_20:	
  8523  010F                     i1l2351:	
  8524                           
  8525                           ;main.c: 178: response[2] = 0x00;
  8526  010F  0021               	movlb	1	; select bank1
  8527  0110  01DA               	clrf	(_response^(0+128)+2)
  8528                           
  8529                           ;main.c: 179: response[3] = 0x00;
  8530  0111  01DB               	clrf	(_response^(0+128)+3)
  8531                           
  8532                           ;main.c: 180: response[4] = 0x00;
  8533  0112  01DC               	clrf	(_response^(0+128)+4)
  8534                           
  8535                           ;main.c: 181: response[7] = 0x00;
  8536  0113  01DF               	clrf	(_response^(0+128)+7)
  8537  0114                     i1l2353:	
  8538                           
  8539                           ;main.c: 182: };main.c: 183: if(analogMode >= 1) {
  8540  0114  0878               	movf	_analogMode,w
  8541  0115  1903               	btfsc	3,2
  8542  0116  2918               	goto	u180_21
  8543  0117  2919               	goto	u180_20
  8544  0118                     u180_21:	
  8545  0118  292A               	goto	i1l2357
  8546  0119                     u180_20:	
  8547  0119                     i1l2355:	
  8548                           
  8549                           ;main.c: 188: response[2] = 0xFF;
  8550  0119  30FF               	movlw	255
  8551  011A  00F4               	movwf	??_PS2Command
  8552  011B  0874               	movf	??_PS2Command,w
  8553  011C  0021               	movlb	1	; select bank1
  8554  011D  00DA               	movwf	(_response^(0+128)+2)
  8555                           
  8556                           ;main.c: 189: response[3] = 0xFF;
  8557  011E  30FF               	movlw	255
  8558  011F  00F4               	movwf	??_PS2Command
  8559  0120  0874               	movf	??_PS2Command,w
  8560  0121  00DB               	movwf	(_response^(0+128)+3)
  8561                           
  8562                           ;main.c: 190: response[4] = 0xC0;
  8563  0122  30C0               	movlw	192
  8564  0123  00F4               	movwf	??_PS2Command
  8565  0124  0874               	movf	??_PS2Command,w
  8566  0125  00DC               	movwf	(_response^(0+128)+4)
  8567                           
  8568                           ;main.c: 191: response[7] = 0x5A;
  8569  0126  305A               	movlw	90
  8570  0127  00F4               	movwf	??_PS2Command
  8571  0128  0874               	movf	??_PS2Command,w
  8572  0129  00DF               	movwf	(_response^(0+128)+7)
  8573  012A                     i1l2357:	
  8574                           
  8575                           ;main.c: 192: };main.c: 193: response[5] = 0x00;
  8576  012A  0021               	movlb	1	; select bank1
  8577  012B  01DD               	clrf	(_response^(0+128)+5)
  8578  012C                     i1l2359:	
  8579                           
  8580                           ;main.c: 194: response[6] = 0x00;
  8581  012C  01DE               	clrf	(_response^(0+128)+6)
  8582                           
  8583                           ;main.c: 195: break;
  8584  012D  29F6               	goto	i1l2439
  8585  012E                     i1l2361:	
  8586                           
  8587                           ;main.c: 201: pollController(response);
  8588  012E  30D8               	movlw	(low (_response| 0))& (0+255)
  8589  012F  3187  274D  3180   	fcall	_pollController
  8590  0132  2905               	goto	i1l2347
  8591  0133                     i1l2365:	
  8592                           
  8593                           ;main.c: 210: if(escapeMode) {
  8594  0133  0877               	movf	_escapeMode,w
  8595  0134  1903               	btfsc	3,2
  8596  0135  2937               	goto	u181_21
  8597  0136  2938               	goto	u181_20
  8598  0137                     u181_21:	
  8599  0137  2940               	goto	i1l2369
  8600  0138                     u181_20:	
  8601  0138                     i1l2367:	
  8602                           
  8603                           ;main.c: 211: response[2] = 0x00;
  8604  0138  0021               	movlb	1	; select bank1
  8605  0139  01DA               	clrf	(_response^(0+128)+2)
  8606                           
  8607                           ;main.c: 212: response[3] = 0x00;
  8608  013A  01DB               	clrf	(_response^(0+128)+3)
  8609                           
  8610                           ;main.c: 213: response[4] = 0x00;
  8611  013B  01DC               	clrf	(_response^(0+128)+4)
  8612                           
  8613                           ;main.c: 214: response[5] = 0x00;
  8614  013C  01DD               	clrf	(_response^(0+128)+5)
  8615                           
  8616                           ;main.c: 215: response[6] = 0x00;
  8617  013D  01DE               	clrf	(_response^(0+128)+6)
  8618                           
  8619                           ;main.c: 216: response[7] = 0x00;
  8620  013E  01DF               	clrf	(_response^(0+128)+7)
  8621                           
  8622                           ;main.c: 217: }
  8623  013F  2905               	goto	i1l2347
  8624  0140                     i1l2369:	
  8625                           
  8626                           ;main.c: 218: else {;main.c: 219: pollController(response);
  8627  0140  30D8               	movlw	(low (_response| 0))& (0+255)
  8628  0141  3187  274D  3180   	fcall	_pollController
  8629  0144  2905               	goto	i1l2347
  8630  0145                     i1l2377:	
  8631                           
  8632                           ;main.c: 243: response[2] = 0xC0;
  8633  0145  30C0               	movlw	192
  8634  0146  00F4               	movwf	??_PS2Command
  8635  0147  0874               	movf	??_PS2Command,w
  8636  0148  0021               	movlb	1	; select bank1
  8637  0149  00DA               	movwf	(_response^(0+128)+2)
  8638                           
  8639                           ;main.c: 244: response[3] = 0x40;
  8640  014A  3040               	movlw	64
  8641  014B  00F4               	movwf	??_PS2Command
  8642  014C  0874               	movf	??_PS2Command,w
  8643  014D  00DB               	movwf	(_response^(0+128)+3)
  8644  014E                     i1l2379:	
  8645                           
  8646                           ;main.c: 245: if (analogMode >= 1) response[4] = 0x80;
  8647  014E  0878               	movf	_analogMode,w
  8648  014F  1903               	btfsc	3,2
  8649  0150  2952               	goto	u182_21
  8650  0151  2953               	goto	u182_20
  8651  0152                     u182_21:	
  8652  0152  2958               	goto	i1l2383
  8653  0153                     u182_20:	
  8654  0153                     i1l2381:	
  8655  0153  3080               	movlw	128
  8656  0154  00F4               	movwf	??_PS2Command
  8657  0155  0874               	movf	??_PS2Command,w
  8658  0156  00DC               	movwf	(_response^(0+128)+4)
  8659  0157  2959               	goto	i1l2385
  8660  0158                     i1l2383:	
  8661                           
  8662                           ;main.c: 246: else response[4] = 0x00;
  8663  0158  01DC               	clrf	(_response^(0+128)+4)
  8664  0159                     i1l2385:	
  8665                           
  8666                           ;main.c: 247: response[5] = 0x40;
  8667  0159  3040               	movlw	64
  8668  015A  00F4               	movwf	??_PS2Command
  8669  015B  0874               	movf	??_PS2Command,w
  8670  015C  00DD               	movwf	(_response^(0+128)+5)
  8671  015D                     i1l2387:	
  8672                           
  8673                           ;main.c: 248: response[6] = 0x80;
  8674  015D  3080               	movlw	128
  8675  015E  00F4               	movwf	??_PS2Command
  8676  015F  0874               	movf	??_PS2Command,w
  8677  0160  00DE               	movwf	(_response^(0+128)+6)
  8678                           
  8679                           ;main.c: 249: response[7] = 0x00;
  8680  0161  01DF               	clrf	(_response^(0+128)+7)
  8681                           
  8682                           ;main.c: 250: break;
  8683  0162  29F6               	goto	i1l2439
  8684  0163                     i1l2389:	
  8685                           
  8686                           ;main.c: 257: response[2] = 0x00;
  8687  0163  0021               	movlb	1	; select bank1
  8688  0164  01DA               	clrf	(_response^(0+128)+2)
  8689                           
  8690                           ;main.c: 258: response[3] = 0x00;
  8691  0165  01DB               	clrf	(_response^(0+128)+3)
  8692  0166                     i1l2391:	
  8693                           
  8694                           ;main.c: 259: response[4] = 0x80;
  8695  0166  3080               	movlw	128
  8696  0167  00F4               	movwf	??_PS2Command
  8697  0168  0874               	movf	??_PS2Command,w
  8698  0169  00DC               	movwf	(_response^(0+128)+4)
  8699  016A                     i1l2393:	
  8700                           
  8701                           ;main.c: 260: response[5] = 0x80;
  8702  016A  3080               	movlw	128
  8703  016B  00F4               	movwf	??_PS2Command
  8704  016C  0874               	movf	??_PS2Command,w
  8705  016D  00DD               	movwf	(_response^(0+128)+5)
  8706  016E                     i1l2395:	
  8707                           
  8708                           ;main.c: 261: response[6] = 0x80;
  8709  016E  3080               	movlw	128
  8710  016F  00F4               	movwf	??_PS2Command
  8711  0170  0874               	movf	??_PS2Command,w
  8712  0171  00DE               	movwf	(_response^(0+128)+6)
  8713  0172                     i1l2397:	
  8714                           
  8715                           ;main.c: 262: response[7] = 0x50;
  8716  0172  3050               	movlw	80
  8717  0173  00F4               	movwf	??_PS2Command
  8718  0174  0874               	movf	??_PS2Command,w
  8719  0175  00DF               	movwf	(_response^(0+128)+7)
  8720  0176  2905               	goto	i1l2347
  8721  0177                     i1l2401:	
  8722                           
  8723                           ;main.c: 271: response[2] = 0x00;
  8724  0177  0021               	movlb	1	; select bank1
  8725  0178  01DA               	clrf	(_response^(0+128)+2)
  8726                           
  8727                           ;main.c: 272: response[3] = 0x00;
  8728  0179  01DB               	clrf	(_response^(0+128)+3)
  8729  017A                     i1l2403:	
  8730                           
  8731                           ;main.c: 273: response[4] = 0x40;
  8732  017A  3040               	movlw	64
  8733  017B  00F4               	movwf	??_PS2Command
  8734  017C  0874               	movf	??_PS2Command,w
  8735  017D  00DC               	movwf	(_response^(0+128)+4)
  8736  017E                     i1l2405:	
  8737                           
  8738                           ;main.c: 274: response[5] = 0x00;
  8739  017E  01DD               	clrf	(_response^(0+128)+5)
  8740                           
  8741                           ;main.c: 275: response[6] = 0x80;
  8742  017F  3080               	movlw	128
  8743  0180  00F4               	movwf	??_PS2Command
  8744  0181  0874               	movf	??_PS2Command,w
  8745  0182  00DE               	movwf	(_response^(0+128)+6)
  8746  0183  2879               	goto	i1l2291
  8747  0184                     i1l2409:	
  8748                           
  8749                           ;main.c: 284: response[2] = 0x00;
  8750  0184  0021               	movlb	1	; select bank1
  8751  0185  01DA               	clrf	(_response^(0+128)+2)
  8752                           
  8753                           ;main.c: 285: response[3] = 0x00;
  8754  0186  01DB               	clrf	(_response^(0+128)+3)
  8755                           
  8756                           ;main.c: 286: response[4] = 0x00;
  8757  0187  01DC               	clrf	(_response^(0+128)+4)
  8758  0188                     i1l2411:	
  8759                           
  8760                           ;main.c: 287: response[5] = 0x20;
  8761  0188  3020               	movlw	32
  8762  0189  00F4               	movwf	??_PS2Command
  8763  018A  0874               	movf	??_PS2Command,w
  8764  018B  00DD               	movwf	(_response^(0+128)+5)
  8765  018C                     i1l2413:	
  8766                           
  8767                           ;main.c: 288: response[6] = 0x00;
  8768  018C  01DE               	clrf	(_response^(0+128)+6)
  8769  018D                     i1l2415:	
  8770                           
  8771                           ;main.c: 289: response[7] = 0x00;
  8772  018D  01DF               	clrf	(_response^(0+128)+7)
  8773  018E  2905               	goto	i1l2347
  8774  018F                     i1l2419:	
  8775                           
  8776                           ;main.c: 297: response[2] = MAP_SMALL_MOTOR;
  8777  018F  0020               	movlb	0	; select bank0
  8778  0190  085C               	movf	_MAP_SMALL_MOTOR,w
  8779  0191  00F4               	movwf	??_PS2Command
  8780  0192  0874               	movf	??_PS2Command,w
  8781  0193  0021               	movlb	1	; select bank1
  8782  0194  00DA               	movwf	(_response^(0+128)+2)
  8783                           
  8784                           ;main.c: 298: response[3] = MAP_LARGE_MOTOR;
  8785  0195  0020               	movlb	0	; select bank0
  8786  0196  085B               	movf	_MAP_LARGE_MOTOR,w
  8787  0197  00F4               	movwf	??_PS2Command
  8788  0198  0874               	movf	??_PS2Command,w
  8789  0199  0021               	movlb	1	; select bank1
  8790  019A  00DB               	movwf	(_response^(0+128)+3)
  8791                           
  8792                           ;main.c: 299: response[4] = 0xFF;
  8793  019B  30FF               	movlw	255
  8794  019C  00F4               	movwf	??_PS2Command
  8795  019D  0874               	movf	??_PS2Command,w
  8796  019E  00DC               	movwf	(_response^(0+128)+4)
  8797                           
  8798                           ;main.c: 300: response[5] = 0xFF;
  8799  019F  30FF               	movlw	255
  8800  01A0  00F4               	movwf	??_PS2Command
  8801  01A1  0874               	movf	??_PS2Command,w
  8802  01A2  00DD               	movwf	(_response^(0+128)+5)
  8803                           
  8804                           ;main.c: 301: response[6] = 0xFF;
  8805  01A3  30FF               	movlw	255
  8806  01A4  00F4               	movwf	??_PS2Command
  8807  01A5  0874               	movf	??_PS2Command,w
  8808  01A6  00DE               	movwf	(_response^(0+128)+6)
  8809                           
  8810                           ;main.c: 302: response[7] = 0xFF;
  8811  01A7  30FF               	movlw	255
  8812  01A8  00F4               	movwf	??_PS2Command
  8813  01A9  0874               	movf	??_PS2Command,w
  8814  01AA  00DF               	movwf	(_response^(0+128)+7)
  8815                           
  8816                           ;main.c: 303: previousCmd = cmd;
  8817  01AB  0875               	movf	PS2Command@cmd,w
  8818  01AC  00F4               	movwf	??_PS2Command
  8819  01AD  0874               	movf	??_PS2Command,w
  8820  01AE  00F6               	movwf	_previousCmd
  8821                           
  8822                           ;main.c: 304: break;
  8823  01AF  29F6               	goto	i1l2439
  8824  01B0                     i1l2421:	
  8825                           
  8826                           ;main.c: 309: response[2] = 0x00;
  8827  01B0  0021               	movlb	1	; select bank1
  8828  01B1  01DA               	clrf	(_response^(0+128)+2)
  8829                           
  8830                           ;main.c: 310: response[3] = 0x00;
  8831  01B2  01DB               	clrf	(_response^(0+128)+3)
  8832                           
  8833                           ;main.c: 311: response[4] = 0x00;
  8834  01B3  01DC               	clrf	(_response^(0+128)+4)
  8835                           
  8836                           ;main.c: 312: response[5] = 0x00;
  8837  01B4  01DD               	clrf	(_response^(0+128)+5)
  8838                           
  8839                           ;main.c: 313: response[6] = 0x00;
  8840  01B5  01DE               	clrf	(_response^(0+128)+6)
  8841  01B6                     i1l2423:	
  8842                           
  8843                           ;main.c: 314: response[7] = 0x5A;
  8844  01B6  305A               	movlw	90
  8845  01B7  00F4               	movwf	??_PS2Command
  8846  01B8  0874               	movf	??_PS2Command,w
  8847  01B9  00DF               	movwf	(_response^(0+128)+7)
  8848  01BA                     i1l2425:	
  8849                           
  8850                           ;main.c: 315: previousCmd = cmd;
  8851  01BA  0875               	movf	PS2Command@cmd,w
  8852  01BB  00F4               	movwf	??_PS2Command
  8853  01BC  0874               	movf	??_PS2Command,w
  8854  01BD  00F6               	movwf	_previousCmd
  8855  01BE                     i1l2427:	
  8856                           
  8857                           ;main.c: 316: if(analogMode == 1) analogMode = 2;
  8858  01BE  0378               	decf	_analogMode,w
  8859  01BF  1D03               	btfss	3,2
  8860  01C0  29C2               	goto	u183_21
  8861  01C1  29C3               	goto	u183_20
  8862  01C2                     u183_21:	
  8863  01C2  29F6               	goto	i1l2439
  8864  01C3                     u183_20:	
  8865  01C3                     i1l2429:	
  8866  01C3  3002               	movlw	2
  8867  01C4  00F4               	movwf	??_PS2Command
  8868  01C5  0874               	movf	??_PS2Command,w
  8869  01C6  00F8               	movwf	_analogMode
  8870  01C7  29F6               	goto	i1l2439
  8871  01C8                     i1l2433:	
  8872  01C8  0875               	movf	PS2Command@cmd,w
  8873                           
  8874                           ; Switch size 1, requested type "simple"
  8875                           ; Number of cases is 11, Range of values is 2 to 242
  8876                           ; switch strategies available:
  8877                           ; Name         Instructions Cycles
  8878                           ; simple_byte           34    18 (average)
  8879                           ; jumptable            263     9 (fixed)
  8880                           ;	Chosen strategy is simple_byte
  8881  01C9  3A02               	xorlw	2	; case 2
  8882  01CA  1903               	skipnz
  8883  01CB  28F8               	goto	i1l2337
  8884  01CC  3A20               	xorlw	32	; case 34
  8885  01CD  1903               	skipnz
  8886  01CE  2938               	goto	i1l2367
  8887  01CF  3A10               	xorlw	16	; case 50
  8888  01D0  1903               	skipnz
  8889  01D1  2984               	goto	i1l2409
  8890  01D2  3A70               	xorlw	112	; case 66
  8891  01D3  1903               	skipnz
  8892  01D4  292E               	goto	i1l2361
  8893  01D5  3A20               	xorlw	32	; case 98
  8894  01D6  1903               	skipnz
  8895  01D7  2963               	goto	i1l2389
  8896  01D8  3AE0               	xorlw	224	; case 130
  8897  01D9  1903               	skipnz
  8898  01DA  290A               	goto	i1l2349
  8899  01DB  3A20               	xorlw	32	; case 162
  8900  01DC  1903               	skipnz
  8901  01DD  2945               	goto	i1l2377
  8902  01DE  3A10               	xorlw	16	; case 178
  8903  01DF  1903               	skipnz
  8904  01E0  298F               	goto	i1l2419
  8905  01E1  3A70               	xorlw	112	; case 194
  8906  01E2  1903               	skipnz
  8907  01E3  2933               	goto	i1l2365
  8908  01E4  3A20               	xorlw	32	; case 226
  8909  01E5  1903               	skipnz
  8910  01E6  2977               	goto	i1l2401
  8911  01E7  3A10               	xorlw	16	; case 242
  8912  01E8  1903               	skipnz
  8913  01E9  29B0               	goto	i1l2421
  8914  01EA  29F6               	goto	i1l2439
  8915  01EB                     i1l2437:	
  8916  01EB  0879               	movf	_cmdCounter,w
  8917                           
  8918                           ; Switch size 1, requested type "simple"
  8919                           ; Number of cases is 3, Range of values is 3 to 5
  8920                           ; switch strategies available:
  8921                           ; Name         Instructions Cycles
  8922                           ; simple_byte           10     6 (average)
  8923                           ; direct_byte           15     9 (fixed)
  8924                           ; jumptable            263     9 (fixed)
  8925                           ;	Chosen strategy is simple_byte
  8926  01EC  3A03               	xorlw	3	; case 3
  8927  01ED  1903               	skipnz
  8928  01EE  2890               	goto	i1l2307
  8929  01EF  3A07               	xorlw	7	; case 4
  8930  01F0  1903               	skipnz
  8931  01F1  28DC               	goto	i1l2329
  8932  01F2  3A01               	xorlw	1	; case 5
  8933  01F3  1903               	skipnz
  8934  01F4  28F3               	goto	i1l2335
  8935  01F5  29C8               	goto	i1l2433
  8936  01F6                     i1l2439:	
  8937                           
  8938                           ;main.c: 323: spiWrite(response[cmdCounter]);
  8939  01F6  0879               	movf	_cmdCounter,w
  8940  01F7  3ED8               	addlw	(low (_response| 0))& (0+255)
  8941  01F8  0086               	movwf	6
  8942  01F9  0187               	clrf	7
  8943  01FA  0801               	movf	1,w
  8944  01FB  318D  2514  3180   	fcall	_spiWrite
  8945  01FE                     i1l2441:	
  8946                           
  8947                           ;main.c: 325: RA4 = 0;
  8948  01FE  0020               	movlb	0	; select bank0
  8949  01FF  120C               	bcf	12,4	;volatile
  8950  0200                     i1l2443:	
  8951                           
  8952                           ;main.c: 326: _delay((unsigned long)((1)*(32000000/4000000.0)));
  8953  0200  3200               	nop2	;2 cycle nop
  8954  0201  3200               	nop2	;2 cycle nop
  8955  0202  3200               	nop2	;2 cycle nop
  8956  0203  3200               	nop2	;2 cycle nop
  8957  0204                     i1l2445:	
  8958                           
  8959                           ;main.c: 327: RA4 = 1;
  8960  0204  0020               	movlb	0	; select bank0
  8961  0205  160C               	bsf	12,4	;volatile
  8962  0206                     i1l2447:	
  8963                           
  8964                           ;main.c: 330: if (cmdCounter < responseLength) {
  8965  0206  085D               	movf	_responseLength,w
  8966  0207  0279               	subwf	_cmdCounter,w
  8967  0208  1803               	skipnc
  8968  0209  2A0B               	goto	u184_21
  8969  020A  2A0C               	goto	u184_20
  8970  020B                     u184_21:	
  8971  020B  2A10               	goto	i1l175
  8972  020C                     u184_20:	
  8973  020C                     i1l2449:	
  8974                           
  8975                           ;main.c: 331: cmdCounter++;
  8976  020C  3001               	movlw	1
  8977  020D  00F4               	movwf	??_PS2Command
  8978  020E  0874               	movf	??_PS2Command,w
  8979  020F  07F9               	addwf	_cmdCounter,f
  8980  0210                     i1l175:	
  8981                           
  8982                           ;main.c: 332: };main.c: 335: if (escapeMode) {
  8983  0210  0877               	movf	_escapeMode,w
  8984  0211  1903               	btfsc	3,2
  8985  0212  2A14               	goto	u185_21
  8986  0213  2A15               	goto	u185_20
  8987  0214                     u185_21:	
  8988  0214  2A1B               	goto	i1l2453
  8989  0215                     u185_20:	
  8990  0215                     i1l2451:	
  8991                           
  8992                           ;main.c: 336: response[0] = 0xCF;
  8993  0215  30CF               	movlw	207
  8994  0216  00F4               	movwf	??_PS2Command
  8995  0217  0874               	movf	??_PS2Command,w
  8996  0218  0021               	movlb	1	; select bank1
  8997  0219  00D8               	movwf	_response^(0+128)
  8998                           
  8999                           ;main.c: 337: }
  9000  021A  2A3A               	goto	i1l2463
  9001  021B                     i1l2453:	
  9002                           
  9003                           ;main.c: 338: else {;main.c: 339: if(analogMode == 0) response[0] = 0x82;
  9004  021B  0878               	movf	_analogMode,w
  9005  021C  1D03               	btfss	3,2
  9006  021D  2A1F               	goto	u186_21
  9007  021E  2A20               	goto	u186_20
  9008  021F                     u186_21:	
  9009  021F  2A25               	goto	i1l2457
  9010  0220                     u186_20:	
  9011  0220                     i1l2455:	
  9012  0220  3082               	movlw	130
  9013  0221  00F4               	movwf	??_PS2Command
  9014  0222  0874               	movf	??_PS2Command,w
  9015  0223  0021               	movlb	1	; select bank1
  9016  0224  00D8               	movwf	_response^(0+128)
  9017  0225                     i1l2457:	
  9018                           
  9019                           ;main.c: 340: if(analogMode == 1) response[0] = 0xCE;
  9020  0225  0378               	decf	_analogMode,w
  9021  0226  1D03               	btfss	3,2
  9022  0227  2A29               	goto	u187_21
  9023  0228  2A2A               	goto	u187_20
  9024  0229                     u187_21:	
  9025  0229  2A2F               	goto	i1l179
  9026  022A                     u187_20:	
  9027  022A                     i1l2459:	
  9028  022A  30CE               	movlw	206
  9029  022B  00F4               	movwf	??_PS2Command
  9030  022C  0874               	movf	??_PS2Command,w
  9031  022D  0021               	movlb	1	; select bank1
  9032  022E  00D8               	movwf	_response^(0+128)
  9033  022F                     i1l179:	
  9034                           
  9035                           ;main.c: 341: if(analogMode > 1) response[0] = 0x9E;
  9036  022F  3002               	movlw	2
  9037  0230  0278               	subwf	_analogMode,w
  9038  0231  1C03               	skipc
  9039  0232  2A34               	goto	u188_21
  9040  0233  2A35               	goto	u188_20
  9041  0234                     u188_21:	
  9042  0234  2A3A               	goto	i1l2463
  9043  0235                     u188_20:	
  9044  0235                     i1l2461:	
  9045  0235  309E               	movlw	158
  9046  0236  00F4               	movwf	??_PS2Command
  9047  0237  0874               	movf	??_PS2Command,w
  9048  0238  0021               	movlb	1	; select bank1
  9049  0239  00D8               	movwf	_response^(0+128)
  9050  023A                     i1l2463:	
  9051                           
  9052                           ;main.c: 342: };main.c: 344: SSP1IF = 0;
  9053  023A  002E               	movlb	14	; select bank14
  9054  023B  100F               	bcf	15,0	;volatile
  9055  023C                     i1l181:	
  9056  023C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9057  023D  0009               	retfie
  9058  023E                     __end_of_PS2Command:	
  9059                           
  9060                           	psect	text20
  9061  0E65                     __ptext20:	
  9062 ;; *************** function i1_reversebyte *****************
  9063 ;; Defined at:
  9064 ;;		line 176 in file "Controller.c"
  9065 ;; Parameters:    Size  Location     Type
  9066 ;;  byte            1    wreg     unsigned char 
  9067 ;; Auto vars:     Size  Location     Type
  9068 ;;  byte            1    3[COMMON] unsigned char 
  9069 ;; Return value:  Size  Location     Type
  9070 ;;                  1    wreg      unsigned char 
  9071 ;; Registers used:
  9072 ;;		wreg, status,2, status,0
  9073 ;; Tracked objects:
  9074 ;;		On entry : 0/0
  9075 ;;		On exit  : 0/0
  9076 ;;		Unchanged: 0/0
  9077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9079 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9080 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9081 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9082 ;;Total ram usage:        4 bytes
  9083 ;; Hardware stack levels used:    1
  9084 ;; This function calls:
  9085 ;;		Nothing
  9086 ;; This function is called by:
  9087 ;;		_PS2Command
  9088 ;; This function uses a non-reentrant model
  9089 ;;
  9090                           
  9091                           
  9092                           ;psect for function i1_reversebyte
  9093  0E65                     i1_reversebyte:	
  9094                           
  9095                           ;incstack = 0
  9096                           ; Regs used in i1_reversebyte: [wreg+status,2+status,0]
  9097                           ;i1reversebyte@byte stored from wreg
  9098  0E65  00F3               	movwf	i1reversebyte@byte
  9099  0E66                     i1l2233:	
  9100                           
  9101                           ;Controller.c: 177: byte = (byte & 0xF0) >> 4 | (byte & 0x0F) << 4;
  9102  0E66  0873               	movf	i1reversebyte@byte,w
  9103  0E67  390F               	andlw	15
  9104  0E68  00F0               	movwf	??i1_reversebyte
  9105  0E69  3004               	movlw	4
  9106  0E6A                     u164_25:	
  9107  0E6A  35F0               	lslf	??i1_reversebyte,f
  9108  0E6B  0B89               	decfsz	9,f
  9109  0E6C  2E6A               	goto	u164_25
  9110  0E6D  0873               	movf	i1reversebyte@byte,w
  9111  0E6E  00F1               	movwf	??i1_reversebyte+1
  9112  0E6F  3004               	movlw	4
  9113  0E70                     u165_25:	
  9114  0E70  36F1               	lsrf	??i1_reversebyte+1,f
  9115  0E71  0B89               	decfsz	9,f
  9116  0E72  2E70               	goto	u165_25
  9117  0E73  0871               	movf	??i1_reversebyte+1,w
  9118  0E74  390F               	andlw	15
  9119  0E75  0470               	iorwf	??i1_reversebyte,w
  9120  0E76  00F2               	movwf	??i1_reversebyte+2
  9121  0E77  0872               	movf	??i1_reversebyte+2,w
  9122  0E78  00F3               	movwf	i1reversebyte@byte
  9123                           
  9124                           ;Controller.c: 178: byte = (byte & 0xCC) >> 2 | (byte & 0x33) << 2;
  9125  0E79  0873               	movf	i1reversebyte@byte,w
  9126  0E7A  3933               	andlw	51
  9127  0E7B  00F0               	movwf	??i1_reversebyte
  9128  0E7C  3002               	movlw	2
  9129  0E7D                     u166_25:	
  9130  0E7D  35F0               	lslf	??i1_reversebyte,f
  9131  0E7E  0B89               	decfsz	9,f
  9132  0E7F  2E7D               	goto	u166_25
  9133  0E80  0873               	movf	i1reversebyte@byte,w
  9134  0E81  00F1               	movwf	??i1_reversebyte+1
  9135  0E82  3002               	movlw	2
  9136  0E83                     u167_25:	
  9137  0E83  36F1               	lsrf	??i1_reversebyte+1,f
  9138  0E84  0B89               	decfsz	9,f
  9139  0E85  2E83               	goto	u167_25
  9140  0E86  0871               	movf	??i1_reversebyte+1,w
  9141  0E87  3933               	andlw	51
  9142  0E88  0470               	iorwf	??i1_reversebyte,w
  9143  0E89  00F2               	movwf	??i1_reversebyte+2
  9144  0E8A  0872               	movf	??i1_reversebyte+2,w
  9145  0E8B  00F3               	movwf	i1reversebyte@byte
  9146                           
  9147                           ;Controller.c: 179: byte = (byte & 0xAA) >> 1 | (byte & 0x55) << 1;
  9148  0E8C  0873               	movf	i1reversebyte@byte,w
  9149  0E8D  3955               	andlw	85
  9150  0E8E  00F0               	movwf	??i1_reversebyte
  9151  0E8F  3001               	movlw	1
  9152  0E90                     u168_25:	
  9153  0E90  35F0               	lslf	??i1_reversebyte,f
  9154  0E91  0B89               	decfsz	9,f
  9155  0E92  2E90               	goto	u168_25
  9156  0E93  3673               	lsrf	i1reversebyte@byte,w
  9157  0E94  3955               	andlw	85
  9158  0E95  0470               	iorwf	??i1_reversebyte,w
  9159  0E96  00F1               	movwf	??i1_reversebyte+1
  9160  0E97  0871               	movf	??i1_reversebyte+1,w
  9161  0E98  00F3               	movwf	i1reversebyte@byte
  9162  0E99                     i1l2235:	
  9163                           
  9164                           ;Controller.c: 181: return byte;
  9165  0E99  0873               	movf	i1reversebyte@byte,w
  9166  0E9A                     i1l345:	
  9167  0E9A  0008               	return
  9168  0E9B                     __end_ofi1_reversebyte:	
  9169                           
  9170                           	psect	text21
  9171  0D14                     __ptext21:	
  9172 ;; *************** function _spiWrite *****************
  9173 ;; Defined at:
  9174 ;;		line 32 in file "Spi.c"
  9175 ;; Parameters:    Size  Location     Type
  9176 ;;  dat             1    wreg     unsigned char 
  9177 ;; Auto vars:     Size  Location     Type
  9178 ;;  dat             1    0[COMMON] unsigned char 
  9179 ;; Return value:  Size  Location     Type
  9180 ;;                  1    wreg      void 
  9181 ;; Registers used:
  9182 ;;		wreg
  9183 ;; Tracked objects:
  9184 ;;		On entry : 0/0
  9185 ;;		On exit  : 0/0
  9186 ;;		Unchanged: 0/0
  9187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9189 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9191 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9192 ;;Total ram usage:        1 bytes
  9193 ;; Hardware stack levels used:    1
  9194 ;; This function calls:
  9195 ;;		Nothing
  9196 ;; This function is called by:
  9197 ;;		_PS2Command
  9198 ;; This function uses a non-reentrant model
  9199 ;;
  9200                           
  9201                           
  9202                           ;psect for function _spiWrite
  9203  0D14                     _spiWrite:	
  9204                           
  9205                           ;incstack = 0
  9206                           ; Regs used in _spiWrite: [wreg]
  9207                           ;spiWrite@dat stored from wreg
  9208  0D14  00F0               	movwf	spiWrite@dat
  9209  0D15                     i1l2129:	
  9210                           
  9211                           ;Spi.c: 34: SSP1BUF = dat;
  9212  0D15  0870               	movf	spiWrite@dat,w
  9213  0D16  0023               	movlb	3	; select bank3
  9214  0D17  008C               	movwf	12	;volatile
  9215  0D18                     i1l420:	
  9216  0D18  0008               	return
  9217  0D19                     __end_of_spiWrite:	
  9218                           
  9219                           	psect	text22
  9220  0D1F                     __ptext22:	
  9221 ;; *************** function _spiRead *****************
  9222 ;; Defined at:
  9223 ;;		line 37 in file "Spi.c"
  9224 ;; Parameters:    Size  Location     Type
  9225 ;;		None
  9226 ;; Auto vars:     Size  Location     Type
  9227 ;;		None
  9228 ;; Return value:  Size  Location     Type
  9229 ;;                  1    wreg      unsigned char 
  9230 ;; Registers used:
  9231 ;;		wreg, status,2, status,0, pclath, cstack
  9232 ;; Tracked objects:
  9233 ;;		On entry : 0/0
  9234 ;;		On exit  : 0/0
  9235 ;;		Unchanged: 0/0
  9236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9241 ;;Total ram usage:        0 bytes
  9242 ;; Hardware stack levels used:    1
  9243 ;; Hardware stack levels required when called:    1
  9244 ;; This function calls:
  9245 ;;		_spiReceiveWait
  9246 ;; This function is called by:
  9247 ;;		_PS2Command
  9248 ;; This function uses a non-reentrant model
  9249 ;;
  9250                           
  9251                           
  9252                           ;psect for function _spiRead
  9253  0D1F                     _spiRead:	
  9254  0D1F                     i1l2123:	
  9255                           ;incstack = 0
  9256                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  9257                           
  9258                           
  9259                           ;Spi.c: 39: spiReceiveWait();
  9260  0D1F  318D  2519  318D   	fcall	_spiReceiveWait
  9261  0D22                     i1l2125:	
  9262                           
  9263                           ;Spi.c: 40: return(SSP1BUF);
  9264  0D22  0023               	movlb	3	; select bank3
  9265  0D23  080C               	movf	12,w	;volatile
  9266  0D24                     i1l423:	
  9267  0D24  0008               	return
  9268  0D25                     __end_of_spiRead:	
  9269                           
  9270                           	psect	text23
  9271  0D19                     __ptext23:	
  9272 ;; *************** function _spiReceiveWait *****************
  9273 ;; Defined at:
  9274 ;;		line 27 in file "Spi.c"
  9275 ;; Parameters:    Size  Location     Type
  9276 ;;		None
  9277 ;; Auto vars:     Size  Location     Type
  9278 ;;		None
  9279 ;; Return value:  Size  Location     Type
  9280 ;;                  1    wreg      void 
  9281 ;; Registers used:
  9282 ;;		None
  9283 ;; Tracked objects:
  9284 ;;		On entry : 0/0
  9285 ;;		On exit  : 0/0
  9286 ;;		Unchanged: 0/0
  9287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9292 ;;Total ram usage:        0 bytes
  9293 ;; Hardware stack levels used:    1
  9294 ;; This function calls:
  9295 ;;		Nothing
  9296 ;; This function is called by:
  9297 ;;		_spiRead
  9298 ;; This function uses a non-reentrant model
  9299 ;;
  9300                           
  9301                           
  9302                           ;psect for function _spiReceiveWait
  9303  0D19                     _spiReceiveWait:	
  9304  0D19                     i1l2089:	
  9305                           ;incstack = 0
  9306                           ; Regs used in _spiReceiveWait: []
  9307                           
  9308  0D19                     i1l414:	
  9309                           ;Spi.c: 29: while ( !SSP1STATbits.BF );
  9310                           
  9311  0D19  0023               	movlb	3	; select bank3
  9312  0D1A  1C0F               	btfss	15,0	;volatile
  9313  0D1B  2D1D               	goto	u150_21
  9314  0D1C  2D1E               	goto	u150_20
  9315  0D1D                     u150_21:	
  9316  0D1D  2D19               	goto	i1l414
  9317  0D1E                     u150_20:	
  9318  0D1E                     i1l417:	
  9319  0D1E  0008               	return
  9320  0D1F                     __end_of_spiReceiveWait:	
  9321                           
  9322                           	psect	text24
  9323  074D                     __ptext24:	
  9324 ;; *************** function _pollController *****************
  9325 ;; Defined at:
  9326 ;;		line 34 in file "main.c"
  9327 ;; Parameters:    Size  Location     Type
  9328 ;;  response        1    wreg     PTR unsigned char 
  9329 ;;		 -> response(20), 
  9330 ;; Auto vars:     Size  Location     Type
  9331 ;;  response        1    1[COMMON] PTR unsigned char 
  9332 ;;		 -> response(20), 
  9333 ;; Return value:  Size  Location     Type
  9334 ;;                  1    wreg      void 
  9335 ;; Registers used:
  9336 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9337 ;; Tracked objects:
  9338 ;;		On entry : 0/0
  9339 ;;		On exit  : 0/0
  9340 ;;		Unchanged: 0/0
  9341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9343 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9344 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9345 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9346 ;;Total ram usage:        2 bytes
  9347 ;; Hardware stack levels used:    1
  9348 ;; This function calls:
  9349 ;;		Nothing
  9350 ;; This function is called by:
  9351 ;;		_PS2Command
  9352 ;; This function uses a non-reentrant model
  9353 ;;
  9354                           
  9355                           
  9356                           ;psect for function _pollController
  9357  074D                     _pollController:	
  9358                           
  9359                           ;incstack = 0
  9360                           ; Regs used in _pollController: [wreg+fsr1l+fsr1h+status,2+status,0]
  9361                           ;pollController@response stored from wreg
  9362  074D  00F1               	movwf	pollController@response
  9363  074E                     i1l2091:	
  9364                           
  9365                           ;main.c: 35: response[2] = digitalStateFirst;
  9366  074E  0020               	movlb	0	; select bank0
  9367  074F  0864               	movf	_digitalStateFirst,w
  9368  0750  00F0               	movwf	??_pollController
  9369  0751  0871               	movf	pollController@response,w
  9370  0752  3E02               	addlw	2
  9371  0753  0086               	movwf	6
  9372  0754  0187               	clrf	7
  9373  0755  0870               	movf	??_pollController,w
  9374  0756  0081               	movwf	1
  9375                           
  9376                           ;main.c: 36: response[3] = digitalStateSecond;
  9377  0757  0863               	movf	_digitalStateSecond,w
  9378  0758  00F0               	movwf	??_pollController
  9379  0759  0871               	movf	pollController@response,w
  9380  075A  3E03               	addlw	3
  9381  075B  0086               	movwf	6
  9382  075C  0187               	clrf	7
  9383  075D  0870               	movf	??_pollController,w
  9384  075E  0081               	movwf	1
  9385                           
  9386                           ;main.c: 37: response[4] = rxData;
  9387  075F  0862               	movf	_rxData,w
  9388  0760  00F0               	movwf	??_pollController
  9389  0761  0871               	movf	pollController@response,w
  9390  0762  3E04               	addlw	4
  9391  0763  0086               	movwf	6
  9392  0764  0187               	clrf	7
  9393  0765  0870               	movf	??_pollController,w
  9394  0766  0081               	movwf	1
  9395                           
  9396                           ;main.c: 38: response[5] = ryData;
  9397  0767  0861               	movf	_ryData,w
  9398  0768  00F0               	movwf	??_pollController
  9399  0769  0871               	movf	pollController@response,w
  9400  076A  3E05               	addlw	5
  9401  076B  0086               	movwf	6
  9402  076C  0187               	clrf	7
  9403  076D  0870               	movf	??_pollController,w
  9404  076E  0081               	movwf	1
  9405                           
  9406                           ;main.c: 39: response[6] = lxData;
  9407  076F  0860               	movf	_lxData,w
  9408  0770  00F0               	movwf	??_pollController
  9409  0771  0871               	movf	pollController@response,w
  9410  0772  3E06               	addlw	6
  9411  0773  0086               	movwf	6
  9412  0774  0187               	clrf	7
  9413  0775  0870               	movf	??_pollController,w
  9414  0776  0081               	movwf	1
  9415                           
  9416                           ;main.c: 40: response[7] = lyData;
  9417  0777  085F               	movf	_lyData,w
  9418  0778  00F0               	movwf	??_pollController
  9419  0779  0871               	movf	pollController@response,w
  9420  077A  3E07               	addlw	7
  9421  077B  0086               	movwf	6
  9422  077C  0187               	clrf	7
  9423  077D  0870               	movf	??_pollController,w
  9424  077E  0081               	movwf	1
  9425  077F                     i1l2093:	
  9426                           
  9427                           ;main.c: 41: if(analogMode == 2) {
  9428  077F  3002               	movlw	2
  9429  0780  0678               	xorwf	_analogMode,w
  9430  0781  1D03               	btfss	3,2
  9431  0782  2F84               	goto	u151_21
  9432  0783  2F85               	goto	u151_20
  9433  0784                     u151_21:	
  9434  0784  2FEB               	goto	i1l2121
  9435  0785                     u151_20:	
  9436  0785                     i1l2095:	
  9437                           
  9438                           ;main.c: 42: responseLength = 20;
  9439  0785  3014               	movlw	20
  9440  0786  00F0               	movwf	??_pollController
  9441  0787  0870               	movf	??_pollController,w
  9442  0788  00DD               	movwf	_responseLength
  9443  0789                     i1l2097:	
  9444                           
  9445                           ;main.c: 43: response[8] = analogStateFirst[2];
  9446  0789  0021               	movlb	1	; select bank1
  9447  078A  0852               	movf	(_analogStateFirst^(0+128)+2),w
  9448  078B  00F0               	movwf	??_pollController
  9449  078C  0871               	movf	pollController@response,w
  9450  078D  3E08               	addlw	8
  9451  078E  0086               	movwf	6
  9452  078F  0187               	clrf	7
  9453  0790  0870               	movf	??_pollController,w
  9454  0791  0081               	movwf	1
  9455  0792                     i1l2099:	
  9456                           
  9457                           ;main.c: 44: response[9] = analogStateFirst[0];
  9458  0792  0850               	movf	_analogStateFirst^(0+128),w
  9459  0793  00F0               	movwf	??_pollController
  9460  0794  0871               	movf	pollController@response,w
  9461  0795  3E09               	addlw	9
  9462  0796  0086               	movwf	6
  9463  0797  0187               	clrf	7
  9464  0798  0870               	movf	??_pollController,w
  9465  0799  0081               	movwf	1
  9466  079A                     i1l2101:	
  9467                           
  9468                           ;main.c: 45: response[10] = analogStateFirst[3];
  9469  079A  0853               	movf	(_analogStateFirst^(0+128)+3),w
  9470  079B  00F0               	movwf	??_pollController
  9471  079C  0871               	movf	pollController@response,w
  9472  079D  3E0A               	addlw	10
  9473  079E  0086               	movwf	6
  9474  079F  0187               	clrf	7
  9475  07A0  0870               	movf	??_pollController,w
  9476  07A1  0081               	movwf	1
  9477  07A2                     i1l2103:	
  9478                           
  9479                           ;main.c: 46: response[11] = analogStateFirst[1];
  9480  07A2  0851               	movf	(_analogStateFirst^(0+128)+1),w
  9481  07A3  00F0               	movwf	??_pollController
  9482  07A4  0871               	movf	pollController@response,w
  9483  07A5  3E0B               	addlw	11
  9484  07A6  0086               	movwf	6
  9485  07A7  0187               	clrf	7
  9486  07A8  0870               	movf	??_pollController,w
  9487  07A9  0081               	movwf	1
  9488  07AA                     i1l2105:	
  9489                           
  9490                           ;main.c: 47: response[12] = analogStateSecond[3];
  9491  07AA  084B               	movf	(_analogStateSecond^(0+128)+3),w
  9492  07AB  00F0               	movwf	??_pollController
  9493  07AC  0871               	movf	pollController@response,w
  9494  07AD  3E0C               	addlw	12
  9495  07AE  0086               	movwf	6
  9496  07AF  0187               	clrf	7
  9497  07B0  0870               	movf	??_pollController,w
  9498  07B1  0081               	movwf	1
  9499  07B2                     i1l2107:	
  9500                           
  9501                           ;main.c: 48: response[13] = analogStateSecond[2];
  9502  07B2  084A               	movf	(_analogStateSecond^(0+128)+2),w
  9503  07B3  00F0               	movwf	??_pollController
  9504  07B4  0871               	movf	pollController@response,w
  9505  07B5  3E0D               	addlw	13
  9506  07B6  0086               	movwf	6
  9507  07B7  0187               	clrf	7
  9508  07B8  0870               	movf	??_pollController,w
  9509  07B9  0081               	movwf	1
  9510  07BA                     i1l2109:	
  9511                           
  9512                           ;main.c: 49: response[14] = analogStateSecond[1];
  9513  07BA  0849               	movf	(_analogStateSecond^(0+128)+1),w
  9514  07BB  00F0               	movwf	??_pollController
  9515  07BC  0871               	movf	pollController@response,w
  9516  07BD  3E0E               	addlw	14
  9517  07BE  0086               	movwf	6
  9518  07BF  0187               	clrf	7
  9519  07C0  0870               	movf	??_pollController,w
  9520  07C1  0081               	movwf	1
  9521  07C2                     i1l2111:	
  9522                           
  9523                           ;main.c: 50: response[15] = analogStateSecond[0];
  9524  07C2  0848               	movf	_analogStateSecond^(0+128),w
  9525  07C3  00F0               	movwf	??_pollController
  9526  07C4  0871               	movf	pollController@response,w
  9527  07C5  3E0F               	addlw	15
  9528  07C6  0086               	movwf	6
  9529  07C7  0187               	clrf	7
  9530  07C8  0870               	movf	??_pollController,w
  9531  07C9  0081               	movwf	1
  9532  07CA                     i1l2113:	
  9533                           
  9534                           ;main.c: 51: response[16] = analogStateSecond[5];
  9535  07CA  084D               	movf	(_analogStateSecond^(0+128)+5),w
  9536  07CB  00F0               	movwf	??_pollController
  9537  07CC  0871               	movf	pollController@response,w
  9538  07CD  3E10               	addlw	16
  9539  07CE  0086               	movwf	6
  9540  07CF  0187               	clrf	7
  9541  07D0  0870               	movf	??_pollController,w
  9542  07D1  0081               	movwf	1
  9543  07D2                     i1l2115:	
  9544                           
  9545                           ;main.c: 52: response[17] = analogStateSecond[4];
  9546  07D2  084C               	movf	(_analogStateSecond^(0+128)+4),w
  9547  07D3  00F0               	movwf	??_pollController
  9548  07D4  0871               	movf	pollController@response,w
  9549  07D5  3E11               	addlw	17
  9550  07D6  0086               	movwf	6
  9551  07D7  0187               	clrf	7
  9552  07D8  0870               	movf	??_pollController,w
  9553  07D9  0081               	movwf	1
  9554  07DA                     i1l2117:	
  9555                           
  9556                           ;main.c: 53: response[18] = analogStateSecond[7];
  9557  07DA  084F               	movf	(_analogStateSecond^(0+128)+7),w
  9558  07DB  00F0               	movwf	??_pollController
  9559  07DC  0871               	movf	pollController@response,w
  9560  07DD  3E12               	addlw	18
  9561  07DE  0086               	movwf	6
  9562  07DF  0187               	clrf	7
  9563  07E0  0870               	movf	??_pollController,w
  9564  07E1  0081               	movwf	1
  9565  07E2                     i1l2119:	
  9566                           
  9567                           ;main.c: 54: response[19] = analogStateSecond[6];
  9568  07E2  084E               	movf	(_analogStateSecond^(0+128)+6),w
  9569  07E3  00F0               	movwf	??_pollController
  9570  07E4  0871               	movf	pollController@response,w
  9571  07E5  3E13               	addlw	19
  9572  07E6  0086               	movwf	6
  9573  07E7  0187               	clrf	7
  9574  07E8  0870               	movf	??_pollController,w
  9575  07E9  0081               	movwf	1
  9576                           
  9577                           ;main.c: 55: }
  9578  07EA  2FEF               	goto	i1l109
  9579  07EB                     i1l2121:	
  9580                           
  9581                           ;main.c: 56: else {;main.c: 57: responseLength = 5;
  9582  07EB  3005               	movlw	5
  9583  07EC  00F0               	movwf	??_pollController
  9584  07ED  0870               	movf	??_pollController,w
  9585  07EE  00DD               	movwf	_responseLength
  9586  07EF                     i1l109:	
  9587  07EF  0008               	return
  9588  07F0                     __end_of_pollController:	
  9589  007E                     btemp	set	126	;btemp
  9590  007E                     int$flags	set	126
  9591  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        33
    BSS         77
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     58      78
    BANK1            80      3      79
    BANK2            80      0       8
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    pollController@response	PTR unsigned char  size(1) Largest target is 20
		 -> response(BANK1[20]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _PS2Command in COMMON

    _PS2Command->i1_reversebyte

Critical Paths under _main in BANK0

    _main->_configureController
    _readControllerAnalog->_readADC
    _picInit->_spiInit
    _configureController->_lutInit
    _lutInit->_Map
    _Map->___awdiv
    ___awdiv->___wmul

Critical Paths under _PS2Command in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _PS2Command in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _PS2Command in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _PS2Command in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _PS2Command in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _PS2Command in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _PS2Command in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _PS2Command in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _PS2Command in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _PS2Command in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _PS2Command in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _PS2Command in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _PS2Command in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _PS2Command in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _PS2Command in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _PS2Command in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _PS2Command in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _PS2Command in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _PS2Command in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _PS2Command in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _PS2Command in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _PS2Command in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _PS2Command in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _PS2Command in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _PS2Command in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _PS2Command in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   14678
                                             57 BANK0      1     1      0
                                              0 BANK1      3     3      0
                         _IO_MAPPING
                            _adcInit
                _configureController
                            _lutInit
                            _picInit
                     _readController
               _readControllerAnalog
 ---------------------------------------------------------------------------------
 (1) _readControllerAnalog                                 3     3      0    1697
                                              9 BANK0      3     3      0
                            _readADC
                        _reversebyte
 ---------------------------------------------------------------------------------
 (2) _reversebyte                                          4     4      0     226
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _picInit                                              2     2      0     456
                                              4 BANK0      2     2      0
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _configureController                                 13    13      0    7842
                                             44 BANK0     13    13      0
                        _eepromWrite
                            _lutInit
                            _readADC
                     _readController
 ---------------------------------------------------------------------------------
 (1) _readController                                       3     3      0     124
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _readADC                                              9     7      2    1471
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _lutInit                                             19    19      0    4355
                                             25 BANK0     19    19      0
                                _Map
                         _eepromRead
 ---------------------------------------------------------------------------------
 (2) _eepromRead                                           3     3      0      65
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _Map                                                 10     0     10    2958
                                             15 BANK0     10     0     10
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     625
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _eepromWrite                                          3     2      1     816
                                              0 BANK0      3     2      1
                          _nvmUnlock
 ---------------------------------------------------------------------------------
 (3) _nvmUnlock                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IO_MAPPING                                           0     0      0       0
                            _ppsLock
                          _ppsUnlock
 ---------------------------------------------------------------------------------
 (2) _ppsUnlock                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ppsLock                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _PS2Command                                           2     2      0    1148
                                              4 COMMON     2     2      0
                     _pollController
                            _spiRead
                           _spiWrite
                      i1_reversebyte
 ---------------------------------------------------------------------------------
 (6) i1_reversebyte                                        4     4      0     157
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (6) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (7) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _pollController                                       2     2      0     462
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IO_MAPPING
     _ppsLock
     _ppsUnlock
   _adcInit
   _configureController
     _eepromWrite
       _nvmUnlock
     _lutInit
       _Map
         ___awdiv
           ___wmul (ARG)
         ___wmul
       _eepromRead
     _readADC
     _readController
   _lutInit
     _Map
       ___awdiv
         ___wmul (ARG)
       ___wmul
     _eepromRead
   _picInit
     _spiInit
   _readController
   _readControllerAnalog
     _readADC
     _reversebyte

 _PS2Command (ROOT)
   _pollController
   _spiRead
     _spiReceiveWait
   _spiWrite
   i1_reversebyte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3A      4E       5       97.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      3      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       8       9       10.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      B1      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      B1      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              30      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14               0      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15               0      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16               0      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17               0      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18               0      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19               0      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20               0      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21               0      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22               0      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23               0      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Dec 05 09:51:22 2021

                  __CFG_CP$OFF 0000                   ___awdiv@sign 002C            ___wmul@multiplicand 0022  
        __end_ofi1_reversebyte 0E9B                            l300 04A3                            l310 05CC  
                          l302 051F                            l312 05EA                            l306 0584  
                          l410 0D7D                            l315 0DEC                            l411 0D82  
                          l308 05A8                            l342 0E64                            l440 0E04  
                          l336 0480                            l360 06D6                            l345 0ED1  
                          l450 0D32                            l442 0E09                            l354 069A  
                          l339 0E42                            l355 06A4                            l444 0E11  
                          l364 074C                            l356 06AE                            l348 0FFF  
                          l188 0F6F                            l357 06B8                            l358 06C2  
                          l447 0D6E                            l359 06CC                            l392 0D3A  
                          l395 0D44                            l389 0D2B                            l493 0E39  
                          l645 0DB6                            l398 0D96                            l647 0DCA  
                          l798 0F31                            _RA0 0060                            _RA1 0061  
                          _RB0 0068                            _RA2 0062                            _RB1 0069  
                          _RA3 0063                            _RA4 0064                            _RB2 006A  
                          _RA5 0065                            _RB3 006B                            _RA6 0066  
                          _RD0 0078                            _RC2 0072                            _RB4 006C  
                          _RA7 0067                            _RB5 006D                            _RB6 006E  
                          _RB7 006F                            _RD4 007C                   __CFG_CPD$OFF 0000  
                          _Map 0DCB                   __CFG_BORV$LO 0000                            wreg 0009  
               eepromRead@data 0022                   __CFG_LVP$OFF 0000                   __CFG_ZCD$OFF 0000  
                         ?_Map 002F                           l2511 0DB2                           l2521 0ED2  
                         l2513 0DBB                           l2601 02F9                           l2531 0EE3  
                         l2523 0ED4                           l2515 0DC0                           l2507 0DAB  
                         l2611 0360                           l2603 030B                           l2541 0EF7  
                         l2533 0EE8                           l2525 0ED8                           l2517 0DC6  
                         l2509 0DAE                           l2621 03C7                           l2613 0372  
                         l2605 033A                           l2701 0555                           l2551 0F17  
                         l2543 0EFC                           l2535 0EEC                           l2527 0EDD  
                         l2631 042E                           l2623 03D9                           l2615 03A1  
                         l2607 0347                           l2711 057F                           l2703 055A  
                         l2801 0D3E                           l2561 0F2D                           l2553 0F18  
                         l2545 0F00                           l2537 0EEE                           l2529 0EDF  
                         l2633 0440                           l2625 0408                           l2617 03AE  
                         l2609 0354                           l2721 05E6                           l2713 058E  
                         l2705 0569                           l2641 0487                           l2803 0D3F  
                         l2555 0F1D                           l2547 0F04                           l2539 0EF4  
                         l2571 0D61                           l2635 046F                           l2627 0415  
                         l2619 03BB                           l2731 0E46                           l2723 0E3A  
                         l2715 05A0                           l2707 056E                           l2651 049F  
                         l2643 048D                           l2811 05EB                           l2805 0D40  
                         l2741 0DF6                           l2549 0F13                           l2557 0F23  
                         l2565 0DCB                           l2573 0D67                           l2637 0473  
                         l2629 0422                           l2725 0E3E                           l2717 05B2  
                         l2709 057A                           l2661 04BE                           l2653 04A7  
                         l2645 048F                           l2813 05ED                           l2581 0E9D  
                         l2901 0F82                           l2807 0D41                           l2751 0E0A  
                         l2743 0DF7                           l2735 0DEF                           l2559 0F28  
                         l2727 0E3F                           l2719 05C4                           l2671 04DC  
                         l2663 04C4                           l2655 04AC                           l2647 0495  
                         l2639 0483                           l2831 06AA                           l2823 0660  
                         l2815 064E                           l2583 0ED0                           l2903 0F83  
                         l2809 0D43                           l2577 0D2C                           l2753 0E10  
                         l2745 0DF9                           l2737 0DF3                           l2569 0D5F  
                         l2729 0E41                           l2681 04FA                           l2673 04E2  
                         l2665 04CA                           l2657 04B2                           l2649 0499  
                         l2841 06DC                           l2833 06B4                           l2825 0690  
                         l2817 0652                           l2761 0D71                           l2905 0F88  
                         l2755 0D25                           l2579 0D31                           l2747 0DFD  
                         l2739 0DF4                           l2595 02D2                           l2587 0290  
                         l2691 0528                           l2683 0500                           l2675 04E8  
                         l2667 04D0                           l2659 04B8                           l2851 06F1  
                         l2843 06E0                           l2835 06BE                           l2827 0696  
                         l2819 0659                           l2763 0D75                           l2771 0D92  
                         l2907 0F8C                           l2757 0D2A                           l2781 0E1F  
                         l2749 0E01                           l2597 02E0                           l2589 02D0  
                         l2693 0531                           l2685 050C                           l2677 04EE  
                         l2669 04D6                           l2861 0747                           l2853 06F6  
                         l2845 06E6                           l2837 06C8                           l2829 06A0  
                         l2765 0D79                           l2773 0D93                           l2909 0F90  
                         l2759 0D33                           l2791 0E2F                           l2783 0E22  
                         l2599 02ED                           l2695 053F                           l2687 050D  
                         l2679 04F4                           l2863 074A                           l2855 06F7  
                         l2847 06EC                           l2839 06D2                           l2775 0D95  
                         l2767 0D83                           l2871 0F3B                           l2793 0E30  
                         l2785 0E23                           l2777 0E12                           l2697 0544  
                         l2689 0516                           l2865 074B                           l2857 06FC  
                         l2849 06ED                           l2769 0D91                           l2881 0F48  
                         l2873 0F3E                           l2795 0E33                           l2787 0E2C  
                         l2779 0E1D                           l2699 0550                           l2859 0700  
                         l2867 0F96                           l2891 0F63                           l2883 0F4F  
                         l2875 0F44                           l2797 0E36                           l2789 0E2D  
                         l2893 0F69                           l2885 0F55                           l2877 0F45  
                         l2869 0F32                           l2799 0D3B                           l2895 0F75  
                         l2887 0F58                           l2879 0F46                           l2897 0F76  
                         l2889 0F5E                           l2899 0F7C                           u2000 0EE3  
                         u2001 0EE2                           u2010 0EF4                           u2011 0EF3  
                         u2030 0F04                           u2031 0F03                           u2200 0415  
                         u2025 0EF8                           u2201 0414                           u2105 0EA7  
                         u2050 0F13                           u2210 042E                           u2051 0F12  
                         u2211 042D                           u2115 0EB4                           u2220 0480  
                         u2140 02E0                           u2045 0F05                           u2221 047F  
                         u2205 0411                           u2141 02DF                           u2125 0EBA  
                         u2070 0F23                           u2150 02F9                           u2310 0555  
                         u2230 048D                           u2071 0F22                           u2055 0F0F  
                         u2215 042A                           u2151 02F8                           u2311 0554  
                         u2231 048C                           u2135 0EC7                           u2080 0F28  
                         u2160 0347                           u2400 05C4                           u2320 0569  
                         u2304 054A                           u2240 0495                           u2081 0F27  
                         u2065 0F19                           u2225 047C                           u2161 0346  
                         u2145 02DC                           u2401 05C3                           u2321 0568  
                         u2305 0549                           u2241 0494                           u2170 0360  
                         u2410 0E46                           u2250 049F                           u2171 035F  
                         u2155 02F5                           u2411 0E45                           u2251 049E  
                         u2180 03AE                           u2340 057F                           u2260 050C  
                         u2500 06A0                           u2181 03AD                           u2165 0343  
                         u2341 057E                           u2261 050B                           u2501 069F  
                         u2190 03C7                           u2350 058E                           u2334 0574  
                         u2270 0516                           u2510 06AA                           u2191 03C6  
                         u2175 035C                           u2351 058D                           u2335 0573  
                         u2271 0515                           u2511 06A9                           u2095 0EA1  
                         u2440 0E09                           u2280 0528                           u2520 06B4  
                         u2600 0F55                           u2441 0E08                           u2185 03AA  
                         u2425 0E4A                           u2281 0527                           u2521 06B3  
                         u2601 0F54                           u2450 0E10                           u2370 05A0  
                         u2290 053F                           u2530 06BE                           u2610 0F63  
                         u2451 0E0F                           u2195 03C3                           u2435 0E56  
                         u2371 059F                           u2291 053E                           u2531 06BD  
                         u2611 0F62                           u2380 05B2                           u2364 0594  
                         u2540 06C8                           u2460 0D75                           u2620 0F69  
                         u2381 05B1                           u2365 0593                           u2541 06C7  
                         u2461 0D74                           u2621 0F68                           u2550 06D2  
                         u2470 0659                           u2630 0F75                           u2551 06D1  
                         u2471 0658                           u2631 0F74                           u2560 06DC  
                         u2480 065F                           u2640 0F82                           u2561 06DB  
                         u2481 065E                           u2641 0F81                           u2394 05B8  
                         u2570 06E6                           u2490 0696                           u2395 05B7  
                         u2571 06E5                           u2491 0695                           u2580 06EC  
                         u2581 06EB                           u1950 0DB2                           u2590 0F4F  
                         u1951 0DB1                           u2591 0F4E                           u1980 0DC6  
                         u1981 0DC5                           u1965 0DB7                           u1990 0ED8  
                         u1991 0ED7                           u1975 0DBC                           Map@x 002F  
                         _WPUA 0F39                           _WPUB 0F44                           _WPUC 0F4F  
                         _WPUD 0F5A                           _WPUE 0F65                   __CFG_WRT$OFF 0000  
                __CFG_FCMEN$ON 0000                    ?_IO_MAPPING 0070                           _main 0F32  
                         fsr0h 0005                           fsr1h 0007                           indf0 0000  
                         fsr0l 0004                           indf1 0001                           fsr1l 0006  
                         btemp 007E                  __CFG_BOREN$ON 0000                           start 023E  
                  ?_PS2Command 0070                  __CFG_CSWEN$ON 0000                lutInit@position 004A  
            i1reversebyte@byte 0073                          ??_Map 0039       configureController@lxMax 004E  
     configureController@lxMin 004D       configureController@lyMax 0050       configureController@lyMin 004F  
     configureController@rxMax 0052       configureController@rxMin 0051       configureController@ryMax 0054  
     configureController@ryMin 0053                          _ADACQ 009D                          ?_main 0070  
                        _ADCLK 0098                          _ADPCH 009E                __end_of_adcInit 0D45  
                        _ADREF 009A                __end_of___awdiv 0F32                          _ADPRE 009C  
                __CFG_WDTE$OFF 0000                ___awdiv@divisor 0026       main@slaveSelectStatePrev 00EC  
                        i1l121 0026                          i1l109 07EF                          i1l420 0D18  
                        i1l181 023C                          i1l414 0D19                          i1l423 0D24  
                        i1l175 0210                          i1l417 0D1E                          i1l345 0E9A  
                        i1l179 022F                ___awdiv@counter 002B                          _TRISA 0011  
                        _TRISB 0012                          _TRISC 0013                          _TRISD 0014  
                        _TRISE 0015    __end_of_configureController 074D                __end_of_readADC 0E65  
              __end_of_picInit 0D97                          _index 007A  __size_of_readControllerAnalog 006A  
                        _lutLX 26F0                          _lutLY 25F0                          _lutRX 24F0  
                        _lutRY 23F0                __end_of_lutInit 0481                __end_of_ppsLock 0D3B  
              __end_of_spiInit 0D83                __end_of_spiRead 0D25                          status 0003  
                        wtemp0 007E                  PS2Command@cmd 0075                 __CFG_MCLRE$OFF 0000  
              __initialization 0240                   __end_of_main 0F96                         ??_main 0059  
          __size_of_IO_MAPPING 0028            __size_of_PS2Command 023A                         _ADCON0 0093  
                       _ADCON1 0094                         _ADCON2 0095                         _ADRESH 008D  
                       _ADRESL 008C               ___awdiv@dividend 0028                         _ANSELA 0F38  
                       _ANSELB 0F43                         _ANSELC 0F4E                         _ANSELD 0F59  
                       _ANSELE 0F64           _PreviousDigitalByte1 00B0           _PreviousDigitalByte2 0120  
                       i1l2101 079A                         i1l2111 07C2                         i1l2103 07A2  
                       i1l2113 07CA                         i1l2105 07AA                         i1l2121 07EB  
                       i1l2115 07D2                         i1l2107 07B2                         i1l2123 0D1F  
                       _RC5PPS 0F25                         i1l2117 07DA                         i1l2109 07BA  
                       i1l2125 0D22                         i1l2301 0084                         i1l2119 07E2  
                       i1l2311 00B0                         i1l2303 008A                         i1l2129 0D15  
                       i1l2233 0E66                         i1l2401 0177                         i1l2321 00CD  
                       i1l2313 00B7                         i1l2241 000B                         i1l2091 074E  
                       i1l2235 0E99                         i1l2411 0188                         i1l2403 017A  
                       i1l2331 00ED                         i1l2323 00D0                         i1l2307 0090  
                       i1l2251 0029                         i1l2243 0012                         i1l2093 077F  
                       i1l2421 01B0                         i1l2413 018C                         i1l2405 017E  
                       i1l2341 00FF                         i1l2325 00D6                         i1l2317 00C3  
                       i1l2309 00AA                         i1l2261 003D                         i1l2253 002F  
                       i1l2245 0018                         i1l2095 0785                         i1l2423 01B6  
                       i1l2415 018D                         i1l2351 010F                         i1l2343 0100  
                       i1l2335 00F3                         i1l2319 00C9                         i1l2271 0050  
                       i1l2263 003F                         i1l2255 0032                         i1l2247 001E  
                       i1l2239 0006                         i1l2097 0789                         i1l2089 0D19  
                       i1l2441 01FE                         i1l2433 01C8                         i1l2425 01BA  
                       i1l2409 0184                         i1l2361 012E                         i1l2353 0114  
                       i1l2345 0101                         i1l2337 00F8                         i1l2329 00DC  
                       i1l2281 0065                         i1l2273 0054                         i1l2265 0045  
                       i1l2257 0034                         i1l2249 0023                         i1l2099 0792  
                       i1l2451 0215                         i1l2443 0200                         i1l2427 01BE  
                       i1l2419 018F                         i1l2355 0119                         i1l2347 0105  
                       i1l2339 00FB                         i1l2291 0079                         i1l2283 006A  
                       i1l2267 0048                         i1l2275 0059                         i1l2259 003A  
                       i1l2461 0235                         i1l2453 021B                         i1l2445 0204  
                       i1l2429 01C3                         i1l2381 0153                         i1l2365 0133  
                       i1l2357 012A                         i1l2349 010A                         i1l2285 0070  
                       i1l2293 007B                         i1l2277 005C                         i1l2269 004C  
                       i1l2437 01EB                         i1l2455 0220                         i1l2463 023A  
                       i1l2447 0206                         i1l2391 0166                         i1l2383 0158  
                       i1l2367 0138                         i1l2359 012C                         i1l2295 007F  
                       i1l2287 0074                         i1l2279 0060                         i1l2439 01F6  
                       i1l2457 0225                         i1l2449 020C                         i1l2393 016A  
                       i1l2385 0159                         i1l2377 0145                         i1l2369 0140  
                       i1l2289 0078                         i1l2459 022A                         i1l2395 016E  
                       i1l2387 015D                         i1l2379 014E                         i1l2397 0172  
                       i1l2389 0163                 __CFG_WDTCCS$SC 0000                         u150_20 0D1E  
                       u150_21 0D1D                         u151_20 0785                         u151_21 0784  
                       u170_20 001E                         u170_21 001D                         u171_20 0023  
                       u171_21 0022                         u180_20 0119                         u172_20 002F  
                       u180_21 0118                         u172_21 002E                         u164_25 0E6A  
                       u181_20 0138                         u173_20 003A                         u181_21 0137  
                       u173_21 0039                         u165_25 0E70                         u182_20 0153  
                       u174_20 0045                         u182_21 0152                         u174_21 0044  
                       u166_25 0E7D                         u183_20 01C3                         u175_20 0070  
                       u183_21 01C2                         u175_21 006F                         u167_25 0E83  
                       u184_20 020C                         u176_20 00B7                         u184_21 020B  
                       u176_21 00B6                         u168_25 0E90                         _AN_btn 0065  
                       u185_20 0215                         u177_20 00C2                         u169_20 000B  
                       u185_21 0214                         u177_21 00C1                         u169_21 000A  
                       u186_20 0220                         u178_20 00C9                         u186_21 021F  
                       u178_21 00C8                         u187_20 022A                         u179_20 010F  
                       u187_21 0229                         u179_21 010E                         u188_20 0235  
                       u188_21 0234                         _SSP1IE 38C8                         _SSP1IF 3878  
               __CFG_PWRTE$OFF 0000           __size_of_eepromWrite 0025                         ___wmul 0DAB  
                    ??_adcInit 0020                      ??___awdiv 002A                 __CFG_STVREN$ON 0000  
      __size_of_pollController 00A3                         _lxData 0060                         _lyData 005F  
              eepromWrite@data 0020                         _rxData 0062               ___awdiv@quotient 002D  
                       _ryData 0061                   ?_reversebyte 0070                      ??_readADC 0022  
                    ??_picInit 0024                   __pdataCOMMON 007B                      ??_lutInit 0039  
             __end_of_spiWrite 0D19                      ??_ppsLock 0020                      ??_spiInit 0023  
                    ??_spiRead 0070              _IndexDigitalByte1 00A8              _IndexDigitalByte2 00A0  
              _MAP_LARGE_MOTOR 005B        __end_of__initialization 028C                 __pcstackCOMMON 0070  
                 __pidataBANK0 07F0                   __pidataBANK1 0D97         _DigitalControllerByte1 00C0  
       _DigitalControllerByte2 00B8              eepromRead@address 0021        __size_of_readController 016A  
                   _cmdCounter 0079                     __pbssBANK0 0066                     __pbssBANK1 00A0  
                   __pbssBANK2 0120                   ??_IO_MAPPING 0020                     _analogMode 0078  
                 ??_PS2Command 0074                     __pmaintext 0F32                        ?___wmul 0020  
                   __pintentry 0004        __size_of_spiReceiveWait 0006            __CFG_RSTOSC$HFINT32 0000  
           __size_of_nvmUnlock 0007             __size_of_ppsUnlock 0007                     _eepromRead 0D5D  
           __end_of_IO_MAPPING 0E3A                        _AN_temp 007B                        _AN_prev 005A  
   eepromWrite@interruptStatus 0022                        _NVMADRH 081B                        _NVMADRL 081A  
                      _NVMDATL 081C                        _NVMCON2 081F             __end_of_PS2Command 023E  
                      _PPSLOCK 0E8F                        _SSP1BUF 018C                     _escapeMode 0077  
     readController@analogMode 0022         __size_ofi1_reversebyte 0036   __end_of_readControllerAnalog 1000  
         __CFG_SCANE$available 0000                      ?_spiWrite 0070                        _adcInit 0D3B  
                      ___awdiv 0ED2                 _pollController 074D                __size_of___wmul 0020  
              _MAP_SMALL_MOTOR 005C                        __ptext1 0F96                        __ptext2 0E9B  
                      __ptext3 0D83                        __ptext4 0D6F                        __ptext5 05EB  
                      __ptext6 0481                        __ptext7 0E3A                        __ptext8 0290  
                      __ptext9 0D5D                        _readADC 0E3A                   __size_of_Map 0022  
                      _picInit 0D83           __size_of_reversebyte 0037                        _lutInit 0290  
                      _ppsLock 0D33                        _spiInit 0D6F                        _spiRead 0D1F  
                      clrloop0 0D46           end_of_initialization 028C         _CONTROL_RESPONSE_byte3 0069  
       _CONTROL_RESPONSE_byte4 0068         _CONTROL_RESPONSE_byte5 0067                      _MODE_LOCK 006D  
                      init_ram 0D51   __size_of_configureController 0162                        initloop 0D52  
            __end_of_nvmUnlock 0D33              __end_of_ppsUnlock 0D2C         __end_of_pollController 07F0  
                   ??_spiWrite 0070                reversebyte@byte 0023          __CFG_WDTCPS$WDTCPS_31 0000  
                    Map@outMax 0037                      Map@outMin 0035                  i1_reversebyte 0E65  
                  ?_eepromRead 0070                 _readController 0481                      _TRISAbits 0011  
                    _TRISCbits 0013                    spiWrite@dat 0070               __CFG_FEXTOSC$OFF 0000  
   _INIT_PRESSURE_SENSOR_byte3 006B     _INIT_PRESSURE_SENSOR_byte4 006A             _digitalStateSecond 0063  
                ??_eepromWrite 0021                ?_pollController 0070                 _spiReceiveWait 0D19  
               __end_of___wmul 0DCB                  __pidataCOMMON 07FC                 ?i1_reversebyte 0070  
       __end_of_readController 05EB            start_initialization 0240                    __end_of_Map 0DED  
         _readControllerAnalog 0F96                  _debounceLoops 005E            __size_of_eepromRead 0012  
             __CFG_LPBOREN$OFF 0000         __end_of_spiReceiveWait 0D1F            __end_of_eepromWrite 0E12  
                     ??___wmul 0024                    __pdataBANK0 005A                    __pdataBANK1 00D8  
              ?_readController 0070                    __pbssBIGRAM 23F0                    __pbssCOMMON 0076  
                    ___latbits 0003                  __pcstackBANK0 0020                  __pcstackBANK1 00EC  
        configureController@lx 0055          configureController@ly 0056          configureController@rx 0057  
        configureController@ry 0058          ?_readControllerAnalog 0070                 _responseLength 005D  
            _analogStateSecond 00C8                ?_spiReceiveWait 0070                       ?_adcInit 0070  
                     ?___awdiv 0026                ??i1_reversebyte 0070               __CFG_PPS1WAY$OFF 0000  
            __size_of_spiWrite 0005            _configureController 05EB                       ?_readADC 0020  
                     ?_picInit 0070                       ?_lutInit 0070                       ?_ppsLock 0070  
                     ?_spiInit 0020                       ?_spiRead 0070             eepromWrite@address 0021  
         spiInit@sTransmitEdge 0022           ?_configureController 0070                 ___wmul@product 0024  
                  _eepromWrite 0DED                      clear_ram0 0D45                       _AN_latch 006C  
           spiInit@sDataSample 0020                       _AN_timer 0066                      _nvmUnlock 0D2C  
                     Map@inMax 0033                       Map@inMin 0031                      _ppsUnlock 0D25  
                     _SSP1CON1 0190                       _SSP1STAT 018F                  ??_reversebyte 0020  
                   _ADCON0bits 0093              ___wmul@multiplier 0020                   lutInit@lxMax 0043  
                 lutInit@lxMin 0042                   lutInit@lyMax 0045                   lutInit@lyMin 0044  
            _digitalStateFirst 0064                   lutInit@rxMax 0047                   lutInit@rxMin 0046  
                 lutInit@ryMax 0049                   lutInit@ryMin 0048                   ??_eepromRead 0020  
                    main@count 00ED         ??_readControllerAnalog 0029          ??_configureController 004C  
             ??_pollController 0070             __end_of_eepromRead 0D6F                     ?_nvmUnlock 0070  
                   ?_ppsUnlock 0070               __size_of_adcInit 000A               __size_of___awdiv 0060  
               readADC@channel 0020               _analogStateFirst 00D0               __size_of_readADC 002B  
             __size_of_picInit 0014            __end_of_reversebyte 0ED2               __size_of_lutInit 01F1  
                     __ptext10 0DCB                       __ptext11 0DAB                       __ptext20 0E65  
                     __ptext12 0ED2                       __ptext21 0D14                       __ptext13 0DED  
                     __ptext22 0D1F                       __ptext14 0D2C                       __ptext23 0D19  
                     __ptext15 0D3B                       __ptext24 074D                       __ptext16 0E12  
                     __ptext17 0D25                       __ptext18 0D33               __size_of_ppsLock 0008  
             __size_of_spiInit 0014               __size_of_spiRead 0006                  __size_of_main 0064  
         __CFG_WDTCWS$WDTCWS_7 0000                       _response 00D8               ??_readController 0020  
                     _spiWrite 0D14                       int$flags 007E                   spiInit@sType 0023  
              main@slaveSelect 00EE                   _SSP1STATbits 018F              spiInit@sClockIdle 0021  
                   _INTCONbits 000B                    _NVMCON1bits 081E         pollController@response 0071  
                     intlevel1 0000                     _IO_MAPPING 0E12               ??_spiReceiveWait 0070  
            __CFG_CLKOUTEN$OFF 0000                     _PS2Command 0004                    ??_nvmUnlock 0020  
                  ??_ppsUnlock 0020                    _reversebyte 0E9B                    _previousCmd 0076  
                 ?_eepromWrite 0020  
